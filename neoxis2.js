$config = {
    'gameVersion': 0x126,
    'isTestingMode': ![],
    'env': 'production',
    'isBetaMode': ![],
    'isProduction': !![],
    'useDevAccountServer': ![],
    'devAccountServerUrl': '',
    'turnstileKey': '0x4AAAAAAAxNgd99O5KdPkC7',
    'authentication': {
        'discord': '1282395552033669223',
        'facebook': '482002344741952',
        'google': '621635022753-n0ibkufm9ssukvk7c77rjv2ubn2abk80.apps.googleusercontent.com',
        'apple': 'io.mope.live.auth'
    },
    'gameServers': [{
        'id': 'prod-lnd-us-ny-1',
        'name': 'New York 1',
        'url': 'prod-lnd-us-ny-1.mathstudyguides.com',
        'region': 'New York, USA',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-us-da-1',
        'name': 'Dallas 1',
        'url': 'prod-lnd-us-da-1.mathstudyguides.com',
        'region': 'Dallas, USA',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-us-la-1',
        'name': 'Los Angeles 1',
        'url': 'prod-lnd-us-la-1.mathstudyguides.com',
        'region': 'Los Angeles, USA',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-br-sp-1',
        'name': 'Sao Paulo 1',
        'url': 'prod-lnd-br-sp-1.mathstudyguides.com',
        'region': 'Sao Paulo, Brazil',
        'gm': 0x0
    }, {
        'id': 'prod-ovh-de-ff-1',
        'name': 'Frankfurt 1',
        'url': 'prod-ovh-de-ff-1.mathstudyguides.com',
        'region': 'Frankfurt, Germany',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-fr-pr-1',
        'name': 'Paris 1',
        'url': 'prod-lnd-fr-pr-1.mathstudyguides.com',
        'region': 'Paris, France',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-sw-sh-1',
        'name': 'Stockholm 1',
        'url': 'prod-lnd-sw-sh-1.mathstudyguides.com',
        'region': 'Stockholm, Sweden',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-sg-sg-1',
        'name': 'Singapore 1',
        'url': 'prod-lnd-sg-sg-1.mathstudyguides.com',
        'region': 'Singapore, Singapore',
        'gm': 0x0
    }, {
        'id': 'prod-lnd-au-sd-1',
        'name': 'Sydney 1',
        'url': 'prod-lnd-au-sd-1.mathstudyguides.com',
        'region': 'Sydney, Australia',
        'gm': 0x0
    }]
};
const a0_0x421665 = {
    async 'run'() {
        var _0x5e0a4a = (function() {
                var _0x500392 = !![];
                return function(_0x553201, _0x8892a3) {
                    var _0x359880 = _0x500392 ? function() {
                        if (_0x8892a3) {
                            var _0x18b369 = _0x8892a3['apply'](_0x553201, arguments);
                            return _0x8892a3 = null, _0x18b369;
                        }
                    } : function() {};
                    return _0x500392 = ![], _0x359880;
                };
            }()),
            _0x200a13 = _0x5e0a4a(this, function() {
                var _0x85801d;
                try {
                    var _0x58320b = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');');
                    _0x85801d = _0x58320b();
                } catch (_0x43e9dd) {
                    _0x85801d = window;
                }
                var _0x584921 = new RegExp('[DLFxNEZBYZIFUxLChqKCLRJTTAxYCWBMChhkFLqARGhMKMvBwFATXEQvJVyONwvZZYHYwwNESMSFDDVkYLDASRRYQvQDLEXyEAYVTkwPyxyVFFhFKNZBvyKXqBRUqRLYBIqUTULRVXRFAOXURCwhSJkKwSFAqSPTyYZkDTxLHvxZMxjVwI]', 'g'),
                    _0x31fe33 = '.mopeD.LFiox;NE.m0ZBYZIpFUe.io;xLChq.leKCaLrRJTnTAxiYnCWganimaBls.cluMbC;hhkFL.tqAaRGhMilbiteK.MvmBe;w.anFimaATXlEfQvJVuyONn.clwubvZZ;YH.zYwwooNEeSducaMStFioDnDV.skpYaLDAcSeRRYQvQDLEXyEAYVTkwPyxyVFFhFKNZBvyKXqBRUqRLYBIqUTULRVXRFAOXURCwhSJkKwSFAqSPTyYZkDTxLHvxZMxjVwI' ['replace'](_0x584921, '')['split'](';'),
                    _0x5c76c9, _0x48eab0, _0xe66614, _0x40c493, _0x1ffe4e = function(_0x58288f, _0x141853, _0x5cdf9e) {
                        if (_0x58288f['length'] != _0x141853) return ![];
                        for (var _0x42ee82 = 0x0; _0x42ee82 < _0x141853; _0x42ee82++) {
                            for (var _0x356fe2 = 0x0; _0x356fe2 < _0x5cdf9e['length']; _0x356fe2 += 0x2) {
                                if (_0x42ee82 == _0x5cdf9e[_0x356fe2] && _0x58288f['charCodeAt'](_0x42ee82) != _0x5cdf9e[_0x356fe2 + 0x1]) return ![];
                            }
                        }
                        return !![];
                    },
                    _0x192a20 = function(_0x53b48, _0x497ffc, _0x129314) {
                        return _0x1ffe4e(_0x497ffc, _0x129314, _0x53b48);
                    },
                    _0xeb420a = function(_0x4c2ec4, _0x428a5e, _0x4011f4) {
                        return _0x192a20(_0x428a5e, _0x4c2ec4, _0x4011f4);
                    },
                    _0x13d431 = function(_0x4b9b68, _0x32d1e2, _0x67503d) {
                        return _0xeb420a(_0x32d1e2, _0x67503d, _0x4b9b68);
                    };
                for (var _0x536a3a in _0x85801d) {
                    if (_0x1ffe4e(_0x536a3a, 0x8, [0x7, 0x74, 0x5, 0x65, 0x3, 0x75, 0x0, 0x64])) {
                        _0x5c76c9 = _0x536a3a;
                        break;
                    }
                }
                for (var _0x4a8ce6 in _0x85801d[_0x5c76c9]) {
                    if (_0x13d431(0x6, _0x4a8ce6, [0x5, 0x6e, 0x0, 0x64])) {
                        _0x48eab0 = _0x4a8ce6;
                        break;
                    }
                }
                for (var _0x46d999 in _0x85801d[_0x5c76c9]) {
                    if (_0xeb420a(_0x46d999, [0x7, 0x6e, 0x0, 0x6c], 0x8)) {
                        _0xe66614 = _0x46d999;
                        break;
                    }
                }
                if (!('~' > _0x48eab0))
                    for (var _0x3a5efe in _0x85801d[_0x5c76c9][_0xe66614]) {
                        if (_0x192a20([0x7, 0x65, 0x0, 0x68], _0x3a5efe, 0x8)) {
                            _0x40c493 = _0x3a5efe;
                            break;
                        }
                    }
                if (!_0x5c76c9 || !_0x85801d[_0x5c76c9]) return;
                var _0x254dd6 = _0x85801d[_0x5c76c9][_0x48eab0],
                    _0x137f80 = !!_0x85801d[_0x5c76c9][_0xe66614] && _0x85801d[_0x5c76c9][_0xe66614][_0x40c493],
                    _0x3f98d4 = _0x254dd6 || _0x137f80;
                if (!_0x3f98d4) return;
                var _0x15e738 = ![];
                for (var _0x2ac696 = 0x0; _0x2ac696 < _0x31fe33['length']; _0x2ac696++) {
                    var _0x48eab0 = _0x31fe33[_0x2ac696],
                        _0x4b0dd0 = _0x48eab0[0x0] === String['fromCharCode'](0x2e) ? _0x48eab0['slice'](0x1) : _0x48eab0,
                        _0x2cc3ad = _0x3f98d4['length'] - _0x4b0dd0['length'],
                        _0x5d5aeb = _0x3f98d4['indexOf'](_0x4b0dd0, _0x2cc3ad),
                        _0x10364c = _0x5d5aeb !== -0x1 && _0x5d5aeb === _0x2cc3ad;
                    _0x10364c && ((_0x3f98d4['length'] == _0x48eab0['length'] || _0x48eab0['indexOf']('.') === 0x0) && (_0x15e738 = !![]));
                }
                if (!_0x15e738) {
                    var _0x27b489 = new RegExp('[VMHMmeBRINviYfviHsKKqWFBRmsNPQ]', 'g'),
                        _0x5db924 = 'VMHabMmouteBRIN:vbliYankfviHsKKqWFBRmsNPQ' ['replace'](_0x27b489, '');
                    _0x85801d[_0x5c76c9][_0xe66614] = _0x5db924;
                }
            });
        _0x200a13();
        var _0x3ba0c6 = (function() {
                var _0x5283b0 = !![];
                return function(_0x4131cd, _0x33f522) {
                    var _0x3ff09a = _0x5283b0 ? function() {
                        if (_0x33f522) {
                            var _0x537b8f = _0x33f522['apply'](_0x4131cd, arguments);
                            return _0x33f522 = null, _0x537b8f;
                        }
                    } : function() {};
                    return _0x5283b0 = ![], _0x3ff09a;
                };
            }()),
            _0x3b2806 = _0x3ba0c6(this, function() {
                var _0x21aa30 = function() {
                        var _0x1819d9;
                        try {
                            _0x1819d9 = Function('return (function() ' + '{}.constructor(\"return this\")( )' + ');')();
                        } catch (_0xb8940) {
                            _0x1819d9 = window;
                        }
                        return _0x1819d9;
                    },
                    _0x1f9e8c = _0x21aa30(),
                    _0xa3466e = _0x1f9e8c['console'] = _0x1f9e8c['console'] || {},
                    _0x3a4eff = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
                for (var _0x29ca08 = 0x0; _0x29ca08 < _0x3a4eff['length']; _0x29ca08++) {
                    var _0x5ecccd = _0x3ba0c6['constructor']['prototype']['bind'](_0x3ba0c6),
                        _0x68cd3c = _0x3a4eff[_0x29ca08],
                        _0xf83404 = _0xa3466e[_0x68cd3c] || _0x5ecccd;
                    _0x5ecccd['__proto__'] = _0x3ba0c6['bind'](_0x3ba0c6), _0x5ecccd['toString'] = _0xf83404['toString']['bind'](_0xf83404), _0xa3466e[_0x68cd3c] = _0x5ecccd;
                }
            });
        _0x3b2806();
        let _0x282f69 = window;
        console['log']('\x0a\x0a\x0a'), console['log']('--------------------------------------------'), console['log'](''), console['log']('#    #  ####  #####  ######     #  ####'), console['log']('##  ## #    # #    # #          # #    #'), console['log']('# ## # #    # #    # #####      # #    #'), console['log']('#    # #    # #####  #      ### # #    #'), console['log']('#    # #    # #      #      ### # #    #'), console['log']('#    #  ####  #      ###### ### #  ####'), console['log']('___ Mope.io™ Copyright (2017-present) Mopeio Ltd. ___'), console['log']('--------------------------------------------');
        const _0x172d37 = typeof localStorage !== 'undefined' && !!localStorage,
            _0x22e12c = $config['isTestingMode'] && _0x3e1b12;
        let _0x5c5168 = _0x22e12c;
        if (_0x22e12c) {
            const _0x472618 = document['createElement']('div');
            _0x472618['style']['zIndex'] = '999999999', _0x472618['style']['zIndex'] = '999999999', _0x472618['style']['left'] = '0px', _0x472618['style']['bottom'] = '0px', _0x472618['style']['width'] = '100%', _0x472618['style']['position'] = 'fixed', _0x472618['style']['position'] = 'fixed', _0x472618['style']['height'] = '150px', _0x472618['style']['maxHeight'] = '150px';
            const _0x8c87ad = document['createElement']('div'),
                _0x35e741 = document['createElement']('div');
            _0x472618['appendChild'](_0x8c87ad), _0x472618['appendChild'](_0x35e741);
            const _0x4fd71f = '25px';
            _0x8c87ad['style']['position'] = 'absolute', _0x8c87ad['style']['right'] = '1px', _0x8c87ad['style']['backgroundColor'] = 'rgba(255, 255, 255, .9)', _0x8c87ad['style']['color'] = 'black', _0x8c87ad['style']['top'] = '-' + _0x4fd71f, _0x8c87ad['style']['cursor'] = 'pointer', _0x8c87ad['style']['width'] = _0x4fd71f, _0x8c87ad['style']['height'] = _0x4fd71f, _0x8c87ad['style']['minWidth'] = _0x4fd71f, _0x8c87ad['style']['minHeight'] = _0x4fd71f, _0x8c87ad['style']['maxWidth'] = _0x4fd71f, _0x8c87ad['style']['maxHeight'] = _0x4fd71f, _0x8c87ad['style']['display'] = 'flex', _0x8c87ad['style']['justifyContent'] = 'center', _0x8c87ad['style']['alignItems'] = 'center', _0x8c87ad['textContent'] = '-';
            const _0x33ea5f = () => {
                _0x5c5168 = !_0x5c5168, _0x5c5168 ? (_0x472618['style']['bottom'] = '0px', _0x8c87ad['textContent'] = '-') : (_0x472618['style']['bottom'] = '-150px', _0x8c87ad['textContent'] = '+');
            };
            _0x8c87ad['addEventListener']('pointerup', () => {
                _0x33ea5f();
            }), document['body']['appendChild'](_0x472618), _0x35e741['style']['left'] = '0px', _0x35e741['style']['bottom'] = '0px', _0x35e741['style']['position'] = 'absolute', _0x35e741['style']['width'] = '100%', _0x35e741['style']['height'] = '150px', _0x35e741['style']['maxHeight'] = '150px', _0x35e741['style']['opacity'] = '.6', _0x35e741['style']['backgroundColor'] = 'black', _0x35e741['style']['color'] = 'white', _0x35e741['style']['display'] = 'flex', _0x35e741['style']['flexDirection'] = 'column', _0x35e741['style']['overflowX'] = 'scroll', _0x35e741['style']['pointerEvents'] = 'auto';
            const _0x507a8d = console['log']['bind'](console),
                _0x348882 = console['error']['bind'](console),
                _0x3bbe74 = [],
                _0x245adb = _0xc6a6fb => {
                    if (_0x3bbe74['length'] > 0x64) {
                        const _0x31184b = _0x3bbe74[0x0];
                        _0x31184b['remove'](), _0x3bbe74['shift']();
                    }
                    const _0x48d75e = document['createElement']('DIV');
                    _0x48d75e['innerText'] = _0xc6a6fb['join'](' '), _0x48d75e['style']['fontSize'] = '10px', _0x48d75e['style']['marginBottom'] = '3px';
                    const _0x35896f = _0x35e741['scrollHeight'] <= _0x35e741['scrollTop'] + _0x35e741['getBoundingClientRect']()['height'] || _0x35e741['scrollHeight'] == 0x0;
                    return _0x35e741['appendChild'](_0x48d75e), _0x35896f && (_0x35e741['scrollTop'] = _0x35e741['scrollHeight']), _0x3bbe74['push'](_0x48d75e), _0x48d75e;
                };
            console['log'] = function() {
                var _0x5df9a9 = Array['prototype']['slice']['call'](arguments);
                _0x245adb(_0x5df9a9), _0x507a8d['apply'](console, _0x5df9a9);
            }, console['error'] = function() {
                var _0x3b45fc = Array['prototype']['slice']['call'](arguments);
                const _0x88d9b4 = _0x245adb(_0x3b45fc);
                _0x88d9b4['style']['color'] = 'red', _0x348882['apply'](console, _0x3b45fc);
            }, _0x33ea5f();
        }
        const _0x48024a = $config['gameVersion'],
            _0x363eb2 = $config['isTestingMode'];
        console['log']('Is Testing mode: ', _0x363eb2);
        const _0x4320a8 = $config['isBetaMode'];
        console['log']('Is beta mode: ', _0x4320a8);
        const _0x1d9195 = !![];
        console['log']('-----------Game Version ' + _0x48024a + (_0x4320a8 ? ' (BETA)' : '') + ' ----------------');
        try {
            const _0xca5161 = document['getElementById']('mope-footer'),
                _0x59eac6 = document['getElementById']('mope-app-store-btn-apple'),
                _0x16f0f7 = _0xca5161 && _0x59eac6;
            if (_0x16f0f7) {
                if (!_0x2e70ce && !_0x19c95e) _0x59eac6['style']['visibility'] = 'visible';
                else {
                    _0x59eac6['remove']();
                    const _0x28520d = document['getElementsByClassName']('Footer__social-media');
                    _0x28520d && _0x28520d[0x0] && (_0x28520d[0x0]['style']['minWidth'] = '524px', _0x28520d[0x0]['style']['width'] = '524px', _0x28520d[0x0]['style']['maxWidth'] = '524px');
                }
            }
        } catch (_0x1c5750) {}
        window['onerror'] = function(_0x3b4d2c, _0x43ab85, _0x276d88) {
            if (_0x363eb2) {}
        };
        let _0x46c6eb = 'https://prod-accounts.mathstudyguides.com';
        const _0x1f512a = $config['useDevAccountServer'] ? $config['devAccountServerUrl'] : _0x46c6eb;
        console['log']('Account server domain became:', _0x1f512a);
        const _0x243dd0 = 0x2,
            _0x313a4d = 0x1,
            _0x12a943 = 0x3;
        var _0x1114cb = 0x0,
            _0x1085db = 0x1,
            _0x11e4d4 = 0x2,
            _0x414053 = 0x3,
            _0x3e4ef7 = 0x4,
            _0x1d8183 = 0x5;
        const _0x5c376a = 0x3e8,
            _0x1a4dfa = ![],
            _0x4dcd64 = !![],
            _0x383b1f = 0x6e,
            _0x8244ab = 0x3e8 / _0x383b1f,
            _0xa81cb2 = 0x7d,
            _0x4333ab = ![];

        function _0x4fff92() {
            reg = 'SANDBOX';
            _0x46f5bc('LOCAL', 'localhost', reg);
        }

        function _0x1023b3() {
            const _0x43f930 = new URLSearchParams(self['location']['search']);
            return _0x43f930['has']('crazygames');
        }
        async function _0x4afe32() {
            return new Promise(function(_0x4ddfa7, _0xc26bfe) {
                window['PLATFORM_ENV'] = 'CrazyGames';
                const _0x34fb77 = document['createElement']('script');
                _0x34fb77['src'] = 'https://sdk.crazygames.com/crazygames-sdk-v3.js', document['head']['appendChild'](_0x34fb77), _0x34fb77['addEventListener']('load', async function() {
                    await window['CrazyGames']['SDK']['init'](), _0x543567(), _0x4ddfa7();
                }), _0x34fb77['addEventListener']('error', function() {
                    console['log']('CrazyGames SDK load error'), _0xc26bfe();
                });
            });
        }

        function _0x5bfe67() {
            const _0x183c25 = window['CrazyGames']['SDK']['game']['settings'];
            _0x183c25['disableChat'] && (document['querySelector']('#options_noNames')['checked'] = !![]);
        }
        async function _0xa9fb3f(_0x31ef46) {
            return new Promise(async function(_0x5e7190, _0x114d54) {
                try {
                    await window['CrazyGames']['SDK']['banner']['requestResponsiveBanner'](_0x31ef46), _0x5e7190();
                } catch (_0x5b3dea) {
                    console['log']('Banner request error', _0x5b3dea), _0x114d54();
                }
            });
        }
        async function _0x543567() {
            const _0x29b4fa = window['CrazyGames']['SDK']['user']['isUserAccountAvailable'];
            if (_0x29b4fa) {
                const _0x17c8bb = await window['CrazyGames']['SDK']['user']['getUser']();
                if (_0x17c8bb) {
                    const _0x4e6e0e = _0x17c8bb['username'];
                    document['querySelector']('#nickInput')['value'] = _0x4e6e0e;
                }
            }
        }

        function _0x30c851(_0x5289f8) {
            window['CrazyGames']['SDK']['banner']['clearBanner'](_0x5289f8);
        }

        function _0x3f2e19(_0xf6e159) {
            const _0x29d125 = {
                'adFinished': _0xf6e159,
                'adError': _0xf6e159,
                'adStarted': () => console['log']('Start midgame ad')
            };
            window['CrazyGames']['SDK']['ad']['requestAd']('midgame', _0x29d125);
        }

        function _0x187ee9(_0x88eb47) {
            let _0x1a87b9 = _0x88eb47['target'];
            while (_0x1a87b9 && _0x1a87b9 !== document['body']) {
                const _0x559b61 = getComputedStyle(_0x1a87b9)['overflowY'],
                    _0x25b604 = _0x559b61 === 'auto' || _0x559b61 === 'scroll';
                if (_0x25b604) return;
                _0x1a87b9 = _0x1a87b9['parentElement'];
            }
            _0x88eb47['preventDefault']();
        }
        window['addEventListener']('wheel', _0x187ee9, {
            'passive': ![]
        }), window['addEventListener']('touchmove', _0x187ee9, {
            'passive': ![]
        }), document['addEventListener']('keydown', _0x163ff6 => {
            const _0x48a671 = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', ' '];
            if (_0x48a671['includes'](_0x163ff6['key'])) {
                const _0x5946cc = _0x163ff6['target'],
                    _0xdf8247 = ['INPUT', 'TEXTAREA', 'SELECT', 'BUTTON'];
                if (_0x163ff6['key'] === ' ' && (_0xdf8247['includes'](_0x5946cc['tagName']) || _0x5946cc['isContentEditable'])) return;
                _0x163ff6['preventDefault']();
            }
        });
        _0x1023b3() && await _0x4afe32();
        var _0x166985 = 0x1,
            _0x5e6503 = 0x2,
            _0x2c8113 = 0x3,
            _0x52d057 = 0x4,
            _0x818508 = 0x5,
            _0x9d3308 = 0x6,
            _0x1136a8 = 0x7,
            _0x433704 = 0x8,
            _0x4f0a48 = 0x9,
            _0xe3f89 = 0xa,
            _0x36ed2a = 0xb,
            _0x2b8ae9 = 0xc,
            _0xc3ddc6 = 0xd,
            _0x55879e = 0xe,
            _0x32bcf4 = 0xf,
            _0x42df46 = 0x10,
            _0x4e2c12 = 0x11,
            _0x90237e = 0x12,
            _0x27f1bf = 0x13,
            _0x5383ba = 0x14,
            _0x45f303 = 0x15;
        const _0x1e294e = 0x1,
            _0x1f6bed = 0x2,
            _0x30d081 = 0x3,
            _0x5fcd81 = 0x4,
            _0x3e9373 = 0x5,
            _0x125af5 = 0x6,
            _0x4038e0 = 0x7,
            _0x14d04c = 0x8,
            _0x9ba1a8 = 0x9,
            _0x54b817 = 0xa,
            _0x184a6e = 0xb,
            _0x595925 = 0xc,
            _0x16675d = 0xd,
            _0x39ef45 = 0xe,
            _0xc219e9 = 0xf,
            _0x69a368 = 0x10,
            _0x26362d = 0x11,
            _0x21a49b = 0x12,
            _0x308c62 = 0x13,
            _0x39b864 = 0x14,
            _0x182930 = 0x15,
            _0x403e1d = 0x16,
            _0x19a275 = 0x17,
            _0xa42268 = 0x18,
            _0x3d99ba = 0x19,
            _0xa3769c = 0x1a,
            _0x625a10 = 0x1b,
            _0x57d6ba = 0x1c,
            _0x3ad917 = 0x1d,
            _0x1aed04 = 0x1e,
            _0x579f6f = 0x1f,
            _0x183e17 = 0x20,
            _0x3ed126 = 0x21,
            _0xe917c = 0x22,
            _0x5b657a = 0x23,
            _0x3d763f = 0x24,
            _0x3dd208 = 0x25,
            _0x297759 = 0x26,
            _0x389429 = 0x27,
            _0x2f64f5 = 0x28,
            _0x19a142 = 0x29,
            _0x4c4fa4 = 0x2a,
            _0x5832f0 = 0x2b,
            _0x53c271 = 0x2c,
            _0x74bb6b = 0x2d,
            _0x4e4370 = 0x2e,
            _0x3390a5 = 0x2f,
            _0x56333c = 0x30,
            _0x325fdd = 0x31,
            _0x3a8204 = 0x32,
            _0xb7c7b9 = 0x33,
            _0x153172 = 0x34,
            _0x228a09 = 0x35,
            _0x450696 = 0x36,
            _0x3c6793 = 0x37,
            _0x5b55ee = 0x38,
            _0x32c83c = 0x39,
            _0x28fc41 = 0x3a,
            _0xf9f49e = 0x3b,
            _0x567764 = 0x3c,
            _0x40c8a3 = 0x3d,
            _0x3688a2 = 0x3e,
            _0x150e70 = 0x3f,
            _0x469ad8 = 0x40,
            _0x5cebac = 0x41,
            _0x557942 = 0x42,
            _0x32b8a1 = 0x43,
            _0x5a4e79 = 0x44,
            _0x1050c2 = 0x45,
            _0x3c02e2 = 0x46,
            _0x5be628 = 0x47,
            _0x93b243 = 0x48,
            _0x325f2b = 0x49,
            _0x33b6d8 = 0x4a,
            _0x171ea3 = 0x4b,
            _0x3618d7 = 0x4c,
            _0x4555ce = 0x4d,
            _0x35da52 = 0x4e,
            _0x42f3a = 0x4f,
            _0x1c475f = 0x50,
            _0x26850b = 0x51,
            _0xdb5a9c = 0x52,
            _0xaae8d6 = 0x53,
            _0x5486c6 = 0x54,
            _0x211511 = 0x55,
            _0x89b16 = 0x56,
            _0x57d3a5 = 0x57,
            _0x2b737e = 0x58,
            _0x340581 = 0x59,
            _0x90e780 = 0x5a,
            _0x5ca59b = 0x5b,
            _0x2bf14a = 0x5c,
            _0x2e4873 = 0x5d,
            _0x1a2989 = 0x5e,
            _0x55a88e = 0x5f,
            _0x3af871 = 0x60,
            _0x15db67 = 0x61,
            _0x5f2f92 = 0x62,
            _0x5ce613 = 0x63,
            _0x12266d = 0x64,
            _0x2a4b43 = 0x65,
            _0x2d50ca = 0x66,
            _0x1a6685 = 0x67,
            _0x272c62 = 0x68,
            _0x481f41 = 0x69,
            _0x94c652 = 0x6a,
            _0x375b46 = 0x6b,
            _0x275b86 = 0x6c,
            _0x4ef9d1 = 0x6d,
            _0x5c08de = 0x6e,
            _0x3e540c = 0x6f,
            _0x183e9b = 0x70,
            _0x3b5705 = 0x71,
            _0x43bbfc = 0x72,
            _0x3e19ab = 0x73,
            _0x2ba3b2 = 0x74,
            _0xd7f1b4 = 0x75,
            _0x20d431 = 0x76,
            _0xcb7c2c = 0x77,
            _0x90391e = 0x78,
            _0x2b7b17 = 0x79,
            _0x507deb = 0x7a;
        var _0x36e8de = 0x1,
            _0x269668 = 0x2,
            _0x15fc30 = 0x3,
            _0x2330c7 = 0x4,
            _0x3861b2 = 0x5,
            _0x3e13a9 = 0x6,
            _0x1c0d9b = 0x7,
            _0x143978 = 0x8,
            _0xb784fc = 0x9,
            _0x3a3371 = 0xa,
            _0x37809d = 0xb,
            _0x5a697d = 0xc,
            _0x38ce4f = 0xd,
            _0x4fbd16 = 0xe,
            _0x4f1571 = 0xf,
            _0x5b34f0 = 0x10,
            _0x390f74 = 0x11,
            _0x5651b8 = 0x12,
            _0x5c858f = 0x13,
            _0x419b74 = 0x14,
            _0x4807c9 = 0x15,
            _0x304406 = 0x16,
            _0x2bd206 = 0x17,
            _0x8015d = 0x18,
            _0x35e4fc = 0x19,
            _0x2d652f = 0x1a,
            _0x1bd8a6 = 0x1b,
            _0x342032 = 0x1c,
            _0x48ab8f = 0x1d,
            _0x3dbe5c = 0x1e,
            _0x5229f7 = 0x1f,
            _0x4a0ffc = 0x20,
            _0x1d814a = 0x21,
            _0xc2bb66 = 0x22,
            _0xd9f934 = 0x23,
            _0x33efa6 = 0x24,
            _0x5bb4a8 = 0x25,
            _0x4a7695 = 0x26,
            _0x2ac94b = 0x27,
            _0x45adaa = 0x28,
            _0x1a14e4 = 0x2a,
            _0x40a908 = 0x2b,
            _0x22d2e2 = 0x2c,
            _0x1f50b5 = 0x2e,
            _0x302526 = 0x2f,
            _0x5ddf97 = 0x30,
            _0x5b2437 = 0x31,
            _0x361480 = 0x32,
            _0x4a87ae = 0x33,
            _0x59a5fe = 0x34,
            _0x192664 = 0x35,
            _0x27116a = 0x36,
            _0x122b46 = 0x37,
            _0x294ff4 = 0x38,
            _0x3b5e93 = 0x39,
            _0x294b51 = 0x3a,
            _0x59ae01 = 0x3b,
            _0x28855a = 0x3c,
            _0x512242 = 0x3d,
            _0x2d4d41 = 0x3e,
            _0x2ed384 = 0x3f,
            _0x112d73 = 0x40,
            _0x59b2cc = 0x41,
            _0x3b1d1b = 0x42,
            _0x25aaff = 0x43,
            _0xe2efeb = 0x44,
            _0x24c3fc = 0x45,
            _0x4f039e = 0x46,
            _0x22dbc8 = 0x47,
            _0x38261d = 0x48,
            _0x369157 = 0x49,
            _0x1125d5 = 0x4a,
            _0x505601 = 0x4b,
            _0x4f9291 = 0x4c,
            _0x8b542d = 0x4d,
            _0x19b1a9 = 0x4e,
            _0x99578c = 0x4f,
            _0x1bfff2 = 0x50,
            _0x21f562 = 0x51,
            _0x3f6af9 = 0x52,
            _0x382989 = 0x53,
            _0x4cef04 = 0x54,
            _0x1f41d7 = 0x55,
            _0x2441c8 = 0x56,
            _0x2dd8a7 = 0x57,
            _0x577399 = 0x58,
            _0x188f09 = 0x59,
            _0x44243d = 0x5a,
            _0x7db0f7 = 0x5b,
            _0x3c1704 = 0x5c,
            _0x3f803f = 0x5d,
            _0x481e98 = 0x5e,
            _0x1d1ace = 0x5f,
            _0x10798a = 0x60,
            _0x25ff82 = 0x61,
            _0x462f96 = 0x62,
            _0x20c79b = 0x63,
            _0x4018aa = 0x64,
            _0x42de22 = 0x65,
            _0x4144ae = 0x66,
            _0x5e6d33 = 0x67,
            _0x12dca3 = 0x68,
            _0x2f8dda = 0x69,
            _0x33b0a2 = 0x6a,
            _0x5040bf = 0x6b,
            _0x322284 = 0x6c,
            _0x39e85e = 0x6d,
            _0x25dd6c = 0x6e,
            _0x5c1489 = 0x6f,
            _0x44519b = 0x70,
            _0x3273d1 = 0x71,
            _0x353d11 = 0x72,
            _0x313b35 = 0x73,
            _0xad3e15 = 0x74,
            _0x516d90 = 0x75,
            _0x58f80e = 0x76,
            _0x2e6afc = 0x77,
            _0x5563ad = 0x7a,
            _0x5a37b4 = 0x7b,
            _0x2bbb1e = 0x7d,
            _0x2d64b3 = 0x96,
            _0x5ddf8d = {
                'customClassesForOType': {},
                'setClassForAnimalType': function(_0x16b636, _0xa47cb4) {
                    this['setCustomClassForGameObjType'](_0x16b636, _0x269668, _0xa47cb4);
                },
                'setClassForAnimalBodyType': function(_0x4be7ee, _0x2ce204) {
                    this['setCustomClassForGameObjType'](_0x4be7ee, _0x516d90, _0x2ce204);
                },
                'setCustomClassForGameObjType': function(_0x500940, _0x68192a, _0x3da6c9) {
                    !this['customClassesForOType'][_0x68192a] && (this['customClassesForOType'][_0x68192a] = {
                        'oTypeMainClass': null,
                        'secondaryTypeClasses': {}
                    });
                    var _0x2d8cd9 = this['customClassesForOType'][_0x68192a];
                    if (_0x3da6c9 == null) {
                        if (_0x2d8cd9['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0x68192a] + ') is already set for oType ' + _0x68192a + '! Check for duplicate calls!');
                        _0x2d8cd9['oTypeMainClass'] = _0x500940;
                    } else {
                        if (_0x3da6c9 in _0x2d8cd9['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0x68192a + ' AND secondaryType (eg. animalType) ' + _0x3da6c9 + '! Check for duplicate calls!');
                        _0x2d8cd9['secondaryTypeClasses'][_0x3da6c9] = _0x500940;
                    }
                    this['onClassSet'](_0x500940, _0x68192a, _0x3da6c9);
                },
                'getClassForGameObjType': function(_0x4b1ba5, _0x35610b) {
                    if (_0x4b1ba5 in this['customClassesForOType']) {
                        var _0x115a1c = this['customClassesForOType'][_0x4b1ba5];
                        if (_0x35610b == null || _0x35610b == 0x0) return _0x115a1c['oTypeMainClass'];
                        else {
                            if (_0x35610b in _0x115a1c['secondaryTypeClasses']) return _0x115a1c['secondaryTypeClasses'][_0x35610b];
                            else return _0x115a1c['oTypeMainClass'];
                        }
                    } else return _0x5d11ac;
                },
                'createStaticObj': function(_0x4dcb6a) {
                    var _0x480a9f = _0x4dcb6a['readUInt8'](),
                        _0x20df1b = _0x5ddf8d['createGameObjOfOType'](_0x480a9f, null);
                    return _0x20df1b['staticUpd_readMsg'](_0x4dcb6a, _0x480a9f), _0x20df1b;
                },
                'newlyVis_createGameObjFromMsg': function(_0x15807a) {
                    var _0x1425ab = _0x15807a['readUInt16'](),
                        _0x4972bd = null;
                    _0x44a8bb[_0x1425ab] != null && _0x44a8bb[_0x1425ab] !== undefined && (_0x4972bd = _0x15807a['readUInt16']());
                    var _0x1e5f00 = _0x5ddf8d['createGameObjOfOType'](_0x1425ab, _0x4972bd);
                    return _0x1e5f00['worldUpd_readMsgNewlyVisible'](_0x15807a, _0x1425ab, _0x4972bd), _0x1e5f00;
                },
                'hasCustomClasses': function(_0x47006a) {},
                'createGameObjOfOType': function(_0x131af5, _0x3cf014) {
                    var _0x3f44b8 = this['getClassForGameObjType'](_0x131af5, _0x3cf014),
                        _0x54bc2f = new _0x3f44b8(_0x131af5, _0x3cf014);
                    return _0x54bc2f;
                },
                'onClassSet': function(_0x157ada) {},
                'addCustomClassType': function(_0x4d0c32) {
                    if (_0x44a8bb[_0x4d0c32] == undefined) _0x44a8bb[_0x4d0c32] = _0x4d0c32;
                }
            },
            _0x44a8bb = {};
        _0x5ddf8d['addCustomClassType'](_0x269668), _0x5ddf8d['addCustomClassType'](_0x516d90), _0x5ddf8d['addCustomClassType'](_0x4fbd16), _0x5ddf8d['addCustomClassType'](_0x1b2f8f);
        var _0x19eca4 = 0x1,
            _0x290562 = 0x2,
            _0xceb64c = 0x3,
            _0x3f7358 = 0x4,
            _0x474e8d = 0x5,
            _0xa5c3f5 = 0x6,
            _0x5ae0eb = 0x7,
            _0x178278 = 0x8,
            _0x4d45bb = 0x9,
            _0x59b412 = 0xa,
            _0x590076 = 0xb,
            _0x3f35f1 = 0xc,
            _0x1b196d = 0xd,
            _0x31f937 = 0xe,
            _0x19fc30 = 0xf,
            _0x1a22d5 = 0x10,
            _0x172231 = 0x11,
            _0x4ef33a = 0x12,
            _0x2e6e95 = 0x13,
            _0x31158f = 0x14,
            _0x23c342 = 0x15,
            _0x1fff86 = 0x16,
            _0x4a5a29 = 0x17,
            _0x9038c6 = 0x18,
            _0x1dbdcd = 0x19,
            _0x26d386 = 0x1a,
            _0x9918f2 = 0x1b,
            _0x248ce4 = 0x1c,
            _0x283bbc = 0x1d,
            _0x3d9765 = 0x1e,
            _0x2a2b27 = 0x1f,
            _0x36fcdc = 0x20,
            _0x3d3994 = 0x21,
            _0x33ea21 = 0x22,
            _0x3bf4c4 = 0x23,
            _0x2f4199 = 0x24,
            _0x51d33b = 0x25,
            _0x538204 = 0x26,
            _0x44a111 = 0x27,
            _0x538056 = 0x28,
            _0x38ffba = 0x29,
            _0x55fd3d = 0x2a,
            _0x5ed897 = 0x2b,
            _0x1bb5dc = 0x2c,
            _0x3fb2b0 = 0x2d,
            _0x1de825 = 0x2e,
            _0x3ccf08 = 0x2f,
            _0x1d892b = 0x30,
            _0x52a058 = 0x31,
            _0x45a408 = 0x32,
            _0x2982a0 = 0x33,
            _0x471528 = 0x34,
            _0x366af5 = 0x35,
            _0x149505 = 0x36,
            _0xbdc345 = 0x37,
            _0x329081 = 0x38,
            _0x40e6df = 0x39,
            _0x52bb25 = 0x3a,
            _0x3399b3 = 0x3b,
            _0x442c1e = 0x3c,
            _0x38e413 = 0x3d,
            _0x25446a = 0x3e,
            _0x123d4e = 0x3f,
            _0xd787b4 = 0x40,
            _0x24c6d5 = 0x41,
            _0x4657a6 = 0x42,
            _0x2d7197 = 0x43,
            _0x48a3f9 = 0x44,
            _0x4d08a1 = 0x45,
            _0x346859 = 0x46,
            _0x1fb7c3 = 0x47,
            _0xdd7007 = 0x48,
            _0x19d925 = 0x49,
            _0x1f01ec = 0x4a,
            _0x4927bb = 0x4b,
            _0x57f2d9 = 0x4c,
            _0x108e2d = 0x4d,
            _0x1f079f = 0x4e,
            _0x1ecc36 = 0x4f,
            _0x2d9acc = 0x50,
            _0x5bec16 = 0x51,
            _0x427de7 = 0x52,
            _0x214ca3 = 0x53,
            _0x2521ea = 0x54,
            _0x355b29 = 0x55,
            _0x4828a0 = 0x56,
            _0x29f076 = 0x57,
            _0x41fd87 = 0x58,
            _0x5cb417 = 0x59,
            _0x502a88 = 0x5a,
            _0x483b9e = 0x5b,
            _0x242003 = 0x5c,
            _0x456e24 = 0x5d,
            _0x4a2a55 = 0x5e,
            _0x582280 = 0x5f,
            _0x5e24a5 = 0x60,
            _0x466d53 = 0x61,
            _0x4bbe45 = 0x62,
            _0x120535 = 0x63,
            _0xf8f210 = 0x64,
            _0x1323b9 = 0x65,
            _0xcb49f5 = 0x66,
            _0x51b1a7 = 0x67,
            _0x100dbd = 0x68,
            _0x2a0d7d = 0x69,
            _0x198193 = 0x6a,
            _0x4576a9 = 0x6b,
            _0x1a5786 = 0x6c,
            _0x49ed0a = 0x6d,
            _0x16c634 = 0x6e,
            _0x51d6fb = 0x6f,
            _0x4767a1 = 0x70;
        a_birdMonster = 0x7a;
        var _0x3099ed = function(_0x1af1f3) {
            var _0x2ab7e4 = {};
            switch (_0x1af1f3) {
                case _0x3fb2b0:
                    _0x2ab7e4['aniName'] = 'Snail', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'You\'re a super slow snail!', _0x2ab7e4['aniCol'] = '#fcc02b', _0x2ab7e4['skinName'] = 'snail';
                    break;
                case _0x19eca4:
                    _0x2ab7e4['aniName'] = 'Mouse', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = '', _0x2ab7e4['aniCol'] = '#9BA9B9', _0x2ab7e4['skinName'] = 'mouse';
                    break;
                case _0x290562:
                    _0x2ab7e4['aniName'] = 'Rabbit', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x2ab7e4['aniCol'] = '#AA937E', _0x2ab7e4['skinName'] = 'rabbit';
                    break;
                case _0xceb64c:
                    _0x2ab7e4['aniName'] = 'Pig', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x2ab7e4['aniCol'] = '#DD6BD4', _0x2ab7e4['skinName'] = 'pig';
                    break;
                case _0x3f7358:
                    _0x2ab7e4['aniName'] = 'Fox', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x2ab7e4['aniCol'] = '#FF9D43', _0x2ab7e4['skinName'] = 'fox';
                    break;
                case _0x474e8d:
                    _0x2ab7e4['aniName'] = 'Deer', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x2ab7e4['aniCol'] = '#C4773E', _0x2ab7e4['skinName'] = 'deer';
                    break;
                case _0xa5c3f5:
                    _0x2ab7e4['aniName'] = 'Mole', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x2ab7e4['aniCol'] = '#4C4A45', _0x2ab7e4['skinName'] = 'mole';
                    break;
                case _0x5ae0eb:
                    _0x2ab7e4['aniName'] = 'Zebra', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x2ab7e4['aniCol'] = '#FFFFFF', _0x2ab7e4['skinName'] = 'zebra';
                    break;
                case _0x178278:
                    _0x2ab7e4['aniName'] = 'Lion', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x2ab7e4['aniCol'] = '#f8c923', _0x2ab7e4['skinName'] = 'lion';
                    break;
                case _0x4d45bb:
                    _0x2ab7e4['aniName'] = 'CHEETAH', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to CHEETAH!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x2ab7e4['aniCol'] = '#CAC05B', _0x2ab7e4['skinName'] = 'bigcat/cheetah';
                    break;
                case _0x59b412:
                    _0x2ab7e4['aniName'] = 'Bear', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x2ab7e4['aniCol'] = '#99591C', _0x2ab7e4['skinName'] = 'bear';
                    break;
                case _0x590076:
                    _0x2ab7e4['aniName'] = 'Croc', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x2ab7e4['aniCol'] = '#30F51C', _0x2ab7e4['skinName'] = 'croc';
                    break;
                case _0x1b196d:
                    _0x2ab7e4['aniName'] = 'Hippo', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2ab7e4['aniCol'] = '#945A99', _0x2ab7e4['skinName'] = 'hippo';
                    break;
                case _0x3f35f1:
                    _0x2ab7e4['aniName'] = 'Rhino', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x2ab7e4['aniCol'] = '#94a3a9', _0x2ab7e4['skinName'] = 'rhino';
                    break;
                case _0x19fc30:
                    _0x2ab7e4['aniName'] = 'Shrimp', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = '', _0x2ab7e4['aniCol'] = '#f88e37', _0x2ab7e4['skinName'] = 'shrimp';
                    break;
                case _0x1a22d5:
                    _0x2ab7e4['aniName'] = 'Trout', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x2ab7e4['aniCol'] = '#ac8686', _0x2ab7e4['skinName'] = 'trout';
                    break;
                case _0x172231:
                    _0x2ab7e4['aniName'] = 'Crab', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x2ab7e4['aniCol'] = '#bf2408', _0x2ab7e4['skinName'] = 'crab';
                    break;
                case _0x4ef33a:
                    _0x2ab7e4['aniName'] = 'Squid', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x2ab7e4['aniCol'] = '#40dda4', _0x2ab7e4['skinName'] = 'squid';
                    break;
                case _0x2e6e95:
                    _0x2ab7e4['aniName'] = 'Shark', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x2ab7e4['aniCol'] = '#999fc6', _0x2ab7e4['skinName'] = 'shark';
                    break;
                case _0x1fff86:
                    _0x2ab7e4['aniName'] = 'Sea-horse', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x2ab7e4['aniCol'] = '#73BE2F', _0x2ab7e4['skinName'] = 'seahorse';
                    break;
                case _0x4a5a29:
                    _0x2ab7e4['aniName'] = 'Jellyfish', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x2ab7e4['aniCol'] = '#FDB9BA', _0x2ab7e4['skinName'] = 'jellyfish';
                    break;
                case _0x23c342:
                    _0x2ab7e4['aniName'] = 'Turtle', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x2ab7e4['aniCol'] = '#502E1A', _0x2ab7e4['skinName'] = 'turtle';
                    break;
                case _0x31158f:
                    _0x2ab7e4['aniName'] = 'Stingray', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x2ab7e4['aniCol'] = '#164336', _0x2ab7e4['skinName'] = 'stingray';
                    break;
                case _0x9038c6:
                    _0x2ab7e4['aniName'] = 'The Kraken', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x2ab7e4['aniCol'] = '#64a034', _0x2ab7e4['skinName'] = 'kraken';
                    break;
                case _0x1dbdcd:
                    _0x2ab7e4['aniName'] = 'Pufferfish', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x2ab7e4['aniCol'] = '#6C5C2C', _0x2ab7e4['skinName'] = 'pufferfish';
                    break;
                case _0x26d386:
                    _0x2ab7e4['aniName'] = 'Killer Whale', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x2ab7e4['aniCol'] = '#141414', _0x2ab7e4['skinName'] = 'killerwhale';
                    break;
                case _0x9918f2:
                    _0x2ab7e4['aniName'] = 'Swordfish', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x2ab7e4['aniCol'] = '#689CD7', _0x2ab7e4['skinName'] = 'swordfish';
                    break;
                case _0x248ce4:
                    _0x2ab7e4['aniName'] = 'Gorilla', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x2ab7e4['aniCol'] = '#323232', _0x2ab7e4['skinName'] = 'gorilla';
                    break;
                case _0x283bbc:
                    _0x2ab7e4['aniName'] = 'Octopus', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x2ab7e4['aniCol'] = '#ff8340', _0x2ab7e4['skinName'] = 'octopus';
                    break;
                case _0x31f937:
                    _0x2ab7e4['aniName'] = 'Dragon', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x2ab7e4['aniCol'] = '#22FF8A', _0x2ab7e4['skinName'] = 'dragon';
                    break;
                case _0x1de825:
                    _0x2ab7e4['aniName'] = 'Black Dragon', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x2ab7e4['aniCol'] = 'black', _0x2ab7e4['skinName'] = 'blackdragon';
                    break;
                case _0x471528:
                    _0x2ab7e4['aniName'] = 'Giant Spider', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Place web around the game to catch prey!', _0x2ab7e4['aniCol'] = 'black', _0x2ab7e4['skinName'] = 'giantSpider';
                    break;
                case _0x45a408:
                    _0x2ab7e4['aniName'] = 'Cobra', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x2ab7e4['aniCol'] = 'black', _0x2ab7e4['skinName'] = 'cobra';
                    break;
                case _0x2982a0:
                    _0x2ab7e4['aniName'] = 'Boa Constrictor', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Coil and suffocate other animals!', _0x2ab7e4['aniCol'] = 'black', _0x2ab7e4['skinName'] = 'boaConstrictor';
                    break;
                case _0x366af5:
                    _0x2ab7e4['aniName'] = 'T-REX', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x2ab7e4['aniCol'] = '#862A2A', _0x2ab7e4['skinName'] = 'trex';
                    break;
                case _0x149505:
                    _0x2ab7e4['aniName'] = 'Tiger', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Tiger!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'tiger';
                    break;
                case _0xbdc345:
                    _0x2ab7e4['aniName'] = 'Giraffe', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x2ab7e4['aniCol'] = '#E9BD23', _0x2ab7e4['skinName'] = 'giraffe';
                    break;
                case _0x329081:
                    _0x2ab7e4['aniName'] = 'Eagle', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x2ab7e4['aniCol'] = '#5b400d', _0x2ab7e4['skinName'] = 'eagle';
                    break;
                case _0x38ffba:
                    _0x2ab7e4['aniName'] = 'Arctic Fox', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x2ab7e4['aniCol'] = '#CFCFCF', _0x2ab7e4['skinName'] = 'arctic/arcticfox';
                    break;
                case _0x2a2b27:
                    _0x2ab7e4['aniName'] = 'Arctic Hare', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x2ab7e4['aniCol'] = '#D5D5D5', _0x2ab7e4['skinName'] = 'arctic/arctichare';
                    break;
                case _0x36fcdc:
                    _0x2ab7e4['aniName'] = 'The Yeti!', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x2ab7e4['aniCol'] = '#839eb5', _0x2ab7e4['skinName'] = 'arctic/yeti';
                    break;
                case _0x3d3994:
                    _0x2ab7e4['aniName'] = 'Chipmunk', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = '', _0x2ab7e4['aniCol'] = '#A77C30', _0x2ab7e4['skinName'] = 'arctic/chipmunk';
                    break;
                case _0x33ea21:
                    _0x2ab7e4['aniName'] = 'Muskox', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x2ab7e4['aniCol'] = '#231f18', _0x2ab7e4['skinName'] = 'arctic/muskox';
                    break;
                case _0x3bf4c4:
                    _0x2ab7e4['aniName'] = 'Penguin', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x2ab7e4['aniCol'] = '#FFFFFF', _0x2ab7e4['skinName'] = 'arctic/penguin';
                    break;
                case _0x2f4199:
                    _0x2ab7e4['aniName'] = 'Polar Bear', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x2ab7e4['aniCol'] = '#e4e4e4', _0x2ab7e4['skinName'] = 'arctic/bear/bear';
                    break;
                case _0x51d33b:
                    _0x2ab7e4['aniName'] = 'Seal', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x2ab7e4['aniCol'] = '#cfcfcf', _0x2ab7e4['skinName'] = 'arctic/seal';
                    break;
                case _0x538204:
                    _0x2ab7e4['aniName'] = 'Snow leopard', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x2ab7e4['aniCol'] = '#cfcfcf', _0x2ab7e4['skinName'] = 'arctic/snowleopard';
                    break;
                case _0x44a111:
                    _0x2ab7e4['aniName'] = 'Walrus', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x2ab7e4['aniCol'] = '#633838', _0x2ab7e4['skinName'] = 'arctic/walrus';
                    break;
                case _0x538056:
                    _0x2ab7e4['aniName'] = 'Reindeer', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x2ab7e4['aniCol'] = '#a68976', _0x2ab7e4['skinName'] = 'arctic/reindeer';
                    break;
                case _0x3d9765:
                    _0x2ab7e4['aniName'] = 'Wolf', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x2ab7e4['aniCol'] = '#6B6B6B', _0x2ab7e4['skinName'] = 'arctic/wolf';
                    break;
                case _0x55fd3d:
                    _0x2ab7e4['aniName'] = 'Wolverine', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x2ab7e4['aniCol'] = '#843A0F', _0x2ab7e4['skinName'] = 'arctic/wolverine';
                    break;
                case _0x5ed897:
                    _0x2ab7e4['aniName'] = 'Mammoth', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x2ab7e4['aniCol'] = '#9d4717', _0x2ab7e4['skinName'] = 'arctic/mammoth';
                    break;
                case _0x1bb5dc:
                    _0x2ab7e4['aniName'] = 'Donkey', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x2ab7e4['aniCol'] = '#8c7c64', _0x2ab7e4['skinName'] = 'donkey';
                    break;
                case _0x3ccf08:
                    _0x2ab7e4['aniName'] = 'Sabertooth Tiger', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x2ab7e4['aniCol'] = '#945A99', _0x2ab7e4['skinName'] = 'sabertoothtiger';
                    break;
                case _0x1d892b:
                    _0x2ab7e4['aniName'] = 'Elephant', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to ' + _0x2ab7e4['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x2ab7e4['aniCol'] = '#945A99', _0x2ab7e4['skinName'] = 'elephant';
                    break;
                case _0x52a058:
                    _0x2ab7e4['aniName'] = 'Blue Whale', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x2ab7e4['aniCol'] = '#945A99', _0x2ab7e4['skinName'] = 'bluewhale';
                    break;
                case _0x3399b3:
                    _0x2ab7e4['aniName'] = 'Duckling', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to a DUCK!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'duck/duckling';
                    break;
                case _0x40e6df:
                    _0x2ab7e4['aniName'] = 'Hedgehog', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x2ab7e4['aniCol'] = '#5b400d', _0x2ab7e4['skinName'] = 'hedgehog';
                    break;
                case _0x38e413:
                    _0x2ab7e4['aniName'] = 'King Crab', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x2ab7e4['aniCol'] = '#971f0e', _0x2ab7e4['skinName'] = 'kingcrab';
                    break;
                case _0x442c1e:
                    _0x2ab7e4['aniName'] = 'Lemming', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = '', _0x2ab7e4['aniCol'] = '#A77C30', _0x2ab7e4['skinName'] = 'arctic/lemming';
                    break;
                case _0x25446a:
                    _0x2ab7e4['aniName'] = 'Frog', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Frog!!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'frog/frog';
                    break;
                case _0x123d4e:
                    _0x2ab7e4['aniName'] = 'Ostrich', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'ostrich/ostrich';
                    break;
                case _0xd787b4:
                    _0x2ab7e4['aniName'] = 'Pelican', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'pelican/pelican';
                    break;
                case _0x24c6d5:
                    _0x2ab7e4['aniName'] = 'Falcon', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'falcon/falcon';
                    break;
                case _0x4657a6:
                    _0x2ab7e4['aniName'] = 'Snowy Owl', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'snowyowl/snowyowl';
                    break;
                case _0x4d08a1:
                    _0x2ab7e4['aniName'] = 'Baby Ostrich', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'ostrich/baby-ostrich';
                    break;
                case _0x48a3f9:
                    _0x2ab7e4['aniName'] = 'Phoenix', _0x2ab7e4['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'phoenix/phoenix';
                    break;
                case _0x346859:
                    _0x2ab7e4['aniName'] = 'Sea Monster', _0x2ab7e4['upgradeText'] = 'UPGRADED to Sea Monster!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'seamonster';
                    break;
                case _0x1fb7c3:
                    _0x2ab7e4['aniName'] = 'Land Monster', _0x2ab7e4['upgradeText'] = 'UPGRADED to Land Monster!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'landmonster';
                    break;
                case _0xdd7007:
                    _0x2ab7e4['aniName'] = 'Ice Monster', _0x2ab7e4['upgradeText'] = 'UPGRADED to Ice Monster!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'icemonster';
                    break;
                case _0x19d925:
                    _0x2ab7e4['aniName'] = 'Dino Monster', _0x2ab7e4['upgradeText'] = 'UPGRADED to Dino Monster!', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'dinomonster';
                    break;
                case _0x1f01ec:
                    _0x2ab7e4['aniName'] = 'Pigeon', _0x2ab7e4['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold W to fly around. ', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'pigeon/pigeon';
                    break;
                case _0x4927bb:
                    _0x2ab7e4['aniName'] = 'Toucan', _0x2ab7e4['upgradeText'] = 'UPGRADED to Toucan!\x0aHold W to fly around. ', _0x2ab7e4['aniCol'] = '#FF9000', _0x2ab7e4['skinName'] = 'toucan/toucan';
                    break;
                default:
                    _0x2ab7e4['aniName'] = '(Animal)', _0x2ab7e4['aniDesc'] = '', _0x2ab7e4['aniCol'] = '#000000', _0x2ab7e4['upgradeText'] = 'UPGRADED!';
            }
            return _0x2ab7e4;
        };

        function _0x4b54d4() {}

        function _0x454b4e(_0x4792f4) {
            let _0x5eeff4 = Array['isArray'](_0x4792f4) ? _0x4792f4 : [_0x4792f4];
            return _0x5eeff4 = _0x5eeff4['map'](_0x41db9a => {
                return {
                    ..._0x41db9a,
                    'abilImg': 'assets/' + _0x41db9a['abilImg']
                };
            }), _0x5eeff4['length'] === 0x1 && _0x5eeff4[0x0]['abilImg'] !== 'assets/abilities/Dash-Boost.svg' && _0x5eeff4['unshift']({
                'abilName': 'Dash',
                'abilImg': 'assets/abilities/Dash-Boost.svg'
            }), _0x5eeff4;
        }
        var _0x12376c = 0x65,
            _0x40131c = 0x0,
            _0x289f79 = 0x1,
            _0x58c339 = 0x2,
            _0x49d246 = 0x3,
            _0x14e881 = 0x4,
            _0xe6c462 = 0x5,
            _0xc4e585 = 0x6,
            _0x404cb5 = 0x7,
            _0x570c9f = 0x8,
            _0x30edb0 = 0x9,
            _0x1bfbbb = 0xa,
            _0x286b26 = 0xb,
            _0x2a2808 = 0xc,
            _0x26e914 = 0xd,
            _0x2ff7c1 = 0xe,
            _0x58f098 = 0xf,
            _0x5d023b = 0x10,
            _0x374b9d = 0x11,
            _0x1cd064 = 0x12,
            _0x458aed = 0x13,
            _0x3dbd60 = 0x14,
            _0x35f13f = 0x15,
            _0x4dbf14 = 0x16,
            _0x29c6b2 = 0x17,
            _0x15c7b6 = 0x18,
            _0x26c542 = 0x19,
            _0x7938cc = 0x1a,
            _0x3b884d = 0x1b,
            _0x38e3df = 0x1c,
            _0x53974f = 0x1e,
            _0x518c9f = 0x1f,
            _0x28e962 = 0x20,
            _0x15b169 = 0x21,
            _0xaa167a = 0x22,
            _0x5ab475 = 0x23,
            _0x4a7324 = 0x24,
            _0x2ddf94 = 0x25,
            _0x3af027 = 0x26,
            _0x1d45b7 = 0x27,
            _0xe38605 = 0x28,
            _0x14db37 = 0x29,
            _0x2e4acf = 0x2a,
            _0x5b747e = 0x2b,
            _0x1c7281 = 0x2e,
            _0x4c32c1 = 0x2f,
            _0x1adb9f = 0x30,
            _0x14ff6c = 0x31,
            _0x1afeb2 = 0x33,
            _0x22d7cf = 0x36,
            _0x4df451 = 0x37,
            _0x3d0c6d = 0x38,
            _0x5ad2ab = 0x39,
            _0x3193ff = 0x3a,
            _0x3a5655 = 0x3b,
            _0x516842 = 0x3c,
            _0x405477 = 0x3d,
            _0xbb4e7f = 0x3e,
            _0x20ea41 = 0x3f,
            _0x3032b6 = 0x40,
            _0x4aa695 = 0x41,
            _0x4e6956 = 0x42,
            _0x47b006 = 0x43,
            _0x33b982 = 0x44,
            _0xded305 = 0x45,
            _0x43e07c = 0x46,
            _0x42e624 = 0x47,
            _0x43a71e = 0x48,
            _0x34a295 = 0x49,
            _0x6090c9 = 0x4a,
            _0x5d9544 = 0x4b,
            _0x35becc = 0x4c,
            _0x1a65e3 = 0x4d,
            _0x42c802 = 0x4e,
            _0x150409 = 0x4f,
            _0x2e43db = 0x50,
            _0x2d677a = 0x51,
            _0x25e4a4 = 0x52,
            _0x1d4252 = 0x53,
            _0x2fc161 = 0x56,
            _0x1ae09a = 0x57,
            _0x6254d6 = 0x58,
            _0x4fdeb3 = 0x59,
            _0x462a31 = 0x5a,
            _0x57e453 = 0x5b,
            _0x381068 = 0x5c,
            _0x2f40ae = 0x5d,
            _0x2d6ab6 = 0x5e,
            _0x6d49e6 = 0x5f,
            _0xd33b1e = 0x5d,
            _0x528399 = 0x61,
            _0x2795bb = 0x62,
            _0x563868 = 0x63,
            _0x21a38a = 0x65,
            _0x416306 = 0x66,
            _0x4e4443 = 0x67,
            _0x209c2d = 0x68,
            _0x1339be = 0x69,
            _0x3764d2 = 0x6a,
            _0x92a589 = 0x6b,
            _0x43f88c = 0x6c,
            _0x36ec77 = 0x70,
            _0x3b9ce9 = 0x80,
            _0x144cfb = 0x86,
            _0x593885 = 0x87,
            _0x342ff7 = 0x89,
            _0x5b4661 = 0x8f,
            _0x29a840 = 0x90,
            _0x577722 = 0x91,
            _0x1dee56 = 0x93,
            _0x51da37 = function(_0x8af5af) {
                var _0x4e733f = {},
                    _0x5c1714 = '',
                    _0x3d29ef = _0x4b4e0c[_0x59b0bc];
                switch (_0x8af5af) {
                    case _0x25e4a4:
                        _0x4e733f['abilName'] = 'Bear Attack';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/desert/gobibear/' + _0x3d29ef['animalSpecies'] + '/gobibear_attack.png';
                        break;
                    case _0x144cfb:
                        _0x4e733f['abilName'] = 'HOLD to Fly';
                        _0x3d29ef && (_0x4e733f['abilImg'] = 'skins/' + _0x3d29ef['animalInfo']()['skinName'] + '.png');
                        break;
                    case _0x5b4661:
                        _0x4e733f['abilName'] = 'Glide from\x0a Trees & Hills';
                        _0x3d29ef && (_0x4e733f['abilImg'] = 'skins/' + _0x3d29ef['animalInfo']()['skinName'] + '.png');
                        break;
                    case _0x593885:
                        _0x4e733f['abilName'] = 'Charge!';
                        _0x3d29ef && (_0x4e733f['abilImg'] = 'skins/' + _0x3d29ef['animalInfo']()['skinName'] + '.png');
                        break;
                    case _0x1d4252:
                        _0x4e733f['abilName'] = 'Spit!', _0x4e733f['abilImg'] = 'skins/desert/camel/spit.png';
                        break;
                        _0x6d49e6 = 0x5f;
                    case _0x28e962:
                        _0x4e733f['abilName'] = 'Tail Slap', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x518c9f:
                        _0x4e733f['abilName'] = 'Trunk Hit', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x12376c:
                        _0x4e733f['abilName'] = 'Dive', _0x4e733f['abilImg'] = 'img/ability_dive.png';
                        break;
                    case _0x26c542:
                        _0x4e733f['abilName'] = 'Dig For Food', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x58c339:
                        _0x4e733f['abilName'] = 'Shell', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '2.png';
                        break;
                    case _0x35f13f:
                        _0x4e733f['abilName'] = 'Bite Drag', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x4a7324:
                        _0x4e733f['abilName'] = 'Suffocate prey', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x4df451:
                        _0x4e733f['abilName'] = 'Fly with water';
                        var _0x3d29ef = _0x4b4e0c[_0x59b0bc];
                        _0x3d29ef && (_0x4e733f['abilImg'] = 'skins/pelican/' + _0x3d29ef['animalSpecies'] + '/ability_pelican.png');
                        break;
                    case _0x404cb5:
                        _0x4e733f['abilName'] = 'Disguise', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x4dbf14:
                        _0x4e733f['abilName'] = 'Burrow Hole';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3d29ef['animalInfo']()['skinName'] + '.png';
                        break;
                    case _0x29c6b2:
                        _0x4e733f['abilName'] = 'Pull from Hole';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3d29ef['animalInfo']()['skinName'] + '.png';
                        break;
                    case _0x30edb0:
                        _0x4e733f['abilName'] = 'Charge', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x374b9d:
                        _0x4e733f['abilName'] = 'Roll snow', _0x4e733f['abilImg'] = 'img/snowball.png';
                        break;
                    case _0xaa167a:
                        _0x4e733f['abilName'] = 'Venom Spit', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x5ab475:
                        _0x4e733f['abilName'] = 'Spin Web', _0x4e733f['abilImg'] = 'img/spiderWeb.png';
                        break;
                    case _0x26e914:
                        _0x4e733f['abilName'] = 'Throw Snow', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x5d023b:
                        _0x4e733f['abilName'] = 'Drop Snow', _0x4e733f['abilImg'] = 'img/snowball.png';
                        break;
                    case _0x1cd064:
                        _0x4e733f['abilName'] = 'Loud Noise', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x2ff7c1:
                        _0x4e733f['abilName'] = 'Claw Slash', _0x4e733f['abilImg'] = 'img/ability_claw.png';
                        break;
                    case _0x14e881:
                        _0x4e733f['abilName'] = 'Ink', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x49d246:
                        _0x4e733f['abilName'] = 'Shock', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x289f79:
                        _0x4e733f['abilName'] = 'Hold to Dig', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x2a2808:
                        _0x4e733f['abilName'] = 'Howl', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x15c7b6:
                        _0x4e733f['abilName'] = 'Throw Banana', _0x4e733f['abilImg'] = 'skins/' + +_0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x38e3df:
                        _0x4e733f['abilName'] = 'Cause Wave', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x58f098:
                        _0x4e733f['abilName'] = 'Extra Boost';
                        if (_0x4e734d == _0x4d45bb) {
                            if (_0x3d29ef) {
                                var _0x491507 = _0x3d29ef['animalInfo']();
                                _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x491507['skinName'] + '.png';
                            }
                        } else _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x570c9f:
                        _0x4e733f['abilName'] = 'Slide on ice', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x1bfbbb:
                        _0x4e733f['abilName'] = 'Inflate', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x14ff6c:
                        _0x4e733f['abilName'] = 'Spikes', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '2.png';
                        break;
                    case _0x458aed:
                        _0x4e733f['abilName'] = 'Fire', _0x4e733f['abilImg'] = 'img/fire.png';
                        break;
                    case _0x53974f:
                        _0x4e733f['abilName'] = 'Fire', _0x4e733f['abilImg'] = 'img/fire.png';
                        break;
                    case _0x1afeb2:
                        _0x4e733f['abilName'] = 'Arm Smash', _0x4e733f['abilImg'] = 'img/ability_crabSmashSkin.png';
                        break;
                    case _0x2ddf94:
                        _0x4e733f['abilName'] = 'Jaws Bite', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x1c7281:
                        _0x4e733f['abilName'] = 'Jaws Bite', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x22d7cf:
                        _0x4e733f['abilName'] = 'Command Babies', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + 'ostrich/ostrich-baby.png';
                        break;
                    case _0x3193ff:
                        _0x4e733f['abilName'] = 'Target prey', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x5ad2ab:
                        _0x4e733f['abilName'] = 'Sky dive', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x3af027:
                        _0x4e733f['abilName'] = 'Ambush Attack';
                        var _0x3d29ef = _0x4b4e0c[_0x59b0bc];
                        if (_0x3d29ef) {
                            var _0x491507 = _0x3d29ef['animalInfo']();
                            _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x491507['skinName'] + '.png';
                        }
                        break;
                    case _0x2e4acf:
                        _0x4e733f['abilName'] = 'Stomp', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x4c32c1:
                        _0x4e733f['abilName'] = 'Fly with prey';
                        if (_0x3d29ef) var _0x491507 = _0x3d29ef['animalInfo']();
                        break;
                    case _0x1adb9f:
                        _0x4e733f['abilName'] = 'Stink', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x3032b6:
                    case _0x4aa695:
                        _0x4e733f['abilName'] = 'HOLD to fly';
                        if (_0x3d29ef) {
                            var _0x491507 = _0x3d29ef['animalInfo']();
                            _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x491507['skinName'] + '.png';
                        }
                        break;
                    case _0x42e624:
                        _0x4e733f['abilName'] = 'HOLD to fly\x0a& Mimic Animals';
                        if (_0x3d29ef) {
                            var _0x491507 = _0x3d29ef['animalInfo']();
                            _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x491507['skinName'] + '.png';
                        }
                        break;
                    case _0x43a71e:
                        _0x4e733f['abilName'] = 'HOLD in water\x0a(find food)';
                        _0x3d29ef && (_0x4e733f['abilImg'] = 'skins/ocean/flamingo/' + _0x3d29ef['animalSpecies'] + '/flamingo.png');
                        break;
                    case _0x5d9544:
                        _0x4e733f['abilName'] = 'HOLD to Peck\x0a/ Fly';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/' + _0x3d29ef['animalInfo']()['skinName'] + '.png';
                        break;
                    case _0x35becc:
                        _0x4e733f['abilName'] = 'HOLD to Hypnotize\x0a/ Fly from hills';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/' + _0x3d29ef['animalInfo']()['skinName'] + '.png';
                        break;
                    case _0x1a65e3:
                        _0x4e733f['abilName'] = 'HOLD to Jump High\x0a', _0x4e733f['abilImg'] = 'skins/desert/gazelle/gazelle1.png';
                        break;
                    case _0x42c802:
                        _0x4e733f['abilName'] = 'HOLD to ROLL';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/desert/armadillo/' + _0x3d29ef['animalSpecies'] + '/armadillo1.png';
                        break;
                    case _0x2e43db:
                        _0x4e733f['abilName'] = 'HOLD to Dig';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/desert/meerkat/' + _0x3d29ef['animalSpecies'] + '/meerkat1.png';
                        break;
                    case _0x150409:
                        _0x4e733f['abilName'] = 'Spits Food!';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/desert/chipmunk/' + _0x3d29ef['animalSpecies'] + '/chipmunk1.png';
                        break;
                    case _0x2d677a:
                        _0x4e733f['abilName'] = 'Whine!';
                        if (_0x3d29ef) _0x4e733f['abilImg'] = 'skins/desert/fennecfox/' + _0x3d29ef['animalSpecies'] + '/fennecfox1.png';
                        break;
                    case _0x34a295:
                        _0x4e733f['abilName'] = 'Front Kick\x0a(HOLD to Charge)', _0x4e733f['abilImg'] = 'skins/cassowary/cassowary1.png';
                        break;
                    case _0x405477:
                        _0x4e733f['abilName'] = 'Fire Tornado', _0x4e733f['abilImg'] = 'img/firetornado.png';
                        break;
                    case _0x4e6956:
                        _0x4e733f['abilName'] = 'Sink Hole', _0x4e733f['abilImg'] = 'skins/' + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x20ea41:
                        _0x4e733f['abilName'] = 'Giant Whirlpool', _0x4e733f['abilImg'] = 'skins/' + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                    case _0x43e07c:
                        _0x4e733f['abilName'] = 'Knock In Air', _0x4e733f['abilImg'] = 'skins/monsters/dinomonster/dinomonster.png';
                        break;
                    case _0xded305:
                        _0x4e733f['abilName'] = 'Freeze Prey', _0x4e733f['abilImg'] = 'skins/monsters/icemonster/icemonster.png';
                        break;
                    default:
                        _0x4e733f['abilName'] = 'Ability', _0x4e733f['abilImg'] = 'skins/' + _0x5c1714 + _0x3099ed(_0x4e734d)['skinName'] + '.png';
                        break;
                }
                return _0x4e733f;
            },
            _0x5d7e18 = function(_0x205128, _0x44f83a) {
                return Math['random']() * (_0x44f83a - _0x205128) + _0x205128;
            };

        function _0x2009f9(_0x4c7921) {
            var _0x553e10 = '',
                _0x48e011 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
                _0x390ee5 = _0x48e011['length'];
            for (var _0x148dbc = 0x0; _0x148dbc < _0x4c7921; _0x148dbc++) {
                _0x553e10 += _0x48e011['charAt'](Math['floor'](Math['random']() * _0x390ee5));
            }
            return _0x553e10;
        }
        var _0x1d1127 = function(_0x1ae123, _0x46e9d0) {
                return Math['floor'](Math['random']() * (_0x46e9d0 - _0x1ae123 + 0x1)) + _0x1ae123;
            },
            _0x5d3b83 = function(_0x1482d7) {
                var _0x1482d7 = Math['trunc'](_0x1482d7) % 0x168 + (_0x1482d7 - Math['trunc'](_0x1482d7));
                if (_0x1482d7 > 0x0) return _0x1482d7;
                else return _0x1482d7 + 0x168;
            },
            _0x1979d8 = function(_0x1e31ec) {
                var _0x5a284e = _0x1e31ec['split']('.');
                return ((+_0x5a284e[0x0] * 0x100 + +_0x5a284e[0x1]) * 0x100 + +_0x5a284e[0x2]) * 0x100 + +_0x5a284e[0x3];
            },
            _0x4c6af5 = function(_0x2270d4) {
                var _0x3e9dd2 = _0x2270d4 % 0x100;
                for (var _0x3adfcd = 0x3; _0x3adfcd > 0x0; _0x3adfcd--) {
                    _0x2270d4 = Math['floor'](_0x2270d4 / 0x100), _0x3e9dd2 = _0x2270d4 % 0x100 + '.' + _0x3e9dd2;
                }
                return _0x3e9dd2;
            },
            _0x351957 = function(_0xeeda9c, _0x32ec23) {
                var _0x34031c = _0x32ec23['split']('?')[0x0],
                    _0xe39696, _0x2743e1 = [],
                    _0x535466 = _0x32ec23['indexOf']('?') !== -0x1 ? _0x32ec23['split']('?')[0x1] : '';
                if (_0x535466 !== '') {
                    _0x2743e1 = _0x535466['split']('&');
                    for (var _0x4ec317 = _0x2743e1['length'] - 0x1; _0x4ec317 >= 0x0; _0x4ec317 -= 0x1) {
                        _0xe39696 = _0x2743e1[_0x4ec317]['split']('=')[0x0], _0xe39696 === _0xeeda9c && _0x2743e1['splice'](_0x4ec317, 0x1);
                    }
                    _0x34031c = _0x34031c + '?' + _0x2743e1['join']('&');
                }
                return _0x34031c;
            },
            _0x15992d = function(_0x4e2f2c) {
                return _0x4e2f2c * (0xb4 / Math['PI']);
            },
            _0x4c4686 = function(_0x45e1bf) {
                return _0x45e1bf * (Math['PI'] / 0xb4);
            },
            _0x30a9c3 = function(_0xb6f2f1, _0x2ddf50, _0x59fd6e, _0x3a1b54) {
                return Math['atan2'](_0x3a1b54 - _0x2ddf50, _0x59fd6e - _0xb6f2f1);
            },
            _0x446a79 = function(_0x4798a8, _0x473f71) {
                return (_0x4798a8 >> _0x473f71) % 0x2 != 0x0;
            },
            _0x3cb51b = function(_0x4ea203, _0x32487e, _0x27716e) {
                if (_0x27716e) return _0x4ea203 | 0x1 << _0x32487e;
                else return _0x4ea203 & ~(0x1 << _0x32487e);
            },
            _0x4c0365 = function(_0x5aa7ea, _0x546b21) {
                let _0x19fbb0 = _0x546b21 - _0x5aa7ea;
                while (_0x19fbb0 > Math['PI']) {
                    _0x19fbb0 -= Math['PI'] * 0x2;
                }
                while (_0x19fbb0 < -Math['PI']) {
                    _0x19fbb0 += Math['PI'] * 0x2;
                }
                return _0x19fbb0;
            },
            _0x34fd15 = function(_0x28f9f9, _0x3f7fca, _0x59ccc2) {
                return Math['min'](_0x59ccc2, Math['max'](_0x3f7fca, _0x28f9f9));
            },
            _0x4eaafb = function(_0x2638f6) {
                return unescape(encodeURIComponent(_0x2638f6));
            },
            _0x187733 = function(_0x53a0e6) {
                return decodeURIComponent(escape(_0x53a0e6));
            },
            _0x305786 = function(_0x2ae690, _0x528025, _0x64f0ba) {
                var _0x504438 = _0x4597c4['measureText']('M')['width'] * 1.2,
                    _0x51c6bb = _0x2ae690['split']('\x0a');
                for (var _0x152ba9 = 0x0; _0x152ba9 < _0x51c6bb['length']; ++_0x152ba9) {
                    _0x4597c4['fillText'](_0x51c6bb[_0x152ba9], _0x528025, _0x64f0ba), _0x64f0ba += _0x504438;
                }
            },
            _0xe01527 = function(_0x4d2bc7) {
                var _0x29fbf4 = parseInt(_0x4d2bc7, 0xa),
                    _0x41fb8d = Math['floor'](_0x29fbf4 / 0xe10),
                    _0x25514d = Math['floor']((_0x29fbf4 - _0x41fb8d * 0xe10) / 0x3c),
                    _0x1daab2 = _0x29fbf4 - _0x41fb8d * 0xe10 - _0x25514d * 0x3c;
                return _0x1daab2 < 0xa && (_0x1daab2 = '0' + _0x1daab2), _0x25514d + ':' + _0x1daab2;
            },
            _0x136baa = function(_0x453591) {
                return _0x453591['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
            },
            _0x2c8aad = function(_0x2823f8) {
                return _0x4aa4a0(_0x2823f8, 0x0);
            },
            _0x4aa4a0 = function(_0x57b2d4, _0x4fc01a) {
                if (_0x57b2d4 === null || _0x57b2d4 === 0x0) return '0';
                _0x4fc01a = !_0x4fc01a || _0x4fc01a < 0x0 ? 0x0 : _0x4fc01a;
                var _0x42414d = _0x57b2d4['toPrecision'](0x2)['split']('e'),
                    _0x19a86d = _0x42414d['length'] === 0x1 ? 0x0 : Math['floor'](Math['min'](_0x42414d[0x1]['slice'](0x1), 0xe) / 0x3),
                    _0x5dc5be = _0x19a86d < 0x1 ? _0x57b2d4['toFixed'](0x0 + _0x4fc01a) : (_0x57b2d4 / Math['pow'](0xa, _0x19a86d * 0x3))['toFixed'](0x2),
                    _0x2d6645 = _0x5dc5be < 0x0 ? _0x5dc5be : Math['abs'](_0x5dc5be),
                    _0x3e8189 = _0x2d6645 + ['', 'K', 'M', 'B', 'T'][_0x19a86d];
                return _0x3e8189;
            },
            _0x4096ce = function(_0x470cb8, _0x5303e4, _0x19835d, _0x1d71d8) {
                _0x4597c4['fillStyle'] = _0x1d71d8, _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x470cb8, _0x5303e4, Math['max'](0x0, _0x19835d), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
            },
            _0x43d466 = function(_0x461fa2, _0x4490f5, _0x499f5b, _0x1eee94, _0x503106) {
                _0x4597c4['strokeStyle'] = _0x503106, _0x4597c4['lineWidth'] = _0x1eee94, _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x461fa2, _0x4490f5, Math['max'](0x0, _0x499f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['stroke']();
            },
            _0x5b9e97 = function(_0x2d60ca, _0x268717, _0x464374, _0x4eb727) {
                var _0x491054 = _0x464374 * Math['sin'](_0x4eb727 * Math['PI'] / _0x268717 * _0x2d60ca);
                return _0x491054;
            },
            _0x3b0618 = function(_0x2857cf, _0x30eaf4) {
                (_0x363eb2 || _0x30eaf4) && console['log'](_0x2857cf);
            };

        function _0x22f380(_0x1b386f = 0x0) {
            var _0x14418c = Math['floor'](_0x1b386f / 0xe10),
                _0x4ec18b = Math['floor']((_0x1b386f - _0x14418c * 0xe10) / 0x3c),
                _0x387791 = _0x1b386f - _0x14418c * 0xe10 - _0x4ec18b * 0x3c,
                _0x47444c = _0x14418c >= 0x1,
                _0x47666a = _0x47444c || _0x4ec18b >= 0x1;
            let _0x6d59b6 = '';
            return _0x47444c && (_0x6d59b6 += _0x14418c + 'h '), _0x47666a && (_0x6d59b6 += _0x4ec18b + 'm '), _0x6d59b6 += _0x387791 + 's', _0x6d59b6;
        }

        function _0x1d0d57(_0x53ebf8, _0x1cb979) {
            var _0x1eedc5 = _0x53ebf8['x'] - _0x1cb979['x'],
                _0x304d53 = _0x53ebf8['y'] - _0x1cb979['y'];
            return Math['sqrt'](_0x1eedc5 * _0x1eedc5 + _0x304d53 * _0x304d53);
        }
        var _0x11aa36 = 's',
            _0x34ec7a = 'e',
            _0x566d8c = 'r',
            _0x5a6d36 = 'v',
            _0x53025b = function() {
                window['setTimeout'](function() {
                    eval(_0x11aa36 + _0x34ec7a + _0x566d8c + _0x5a6d36 + _0x34ec7a + _0x566d8c + ' = null'), _0x53025b();
                }, _0x4ec95c(0xa, 0x14) * 0x3e8);
            };
        _0x53025b();
        const _0x31cf4b = _0x4c4686(0x2d),
            _0x197fc1 = _0x4c4686(0x5a),
            _0x11f699 = _0x4c4686(0xb4);

        function _0x18b226(_0xcc3ced) {
            return _0xcc3ced / 0xb6;
        }

        function _0x2faffe(_0x2ef456) {
            this['data'] = _0x2ef456, this['offset'] = 0x0, this['readUInt8'] = function() {
                var _0x40a444 = this['data']['getUint8'](this['offset']);
                return this['offset'] += 0x1, _0x40a444;
            }, this['readUInt16'] = function() {
                try {
                    var _0x258a35 = this['data']['getUint16'](this['offset'], ![]);
                    return this['offset'] += 0x2, _0x258a35;
                } catch (_0x199234) {
                    return 0x0;
                }
            }, this['readInt16'] = function() {
                try {
                    var _0x51f616 = this['data']['getInt16'](this['offset'], ![]);
                    return this['offset'] += 0x2, _0x51f616;
                } catch (_0x3d1c27) {
                    return 0x0;
                }
            }, this['readUInt32'] = function() {
                try {
                    var _0x5876c8 = this['data']['getUint32'](this['offset'], ![]);
                    return this['offset'] += 0x4, _0x5876c8;
                } catch (_0x250965) {
                    return 0x0;
                }
            }, this['readString'] = function() {
                var _0x34e548 = this['readUInt16'](),
                    _0x353c43 = '',
                    _0x9e282d;
                for (var _0x2b0d59 = 0x0; _0x2b0d59 < _0x34e548; _0x2b0d59++) {
                    _0x9e282d = this['readUInt8']();
                    if (_0x2b0d59 != _0x34e548 - 0x1) _0x353c43 += String['fromCharCode'](_0x9e282d);
                }
                return _0x187733(_0x353c43);
            }, this['readMsgReaderBitsGroup'] = function() {}, this['readBitGroup'] = function() {
                return new _0x467c1c(this);
            };
        }

        function _0x278eb3(_0x294061) {
            this['len'] = 0x0, this['dataView'] = new DataView(new ArrayBuffer(_0x294061)), this['writeUInt8'] = function(_0x84c28f) {
                this['dataView']['setUint8'](this['len'], _0x84c28f), this['len'] += 0x1;
            }, this['writeUInt16'] = function(_0x18e723) {
                this['dataView']['setUint16'](this['len'], _0x18e723, ![]), this['len'] += 0x2;
            }, this['writeInt16'] = function(_0xa2c1af) {
                this['dataView']['setInt16'](this['len'], _0xa2c1af, ![]), this['len'] += 0x2;
            }, this['writeUInt32'] = function(_0x42f094) {
                this['dataView']['setUint32'](this['len'], _0x42f094, ![]), this['len'] += 0x4;
            }, this['readUInt8'] = function() {
                var _0x2c741f = this['dataView']['getUint8'](0x0);
                return _0x2c741f;
            }, this['writeString'] = function(_0x2d38bd) {
                _0x2d38bd = _0x4eaafb(_0x2d38bd), len = _0x2d38bd['length'], this['writeUInt16'](_0x2d38bd['length']);
                for (var _0x428b37 = 0x0; _0x428b37 < len; _0x428b37++) {
                    this['writeUInt8'](_0x2d38bd['charCodeAt'](_0x428b37));
                }
            };
        }

        function _0x467c1c(_0xd4fc1b) {
            this['bytesArray'] = new Uint8Array(0x14), this['bytesLen'] = 0x0, this['rBitIndex'] = 0x1, this['rByteIndex'] = 0x0, this['getBool'] = function() {
                var _0x4a2a14 = this['bytesArray'][this['rByteIndex']],
                    _0x60877d = _0x446a79(_0x4a2a14, this['rBitIndex']) > 0x0;
                return this['rBitIndex'] += 0x1, this['rBitIndex'] > 0x7 && (this['rBitIndex'] = 0x1, this['rByteIndex'] += 0x1), _0x60877d;
            }, this['getInt0to3'] = function() {
                return this['getIntWithXBits'](0x2);
            }, this['getIntWithXBits'] = function(_0x5c73c7) {
                var _0x41f759 = 0x0;
                for (var _0x4d62a6 = 0x0; _0x4d62a6 < _0x5c73c7; _0x4d62a6++) {
                    var _0x5d8bd9 = this['getBool']();
                    _0x41f759 = _0x3cb51b(_0x41f759, _0x4d62a6, _0x5d8bd9);
                }
                return _0x41f759;
            }, this['byteToStr'] = function(_0x4fc2e5) {
                var _0xd7ca31 = '';
                for (var _0x591080 = 0x0; _0x591080 < 0x8; _0x591080++) _0xd7ca31 += _0x446a79(_0x4fc2e5, _0x591080) > 0x0 ? '1' : '0';
                return _0xd7ca31;
            };
            var _0x5c344e = !![];
            do {
                var _0x42cb0e = _0xd4fc1b['readUInt8']();
                this['bytesArray'][this['bytesLen']++] = _0x42cb0e, _0x5c344e = _0x446a79(_0x42cb0e, 0x0) > 0x0;
            } while (_0x5c344e);
        }
        _0x16040f['prototype'] = {
            'strokeW': 0x1,
            'strokeColor': '#000000',
            'multiLine': ![],
            'alpha': 0x1,
            '_text': '',
            '_color': '#000000',
            'x': 0x0,
            'y': 0x0,
            '_fntSize': 0x10,
            '_canvas': null,
            '_ctx': null,
            '_dirty': ![],
            'renderScale': 1.5,
            '_scale': 0x1,
            'width': 0x0,
            'height': 0x0,
            'setColor': function(_0x481976) {
                this['_color'] != _0x481976 && (this['_color'] = _0x481976, this['_dirty'] = !![]);
            },
            'setFontSize': function(_0x413130) {
                this['_fntSize'] != _0x413130 && (this['_fntSize'] = _0x413130, this['_dirty'] = !![]);
            },
            'setStroke': function(_0xe7f3f0) {
                _0xe7f3f0 != this['strokeW'] && (this['strokeW'] = _0xe7f3f0, this['_dirty'] = !![]);
            },
            'setText': function(_0x20f08d) {
                _0x20f08d != this['_text'] && (this['_text'] = _0x20f08d, this['_dirty'] = !![]);
            },
            'getRenderedCanvas': function() {
                null == this['_canvas'] && (this['_canvas'] = document['createElement']('canvas'), this['_ctx'] = this['_canvas']['getContext']('2d'));
                if (this['_dirty']) {
                    this['_dirty'] = ![];
                    var _0x140fad = this['_canvas'],
                        _0x24c1fe = this['_ctx'],
                        _0x16d51b = this['_text'],
                        _0x242728 = this['_scale'],
                        _0x272d0c = this['_fntSize'] * this['renderScale'],
                        _0x46e2fa = _0x272d0c + 'px Arial';
                    _0x24c1fe['font'] = _0x46e2fa;
                    var _0x220e29 = ~~(0.2 * _0x272d0c);
                    _0x24c1fe['font'] = _0x46e2fa;
                    if (this['multiLine']) {
                        var _0x43cc89 = _0x24c1fe['measureText']('M')['width'] * 1.2,
                            _0x3c2962 = _0x16d51b['split']('\x0a'),
                            _0x3e3a66 = 0x0;
                        for (var _0x44492e = 0x0; _0x44492e < _0x3c2962['length']; ++_0x44492e) {
                            _0x3e3a66 = Math['max'](_0x3e3a66, _0x24c1fe['measureText'](_0x3c2962[_0x44492e])['width']);
                        }
                        this['width'] = (_0x3e3a66 + 0x6) * _0x242728, this['height'] = (_0x43cc89 * _0x3c2962['length'] + _0x220e29) * _0x242728, _0x140fad['width'] = this['width'], _0x140fad['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x24c1fe['globalAlpha'] = this['alpha'], _0x24c1fe['font'] = _0x46e2fa;
                        this['strokeW'] > 0x0 && (_0x24c1fe['shadowOffsetX'] = this['strokeW'], _0x24c1fe['shadowOffsetY'] = this['strokeW'], _0x24c1fe['shadowColor'] = this['strokeColor']);
                        _0x24c1fe['fillStyle'] = this['_color'], _0x24c1fe['textAlign'] = 'center';
                        var _0x1ec3d9 = 0x3 + _0x140fad['width'] / 0x2,
                            _0x58a666 = _0x272d0c - _0x220e29 / 0x2;
                        for (var _0x44492e = 0x0; _0x44492e < _0x3c2962['length']; ++_0x44492e) {
                            _0x24c1fe['fillText'](_0x3c2962[_0x44492e], _0x1ec3d9, _0x58a666), _0x58a666 += _0x43cc89;
                        }
                    } else this['width'] = (_0x24c1fe['measureText'](_0x16d51b)['width'] + 0x6) * _0x242728, this['height'] = (_0x272d0c + _0x220e29) * _0x242728, _0x140fad['width'] = this['width'], _0x140fad['height'] = this['height'], this['width'] /= this['renderScale'], this['height'] /= this['renderScale'], _0x24c1fe['globalAlpha'] = this['alpha'], _0x24c1fe['font'] = _0x46e2fa, this['strokeW'] > 0x0 && (_0x24c1fe['shadowOffsetX'] = this['strokeW'], _0x24c1fe['shadowOffsetY'] = this['strokeW'], _0x24c1fe['shadowColor'] = this['strokeColor']), _0x24c1fe['fillStyle'] = this['_color'], _0x24c1fe['fillText'](_0x16d51b, 0x3, _0x272d0c - _0x220e29 / 0x2);
                }
                return this['_canvas'];
            },
            'draw': function() {
                if (this['_text']) {
                    var _0x1a2676 = this['renderScale'];
                    this['updateColor']();
                    var _0x1f6ba9 = this['getRenderedCanvas'](),
                        _0x4c0b1f = _0x1f6ba9['width'] / _0x1a2676,
                        _0x95e227 = _0x1f6ba9['height'] / _0x1a2676;
                    this['setPos'](_0x4c0b1f, _0x95e227), _0x4597c4['drawImage'](_0x1f6ba9, this['x'] - _0x4c0b1f / 0x2, this['y'] - _0x95e227 / 0x2, _0x4c0b1f, _0x95e227);
                }
            },
            'setPos': function(_0x42e01b, _0x283d05) {},
            'updateColor': function() {}
        };

        function _0x16040f(_0x49be98, _0x3c0203) {
            _0x49be98 && (this['_fntSize'] = _0x49be98), _0x3c0203 && (this['_color'] = _0x3c0203);
        }
        var _0x213b8f = [];
        _0x213b8f['push'](['1', '2', '3', '4', '5', '6', '7', '8']), _0x213b8f['push'](['q', 'e', 'r', 't', 'y', 'u', 'i', 'o']), _0x213b8f['push'](['a', 'd', 'f', 'g', 'h', 'j', 'k', 'l']), _0x213b8f['push'](['z', 'x', 'c', 'v', 'b', 'n', 'm', ',']);
        const _0x59c9aa = [];

        function _0x410de4(_0xa9371d, _0xa2087b, _0xfe0844, _0xf69ea7, _0x5d13d6, _0x2df1a8, _0x37ae79, _0x419488, _0x25b39a, _0x5097ac, _0x5790e9, _0x2e86e6) {
            this['x'] = _0xa9371d, this['y'] = _0xa2087b, this['w'] = _0xfe0844, this['h'] = _0xf69ea7, this['aniT'] = _0x5d13d6, this['species'] = _0x37ae79, this['subSpecies'] = _0x419488, this['premiumSkinType'] = _0x25b39a, this['teamID'] = 0x0, this['btnHotkey'] = '0', this['imgSizeF'] = 0.5;
            const _0x52bae5 = !_0x2e86e6 && _0x37ae79 > 0x0;
            this['buttonTXT'] = new _0x16040f(0xa, _0x52bae5 ? 'gold' : 'white'), this['buttonTXT']['renderScale'] = 1.5, this['buttonTXT']['multiLine'] = !![], this['buttonTXT']['setText'](_0x3099ed(_0x5d13d6)['aniName']), this['isHighLighted'] = ![], this['biomeNum'] = _0x2df1a8;
            var _0x3902ed = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x5d13d6);
            _0x3902ed['animalType'] = _0x5d13d6, _0x3902ed['animalSpecies'] = this['species'], _0x3902ed['skinThemeID'] = _0x5790e9, _0x3902ed['animalSubSpecies'] = this['subSpecies'], _0x3902ed['animalPremiumSkin'] = this['premiumSkinType'], _0x3902ed['mopeSeasonID'] = _0x5097ac, _0x3902ed['curBiome'] = _0x2df1a8;
            if (_0x3902ed['animalPremiumSkin'] > 0x0) _0x3902ed['setSparkleInterval'](_0x4ec95c(0x5, 0xa), _0x4ec95c(0x2, 0x3));
            _0x3902ed['flag_isDevMode'] = _0x5420c3, _0x3902ed['lava'] = 0x64;
            var _0x13bb48 = '' + _0x3902ed['animalInfo']()['aniName'];
            _0x13bb48 = _0x13bb48['split'](' ')['join']('\x0a'), this['buttonTXT']['setText'](_0x13bb48), _0x3902ed['x'] = _0x3902ed['ox'] = _0x3902ed['nx'] = 0x0, _0x3902ed['y'] = _0x3902ed['oy'] = _0x3902ed['ny'] = 0x0, _0x3902ed['rad'] = _0x3902ed['oRad'] = _0x3902ed['nRad'] = 0x1e, _0x3902ed['alwaysPlainOutline'] = !![], this['drawnAniObj'] = _0x3902ed, this['buttonScaleF'] = 0x1, this['setHotKey'] = function(_0x11aba0) {
                _0x11aba0 && (this['btnHotkey'] = _0x11aba0, this['hotkey'] = new _0x16040f(0xa, 'white'), this['hotkey']['renderScale'] = 1.5, this['hotkey']['multiLine'] = !![], this['hotkey']['setText'](this['btnHotkey']['toUpperCase']()));
            }, this['setMouseHover'] = function(_0x5c61cb) {
                this['drawnAniObj']['isMouseHovering'] = _0x5c61cb;
            }, this['testPosHitsButton'] = function(_0x1f4310, _0x5b1603) {
                if (_0x1f4310 < this['x'] - this['w'] / 0x2 || _0x1f4310 > this['x'] + this['w'] / 0x2) return ![];
                if (_0x5b1603 < this['y'] - this['w'] / 0x2 || _0x5b1603 > this['y'] + this['w'] / 0x2) return ![];
                else return !![];
            }, (this['setPosAndSize'] = function(_0x30cc4a, _0x8bc21d, _0x27e5c7, _0x3eb63d, _0x143760, _0x1c11bf) {
                this['w'] = _0x27e5c7, this['h'] = _0x3eb63d, this['x'] = _0x30cc4a + _0x27e5c7 * (0.5 - _0x143760), this['y'] = _0x8bc21d + _0x3eb63d * (0.5 - _0x1c11bf);
            }, this['draw'] = function(_0xd9f498) {
                _0x4597c4['save'](), _0x4597c4['translate'](this['x'], this['y']), _0x4597c4['scale'](this['buttonScaleF'], this['buttonScaleF']);
                var _0x580171 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] = 0.5;
                switch (this['biomeNum']) {
                    case 0x0:
                        _0x4597c4['fillStyle'] = '#26A73A';
                        break;
                    case 0x1:
                        _0x4597c4['fillStyle'] = '#1C91B8';
                        break;
                    case 0x2:
                        _0x4597c4['fillStyle'] = '#B2B2B2';
                        break;
                    case 0x3:
                        _0x4597c4['fillStyle'] = '#ff6000';
                        break;
                    case 0x4:
                        _0x4597c4['fillStyle'] = '#9F8641';
                        break;
                    case 0x5:
                        _0x4597c4['fillStyle'] = '#00db22';
                        break;
                }
                _0x4597c4['fillRect'](0x0 - this['w'] / 0x2, 0x0 - this['h'] / 0x2, this['w'], this['h']);
                this['isHighLighted'] && (_0x4597c4['fillStyle'] = 'white', _0x4597c4['globalAlpha'] = _0x580171 * 0.2, _0x4597c4['fillRect'](0x0 - this['w'] / 0x2, 0x0 - this['h'] / 0x2, this['w'], this['h']));
                _0x4597c4['globalAlpha'] = _0x580171;
                var _0x31efe8 = this['w'] * 0.225;
                this['drawnAniObj']['nRad'] = this['drawnAniObj']['rad'] = _0x31efe8, _0x4597c4['save'](), _0x4597c4['scale'](0x2, 0x2), this['drawnAniObj']['teamID'] = _0xf671c1, this['drawnAniObj']['draw'](), _0x4597c4['restore']();
                var _0x10b256 = this['imgSizeF'] / 0.5,
                    _0x5a1f14 = 0xa + 0xa * _0x10b256;
                _0x31efe8 > 0xf && (this['buttonTXT']['setFontSize'](_0x5a1f14 * _0x6039c), this['buttonTXT']['x'] = 0x0, this['buttonTXT']['y'] = -this['h'] * 0.5 * 0.75, this['buttonTXT']['y'] += this['h'] * 0.1, this['buttonTXT']['draw']()), this['hotkey'] && !_0x3e1b12 && (_0x4597c4['save'](), !(_0x3aa021 == 0x2) && (_0x4597c4['globalAlpha'] = 0.3, this['hotkey']['setFontSize'](0x10 * _0x6039c), this['hotkey']['x'] = -this['w'] / 0x2 + 0xa * _0x6039c, this['hotkey']['y'] = this['h'] / 0x2 - 0xc * _0x6039c, this['hotkey']['draw']()), _0x4597c4['restore']()), _0x4597c4['restore']();
            });
        }
        const _0x7ef9a4 = async ({
            animalType: _0x92503d,
            animalSpecies: _0x1b3ba2,
            animalSubSpecies: _0x1c11e,
            premiumSkinType: _0x4520f6,
            mopeSeasonID: _0x14b1a9,
            skinThemeID: _0x46c2c0,
            biomeNum: _0x41f612
        }) => {
            const _0x10e7dd = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x92503d);
            return _0x10e7dd['animalType'] = _0x92503d, _0x10e7dd['animalSpecies'] = _0x1b3ba2, _0x10e7dd['animalSubSpecies'] = _0x1c11e, _0x10e7dd['animalPremiumSkin'] = _0x4520f6, _0x10e7dd['mopeSeasonID'] = _0x14b1a9, _0x10e7dd['skinThemeID'] = _0x46c2c0, _0x10e7dd['curBiome'] = _0x41f612, _0x10e7dd['getImageData']();
        };
        var _0x83b283 = 0x1;
        const _0x566fc8 = async function(_0xc75262, _0x3e0f0f) {
            _0x59c9aa['length'] = 0x0;
            var _0x37c435 = _0x3e0f0f == 0x1,
                _0x1ad7f2 = _0xc75262['readUInt8'](),
                _0x17a329 = _0xc75262['readUInt8'](),
                _0x2fbb6d = _0xc75262['readUInt8'](),
                _0xd47bdb = _0xc75262['readUInt8']();
            _0x33301f = !![], _0x83b283 = _0x2fbb6d, _0x3076ab = 0x0, _0x21e459 = [], _0xa486d9 = _0x37c435, _0x2a9d37 = +new Date(), _0x4bfcc2 = _0x2a9d37 + 0x3e8 * _0x17a329;
            const _0x10b18a = [];
            for (var _0x57b407 = 0x0; _0x57b407 < _0xd47bdb; _0x57b407++) {
                var _0x43aab9 = _0xc75262['readUInt8'](),
                    _0xb3f90d = _0xc75262['readUInt8'](),
                    _0x2b453d = _0xc75262['readUInt8'](),
                    _0xe8c3bd = _0xc75262['readUInt8'](),
                    _0x43c74c = _0xc75262['readUInt8'](),
                    _0x10a9bc = _0xc75262['readUInt8'](),
                    _0x380e91 = _0xc75262['readUInt8'](),
                    _0x5e8013 = _0xc75262['readUInt8']() == 0x1,
                    _0xf1c1cc = _0xc75262['readString'](),
                    _0x221b3f = _0x57b407,
                    _0x14bc82 = _0xf1c1cc != null && _0xf1c1cc !== 'null',
                    _0x3a184a = 0x0,
                    _0x167e25 = null;
                if (_0xf1c1cc != null) {
                    if (_0x100ed7['shop'] != null && _0x100ed7['shop']['allItems'] != null) {
                        var _0x278ff9 = _0x100ed7['shop']['allItems']['' + _0xf1c1cc];
                        _0x278ff9 && (_0x167e25 = _0x278ff9, _0x3a184a = _0x278ff9['price'] > 0x0 ? _0x278ff9['price'] : 0x0);
                    }
                }
                _0x5e8013 = _0x5e8013 || _0x3a184a == 0x0;
                const _0x4ff9dd = {
                        'abilities': [],
                        'anAniT': _0xb3f90d,
                        'biomeNum': _0x2b453d,
                        'species': _0xe8c3bd,
                        'subSpecies': _0x43c74c,
                        'premiumSkinType': _0x10a9bc,
                        'season': _0x1ad7f2,
                        'skinThemeID': _0x380e91,
                        'isBought': _0x5e8013,
                        'itemId': _0xf1c1cc,
                        'coinsPrice': _0x3a184a,
                        'itemIndex': _0x221b3f,
                        'choiceIndex': _0x221b3f,
                        'shopItem': _0x167e25,
                        'isShopItem': _0x14bc82,
                        'forLvl': _0x2fbb6d
                    },
                    _0xf24573 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0xb3f90d);
                _0xf24573['animalType'] = _0xb3f90d, _0xf24573['animalSpecies'] = _0xe8c3bd, _0xf24573['animalSubSpecies'] = _0x43c74c, _0xf24573['animalPremiumSkin'] = _0x10a9bc, _0xf24573['mopeSeasonID'] = _0x43aab9, _0xf24573['skinThemeID'] = _0x380e91, _0xf24573['curBiome'] = _0x2b453d, _0x4ff9dd['abilities'] = _0xf24573['getAbilityInfo'](), _0x4ff9dd['itemId'] = _0x5ddf8d['getClassForGameObjType'](_0x269668, _0xb3f90d)['name'];
                if (_0xf24573['animalInfo']) {
                    const _0x3bce2f = _0xf24573['animalInfo']();
                    _0x4ff9dd['itemId'] = _0x3bce2f['aniName'], _0x4ff9dd['name'] = _0x3bce2f['aniName'];
                }
                _0x4ff9dd['shopImage'] = _0xf24573['getUpgradeImagePath'](), _0x59c9aa['push'](_0x4ff9dd);
            }
        };
        var _0x3094ac = document['getElementById']('moneyRectBottomWrap');
        const _0x36384d = function() {
                if (!_0x3e1b12) {}
            },
            _0xdec993 = function() {},
            _0x3a7175 = function() {};
        var _0x1b96a3 = ![];
        const _0x1090a3 = function(_0x15aa5a, _0x23094a, _0x30f0ca, _0x209665) {
                var _0x4c91ab = 0x64,
                    _0x397182 = 0.5;
                window['matchMedia']('(orientation: portrait)')['matches'] && (_0x1b96a3 = ![]);
                window['matchMedia']('(orientation: landscape)')['matches'] && (_0x1b96a3 = !![]);
                var _0x4cb00b = window['innerWidth'] / 0x2;
                _0x4c91ab = Math['max'](0x50, _0x4cb00b / 0x7), _0x4c91ab = Math['min'](0x64, _0x4c91ab);
                var _0x1ab61d = 0x7;
                _0x3e1b12 && !_0x1b96a3 && (_0x1ab61d = 0x4);
                var _0x15a7b = _0x4c91ab * _0x6039c,
                    _0x2eee89 = 0xa,
                    _0x91f96d = _0x15a7b + 0x14,
                    _0x50f98b = Math['max'](0x0, _0x15aa5a['length']);
                if (_0x15aa5a['length'] > _0x1ab61d + 0x1) _0x50f98b = Math['min'](_0x1ab61d, _0x50f98b);
                var _0x4ce469 = _0x50f98b * (_0x2eee89 + _0x15a7b) + (_0x91f96d - _0x15a7b),
                    _0x4e7fce = _0x4921b9 / 0x2 - _0x4ce469 / 0x2,
                    _0x346908 = _0x23094a,
                    _0x2743cd = _0x15a7b * 1.15,
                    _0x34f4dd = _0x4921b9 / 0x2;
                _0x4ce469 = _0x50f98b * _0x2743cd, _0x4e7fce = _0x34f4dd - _0x4ce469 / 0x2 + _0x2743cd / 0x2;
                var _0x5bec2a = _0x15aa5a['length'],
                    _0x2bf856 = 0x0;
                for (var _0x342bfd = 0x0; _0x342bfd < _0x5bec2a; _0x342bfd++) {
                    var _0x20c826 = _0x15aa5a[_0x342bfd];
                    if (_0x342bfd > 0x0 && _0x5bec2a > _0x1ab61d + 0x1) {
                        if (_0x342bfd % _0x1ab61d == 0x0) {
                            _0x30f0ca++, _0x2bf856 = 0x0, _0x346908 += _0x2743cd * 1.15;
                            var _0x452784 = _0x5bec2a - _0x342bfd;
                            if (_0x452784 < _0x1ab61d) _0x50f98b = _0x452784;
                            else _0x50f98b = _0x1ab61d;
                            _0x4ce469 = _0x50f98b * _0x2743cd, _0x4e7fce = _0x4921b9 / 0x2 - _0x4ce469 / 0x2 + _0x2743cd / 0x2;
                        }
                    }
                    if (_0x209665 && _0x342bfd == 0x0) _0x20c826['buttonScaleF'] = 1.2;
                    else _0x20c826['buttonScaleF'] = 0x1;
                    _0x20c826['w'] = _0x15a7b, _0x20c826['h'] = _0x15a7b, _0x20c826['x'] = _0x4e7fce, _0x20c826['y'] = _0x346908, _0x4e7fce += _0x2743cd / 0x2 * _0x20c826['buttonScaleF'] + _0x2743cd / 0x2;
                    if (_0x30f0ca < _0x213b8f['length']) _0x20c826['setHotKey'](_0x213b8f[_0x30f0ca - 0x1][_0x2bf856]['toUpperCase']());
                    _0x2bf856++;
                }
                _0x4597c4['globalAlpha'] = _0x3076ab;
                for (var _0x342bfd = 0x0; _0x342bfd < _0x15aa5a['length']; _0x342bfd++) {
                    var _0x20c826 = _0x15aa5a[_0x342bfd];
                    _0x20c826['imgSizeF'] = _0x397182, _0x20c826['draw']();
                }
                return _0x346908;
            },
            _0x174faf = function(_0x3bb9ec) {
                if (_0x3bb9ec['isBought'] || !_0x33cfef) {
                    const _0x46782d = _0x3bb9ec['hasOwnProperty']('choiceIndex') ? _0x3bb9ec['choiceIndex'] : _0x21e459['indexOf'](_0x3bb9ec);
                    _0x37093e({
                        'choiceIndex': _0x46782d
                    }), _0xa486d9 && (_0x138081 = ![]), _0x39c94a();
                } else {
                    var _0x2e7037 = _0x100ed7['shop']['allItems']['' + _0x3bb9ec['itemId']];
                    if (_0x2e7037) {
                        _0x2e7037['itemIndex'] = _0x3bb9ec['itemIndex'], _0x100ed7['upgradeMenu_selectedItem'] = _0x2e7037, _0x100ed7['upgradeMenu_callback'] = function() {
                            _0x100ed7['buyConfirmationOverlay'](_0x100ed7['upgradeMenu_selectedItem']);
                        };
                        if (!_0x24d734) _0x100ed7['actionBtn'] = 'login';
                        _0x145593();
                    }
                }
            };
        _0x11d99b['prototype'] = {
            'x': 0x0,
            'y': 0x0,
            'w': 0x0,
            'h': 0x0,
            'visible': !![],
            'buttonTXT': null,
            'pressed': ![],
            'pressedTouchID': -0x1,
            'touchEnabled': !![],
            'testPosHitsButton': function(_0x2ce8f6, _0x5a7eb0) {
                if (_0x2ce8f6 < this['x'] - this['w'] / 0x2 || _0x2ce8f6 > this['x'] + this['w'] / 0x2) return ![];
                if (_0x5a7eb0 < this['y'] - this['w'] / 0x2 || _0x5a7eb0 > this['y'] + this['w'] / 0x2) return ![];
                else return !![];
            },
            'setPosAndSize': function(_0x35d03a, _0x91023c, _0x437c17, _0x27c1a0, _0x25d442, _0x5b83b0) {
                this['w'] = _0x437c17, this['h'] = _0x27c1a0, this['x'] = _0x35d03a + _0x437c17 * (0.5 - _0x25d442), this['y'] = _0x91023c + _0x27c1a0 * (0.5 - _0x5b83b0);
            },
            'onButtonTouchStart': function() {},
            'onButtonTouchEnd': function() {
                console['log']('button touch ended!');
            }
        };

        function _0x11d99b(_0x522e95) {
            this['buttonTXT'] = new _0x16040f(0xa, 'white'), this['buttonTXT']['renderScale'] = 1.5, this['buttonTXT']['setText'](_0x522e95), this['draw'] = function() {
                if (!this['visible']) return;
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['fillStyle'] = this['pressed'] ? 'white' : '#000000', _0x4597c4['fillRect'](this['x'] - this['w'] / 0x2, this['y'] - this['h'] / 0x2, this['w'], this['h']), _0x4597c4['globalAlpha'] = 0.2, this['buttonTXT']['setFontSize'](0x19 * _0x6039c), this['buttonTXT']['x'] = this['x'], this['buttonTXT']['y'] = this['y'], this['buttonTXT']['draw'](), _0x4597c4['restore']();
            };
        }
        var _0x5b5503 = function() {
            this['buttonTXT'] = new _0x16040f(0xa, 'white'), this['buttonTXT']['renderScale'] = 1.5, this['isMiniRechargeBut'] = ![], this['abil_Type'] = 0x0, this['abil_possible'] = this['abil_usable'] = this['abil_recharging'] = this['abil_active'] = ![], (this['abil_rechargeEndT'] = 0x0, this['abil_rechargeTotalT'] = 0x0), (this['abil_rechargeBarA'] = 0x0, this['abil_avilableA'] = 0x0), this['drawAbilityImage'] = function(_0x2e085a, _0xac1fbd) {
                var _0x57c803 = _0x4b4e0c[_0x59b0bc],
                    _0x1b21b8 = '';
                _0x57c803 ? _0x1b21b8 = 'assets/s/' + _0x57c803['mopeSeasonID'] : _0x1b21b8 = 'assets/s/' + _0x5149df;
                if (this['abil_Type'] == _0x458aed || this['abil_Type'] == _0x53974f || this['abil_Type'] == _0x563868) {
                    var _0x3fc153 = Math['trunc'](_0x476319 / 0x78) % 0x5,
                        _0x3ed1f4 = _0x2e085a['speciesType'],
                        _0x636f6e = _0x5e7a48(_0x1b21b8 + '/gameobj/18/' + _0x3ed1f4 + '/' + _0x3fc153 + '.png');
                    if (_0x636f6e) {
                        var _0x5901f8 = this['w'] * 0.4,
                            _0x1dd393 = 0x0;
                        if (_0x4b4e0c[_0x59b0bc]) {
                            var _0x103b82 = _0x4b4e0c[_0x59b0bc]['spawnTime'],
                                _0x3a9a52 = (_0x476319 - _0x103b82) / 0x3e8;
                            _0x1dd393 = _0x5b9e97(_0x3a9a52, 0x1, 0xa, 0x2);
                        }
                        _0x4597c4['globalAlpha'] = _0xac1fbd * this['abil_avilableA'], _0x4597c4['drawImage'](_0x636f6e, -_0x5901f8, -_0x5901f8 * 0.85 - _0x1dd393, 0x2 * _0x5901f8, 0x2 * _0x5901f8 + _0x1dd393);
                    }
                } else {
                    var _0x4d72dc = _0x2e085a['abilImg'];
                    if (_0x57c803 && this['abil_Type'] == _0x12376c) _0x4d72dc = 'assets/s/' + _0x57c803['mopeSeasonID'] + '/' + this['getDiveImage'](_0x57c803);
                    else _0x4d72dc = _0x1b21b8 + '/' + _0x4d72dc;
                    if (_0x4d72dc['indexOf']('assets/') > -0x1) {
                        var _0x636f6e = _0x5e7a48(_0x4d72dc);
                        if (_0x636f6e) {
                            var _0x5901f8 = this['w'] * 0.4,
                                _0x45b89e = _0x5901f8,
                                _0x2e8574 = _0x5901f8;
                            _0x4597c4['globalAlpha'] = _0xac1fbd * this['abil_avilableA'];
                            if (_0x636f6e['height'] == 0x258) _0x2e8574 = _0x5901f8 * 1.1;
                            _0x4597c4['drawImage'](_0x636f6e, -_0x45b89e, -_0x2e8574 * 0.85, 0x2 * _0x45b89e, 0x2 * _0x2e8574);
                        }
                    }
                }
            }, this['getDiveImage'] = function(_0x40566f) {
                var _0x3ae1b6 = 'img/ability_dive.png';
                if (_0x40566f && this['abil_Type'] == _0x12376c) {
                    if (_0x40566f['flag_inLava'] && !_0x40566f['flag_inWater']) _0x3ae1b6 = 'img/ability_dive_lava.png';
                    else _0x40566f['flag_eff_isInMud'] && !_0x40566f['flag_inWater'] && (_0x3ae1b6 = 'img/ability_diveMud.png');
                }
                return _0x3ae1b6;
            }, this['draw'] = function() {
                if (!this['visible']) return;
                this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1, this['abil_avilableA'] += ((this['abil_usable'] || this['abil_active'] ? 0x1 : 0.2) - this['abil_avilableA']) * 0.1;
                this['isMiniRechargeBut'] && (this['h'] = this['w'] * 0.6);
                if (this['abil_possible']) {
                    var _0x4b60ba = 0x1;
                    _0x4597c4['save']();
                    if (this['isMiniRechargeBut']) this['h'] = this['w'] * 0.8, _0x4597c4['translate'](this['x'], this['y'] + this['h'] * 0.36), _0x4597c4['scale'](0.65, 0.65);
                    else _0x4597c4['translate'](this['x'], this['y']);
                    var _0x5e8aae = 0.2 * this['abil_avilableA'],
                        _0x4deb8b = this['pressed'] || _0x29ee17 ? '#CECECE' : '#000000';
                    this['abil_active'] && (_0x4deb8b = _0x4155ab, _0x5e8aae = 0.7);
                    _0x4597c4['fillStyle'] = _0x4deb8b, _0x4597c4['globalAlpha'] = _0x4b60ba * _0x5e8aae, _0x4597c4['fillRect'](0x0 - this['w'] / 0x2, 0x0 - this['h'] / 0x2, this['w'], this['h']);
                    var _0x5c2b56 = null,
                        _0x221eda = _0x4b4e0c[_0x59b0bc];
                    !_0x221eda && (_0x221eda = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x4e734d), _0x221eda['animalType'] = _0x4e734d, _0x221eda['animalSpecies'] = _0x749edf, _0x221eda['animalSubSpecies'] = _0x4d8663);
                    if (_0x221eda && this['abil_Type'] != _0x12376c) _0x5c2b56 = _0x221eda['getAbilityInfo'](this['abil_Type']);
                    else _0x5c2b56 = _0x51da37(this['abil_Type']);
                    this['drawAbilityImage'](_0x5c2b56, _0x4b60ba), this['buttonTXT']['setText'](_0x5c2b56['abilName']), this['buttonTXT']['multiLine'] = !![], this['buttonTXT']['setFontSize'](0x19 * _0x6039c), this['buttonTXT']['x'] = 0x0, this['buttonTXT']['y'] = -this['w'] * 0.35, this['buttonTXT']['draw']();
                    var _0x298cae = Math['max'](0x0, this['abil_rechargeEndT'] - _0x476319);
                    this['abil_rechargeBarA'] += ((this['abil_recharging'] ? 0x1 : 0x0) - this['abil_rechargeBarA']) * 0.1;
                    if (this['abil_rechargeBarA'] > 0.01) {
                        _0x4597c4['globalAlpha'] = _0x4b60ba * this['abil_rechargeBarA'] * 0.35, _0x4597c4['fillStyle'] = '#000000';
                        var _0x437b30 = 0x0,
                            _0x1bc9f8 = 0x0,
                            _0x4af4aa = this['w'] * 0.8,
                            _0x3693d5 = this['h'] * 0.5;
                        _0x4597c4['fillRect'](_0x437b30 - _0x4af4aa / 0x2, _0x1bc9f8 - _0x3693d5 / 0x2, _0x4af4aa, _0x3693d5), _0x4597c4['globalAlpha'] = _0x4b60ba * this['abil_rechargeBarA'] * 0x1, _0x4597c4['fillStyle'] = '#F3C553', _0x4597c4['fillRect'](_0x437b30 - _0x4af4aa / 0x2, _0x1bc9f8 - _0x3693d5 / 0x2, _0x4af4aa * (_0x298cae / this['abil_rechargeTotalT']), _0x3693d5);
                    }
                    _0x4597c4['restore']();
                }
            };
        };
        _0x5b5503['prototype'] = Object['create'](_0x11d99b['prototype']);
        const _0xd52f5c = 0x1,
            _0x479da8 = 0x2,
            _0x209111 = 0x3,
            _0x16b74c = 0x4,
            _0x3fac9b = 0x5,
            _0x34cfeb = 0x6,
            _0x54ef35 = 0x7,
            _0xf86c4f = 0x8,
            _0x5d8f36 = 0x9,
            _0x392d04 = 0xa,
            _0xb868e3 = 0xb,
            _0x14e25c = 0xc,
            _0x3f5ff4 = 0xd,
            _0x493c3f = 0xe,
            _0xf23881 = 0xf,
            _0x2780e8 = 0x10,
            _0x5a1bd1 = 0x11,
            _0x537473 = 0x12,
            _0x2ef5f1 = 0x13,
            _0xc7dc27 = 0x14,
            _0x50c8ab = 0x15,
            _0xc78d6 = 0x16,
            _0x578467 = 0x17,
            _0x57f72d = 0x18,
            _0x7a42c9 = 0x19,
            _0x68ff0d = 0x1a,
            _0x3493ec = 0x1b,
            _0x504b2b = 0x1c,
            _0x406ca6 = 0x1d,
            _0x1b5202 = 0x1e,
            _0x5237b7 = 0xff,
            _0x4a368d = 0x33,
            _0x5d8c3e = 0x34,
            _0x468f3d = 0x35,
            _0x4679a5 = 0x36,
            _0x1472ae = 0x37,
            _0x4ba8f2 = 0x38,
            _0x377234 = 0x3a,
            _0x29b4f4 = 0x3b,
            _0x1f7727 = 0x3c,
            _0x2d277f = 0x3d,
            _0x2fabc4 = 0x3e,
            _0x35056e = 0x3f,
            _0x5e9c80 = 0x40,
            _0x5d7abd = 0x41,
            _0x3297be = 0x42,
            _0x5f75dd = 0x43,
            _0x27bd74 = 0x44,
            _0x2c5dd0 = 0x45,
            _0x4312be = 0x46,
            _0x214aef = 0x47,
            _0x4bc5d7 = 0x48,
            _0x335df1 = 0x51,
            _0x4317f2 = 0x52,
            _0x56e541 = 0x53,
            _0x1e20b8 = 0x54,
            _0x205f5b = 0x64,
            _0x53e60f = 0x65,
            _0x477a85 = 0x66,
            _0x27a8ed = 0x67,
            _0x4d9627 = 0x68,
            _0x24577a = 0x69,
            _0x1f1390 = 0x6a,
            _0xa2bc7c = 0x6b,
            _0x196aea = 0x6c,
            _0x35967a = 0x6d,
            _0x3cab1f = 0x6e,
            _0x4a4cb8 = 0x6f,
            _0x171fb3 = 0x70,
            _0x5ca18e = 0x71,
            _0x4ad44f = 0x72;

        function _0x464805(_0x3ef936) {
            _0x3ef936 = _0x3ef936['split']('+')['join'](' ');
            var _0x2158bf = {},
                _0xcd1696, _0x564a34 = /[?&]?([^=]+)=([^&]*)/g;
            while (_0xcd1696 = _0x564a34['exec'](_0x3ef936)) {
                _0x2158bf[decodeURIComponent(_0xcd1696[0x1])] = decodeURIComponent(_0xcd1696[0x2]);
            }
            return _0x2158bf;
        }
        var _0x579692 = 0x3e8 / 0x78;
        let _0x54307c = !![];
        var _0x39bdef = _0x464805(document['location']['search']),
            _0x1df4f0 = _0x39bdef['videoson'] > 0x0,
            _0x39bdef = _0x464805(document['location']['search']),
            _0x358dfa = {
                'isAndroid': function() {
                    return navigator['userAgent']['match'](/Android/i);
                },
                'isBlackBerry': function() {
                    return navigator['userAgent']['match'](/BlackBerry/i);
                },
                'isIOS': function() {
                    return navigator['userAgent']['match'](/iPhone|iPad|iPod/i);
                },
                'isOpera': function() {
                    return navigator['userAgent']['match'](/Opera Mini/i);
                },
                'isWindows': function() {
                    return navigator['userAgent']['match'](/IEMobile/i) || navigator['userAgent']['match'](/WPDesktop/i);
                },
                'isAny': function() {
                    return _0x358dfa['isAndroid']() || _0x358dfa['isBlackBerry']() || _0x358dfa['isIOS']() || _0x358dfa['isOpera']() || _0x358dfa['isWindows']();
                }
            },
            _0x3e1b12 = _0x1dea4c() != null,
            _0x2e70ce = _0x3e1b12 && _0x358dfa['isIOS'](),
            _0x19c95e = _0x3e1b12 && !_0x2e70ce,
            _0x458dca = _0x358dfa['isAny']();
        _0x3e1b12 && (document['querySelector']('#discordLoginBtn')['style']['display'] = 'none', _0x19c95e && (document['querySelector']('#appleLoginBtn')['style']['display'] = 'none'));
        _0x3e1b12 && (document['querySelector']('#discordLoginBtn')['style']['display'] = 'none', _0x19c95e && (document['querySelector']('#appleLoginBtn')['style']['display'] = 'none'));
        var _0x55fcc3 = 0.175,
            _0x54048a = '#3FBA54',
            _0x3e4118 = '#3FBA54',
            _0x2601fc = '#f7f7f7',
            _0x39b6af = '#09992F',
            _0x3e467c = '#007ec0',
            _0x133e74 = 'white',
            _0x58a9eb = '#8a7908',
            _0x23eb4b = '#1aad41',
            _0x4bfbf6 = '#bf4f0b',
            _0x583917 = '#06912b',
            _0x2cdf77 = '#09992F',
            _0x32dc1c = '#8CCEF4',
            _0x41f624 = '#4E66E4',
            _0x1c0746 = '#ff6000',
            _0x472dd6 = '#4854a2',
            _0x316ca1 = _0x472dd6,
            _0x5cf340 = '#bfaf43',
            _0x2eb4fa = '#d6c348',
            _0x164cac = '#c8b745',
            _0x4c16db = '#F35F53',
            _0x221d3d = '#CF6259',
            _0x3e72ba = '#FF911E',
            _0x30b35e = '#C67019',
            _0x3bf6b2 = '#25b645',
            _0x2c9c06 = '#604729',
            _0x42a96b = '#8A681B',
            _0x514a86 = '#EF3C31',
            _0x4155ab = '#4AE05E',
            _0x2ae152 = '#8C9688',
            _0x331d9d = '#878053',
            _0x3d267b = '#328ca2',
            _0xf87e27 = 'rgba(50,140,162,0.5)',
            _0x54be55 = '#ff884c',
            _0x29a2c5 = '#007fa9',
            _0x51bcc4 = '#b0a13b',
            _0x133ce3 = !![],
            _0xd5abe9 = !![],
            _0x4c2309 = !![],
            _0x290cd1 = !![],
            _0x4a7419 = !![],
            _0x5eefe7 = !![],
            _0x5149df = 0x1,
            _0x13635f = ![],
            _0x43f6e7 = ![],
            _0xd06b62 = null;
        let _0x3410ec = ![],
            _0x4be8f6 = ![],
            _0x3d4fcd = ![],
            _0x370176 = ![],
            _0x5ee0f0 = ![],
            _0x179001 = _0x40131c,
            _0x451890 = _0x40131c,
            _0x3607f6 = 0x190,
            _0x264925 = 0x0;
        var _0x4f44a0 = ![],
            _0x54bc25 = 0x0,
            _0x15fddb = '',
            _0x306242 = 0x0,
            _0x48e8d9 = {},
            _0xef383e = 0x0,
            _0x20fc03 = 0x0,
            _0x45069e = 0x0,
            _0x3a814f = function(_0x5a1aac) {
                switch (_0x5a1aac) {
                    case _0x1085db:
                        return 'ocean';
                    case _0x11e4d4:
                        return 'arctic';
                    case _0x3e4ef7:
                        return 'desert';
                    case _0x414053:
                        return 'volcano';
                    case _0x1d8183:
                        return 'forest';
                    case _0x1114cb:
                        return 'land';
                    default:
                        return 'land';
                }
            },
            _0x46d432 = function(_0x230369) {
                switch (_0x230369) {
                    case _0x1085db:
                        return _0x3e467c;
                    case _0x11e4d4:
                        return _0x133e74;
                    case _0x3e4ef7:
                        return _0x58a9eb;
                    case _0x414053:
                        return _0x4bfbf6;
                    case _0x1d8183:
                        return _0x583917;
                    case _0x1114cb:
                    default:
                        return _0x39b6af;
                }
            },
            _0x2dbe3e = [],
            _0x476319 = +new Date(),
            _0x33693a = +new Date(),
            _0xf671c1 = 0x0,
            _0x9ffe4d = ![],
            _0x5a4190 = 0x0,
            _0x1f908c = null,
            _0x401c43 = ![],
            _0x1befd3 = ![],
            _0x187c23 = ![],
            _0x5a1e1d = ![],
            _0x4bbb18 = null,
            _0x8237f7 = 0x0,
            _0x38a45c = 0x0,
            _0x323561 = 0x0,
            _0x21b691 = 0x0,
            _0x2a074b = 0x0,
            _0x48f35f = 0x0,
            _0x5a248d = [],
            _0xd567a8 = ![],
            _0x17f17b = 0x0,
            _0x5c0c34 = null,
            _0x58c983 = ![],
            _0x2bdfc5 = 0x0,
            _0x5420c3 = ![],
            _0x430e8f = ![],
            _0xa4c02b = 0x0,
            _0xd61d58 = ![],
            _0x16bfcf = ![],
            _0x1962dc = document['getElementById']('gCanvas'),
            _0x490164 = ![],
            _0x31daf7 = null,
            _0x5487e0 = null,
            _0x5642f7 = '?',
            _0x2e49df = '?',
            _0x570a5c = '?',
            _0x218837 = '?',
            _0x5a82ca = 0x0,
            _0x2eff9b = '?',
            _0xb9edda = 0x0,
            _0x524984 = 0x0,
            _0x44e4c1 = 0x0,
            _0x494453 = 0x0,
            _0x4181e2 = 0x0,
            _0x3ad23e = 0x0,
            _0xf437f3 = 0x0,
            _0x2e8a4d = 0x0,
            _0x5ab13c = ![],
            _0x4597c4 = null;
        _0x1962dc && (_0x4597c4 = _0x1962dc['getContext']('2d'), _0x4597c4['shadowColor'] = 'black');
        var _0x1383d7 = ![],
            _0x52f571 = Math['min'](window['devicePixelRatio'], 0x2),
            _0x5ec8aa = ('ontouchstart' in window || navigator['maxTouchPoints']) == !![],
            _0x3f7697 = {},
            _0x45e583 = function(_0x4ab4e9) {
                if (!_0x3f7697['hasOwnProperty'](_0x4ab4e9) && !_0x4b5935) {
                    var _0x4a4a1e = new Audio(_0x4ab4e9);
                    _0x3f7697[_0x4ab4e9] = _0x4a4a1e, _0x4a4a1e['volume'] = 0.7, _0x4a4a1e['muted'] = _0x4b5935;
                }
                return _0x3f7697[_0x4ab4e9];
            },
            _0x5098bd = null,
            _0x300a0e = '',
            _0x28bef1 = 'audio/music_game.mp3',
            _0x5e6d49 = function(_0x12c13e) {
                _0x5098bd && (_0x5098bd['pause'](), _0x5098bd['currentTime'] = 0x0);
                _0x300a0e = _0x12c13e;
                if (!_0x4b5935) {
                    _0x5098bd = _0x45e583(_0x12c13e, !![]);
                    try {
                        _0x5098bd['play']();
                    } catch (_0xe0a7f6) {}
                }
            },
            _0x4583f7 = !![],
            _0x5d3510 = ![];
        window._0x13048d = camzoom_n = 2.7;
        window._0x13048d = 0x1, _0x17b8da = 0x0, _0x59442b = 0x0, _0x26c06b = 0x0, _0x205738 = 0x0, _0x408622 = 0x0, _0x233aea = 0x0, _0x528115 = 0x0, _0x2d165a = 0x0, _0x6039c = 0x1, _0x4f86dd = 0x0, _0x2b1fb9 = 0x0, _0x3a4688 = 0x0, _0x1623d7 = 0x0, _0x379625 = 0x0, _0x402d25 = 0x0, _0x2da0d0 = ![], _0x29ee17 = ![], _0x4921b9 = 0x0, _0x117fee = 0x0, _0x6f4c47 = 0x0, _0x3be96e = 0x0, _0xadab65 = 0x0, _0x88dd5b = 0x1, _0x21c3d1 = 0x2, _0x3a12fc = 0x3, _0x31e908 = 0x4, _0x5f574f = 0x5, _0x250443 = 0x6, _0x524bb8 = _0xadab65, _0x4c2aa9 = 0x0, _0x4ac740 = {}, _0x5ea6fe = async function(_0x2ff2c1) {
            if (!_0x4ac740['hasOwnProperty'](_0x2ff2c1)) {
                const _0x32c517 = new Image();
                var _0x56a4dc = '?v=' + _0x48024a + (_0x4320a8 ? '.' + _0x17c9c6 : '');
                return _0x32c517['src'] = _0x2ff2c1 + _0x56a4dc, new Promise((_0x47d675, _0x1f388a) => {
                    _0x32c517['addEventListener']('load', () => {
                        return _0x4ac740[_0x2ff2c1] = _0x32c517, _0x47d675(_0x32c517);
                    }, {
                        'once': !![]
                    }), _0x32c517['addEventListener']('error', _0x42de99 => {
                        _0x1f388a(_0x42de99);
                    }, {
                        'once': !![]
                    });
                });
            }
            return console['log']('returning the img'), _0x4ac740[_0x2ff2c1];
        }, _0x5e7a48 = function(_0x30607c, _0x335bda) {
            if (!_0x4ac740['hasOwnProperty'](_0x30607c)) {
                _0x4ac740[_0x30607c] = new Image();
                var _0x204c33 = '?v=' + _0x48024a + (_0x4320a8 ? '.' + _0x17c9c6 : '');
                _0x4ac740[_0x30607c]['src'] = _0x30607c + _0x204c33;
            }
            return 0x0 != _0x4ac740[_0x30607c]['width'] && _0x4ac740[_0x30607c]['complete'] ? _0x4ac740[_0x30607c] : null;
        }, _0x261704 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x1a7105 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x386c33 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x46a672 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x138081 = ![], _0x25f9b2 = [], _0x4b4e0c = {}, _0x32c2a0 = [], _0x2a8c78 = [], _0x22c87c = ![], _0x2a0194 = 0x0, _0x580d61 = 0x1, _0x116efd = ![], _0x5f3d2d = 0x0, _0x513e71 = 0x1, _0xf791df = ![], _0x3f1862 = 0x0, _0x933bb3 = 0x1, _0x570173 = ![], _0x3c981a = +new Date(), _0x1b2a4b = ![], _0x3bd264 = ![], _0x308fd0 = ![], _0xfd4e58 = ![], _0x5910dc = ![], _0x570646 = ![], _0x4b5935 = ![], _0x194273 = ![], _0x3aa021 = 0x3, _0x4ba52b = ![], _0x485096 = ![], _0x44696f = !![];
        let _0x412978 = 0x0;
        var _0x26e368 = document['getElementById']('button_mute');
        _0x26e368 && (_0x26e368['onclick'] = function() {
            _0x4b5935 = !_0x4b5935, _0x3f44c2();
            try {
                window['localStorage']['setItem']('options_muted', _0x4b5935 ? 0x1 : 0x0);
            } catch (_0x99662d) {}
        });

        function _0x46a0c8(_0x2e6945, _0x5e63bc, _0x473d91) {
            _0x5e63bc = _0x5e63bc || _0x5e63bc === 0x0 || _0x5e63bc === '0' ? _0x5e63bc : null;
            const _0x495dfd = _0x5c20ca => {
                try {
                    return _0x5e63bc !== null && (_0x5c20ca['volume'] = _0x5e63bc), _0x473d91 && (sound_click['playbackRate'] = _0x473d91), _0x5c20ca['play'](), !![];
                } catch (_0x218302) {
                    return ![];
                }
            };
            if (_0x495dfd(_0x45e583(_0x2e6945))) return;
            _0x495dfd(new Audio(_0x2e6945));
        }

        function _0x19e7d9(_0x1b4231) {
            _0x46a0c8('audio/click.mp3', _0x1b4231);
        }

        function _0x263cba() {
            var _0x572471 = document['getElementById']('optionsDiv');
            _0x572471['style']['display'] = _0x572471['style']['display'] == 'block' ? 'none' : 'block';
            var _0x3660aa = _0x45e583('audio/click.mp3');
            if (_0x3660aa) try {
                _0x3660aa['play']();
            } catch (_0x1edb02) {}
        }
        var _0x344af4 = ![],
            _0x257c0e = -0x1,
            _0x4d2314 = 0x64,
            _0x42d01c = 0x0,
            _0x1a38de = curBarPerc_n = 0x64,
            _0x427ff6 = -0x1,
            _0x4e8658 = -0x1;
        const _0xba7329 = _0x4e8b1f => {
            _0x4e8b1f != _0x42d01c && (_0x4d2314 = _0x4e8b1f);
        };
        _0xba7329(_0x4d2314);
        const _0x23c026 = _0x377d6f => {
            _0x377d6f != _0x257c0e && (_0x257c0e = _0x377d6f);
        };
        _0x23c026(_0x257c0e);
        const _0x40e620 = _0x4a041c => {
            _0x4a041c != _0x427ff6 && (_0x427ff6 = _0x4a041c);
        };
        _0x40e620(0x64);
        const _0x562dbb = _0x30b96e => {
            _0x30b96e != _0x4e8658 && (_0x4e8658 = _0x30b96e);
        };
        _0x40e620(0x0), _0x562dbb(0x0);
        var _0x187003 = 0x0,
            _0x932aa9 = 0x0,
            _0x506b4c = infectionBarPerc_n = 0x64,
            _0x408420 = new _0x16040f(0x10, 'yellow'),
            _0x286f95 = new _0x16040f(0x10, 'white'),
            _0x2b7f4b = new _0x16040f(0x10, 'white'),
            _0x5bde3c = new _0x16040f(0x10, 'white'),
            _0x334e9a = new _0x16040f(0x10, 'white'),
            _0x50f011 = new _0x16040f(0xa, 'white'),
            _0x2362a3 = new _0x16040f(0x10, 'white'),
            _0x2b94f9 = new _0x16040f(0x1a, 'white'),
            _0xd62299 = new _0x16040f(0xa, 'white'),
            _0x2cc105 = new _0x16040f(0x10, 'white');
        _0x2362a3['multiLine'] = !![], _0x2cc105['renderScale'] = 0x1, _0x2362a3['renderScale'] = 0x1, _0x50f011['renderScale'] = 0x1;
        var _0x21d777 = !![],
            _0x27428a = 0x0,
            _0x26de64 = 0x0,
            _0x37c823 = '',
            _0x54a676 = [],
            _0x40237b = new _0x5b5503(null, 'W');
        _0x40237b['onButtonTouchStart'] = function() {
            _0x5a92d4(_0x351730, !![]);
        }, _0x40237b['onButtonTouchEnd'] = function() {
            _0x5a92d4(_0x351730, ![]), _0x4abf53['pressed'] && _0x4abf53['pressedTouchID'] == -0x1 && (_0x4abf53['pressed'] = ![], _0x5a92d4(_0x24733a, ![]));
        }, _0x54a676['push'](_0x40237b);
        var _0x372734 = new _0x5b5503(null, 'W');
        _0x372734['isMiniRechargeBut'] = !![], _0x372734['touchEnabled'] = ![], _0x54a676['push'](_0x372734);
        var _0x4abf53 = new _0x11d99b('HOLD TO RUN');
        _0x4abf53['onButtonTouchStart'] = function() {
            _0x5a92d4(_0x24733a, !![]);
        }, _0x4abf53['onButtonTouchEnd'] = function() {
            _0x5a92d4(_0x24733a, ![]);
        }, _0x54a676['push'](_0x4abf53);
        var _0x5d55ff = new _0x11d99b('CHAT');
        _0x5d55ff['onButtonTouchStart'] = function() {
            _0x12fbb7();
        }, _0x54a676['push'](_0x5d55ff);
        var _0x1a9e24 = new _0x11d99b('S');
        _0x1a9e24['onButtonTouchStart'] = function() {
            _0x5a92d4(_0x62f143, !![]);
        }, _0x1a9e24['onButtonTouchEnd'] = function() {
            _0x5a92d4(_0x62f143, ![]);
        }, _0x54a676['push'](_0x1a9e24);
        var _0x3d9a9d = ![],
            _0x2abe20 = -0x1,
            _0x178163 = 0x0,
            _0x5595ae = 0x0,
            _0x76903a = 0x0,
            _0x142685 = 0x0,
            _0x3e57fe = 0x32,
            _0x1a9a3c = 0x0,
            _0x1f1024 = 0x0,
            _0x2ddb55 = 0x0,
            _0x1f2995 = 0x0,
            _0x7bf7db = 0x0;
        abil_possible = ![];
        var _0x5ccb1d = ![],
            _0x22c87c = ![],
            _0x16b492 = ![],
            _0x33693a = +Date['now'](),
            _0x43a83d = null;

        function _0x4ec95c(_0x78e7d6, _0x508901) {
            return _0x78e7d6 = Math['min'](_0x78e7d6, _0x508901), _0x508901 = Math['max'](_0x78e7d6, _0x508901), _0x78e7d6 + Math['random']() * (_0x508901 - _0x78e7d6 + 0x1);
        }
        var _0x354bfb = ![],
            _0xce4eab = ![],
            _0x2288fc = !![],
            _0x4d4cb6 = function(_0x529c04, _0x417d79, _0x823cde, _0x4ad14a, _0x1a50cb, _0x2294c2) {
                _0x529c04['strokeStyle'] = _0x2294c2, _0x529c04['lineWidth'] = _0x1a50cb, _0x529c04['beginPath'](), _0x529c04['arc'](_0x417d79, _0x823cde, Math['max'](0x0, _0x4ad14a), 0x0, Math['PI'] * 0x2), _0x529c04['stroke']();
            },
            _0x1cd530 = 0x1;
        const _0x512345 = {
                'undefined': () => 0x0,
                'boolean': () => 0x4,
                'number': () => 0x8,
                'string': _0x1a1bad => 0x2 * _0x1a1bad['length'],
                'object': _0x370c8a => !_0x370c8a ? 0x0 : Object['keys'](_0x370c8a)['reduce']((_0x35b49e, _0x6fd573) => _0x39ca47(_0x6fd573) + _0x39ca47(_0x370c8a[_0x6fd573]) + _0x35b49e, 0x0)
            },
            _0x39ca47 = _0x38aed6 => _0x512345[typeof _0x38aed6](_0x38aed6);
        var _0x590ab3 = function(_0x2569a9, _0x23f226, _0x38d5c8) {
            var _0xe18d7e = _0x38d5c8 * Math['PI'] / _0x23f226 * _0x2569a9;
            return _0xe18d7e = Math['sin'](_0xe18d7e), _0xe18d7e;
        };
        let _0x288062 = {};

        function _0x4a8b3b(_0x5ea1a3, _0x41c574, _0x5b5dbe, _0xe18896, _0x435a93, _0x1d47cc) {
            let _0x3246d6 = _0x288062[_0x5ea1a3];
            if (_0x288062[_0x5ea1a3] == undefined) {
                if (_0x435a93 !== undefined && _0x1d47cc !== undefined) _0x3246d6 = new _0x16a13a(_0x5ea1a3, _0x41c574, _0xe18896, _0x5b5dbe, _0x435a93, _0x1d47cc);
                else _0x3246d6 = new _0x16a13a(_0x5ea1a3, _0x41c574, _0xe18896, _0x5b5dbe);
                _0x288062[_0x5ea1a3] = _0x3246d6, console['log']('@@@@@@@@@@@@@@@ AnimFrame created for ' + _0x5ea1a3 + ' @@@@@@@@@@@@@@@@@@@@@@@');
            }
            _0x5002ce(_0x288062[_0x5ea1a3], 0x0);
        }

        function _0x3a18e9(_0x9eb4b3, _0x4346d1) {
            let _0x230c4d = _0x288062[_0x9eb4b3];
            if (_0x230c4d) return _0x230c4d['getFrame'](_0x4346d1);
            return undefined;
        }

        function _0x382128(_0x4ae5c7, _0xf7e19f, _0x326863) {
            let _0x40353f = _0x288062[_0x4ae5c7];
            if (_0x40353f) return _0x40353f['getFrame'](_0xf7e19f) * _0x326863;
            return undefined;
        }

        function _0x38f4be(_0x131344, _0x470d1b) {
            let _0x9a850a = _0x288062[_0x131344];
            if (_0x9a850a) return _0x9a850a['getShiftAmount'](_0x470d1b);
            return undefined;
        }

        function _0x5002ce(_0x1709f5, _0x302129) {
            var _0x64bbe = _0x302129 / 0x3e8,
                _0x4634d9 = _0x64bbe;
            let _0x79ca2a = _0x590ab3(_0x64bbe, _0x1709f5['period'], _0x1709f5['sine']),
                _0x72cdeb = _0x79ca2a['toFixed'](0xa),
                _0x444734 = _0x64bbe['toFixed'](0x3);
            _0x1709f5['add'](_0x444734, _0x72cdeb);
            if (_0x4634d9 >= _0x1709f5['period']) {
                console['log']('@@@@@@@@@@@@@@@@@ baking finished for ' + _0x1709f5['forObj']);
                return;
            }
            _0x302129++, setTimeout(function() {
                _0x5002ce(_0x1709f5, _0x302129);
            }, 0x1);
        }
        class _0x16a13a {
            constructor(_0x3629ec, _0x28514e, _0x388168, _0x4dbcac, _0x5cb7dc, _0x5f2aa1) {
                this['forObj'] = _0x3629ec, this['period'] = _0x28514e, this['sine'] = _0x388168, this['shiftAmount'] = _0x4dbcac, this['frame'] = {}, _0x5cb7dc !== undefined && _0x5f2aa1 !== undefined && (this['startShift'] = _0x5cb7dc, this['endShift'] = _0x5f2aa1, this['amplitude'] = this['shiftAmount'] * (this['endShift'] - this['startShift']));
            } ['getAnimalName']() {
                return this['forAni'];
            } ['add'](_0x331cdb, _0x37ceab) {
                this['frame'][_0x331cdb] = _0x37ceab;
            } ['getShiftAmount'](_0x3c9a40) {
                let _0x590790 = this['getFrame'](this['timeKey'](_0x3c9a40));
                if (_0x590790) {
                    if (this['amplitude'] !== undefined) {
                        let _0x2fc65e = this['startShift'] + this['amplitude'];
                        return _0x2fc65e + this['amplitude'] * this['getFrame'](_0x3c9a40);
                    } else return _0x590790 * this['shiftAmount'];
                }
                return null;
            } ['getFrame'](_0x5c1cb6) {
                return this['frame'][this['timeKey'](_0x5c1cb6)];
            } ['timeKey'](_0x169e70) {
                let _0x3e21b6 = (_0x476319 - _0x169e70) / 0x3e8 / this['period'],
                    _0x3004a3 = (_0x3e21b6 - Math['floor'](_0x3e21b6)) * this['period'];
                return _0x3004a3['toFixed'](0x3);
            }
        }
        let _0x3d5dd9 = {};

        function _0x262416(_0x2729e9, _0x5dfb21, _0x1c53c5, _0x56474d = 0x2, _0x101e77 = 0x1) {
            console['log']('---------------- started baking ' + _0x2729e9);
            const _0x184629 = performance['now']();
            _0x3d5dd9[_0x2729e9] = [];
            const _0x4f7d53 = 0x3e8 * _0x5dfb21;
            for (let _0x9af2a5 = 0x0; _0x9af2a5 < _0x4f7d53; _0x9af2a5 += _0x101e77) {
                _0x3d5dd9[_0x2729e9]['push'](_0x5b9e97(_0x9af2a5 / 0x3e8, _0x5dfb21, _0x1c53c5, _0x56474d));
            }
            console['log']('---------------- finished baking ' + _0x2729e9 + ' time taken: ' + (performance['now']() - _0x184629)['toFixed'](0x4) + 'ms');
        }
        _0x4a8b3b('bird', 0.5, 0.5, 0x2), _0x4a8b3b('eagle', 0.9, 0.3, 0x2), _0x4a8b3b('volcano', 0x6, 1.5, 0x2), _0x262416('lake', 0x4, 5.5, 0x2), _0x4a8b3b('lavalake', 0x4, 2.5, 0x2), _0x4a8b3b('fennecfox', 0.5, 0x5, 0x1), _0x4a8b3b('fireball', 0x1, 0.5, 0x2, 0.85, 0x1), _0x262416('objects', 1.5, 0.1), _0x262416('objects_slow', 2.5, 0.04), _0x262416('honeybee', 0.2, 0.3), _0x4a8b3b('kd', 0x5, 0x1, 0x1), _0x504c7a['wave'] = 0x1, _0x504c7a['halfWave'] = 0x2, _0x504c7a['arc'] = 0x3, _0x504c7a['quad'] = 0x4, _0x504c7a['bow'] = 0x5, _0x504c7a['bounce'] = 0x6, _0x504c7a['elastic'] = 0x7, _0x504c7a['bounceEaseOut'] = 0x8, _0x504c7a['bounceEaseInOut'] = 0x9;

        function _0x504c7a(_0x9aa2b2, _0x4b884c, _0x24c315, _0x1c8fd9) {
            this['forObj'] = _0x9aa2b2, this['duration'] = _0x4b884c, this['animation'] = _0x24c315, this['startTime'] = null, this['frame'] = 0x0, this['frameRate'] = 0x3e8, this['timePassed'] = 0x0, this['generate'] = !![], this['stopWhenDurationPassed'] = !![], this['state'] = 0x0, this['accelerateEnd'] = 0x0, this['hasStopped'] = ![], this['img'] = null, this['vars'] = _0x1c8fd9, this['keepLastFrame'] = ![], this['loop'] = ![], this['setImage'] = function(_0x5768f8) {
                this['img'] = _0x5e7a48(_0x5768f8);
            }, this['run'] = function() {
                if (this['startTime'] == null) this['startTime'] = _0x476319;
                if (this['startTime'] != null) {
                    this['state'] == 0x2 && !this['hasStopped'] && (this['hasStopped'] = !![], this['onStop']());
                    !this['hasStopped'] && (this['calcTimePassed'](), this['generateFrame'](), this['onFrameEntered'](this['frame']), this['timePassed'] >= this['duration'] && this['stopWhenDurationPassed'] && (this['state'] = 0x2));
                    if (this['hasStopped']) {
                        if (this['keepLastFrame']) this['onFrameEntered'](this['frame']);
                        if (this['loop']) this['reset']();
                    }
                }
            }, this['reset'] = function() {
                this['timestamp'] = null, this['hasStopped'] = ![], this['state'] = 0x0;
            }, this['generateFrame'] = function() {
                if (this['generate']) {
                    this['state'] = 0x1;
                    switch (this['animation']) {
                        case _0x504c7a['wave']:
                            this['frame'] = this['wave'](this['timePassed']);
                            break;
                        case _0x504c7a['halfWave']:
                            this['frame'] = this['halfWave'](this['timePassed']);
                            break;
                        case _0x504c7a['arc']:
                            this['frame'] = this['arc'](this['timePassed']);
                            break;
                        case _0x504c7a['quad']:
                            this['frame'] = this['quad'](this['timePassed']);
                            break;
                        case _0x504c7a['bow']:
                            if (this['vars'] == undefined) this['vars'] = {
                                'v1': 0x1
                            };
                            this['frame'] = this['bow'](this['timePassed']);
                            break;
                        case _0x504c7a['bounce']:
                            this['frame'] = this['bounce'](this['timePassed']);
                            break;
                        case _0x504c7a['elastic']:
                            if (this['vars'] == undefined) this['vars'] = {
                                'v1': 0x1
                            };
                            this['frame'] = this['elastic'](this['timePassed']);
                            break;
                        case _0x504c7a['bounceEaseOut']:
                            this['frame'] = this['bounceEaseOut'](this['timePassed']);
                            break;
                        case _0x504c7a['bounceEaseInOut']:
                            this['frame'] = this['bounceEaseInOut'](this['timePassed']);
                            break;
                        default:
                            break;
                    }
                }
            }, this['timing'] = function(_0x35e517) {
                return _0x35e517;
            }, this['halfWave'] = function(_0x43018a) {
                return 0x1 * Math['sin'](0.5 * Math['PI'] / this['duration'] * _0x43018a);
            }, this['wave'] = function(_0x2d6f80) {
                return 0x1 * Math['sin'](0x1 * Math['PI'] / this['duration'] * _0x2d6f80);
            }, this['arc'] = function(_0x41937b) {
                return 0x1 - Math['sin'](Math['acos'](_0x41937b));
            }, this['quad'] = function(_0x212ce8) {
                return Math['pow'](_0x212ce8, 0x2);
            }, this['bow'] = function(_0x4691d7) {
                var _0x4eb2ea = this['vars']['v1'];
                return Math['pow'](_0x4691d7, 0x2) * ((_0x4eb2ea + 0x1) * _0x4691d7 - _0x4eb2ea);
            }, this['bounce'] = function(_0x541c0d) {
                for (let _0x44c85d = 0x0, _0x348364 = 0x1, _0x4dc608; 0x1; _0x44c85d += _0x348364, _0x348364 /= 0x2) {
                    if (_0x541c0d >= (0x7 - 0x4 * _0x44c85d) / 0xb) return -Math['pow']((0xb - 0x6 * _0x44c85d - 0xb * _0x541c0d) / 0x4, 0x2) + Math['pow'](_0x348364, 0x2);
                }
            }, this['elastic'] = function(_0x39837c) {
                var _0x31bd4c = this['vars']['v1'];
                return Math['pow'](0x2, 0xa * (_0x39837c - 0x1)) * Math['cos'](0x14 * Math['PI'] * _0x31bd4c / 0x3 * _0x39837c);
            }, this['bounceEaseOut'] = function(_0x2ff374) {
                return 0x1 - this['bounce'](0x1 - _0x2ff374);
            }, this['bounceEaseInOut'] = function(_0x2af212) {
                if (_0x2af212 < 0.5) return this['bounce'](0x2 * _0x2af212) / 0x2;
                else return (0x2 - this['bounce'](0x2 * (0x1 - _0x2af212))) / 0x2;
            }, this['calcTimePassed'] = function() {
                this['timePassed'] = (_0x476319 - this['startTime']) / this['frameRate'];
            }, this['onFrameEntered'] = function(_0x3cfaa8) {}, this['onStop'] = function() {};
        }
        const _0x18275a = ['anus', 'anus plug', 'apeshit', 'apeshite', 'ar5e', 'b00bz', 'b1+ch', 'b17ch', 'b1otch', 'b1otchs', 'b1tch', 'b1tch1ng', 'b1tch35', 'b1tch3s', 'b1tchees', 'b1tches', 'b1tchez', 'b1tchin', 'b1tching', 'b1tchs', 'b1tchy', 'baby batter', 'ballbag', 'bangbros', 'bassturd', 'bastard', 'bastardish', 'bastards', 'basterd', 'bastid', 'bastinado', 'basturd', 'bater', 'bates', 'beeotch', 'bell end', 'bellend', 'bender', 'bewbs', 'beyoch', 'beyotch', 'bi + ch', 'bi+ch', 'biatch', 'biches', 'biotch', 'biotches', 'biotchez', 'bishes', 'bitch', 'bitch3s', 'bitchass', 'bitchasses', 'bitched', 'bitcher', 'bitchers', 'bitches', 'bitchez', 'bitchfuck', 'bitchhole', 'bitchin', 'bitchin\'', 'bitching', 'bitchlike', 'bitchness', 'bitchs', 'kys', 'bitchslap', 'bitchtits', 'bitchy', 'bitchy ass', 'bizzach', 'blacky', 'blumpkin boy', 'boll0ck', 'bollock', 'bollockchops', 'bollocks', 'bollocktician', 'bollox', 'bondage', 'boner', 'bonk juice', 'boobs', 'booty', 'breasticles', 'breasts', 'bugger', 'bugger off', 'bull shit', 'bullshi', 'bullshit', 'bullshite', 'bum-bandits', 'bum-driller', 'bumhole', 'bung hole', 'butt fuck', 'butt fucker', 'butt hole', 'butt pirate', 'butt-fucker', 'butt-fuckers', 'butt-fucking-bandit', 'butt-munchers', 'buttermilk', 'buttfuck', 'buttfucker', 'buttfuckers', 'butthole', 'butthole boy', 'bwc', 'c*nt', 'c*ntface', 'c*nts', 'c*nty', 'c00n', 'c00nies', 'c0ck', 'c0ckhead', 'c0cks', 'c0cksuccer', 'c0cksucked', 'c0cksucker', 'c0cksuckers', 'c0x', 'c0xux0r', 'caaak', 'caca', 'cack', 'cagone', 'cajones', 'cawk', 'cawkmuncher', 'cawks', 'cawksucker', 'ch1nk', 'chesticles', 'chingchong', 'chink', 'chinky', 'chocha', 'cholo', 'clitlickers', 'clusterfuck', 'clusterfucked', 'clusterfucker', 'clusterfucking', 'clusterfucks', 'cock', 'cock-face', 'cock-gobbler', 'cock-head', 'cock-sucker', 'cock-suckers', 'cockboy', 'cockeater', 'cockface', 'cockgobbler', 'cockh3ad', 'cockhead', 'cockheads', 'cockhed', 'cockless', 'cocklicker', 'cockmonger', 'cockmunch', 'cockmuncher', 'cocks', 'cockshit', 'cockskin', 'cocksmoker', 'cocksucc', 'cocksuccas', 'cocksuccer', 'cocksuccers', 'cocksuck', 'cocksuckas', 'cocksucked', 'cocksucker', 'cocksuckers', 'cocksucking', 'cocksucking mothafuckers', 'cocksucks', 'cocksuk', 'cocksuka', 'cocksukka', 'cocsuck', 'cokmuncher', 'coksucka', 'coolie', 'coon', 'coon1es', 'cooni3s', 'coonie', 'coonies', 'coons', 'coot', 'coot coot', 'cooter', 'cooter shooting', 'cooterpuffing', 'cooties', 'cotton picker', 'crazy mofos', 'crazy sob', 'creampie', 'crotch', 'crotch fiddler', 'crotchy', 'cuksuker', 'cuksukka', 'cum goon', 'cumball', 'cumdumpster', 'cumming', 'cums', 'cumslut', 'cumz', 'cunnilingus', 'cunt', 'cunt ass', 'cunt fart', 'cunt lick', 'cunt licker', 'cunt lips', 'cuntasaurus rex', 'cuntbag', 'cuntbollock', 'cuntelope', 'cuntits', 'cuntless', 'cuntlick', 'cuntlicker', 'cuntlickers', 'cuntness', 'cunts', 'cunty', 'cuntz', 'cuunt', 'cyberfck', 'cyberfcks', 'cyberfuccs', 'cyberfucks', 'cyberfucs', 'cyberfukk', 'cyberfukks', 'cyberfvcks', 'd!ck', 'd!cks', 'd!ld0', 'd!ldo', 'd0ggy style', 'd1ck', 'd1ckhead', 'd1ckheads', 'd1cks', 'd1cksucker', 'd1cksukka', 'd1ckz', 'd1ldo', 'dafuq', 'dago', 'darkass', 'darkfuck', 'darkie', 'darkshit', 'darktard', 'darky', 'dick breath', 'dick face', 'dick fucker', 'dick head', 'dick licker', 'dick milker', 'dick nibbler', 'dick smoker', 'dick sucker', 'dick-face', 'dick-gobbler', 'dick-head', 'dickface', 'dickfucker', 'dickhead', 'dickheads', 'dickjockies', 'dickless', 'dicklicker', 'dickmuncher', 'dicks', 'dickskin', 'dickslapper', 'dicksmoker', 'dicksucker', 'dickvag', 'dickz', 'diddle', 'dikhead', 'diks', 'dild0', 'dipsh1t', 'dipsh1tty', 'dipshat', 'dipshidiot', 'dipshit', 'dipshite', 'dipshits', 'dipshitter', 'dipshitty', 'dipstick', 'dirty sanchez', 'dix', 'dlck', 'dlcks', 'dog fuck', 'dog fucker', 'dog fucking', 'dog shit', 'dog-fucker', 'dog\'s bollocks', 'doggo style', 'doggy style', 'doggy_style', 'dogie style', 'dogsh1t', 'dogsh1ts', 'dogshit', 'dogshits', 'dogstyle', 'dolt', 'dong', 'doosh', 'dothead', 'double dick', 'double dicking', 'double pen', 'double-dong', 'douche', 'douche bag', 'douche canoe', 'douchebag', 'dumasses', 'dumb bastard', 'dumb fucker', 'dumb@ss', 'dumbarrassed', 'dumbass', 'dumbass fucker', 'dumbass mofoes', 'dumbass mothafuckers', 'dumbass son-of-a-bitch', 'dumbasses', 'dumbfucks', 'dumbshit', 'dump a load', 'dune coon', 'dyke', 'erectoplasm', 'f_u_c_k', 'f\'ed', 'f\'er', 'f@ck', 'f@cker bunny', 'f@g', 'f@gg0t', 'f@gging', 'f@ggot', 'f@gs', 'f@gshit', 'f@k', 'f0ck', 'f0cked', 'f0cker', 'f0ckers', 'face fuck', 'fack', 'fackuhs', 'fag', 'fag asses', 'fag bag', 'fag hag', 'fag queen', 'fag0t', 'faget', 'fagg0t', 'fagging', 'faggo', 'faggot', 'faggot mofoes', 'faggot mothafuckers', 'faggot nob jokeys', 'faggot nobjockies', 'faggot son-of-a-bitch', 'faggoting', 'faggots', 'faggs', 'faggy', 'fagot', 'fags', 'fagshit', 'fart-fucker', 'fatass', 'fatasses', 'fccuker', 'fck', 'fck you', 'fcka', 'fckahz', 'fcked', 'fckedup', 'fcker', 'fckin', 'fcking', 'Fckk', 'fckked', 'fckking', 'fcks', 'fcktard', 'fckyeah', 'fcuk', 'fcuked', 'fcuker', 'fcukers', 'fcuking', 'fcukker', 'fcuks', 'fcvking', 'feck', 'feck arse', 'fecker', 'feg', 'fellatio aficionado', 'fellator', 'fick', 'finger', 'finger fuck', 'fingerbanged', 'fingerpop', 'fk bunny', 'fkbny', 'fked', 'fker', 'fking', 'fkings', 'fkker', 'flamer', 'flamers', 'focker', 'fook', 'fooker', 'fookuh', 'forked', 'fothermuckers', 'fuc', 'fucc', 'fucca', 'fuccers', 'fuccing', 'fuccs', 'Fuck', 'fuck arse', 'fuck face', 'fuck faces', 'fuck goblin', 'fuck head', 'fuck off', 'fuck up', 'fuck y0u', 'fuck you', 'fuck your', 'fuck your mother', 'fucka', 'fuckahs', 'fuckass', 'fuckasses', 'fuckaz', 'fuckbag', 'fuckboy', 'fucked', 'fucked up', 'fuckem', 'fucker', 'fucker off', 'fuckers', 'fuckface', 'fuckfaces', 'fuckhead', 'fuckheaded', 'fuckheads', 'fuckin', 'fucking', 'fucking A', 'fucking asshole', 'fucking bastard', 'fucking hell', 'fucking me', 'retard', 'fucking retard', 'fucking shit', 'fuckk', 'fuckless', 'fuckmachine', 'fucknuckle', 'fucks', 'fuckshit', 'fuckshitface', 'fuckshithead', 'fuckstar', 'fuckster', 'fuckstick', 'fucktard', 'fucktards', 'fuckup', 'fuckwad', 'fuckwhore', 'fucs', 'fucx', 'fudgefucker', 'fudgepacker', 'fudgepackers', 'fudgepackershitter', 'fudgepacking fucker', 'fugged', 'fugger', 'fuggerz', 'fuggings', 'fugly', 'fuk', 'fuk1n', 'fuk1ng', 'fukcs', 'fuker', 'fukheads', 'fukin', 'fuking', 'fukk', 'fukka', 'fukked', 'fukker', 'fukkers', 'fukking', 'fukkings', 'fukkuh', 'fuks', 'fuku', 'fukwhore', 'fukwit', 'full of shit', 'funbags', 'fuq', 'futhamucka', 'fux', 'fux0r', 'fvck', 'fvck you', 'fvcka', 'fvckbunny', 'fvcker', 'fvckers', 'fvckin', 'fvcking', 'fvckker bunny', 'fvckwhi', 'fxck', 'fxcked', 'fxcker', 'fxcking', 'gin jockey', 'girlieboy', 'gook', 'gowl', 'greaser', 'groid', 'groper', 'gyp', 'harry palms', 'heeb', 'higg@', 'higg3r', 'higga', 'higger', 'higgers', 'hoar', 'jewboy', 'jigaboo', 'jigaboos', 'jigga', 'jiggaboo', 'jiggabooboo', 'jiggaboos', 'jiggabu', 'jiggas', 'jigger', 'jiggerboo', 'jiggerboos', 'jiggs', 'jiggyboo', 'jigro', 'jim crow', 'jizz', 'jizz eater', 'jizz licker', 'jizz-jockey', 'jizzbags', 'jizzed', 'jizzes', 'jizzfucker', 'jizzing', 'jizzsacks', 'jizzstain', 'jizzy', 'k!k3', 'k!ke', 'k..!ke', 'k1k3', 'k1ke', 'kid diddler', 'kiddy touch', 'kike', 'kikes', 'kiss ass', 'kiss my ass', 'kitty puncher', 'kkk', 'klan', 'klitoris', 'kneegrows', 'knickers', 'knob', 'knob eater', 'knob gobbler', 'knob jockey', 'knob-face', 'knob-gobbler', 'knob-head', 'knob3d', 'knob3nd', 'knobd', 'knobe', 'knobead', 'knobeads', 'knobed', 'knobeds', 'knobend', 'knobender', 'knobends', 'knobendy', 'knobendz', 'knober', 'knobes', 'knobgobbler', 'knobhead', 'knobheads', 'knobjockies', 'knobjocky', 'knobjokey', 'knobjokeys', 'ku kluxer', 'kyke', 'l@dyb0i', 'l@dyb0y', 'l@dyboy', 'l3i + ch', 'l3i+ch', 'l3itch', 'l3itches', 'ladboys', 'ladboyz', 'ladiboy', 'lady-boy', 'ladyb0i', 'ladyb0y', 'ladyboy', 'ladyboys', 'ladyboyz', 'lesbo', 'loose woman', 'm@asterbated', 'm@derfaker', 'm@derfuck', 'm@derfuckers', 'm0f0', 'm0f0s', 'm0fo', 'm0foes', 'm0fos', 'm0ng0l0id', 'm0ngoloid', 'm0thafucked', 'm0thafucker', 'm0thafucking', 'm0therfuckeds', 'm0therfucker', 'm0therfucking', 'm0therfvcker', 'man chowder', 'man meat', 'man seed', 'markasses', 'meat curtains', 'meat-sword', 'mecha fag', 'mega fag', 'mf\'er', 'mf\'ers', 'mf\'ing', 'mfckers', 'MFer', 'MFers', 'mfing', 'mfk', 'mfs', 'mfukk', 'mfukker', 'milf', 'mindfuck', 'mof0es', 'mof0s', 'mofcker', 'mofo', 'mofo ass', 'mofoes', 'mofos', 'mofoshit', 'mofuccers', 'mofucckers', 'mofuck', 'mofucker', 'mofuckkas', 'mofuk', 'mofukkas', 'molester', 'mong', 'mongoloid', 'mongrel', 'motha fucka', 'motha fucker', 'motha fuckers', 'mothaf@cked', 'mothafcked', 'mothafcking', 'Mothafucc', 'mothafucced', 'mothafuccer', 'mothafuccing', 'mothafuck', 'mothafucka', 'mothafuckas', 'mothafuckasses', 'mothafuckaz', 'mothafuckazzes', 'mothafucked', 'mothafuckeds', 'mothafucker', 'mothafuckers', 'mothafuckin', 'mothafucking', 'mothafuckings', 'mothafuckins', 'mothafucks', 'mothafuckz', 'mothafvcked', 'mother effer', 'mother fuck', 'mother fuck you', 'mother fucka', 'mother fucker', 'mother fuckers', 'mother fucking', 'mothercker', 'motherf@kka', 'motherfacking', 'motherfcked', 'motherfckin', 'motherfcking', 'motherfcks', 'motherfckshit', 'hitler', 'motherfecka', 'motherfecker', 'motherfk', 'motherfucca', 'motherfuccas', 'motherfuccers', 'motherfuck', 'motherfucked', 'motherfuckeds', 'motherfucker', 'motherfuckers', 'motherfuckin', 'motherfucking', 'motherfuckings', 'motherfuckingshit', 'motherfuckins', 'motherfuckka', 'motherfuckkas', 'motherfuckkers', 'motherfucks', 'motherfukka', 'motherfukker', 'motherfukkings', 'motherfvck', 'motherfvcked', 'motherfvckeds', 'motherfvcker', 'motherfvckers', 'motherfvcking', 'motherfxck', 'motherfxcking', 'mothfck', 'mothter fuck', 'mtherfuker', 'mthrfcker', 'muddafukkas', 'mudderfuk', 'mudderfukker', 'mufdive', 'mufdivin', 'muff', 'muffdiving', 'muffdivings', 'muffindivin', 'muffindiving', 'muhfucking', 'mushroom tip', 'mutha fucka', 'mutha fucker', 'muthafecker', 'muthafeckers', 'muthafucka', 'muthafuckers', 'muthafuckings', 'muthafuckker', 'muthafuckkers', 'muthafukka', 'mutherfucker', 'mutherfuckers', 'n0bhead', 'n0bj0cky', 'n1ckker', 'ngger', 'ngge', 'ngga', 'n1g3r', 'n1g3rz', 'n1gg@', 'n1gg@hs', 'n1gg3r', 'n1gg3rs', 'n1gga', 'n1ggah', 'n1ggahs', 'n1ggas', 'n1ggazes', 'n1gger', 'n1ggers', 'n1gguh', 'n3gro', 'negga', 'neggar', 'negr0', 'negro', 'negroes', 'negroid', 'niccer', 'nicka', 'nickas', 'nicker', 'nickk3r', 'nickker', 'nig-nog', 'niga', 'nigah', 'nigasses', 'nigers', 'kys', 'kill yourself', 'nigg@', 'nigg@hs', 'nigg@s', 'nigg@z', 'nigg@zzes', 'nigg3r', 'nigg3rs', 'nigg4h', 'nigg4hs', 'nig ger', 'niger', 'niga', 'niggа', 'niggеr', 'nigga', 'nigga lover', 'niggah', 'niggahs', 'niggahz', 'niggas', 'niggger', 'niggass', 'niggaz', 'niggazzes', 'nigger', 'niggers', 'niggerz', 'nigge', 'niggir', 'niggress', 'nigguh', 'nigguhs', 'nigguhz', 'nigg', 'n@gga', 'n@gg@', 'ni@@a', 'niglet', 'nignigs', 'nignog', 'nigra', 'nigre', 'nigs', 'niguh', 'nikk3r', 'nikkas', 'nikker', 'pussylickers', 'pussys', 'pussywhipped', 'puta', 'puussy', 'puzzies', 'puzzy', 'queerasses', 'S&M', 'sack', 'salad tosser', 'sambo', 'sand nigger', 'sausage jockey', 'scamfuck', 'schlong', 'scumfuck', 'scumfucker', 'scumfvck', 'scummy', 'shytfeisterfuck', 'sissy', 'snatch licker', 'soab', 'soppy bollucks', 'sphincter', 'spic', 'spicfuck', 'spick', 'spics', 'spicshit', 'spig', 'spik', 'spix', 'spook', 'spooks', 'spunk', 'stump chewer', 'stupid fucker', 'stupidasses', 'sum of a bitch', 'sumbitch', 'swine', 'swine fucker', 'tacohead', 'tadger', 'tallywacker', 'tar-baby', 'throater', 'tits', 'tosser', 'tossing salad', 'towelhead', 'towelheads', 'towelshithead', 'trashybitches', 'trouser snake', 'trousersnake', 'turdcutter', 'turdhead', 'tw@t', 'twa+', 'twat', 'twat waffle', 'twatface', 'twats', 'twatt', 'twattish', 'twatzilla', 'twink', 'upskirts', 'vag', 'vulva', 'w@nker', 'w@nkers', 'w4nk3r', 'w4nker', 'wang', 'wang wrangler', 'wank', 'wank off', 'wank3r', 'wank3rs', 'wankbastard', 'wanked', 'wanker', 'wankers', 'wankies', 'wanking', 'wanks', 'we1back', 'weenie', 'weiner', 'wet back', 'wetback', 'wetbacks', 'wh0r3', 'wh0re'],
            _0x8bef6d = ['﷽'],
            _0x476738 = function(_0x152fba, _0x5aad68, _0x150b88, _0x2624fe) {
                let _0x2a962a = _0x5aad68,
                    _0x241d9f = _0x150b88;
                var _0x29865d = _0x152fba['split']('');
                for (var _0x5750f1 = _0x2a962a; _0x5750f1 < _0x241d9f; _0x5750f1++) {
                    _0x29865d[_0x5750f1] = _0x2624fe;
                }
                return _0x29865d['join']('');
            },
            _0x1230b6 = function(_0x880023) {
                let _0x1f8b1a = _0x251a0d(_0x880023);
                for (var _0xcaff88 in _0x8bef6d) {
                    _0x1f8b1a = _0x179e14(_0x1f8b1a, _0x8bef6d[_0xcaff88], '-');
                }
                return _0x1f8b1a;
            },
            _0x251a0d = function(_0x514714) {
                if (_0x4ba52b) return _0x514714;
                for (var _0x439f05 in _0x18275a) {
                    _0x514714 = _0x179e14(_0x514714, _0x18275a[_0x439f05]);
                }
                return _0x514714;
            },
            _0x179e14 = function(_0x7a4bef, _0x150d15, _0x18234f = '8') {
                let _0x674150 = _0x7a4bef['normalize']('NFKC'),
                    _0x4fee03 = _0x674150['toLowerCase'](),
                    _0x55520c = _0x4fee03['indexOf'](_0x150d15);
                return _0x55520c >= 0x0 && (_0x7a4bef = _0x476738(_0x7a4bef, _0x55520c, _0x55520c + _0x150d15['length'], _0x18234f), _0x7a4bef = _0x179e14(_0x7a4bef, _0x150d15, _0x18234f)), _0x7a4bef;
            };
        var _0x5844a2 = window['innerWidth'];
        class _0x481d2e {
            constructor(_0xe85668) {
                this['season'] = _0xe85668;
            } ['loadMiniMap'](_0x31391b) {}
            static['create'](_0x259f85) {
                let _0x5a93fa = _0x259f85['readUInt8']();
                this['season'] = _0x5a93fa;
                switch (_0x5a93fa) {
                    case 0x1:
                    case 0x2:
                        let _0x366f9c = new _0x27ced8();
                        _0x366f9c['loadMiniMap'](_0x259f85);
                        return _0x366f9c;
                }
                return null;
            }
        }
        class _0x27ced8 extends _0x481d2e {
            constructor() {
                super(0x1);
            } ['loadMiniMap'](_0x14293b) {
                let _0x3844df = _0x14293b['readUInt16']() * 0x1,
                    _0x5aabf3 = _0x14293b['readUInt16']() * 0x1,
                    _0x56cb49 = _0x14293b['readUInt16'](),
                    _0xa948b2 = _0x14293b['readUInt16'](),
                    _0x203848 = _0x14293b['readUInt16'](),
                    _0x225d7a = _0x14293b['readUInt16'](),
                    _0x1e2fd3 = _0x14293b['readUInt16'](),
                    _0x22c346 = 0x1,
                    _0xbda94a = 0x1,
                    _0x1f342a = {
                        'scale': _0x3844df,
                        'objScale': _0x5aabf3,
                        'mapWidth': _0x56cb49,
                        'mapHeight': _0xa948b2,
                        'width': _0x5844a2,
                        'height': _0x5844a2,
                        'gameWidth': _0x203848,
                        'gameHeight': _0x225d7a,
                        'scaleX': _0x22c346,
                        'scaleY': _0xbda94a,
                        'totalObjects': _0x1e2fd3,
                        'objects': []
                    };
                for (let _0x162931 = 0x0; _0x162931 < _0x1e2fd3; _0x162931++) {
                    let _0x3aa69e = _0x14293b['readUInt16']();
                    for (let _0x5551ea = 0x0; _0x5551ea < _0x3aa69e; _0x5551ea++) {
                        let _0x93332c = _0x14293b['readUInt16'](),
                            _0x535645 = _0x14293b['readUInt16'](),
                            _0xa58eab = _0x14293b['readUInt8']() == 0x1,
                            _0x3aa946 = {
                                'isRect': _0xa58eab,
                                'objType': _0x93332c
                            };
                        _0x93332c == _0x19b1a9 && (_0x3aa946['teamID'] = _0x14293b['readUInt8'](), _0x3aa946['outline'] = 'black');
                        if (_0xa58eab) {
                            let _0xf2ec21 = _0x14293b['readUInt16'](),
                                _0x2deed7 = _0x14293b['readUInt16'](),
                                _0x1b1f56 = _0x14293b['readUInt16'](),
                                _0x1f2a31 = _0x14293b['readUInt16']();
                            _0x3aa946['w'] = _0x1b1f56, _0x3aa946['h'] = _0x1f2a31, _0x3aa946['x'] = _0xf2ec21, _0x3aa946['y'] = _0x2deed7;
                        } else {
                            let _0x15a365 = _0x14293b['readUInt16'](),
                                _0x286855 = _0x14293b['readUInt16'](),
                                _0x4dc3dd = _0x14293b['readUInt16']();
                            _0x3aa946['r'] = _0x15a365, _0x3aa946['x'] = _0x286855, _0x3aa946['y'] = _0x4dc3dd;
                        }
                        _0x3aa946['c'] = this['getColorForObjType'](_0x93332c, _0x535645), _0x3aa946['biome'] = _0x535645, _0x1f342a['objects']['push'](_0x3aa946);
                    }
                }
                _0x120225 = new _0x36d2e3(_0x1f342a), _0x120225['setPlayersCount'](_0x570a5c);
            } ['getColorForObjType'](_0x51cbe4, _0x16a348) {
                switch (_0x51cbe4) {
                    case _0x5a697d:
                        return _0x316ca1;
                    case _0x36e8de:
                        return _0x23eb4b;
                    case _0x99578c:
                        return '#c8b745';
                    case _0x5b34f0:
                        return 'white';
                    case _0x1a14e4:
                        return _0x2c9c06;
                    case _0x22d2e2:
                        return _0x1c0746;
                    case _0x302526:
                        return _0x2c9c06;
                    case _0x58f80e:
                        return '#07631f';
                    case _0x45adaa:
                        return _0x316ca1;
                    case _0x3a3371:
                        return _0x316ca1;
                    case _0x1c0d9b:
                        return '#907A33';
                    case _0x390f74:
                        return '#7BB7BB';
                    case _0x15fc30:
                        return _0x23eb4b;
                    case _0x143978:
                        return _0x2ae152;
                    case _0x4f1571:
                        return _0x39b6af;
                    case _0x37809d:
                        return _0x51bcc4;
                    case _0x1bd8a6:
                        return _0x4c16db;
                    case _0x2330c7:
                        return _0x41f624;
                    case _0x20c79b:
                        return _0x51bcc4;
                    case _0x4018aa:
                        return _0x29a2c5;
                    case _0x1d814a:
                        return _0x5cf340;
                    case _0x5881fa:
                    case _0x4483fc:
                        if (_0x16a348 == _0x3e4ef7) return '#8f822e';
                        else {
                            if (_0x16a348 == _0x11e4d4) return 'red';
                            else {
                                if (_0x16a348 == _0x1085db) return '#198ebd';
                            }
                        }
                        return 'brown';
                    case _0x42de22:
                        if (_0x16a348 == _0x3e4ef7) return '#8f822e';
                        else {
                            if (_0x16a348 == _0x11e4d4) return 'white';
                        }
                        return '#00b01a';
                    default:
                        return 'green';
                }
            }
        }
        let _0x442052 = null,
            _0x120225 = null;
        var _0x2d122f = [],
            _0x1432d8 = [],
            _0x3b3334 = {},
            _0x346e9e = null;

        function _0x4c9ada(_0x22b6d2) {
            var _0x550f8d = _0x22b6d2['readUInt32']();
            _0x550f8d > 0x0 && (_0x346e9e = {
                'id': _0x550f8d,
                'x': _0x22b6d2['readUInt32'](),
                'y': _0x22b6d2['readUInt32'](),
                'rad': 0x3
            });
        }

        function _0x4bb1d6(_0x4ee32a, _0x8c6d62, _0x39fa8f) {
            if (_0x4ee32a) {
                var _0xe2f4b0 = _0x52f571 * Math['max'](0x3, _0x4ee32a['rad'] * (_0x120225['miniMapCanvas']['width'] / _0x6f4c47));
                _0x4597c4['save']();
                _0x59b0bc == _0x4ee32a['id'] ? _0x4597c4['globalAlpha'] = 0x1 : _0x4597c4['globalAlpha'] = 0.7;
                var _0x49b624 = _0x4921b9 - (0xa * _0x52f571 + _0x120225['miniMapCanvas']['width'] * _0x6039c) + _0x4ee32a['x'] * (_0x120225['miniMapCanvas']['width'] * _0x6039c) / _0x6f4c47,
                    _0x428a39 = 0xa * _0x52f571 + _0x4ee32a['y'] * (_0x120225['miniMapCanvas']['height'] * _0x6039c) / _0x3be96e;
                _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = _0x8c6d62, _0x4597c4['arc'](_0x49b624, _0x428a39, _0xe2f4b0, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
        }

        function _0x3be545(_0x194a4e, _0x1fcaf4, _0x36dff7, _0x302ddf) {
            if (_0x194a4e) {
                _0x4597c4['globalAlpha'] = _0x302ddf ? _0x302ddf : 0x1, _0x4597c4['fillStyle'] = _0x1fcaf4, _0x4597c4['beginPath']();
                var _0x3948ce = _0x52f571 * Math['max'](0x2, _0x194a4e['rad']),
                    _0x419fa4 = _0x4921b9 - (0xa * _0x52f571 + _0x120225['miniMapCanvas']['width'] * _0x6039c) + pObj['x'] * (_0x120225['miniMapCanvas']['width'] * _0x6039c) / _0x6f4c47,
                    _0x5cf0e1 = 0xa * _0x52f571 + pObj['y'] * (_0x120225['miniMapCanvas']['height'] * _0x6039c) / _0x3be96e;
                _0x4597c4['arc'](_0x419fa4, _0x5cf0e1, _0x3948ce * _0x36dff7, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']();
            }
        }
        class _0x421d90 {
            constructor() {
                this['subscribers'] = {};
            } ['subscribe'](_0x1f2319, _0x8a5861) {
                if (!this['subscribers'][_0x1f2319]) this['subscribers'][_0x1f2319] = [];
                this['subscribers'][_0x1f2319]['push'](_0x8a5861);
            } ['emit'](_0x3e7564, _0x3dc021) {
                const _0x498f6d = this['subscribers'][_0x3e7564];
                if (_0x498f6d) _0x498f6d['forEach'](_0x1980b9 => _0x1980b9(_0x3dc021));
            }
        }
        class _0x4c5ab1 {
            constructor() {}
            static['type'] = 0x0;
            ['send']() {}
        }
        class _0x54069f {
            constructor() {}
            static['type'] = 0x0;
            static['validate']() {}
            static['handle']() {}
        }
        class _0x448f4f {
            constructor() {}
            static['type'] = 0x0;
            static['send']() {}
            static['validate']() {}
            static['handle']() {}
        }
        class _0x57e25e extends _0x4c5ab1 {
            constructor() {
                super();
            }
            static['type'] = 0x1;
            static['send'](_0xd5d015, _0x39decb) {
                let _0x390aeb = 0x9 + 0x2;
                _0x39decb && _0x39decb['length'] && (_0x390aeb += _0x39decb['length']);
                const _0x143ada = new _0x278eb3(_0x390aeb);
                _0x143ada['writeUInt8'](_0x57e25e['type']), _0x143ada['writeUInt16'](_0x4921b9), _0x143ada['writeUInt16'](_0x117fee), _0x143ada['writeUInt16'](_0x5844a2);
                if (_0x39decb) _0x143ada['writeString'](_0x39decb);
                else _0x143ada['writeString']('');
                _0xd5d015['send'](_0x143ada['dataView']['buffer']);
            }
        }
        class _0x4a9ccf extends _0x54069f {
            constructor() {}
            static['type'] = 0x2;
            static['handle'](_0xb60a98) {
                const _0x188190 = _0xb60a98['readString'](),
                    _0x1a0250 = _0xb60a98['readUInt16'](),
                    _0x2b6e61 = _0xb60a98['readUInt8'](),
                    _0x3b5e36 = _0xb60a98['readUInt8'](),
                    _0x2c1a09 = _0xb60a98['readString'](),
                    _0x53977c = _0xb60a98['readUInt8']() == 0x1,
                    _0x45658d = _0xb60a98['readUInt16']();
                _0x3a9e42 = [];
                for (let _0x57a183 = 0x0; _0x57a183 < _0x45658d; _0x57a183++) {
                    var _0x213154 = _0x5ddf8d['createStaticObj'](_0xb60a98);
                    _0x3a9e42['push'](_0x213154);
                }
                return {
                    'sessionId': _0x188190,
                    'gameVersion': _0x1a0250,
                    'gameMode': _0x2b6e61,
                    'season': _0x3b5e36,
                    'serverId': _0x2c1a09,
                    'isAliveInGame': _0x53977c
                };
            }
        }
        class _0x1e2fed extends _0x54069f {
            constructor() {
                super();
            }
            static['type'] = 0x11;
            static['handle'](_0x456bf3) {
                const _0x4e7e21 = _0x456bf3['readUInt16'](),
                    _0x5e18a2 = _0x456bf3['readUInt16'](),
                    _0x1515de = _0x456bf3['readUInt16'](),
                    _0x718fa6 = _0x456bf3['readUInt16'](),
                    _0xf3d22b = _0x456bf3['readUInt16']();
                return {
                    'gameWidth': _0x4e7e21,
                    'gameHeight': _0x5e18a2,
                    'camX': _0x1515de,
                    'camY': _0x718fa6,
                    'camZoom': _0xf3d22b
                };
            }
        }
        class _0x3fb450 extends _0x4c5ab1 {
            constructor() {
                super();
            }
            static['type'] = 0x71;
            static['send'](_0xa397f9, _0x39f1db, _0x2050a6, _0x31639e) {
                if (!_0x39f1db) _0x39f1db = 'mope.io';
                const _0xac36b6 = 0x7 + _0x4eaafb(_0x39f1db)['length'],
                    _0x16c7f4 = new _0x278eb3(_0xac36b6);
                _0x16c7f4['writeUInt8'](_0x3fb450['type']), _0x16c7f4['writeUInt16'](_0x2050a6), _0x16c7f4['writeUInt16'](_0x31639e), _0x16c7f4['writeString'](_0x39f1db), _0xa397f9['send'](_0x16c7f4['dataView']['buffer']);
            }
        }
        class _0x19d54d extends _0x448f4f {
            constructor() {
                super();
            }
            static['type'] = 0x18;
            static['readUpgradeMenu'](_0x36c978) {
                const _0x105f4c = _0x36c978['readUInt8'](),
                    _0x9ad65c = _0x36c978['readUInt8'](),
                    _0x51b028 = _0x36c978['readUInt8']();
                console['log']('timeout on message: ' + _0x51b028);
                const _0x2a7b70 = _0x36c978['readUInt8'](),
                    _0xebe215 = _0x36c978['readUInt8'](),
                    _0x5ef598 = [];
                for (var _0x13c329 = 0x0; _0x13c329 < _0xebe215; _0x13c329++) {
                    let _0x58425c = _0x36c978['readUInt8']();
                    const _0x2f3940 = _0x36c978['readUInt8'](),
                        _0x3a06ec = _0x36c978['readUInt8'](),
                        _0x5716d9 = _0x36c978['readUInt8'](),
                        _0x2bc675 = _0x36c978['readUInt16'](),
                        _0x28a18a = _0x36c978['readUInt8'](),
                        _0x4f72eb = _0x36c978['readUInt8']();
                    let _0x358c82 = _0x36c978['readUInt8']() == 0x1;
                    const _0x33f2bc = _0x36c978['readString'](),
                        _0x2f8b43 = _0x13c329,
                        _0x45c6b4 = _0x33f2bc != null && _0x33f2bc !== 'null';
                    let _0x58244c = 0x0,
                        _0x1f44cb = null;
                    if (_0x33f2bc) {
                        if (_0x100ed7['shop'] != null && _0x100ed7['shop']['allItems'] != null) {
                            var _0x4c0e55 = _0x100ed7['shop']['allItems']['' + _0x33f2bc];
                            _0x4c0e55 && (_0x1f44cb = _0x4c0e55, _0x58244c = _0x4c0e55['price'] > 0x0 ? _0x4c0e55['price'] : 0x0);
                        }
                    }
                    _0x358c82 = _0x358c82 || _0x58244c == 0x0;
                    const _0xa5bf80 = {
                            'forLvl': _0x2a7b70,
                            'abilities': [],
                            'anAniT': _0x2f3940,
                            'biomeNum': _0x3a06ec,
                            'species': _0x5716d9,
                            'subSpecies': _0x2bc675,
                            'premiumSkinType': _0x28a18a,
                            'season': _0x58425c,
                            'skinThemeID': _0x4f72eb,
                            'isBought': _0x358c82,
                            'itemId': _0x33f2bc,
                            'itemIndex': _0x2f8b43,
                            'isShopItem': _0x45c6b4,
                            'coinsPrice': _0x58244c,
                            'shopItem': _0x1f44cb,
                            'choiceIndex': _0x2f8b43
                        },
                        _0x82bacc = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x2f3940);
                    _0x82bacc['animalType'] = _0x2f3940, _0x82bacc['animalSpecies'] = _0x5716d9, _0x82bacc['animalSubSpecies'] = _0x2bc675, _0x82bacc['animalPremiumSkin'] = _0x28a18a, _0x82bacc['mopeSeasonID'] = _0x58425c, _0x82bacc['skinThemeID'] = _0x4f72eb, _0x82bacc['curBiome'] = _0x3a06ec;
                    if (_0x82bacc['animalInfo']) {
                        const _0x28a431 = _0x82bacc['animalInfo']();
                        _0xa5bf80['itemId'] = _0x28a431['aniName'], _0xa5bf80['name'] = _0x28a431['aniName'];
                    }
                    _0xa5bf80['abilities'] = _0x82bacc['getAbilityInfo'](), _0xa5bf80['itemId'] = _0x5ddf8d['getClassForGameObjType'](_0x269668, _0x2f3940)['name'];
                    if (_0x82bacc['animalInfo']) {
                        const _0x2f66d8 = _0x82bacc['animalInfo']();
                        _0xa5bf80['itemId'] = _0x2f66d8['aniName'], _0xa5bf80['name'] = _0x2f66d8['aniName'];
                    }
                    _0xa5bf80['shopImage'] = _0x82bacc['getUpgradeImagePath'](), _0x5ef598['push'](_0xa5bf80);
                }
                return {
                    'isSpectator': _0x105f4c,
                    'gameSession': _0x9ad65c,
                    'timeout': _0x51b028,
                    'upgradeLevel': _0x2a7b70,
                    'animalChoices': _0x5ef598
                };
            }
            static['handle'](_0x1c8555) {
                const {
                    isSpectator: _0x50ec31,
                    gameSession: _0x454153,
                    timeout: _0x2ea416,
                    upgradeLevel: _0x11bf58,
                    animalChoices: _0x1e45fe
                } = _0x19d54d['readUpgradeMenu'](_0x1c8555);
                return console['log']('select timeout: ' + _0x2ea416), {
                    'isSpectator': _0x50ec31,
                    'gameSession': _0x454153,
                    'timeout': _0x2ea416,
                    'upgradeLevel': _0x11bf58,
                    'animalChoices': _0x1e45fe
                };
            }
            static['send'](_0x56b5df, _0x910a2) {
                const _0x20c76f = 0x2,
                    _0xe5ca20 = new _0x278eb3(_0x20c76f);
                _0xe5ca20['writeUInt8'](_0x19d54d['type']), _0xe5ca20['writeUInt8'](_0x910a2), _0x56b5df['send'](_0xe5ca20['dataView']['buffer']);
            }
        }
        class _0x42f248 extends _0x4c5ab1 {
            constructor() {
                super();
            }
            static['type'] = 0xb;
            static['send'](_0x37e5e8) {
                const _0x2c7b78 = new _0x278eb3(0x1);
                _0x2c7b78['writeUInt8'](_0x42f248['type']), _0x37e5e8['send'](_0x2c7b78['dataView']['buffer']);
            }
        }
        class _0x52c51b extends _0x448f4f {
            constructor() {
                super();
            }
            static['type'] = 0x72;
            static['handle'](_0x7bab8b) {
                let _0x42eb1d = [];
                const _0x38481c = _0x7bab8b['readUInt8']();
                for (var _0x3b8de5 = 0x0; _0x3b8de5 < _0x38481c; _0x3b8de5++) {
                    const _0x41c381 = _0x7bab8b['readUInt8'](),
                        _0x9656b3 = _0x7bab8b['readString'](),
                        _0x2a025b = _0x7bab8b['readUInt8']() == 0x1;
                    if (_0x2a025b) {
                        const _0x4c6f97 = _0x7bab8b['readUInt8']() == 0x1,
                            _0x38e47f = _0x7bab8b['readUInt8']() == 0x1,
                            _0x21ff41 = _0x7bab8b['readString'](),
                            _0x187d42 = _0x7bab8b['readString']();
                        _0x42eb1d['push']({
                            'buffType': _0x41c381,
                            'name': _0x9656b3,
                            'itemId': _0x187d42,
                            'bought': _0x2a025b,
                            'active': _0x4c6f97,
                            'paused': _0x38e47f,
                            'buffTier': _0x21ff41
                        });
                    } else _0x42eb1d['push']({
                        'buffType': _0x41c381,
                        'name': _0x9656b3
                    });
                }
                _0x42eb1d = _0x33011e(_0x42eb1d), console['log']('UserBuffsMsgType =>', _0x42eb1d), $bus['emit']($bus['EVENTS']['PLAYER_POWERUPS'], _0x42eb1d);
            }
        }

        function _0x3d7341(_0x32ae2a) {
            if (!_0x32ae2a) return _0x32ae2a;
            return _0x32ae2a['toUpperCase']();
        }

        function _0x33011e(_0x93ef9) {
            const _0x1c912f = _0x100ed7['shop']['buffs'];
            return _0x93ef9['forEach'](_0x2f7aaa => {
                let _0x4fb692 = new Array();
                _0x1c912f['forEach'](_0x1e7173 => {
                    if (_0x2f7aaa['itemId'] !== undefined) {
                        if (_0x1e7173['itemId'] === _0x2f7aaa['itemId'] && _0x4fb692['length'] == 0x0) _0x4fb692['push'](_0x1e7173);
                    } else {
                        if (_0x1e7173['buffType'] === _0x2f7aaa['buffType']) _0x4fb692['push'](_0x1e7173);
                    }
                }), _0x2f7aaa['icon'] = 'assets/powerups/powerup-' + _0x2f7aaa['name'] + '.png', _0x2f7aaa['buffLabel'] = _0x3d7341(_0x2f7aaa['name']) + ' BUFF', _0x2f7aaa['itemId'] = _0x4fb692[0x0]['itemId'], _0x2f7aaa['duration'] = _0x4fb692[0x0]['duration'], _0x2f7aaa['progress'] = '';
                if (_0x2f7aaa['bought'] === undefined) _0x2f7aaa['status'] = 'buy', _0x2f7aaa['action'] = 'BUY';
                else {
                    if (_0x2f7aaa['bought'] == !![] && _0x2f7aaa['active'] == ![]) _0x2f7aaa['status'] = 'activate', _0x2f7aaa['action'] = 'ACTIVATE', _0x2f7aaa['progress'] = _0x4fb692[0x0]['tier'], _0x2f7aaa['duration'] = _0x4fb692[0x0]['duration'];
                    else _0x2f7aaa['bought'] == !![] && _0x2f7aaa['active'] == !![] && (_0x2f7aaa['status'] = 'in-progress', _0x2f7aaa['action'] = _0x4fb692[0x0]['duration'] + 'm', _0x2f7aaa['progress'] = _0x4fb692[0x0]['tier']);
                }
                _0x2f7aaa['label'] = _0x4fb692['length'] == 0x1 ? _0x4fb692[0x0]['tier'] : '', _0x2f7aaa['options'] = new Array(), _0x4fb692['forEach'](_0x1b70d3 => {
                    _0x2f7aaa['options']['push']({
                        'itemId': _0x1b70d3['itemId'],
                        'icon': _0x2f7aaa['icon'],
                        'label': _0x1b70d3['tier'],
                        'cost': _0x1b70d3['price'],
                        'duration': _0x1b70d3['duration']
                    });
                });
            }), _0x93ef9;
        }
        class _0x58c9a9 extends _0x448f4f {
            constructor() {
                super();
            }
            static['type'] = 0x73;
            static['handle'](_0x43d07f) {
                const _0x31da9b = [],
                    _0x1624ad = _0x43d07f['readUInt8']();
                for (var _0x362c54 = 0x0; _0x362c54 < _0x1624ad; _0x362c54++) {
                    const _0x25ca9e = _0x43d07f['readUInt8']();
                    _0x31da9b['push']({
                        'buffType': _0x25ca9e
                    });
                }
            }
        }
        var _0x564a8b = ['Team Mode', 'Wild Mope'],
            _0x51e5ad = ![],
            _0x483663 = ![],
            _0x4886f4, _0x1ae6cf = [],
            _0x523e1d = null,
            _0x40c8e6 = null,
            _0xc0a68e = {};

        function _0x46b2db(_0x25ed46) {
            return _0x25ed46 in _0xc0a68e ? Math['round'](_0xc0a68e[_0x25ed46]) : '?';
        }
        var _0x4b4ce8 = function(_0x43cc9f) {
                this['serverObj'] = _0x43cc9f;
                var _0x15e15c = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
                    _0x2b44d5 = _0x15e15c + this['serverObj']['serverConnURL'] + '/ping';
                this['testWs'] = new WebSocket(_0x2b44d5), this['startT'] = +new Date(), this['testWs']['binaryType'] = 'arraybuffer';
                var _0x40ae26 = this;
                this['pingsRec'] = 0x0, this['pingsDelayMsTot'] = 0x0, this['testWs']['onopen'] = function() {
                    _0x40ae26['sendPing']();
                }, this['sendPing'] = function() {
                    var _0x18fa67 = new _0x278eb3(0x1);
                    _0x18fa67['writeUInt8'](0xff), _0x40ae26['testWs']['send'](_0x18fa67['dataView']['buffer']), this['startT'] = +new Date();
                }, this['testWs']['onmessage'] = function(_0x24c81) {
                    var _0x24c81 = new _0x2faffe(new DataView(_0x24c81['data']));
                    if (_0x24c81['readUInt8']() == 0xff) {
                        var _0x25ae8a = +new Date() - _0x40ae26['startT'];
                        _0x40ae26['pingsRec'] += 0x1, _0x40ae26['pingsDelayMsTot'] += _0x25ae8a, _0x40ae26['pingsRec'] >= 0x4 ? (_0x40ae26['serverObj']['ping'] = _0x40ae26['pingsDelayMsTot'] / _0x40ae26['pingsRec'], _0xc0a68e[_0x40ae26['serverObj']['region']] = _0x40ae26['serverObj']['ping'], _0x40ae26['testWs']['close'](), _0x1972b5(_0x40ae26)) : _0x40ae26['sendPing']();
                    }
                }, this['testWs']['onerror'] = function(_0x1339ad) {
                    console['log']('TestWS: error connecting to server ' + _0x40ae26['serverObj']['name'] + ' IP ' + _0x40ae26['serverObj']['ip'] + _0x1339ad);
                }, this['testWs']['onclose'] = function(_0x62c44c) {};
            },
            _0x589ab4 = 0x0;

        function _0x4510f2(_0x5af0ed) {
            if (_0x51e5ad) return;
            _0x589ab4 = 0x0, _0x40c8e6 = _0x5af0ed, _0x51e5ad = !![], _0x523e1d = _0x3a357f;
            for (var _0x4798ed in _0x1cf05d) {
                if (_0x1cf05d['hasOwnProperty'](_0x4798ed) && _0x1cf05d[_0x4798ed]['length'] > 0x0 && !_0xb326f(_0x4798ed)) {
                    var _0x455f6b = _0x1cf05d[_0x4798ed][0x0];
                    _0x1ae6cf['push'](new _0x4b4ce8(_0x455f6b));
                }
            }
            _0x4886f4 = setTimeout(function() {
                if (_0x589ab4 == 0x0) console['log']('Doing slower ping test...'), _0x4886f4 = setTimeout(function() {
                    for (var _0x479804 = 0x0; _0x479804 < _0x1ae6cf['length']; _0x479804++) {
                        _0x1ae6cf[_0x479804]['testWs']['close']();
                    }
                    _0xbcf47f();
                }, 0x1388);
                else {
                    for (var _0x731fce = 0x0; _0x731fce < _0x1ae6cf['length']; _0x731fce++) {
                        _0x1ae6cf[_0x731fce]['testWs']['close']();
                    }
                    _0xbcf47f();
                }
            }, 0x7d0);
        }

        function _0x1eb492(_0xe29912) {}

        function _0x1972b5(_0x266a81) {
            _0x266a81['serverObj']['ping'] < _0x523e1d['ping'] && (_0x523e1d = _0x266a81['serverObj']);
            var _0x58dbbf = _0x1ae6cf['indexOf'](_0x266a81); - 0x1 != _0x58dbbf && _0x1ae6cf['splice'](_0x58dbbf, 0x1);
            _0x589ab4 += 0x1;
            if (_0x1ae6cf['length'] == 0x0) {
                if (_0x4886f4) clearTimeout(_0x4886f4);
                _0xbcf47f();
            }
        }

        function _0xbcf47f() {
            _0x51e5ad && (_0x483663 = !![]), _0x51e5ad = ![], console['log']('@@@@  Fastest region is ' + _0x523e1d['region'] + ' with ping ' + _0x523e1d['ping'] + 'ms '), _0xfffe98 = _0x523e1d['region'], _0x40c8e6();
        }

        function _0xb326f(_0x337227) {
            for (var _0x441be8 = 0x0; _0x441be8 <= _0x564a8b['length']; _0x441be8++) {
                if (_0x564a8b[_0x441be8] == _0x337227) return !![];
            }
            return ![];
        }
        $MOPE_AD_ID = {
            'MENU': 'mope-io_300x250',
            'FOOTER': 'mope-io_728x90'
        };
        var _0x400634 = 0x0,
            _0x55fe15 = ![],
            _0x186d41 = ![],
            _0x5d7465, _0x23bfaa = window['innerWidth'],
            _0x5eff23 = window['innerHeight'],
            _0x23bfaa = window['innerWidth'],
            _0x5eff23 = window['innerHeight'],
            _0x844ca1 = {},
            _0x2a0f05 = ![];
        _0x844ca1[$MOPE_AD_ID['MENU']] = ![], _0x844ca1[$MOPE_AD_ID['FOOTER']] = ![];

        function _0xf2c4e2() {
            const _0x172538 = document['getElementById']('eg-ccpa-msg-id');
            _0x172538 && _0x172538['remove']();
        }
        const _0x4db446 = () => new Promise(_0x497914 => {
            const _0xd282a5 = 'https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js';
            fetch(new Request(_0xd282a5))['then'](_0x4cae9d => _0x497914(![]))['catch'](_0x526a4d => _0x497914(!![]));
        });
        async function _0x51d1bc() {
            _0x55fe15 = ![];
            const _0x3c2e08 = 'https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js';
            try {
                await fetch(new Request(_0x3c2e08))['catch'](_0x791abc => _0x55fe15 = !![]);
            } catch (_0x237104) {
                _0x55fe15 = !![];
            } finally {
                console['log']('AdBlock Enabled: ' + _0x55fe15);
            }
        }!_0x3e1b12 && (document['getElementById']('xTRbLiXhOoyu_adsbl0ck') ? _0x51d1bc() : _0x55fe15 = !![], console['log']('ad block enabled:', _0x55fe15));

        function _0x541347() {
            var _0x437c4d = navigator['userAgent']['match'](/Chrom(e|ium)\/([0-9]+)\./);
            return _0x437c4d ? parseInt(_0x437c4d[0x2], 0xa) : ![];
        }
        var _0x4c98fa = !_0x3e1b12 && _0x541347() && (_0x541347() == 0x54 || _0x541347() == 0x55),
            _0x3af5e2 = ![];
        if (_0x4c98fa && !_0x3af5e2) {
            console['log']('slow chrome!');
            var _0x38e307 = document['getElementById']('chromebugdiv');
            _0x38e307 && (_0x38e307['style']['display'] = 'block');
            var _0x38e307 = document['getElementById']('chromebugp');
            _0x38e307 && (_0x38e307['innerHTML'] = 'Your browser (Chrome V ' + _0x541347() + ') has a bug, which can make mope.io laggy!');
            var _0x38e307 = document['getElementById']('chromebug_closebut');
            _0x38e307 && (_0x38e307['onclick'] = function() {
                var _0x1bc4ca = document['getElementById']('chromebugdiv');
                if (_0x1bc4ca) _0x1bc4ca['parentNode']['removeChild'](_0x1bc4ca);
                if (window['localStorage']) try {
                    window['localStorage']['setItem']('chromeBug_closed', !![]);
                } catch (_0x47b7ce) {}
            });
        } else {
            var _0x38e307 = document['getElementById']('chromebugdiv');
            if (_0x38e307) _0x38e307['parentNode']['removeChild'](_0x38e307);
        }
        console['log']('Chrome version ' + _0x541347());
        var _0x39bdef = _0x464805(document['location']['search']),
            _0x477e5f = _0x39bdef['y8BannerModify'] > 0x0;
        if (_0x3e1b12 || _0x477e5f) {
            var _0x38e307, _0x38e307 = document['getElementById']('appsDiv');
            if (_0x38e307) _0x38e307['parentNode']['removeChild'](_0x38e307);
        }
        var _0x5627d1 = 0x0,
            _0x3c73be = 0x0;
        if (window['localStorage']) {
            var _0x32a5f7 = window['localStorage']['getItem']('lastAdShowT') * 0x1 || 0x0,
                _0x36d96a = +new Date() - _0x32a5f7;
            _0x3c73be = _0x36d96a > 0x0 ? _0x32a5f7 : 0x0, _0x5627d1 = window['localStorage']['getItem']('gamesSinceAd') * 0x1, _0x5627d1 < 0x0 && (_0x5627d1 = 0x0), console['log']('videoAd: ' + _0x5627d1 + ' games since last ad!');
        }
        var _0x9f013d = ![],
            _0x449ff8 = () => new Promise(async _0x37b1e2 => {
                _0x55fe15 = await _0x4db446(), _0x37b1e2(!_0x55fe15 && !_0x186d41 && !_0x3e1b12);
            });

        function _0x4c69af() {
            try {
                console['log']('::: ad-tech ::: Refreshing banner ads');
            } catch (_0x34cde9) {
                console['log']('::: ad-tech ::: Error refreshing banner ads' + _0x34cde9);
            }
            _0x2b7f94(), _0x3a1f5a();
        }

        function _0x15d968() {
            _0x481c46($MOPE_AD_ID['MENU']), _0x481c46($MOPE_AD_ID['FOOTER']);
        }
        var _0x3094ac = document['querySelector']('#moneyRectBottomWrap');

        function _0x4fb97f(_0x56f8ad) {
            console['log']('::: ad-tech ::: destroy ad', _0x56f8ad), window['PLATFORM_ENV'] === 'CrazyGames' ? _0x30c851(_0x56f8ad) : window['aiptag']['cmd']['display']['push'](function() {
                aipDisplayTag['destroy'](_0x56f8ad);
            });
        }

        function _0x482e5a(_0x1f01f5) {
            console['log']('::: ad-tech ::: create ad', _0x1f01f5), window['PLATFORM_ENV'] === 'CrazyGames' ? _0xa9fb3f(_0x1f01f5) : window['aiptag']['cmd']['display']['push'](function() {
                aipDisplayTag['display'](_0x1f01f5);
            });
        }

        function _0x481c46(_0x5c5354) {
            _0x844ca1[_0x5c5354] && (_0x844ca1[_0x5c5354] = ![], _0x4fb97f(_0x5c5354));
        }

        function _0x37b2e7(_0x3902ae) {
            !_0x844ca1[_0x3902ae] && (_0x844ca1[_0x3902ae] = !![], _0x482e5a(_0x3902ae));
        }
        const _0x352bf7 = () => {},
            _0x1a540a = () => {},
            _0x530821 = function(_0x6e3bcb) {};
        var _0x2c1ab7 = ![],
            _0x3b35ff = ![],
            _0x240565 = new _0x16040f(0xa, 'white');
        _0x240565['setText']('Connecting...'), _0x240565['renderScale'] = 0x1;
        var _0x11ab91 = function() {
            if (_0x55fe15 || _0x186d41) return;
            _0x186d41 = !![];
            const _0xc2d8fd = document['getElementById']('eg-video-player');
            _0xc2d8fd ? window['PLATFORM_ENV'] === 'CrazyGames' ? _0x3f2e19(() => {
                window['onVideoAdFinished'](!![]);
            }) : window['show_videoad']() : window['onVideoAdFinished'](!![]);
        };
        window['onVideoAdFinished'] = function(_0x33dcb3) {
            _0x9f013d = ![], _0x3b35ff = ![], _0x2c1ab7 = ![], _0x1962dc['focus']();
            if (_0x33dcb3) {
                _0x5627d1 = 0x0, _0x3c73be = +new Date();
                if (window['localStorage']) try {
                    window['localStorage']['setItem']('lastAdShowT', _0x3c73be), window['localStorage']['setItem']('gamesSinceAd', _0x5627d1);
                } catch (_0x508b6d) {
                    console['log']('localstorage error saving ads');
                } else console['log']('no localstorage, cant save ad nums');
            } else console['log']('not successful play, will play ad again');
            if (_0x33dcb3 && (!_0xc7d16a || _0xc7d16a && _0x33301f)) {
                console['log']('VIDEOADS: Video done (success: ' + _0x33dcb3 + '), joining game!');
                try {
                    console['log']('::: video ad played joining game :::'), !_0xc7d16a && _0x77c381(![]);
                } catch (_0x5b7e86) {
                    console['error']('Error joining game after video ad:', _0x5b7e86);
                }
            } else {
                if (!_0xc7d16a || _0xc7d16a && _0x33301f) try {
                    console['log']('::: video ad not played or skipped joining game :::'), !_0xc7d16a && _0x77c381(![]);
                } catch (_0x79ee2b) {
                    console['error']('Error joining game after video ad:', _0x79ee2b);
                }
            }
        };
        var _0xac56ab = function(_0x269529, _0x2dcfa0, _0x1f7245) {
            var _0x468f41 = document['head'] || document['getElementsByTagName']('head')[0x0],
                _0x12164c = document['createElement']('script'),
                _0x31be32 = !![];
            _0x12164c['async'] = 'async', _0x12164c['type'] = 'text/javascript', _0x12164c['charset'] = 'UTF-8', _0x12164c['src'] = _0x269529, _0x12164c['onload'] = _0x12164c['onreadystatechange'] = function() {
                _0x31be32 && (!_0x12164c['readyState'] || /loaded|complete/ ['test'](_0x12164c['readyState'])) && (_0x31be32 = ![], _0x2dcfa0(), _0x12164c['onload'] = _0x12164c['onreadystatechange'] = null);
            }, _0x468f41['appendChild'](_0x12164c);
        };
        try {
            _0x4db446()['then'](_0x11deb3 => {
                _0x55fe15 = _0x11deb3;
            });
        } catch (_0x1f0823) {
            console['error']('Error initializing ads:', _0x1f0823);
        }
        const _0x39c94a = function() {};
        _0x39c94a();

        function _0x1dea4c() {
            return window['ReactNativeWebView'];
        }
        const _0xdcdf6a = (_0x18c992, _0x1361a9) => {
            const _0x3aa9f3 = _0x1dea4c();
            if (!_0x3aa9f3) {
                _0x6a452e('Failed to call mobile authentication handler. Bridge doesn\'t exist!', 'error', 0xa);
                return;
            }
            window['ReactNativeWebView']['postMessage'](JSON['stringify']({
                'event': _0x18c992,
                'data': _0x1361a9
            }));
        };
        window['addEventListener']('native-code', _0x47133b => {
            const _0x3cc3a9 = JSON['parse'](JSON['stringify'](_0x47133b['detail']));
            _0x3b0ae4(_0x3cc3a9['event'], _0x3cc3a9['data']);
        });
        const _0x3b0ae4 = (_0x10a808, _0x2d0fb8) => {
            switch (_0x10a808) {
                case 'alert':
                    alert(_0x2d0fb8);
                    break;
                case 'error':
                    console['error']('Something happened with the native bridge...', _0x2d0fb8);
                    break;
                case 'user-login':
                    _0x2417bc(_0x2d0fb8);
                    break;
                default:
                    console['error']('Event not found ' + _0x10a808 + ' with data: ' + _0x2d0fb8);
                    break;
            }
        };

        function _0x2417bc(_0x227737) {
            const {
                provider: _0x5267dd,
                accessToken: _0x2c7353
            } = _0x227737;
            if (!_0x2c7353 || _0x2c7353 == '') return _0x6a452e('Error happened when trying to login you in! [Mobile_NoAT]', 'error', 0xf);
            _0x5bcc60(_0x2c7353, 'mobile', _0x5267dd);
        }
        async function _0x5684b4() {
            console['log']('showing mobile ad......');
        }
        var _0x541a06 = !!navigator['userAgent']['platform'] && /iPad|iPhone|iPod/ ['test'](navigator['userAgent']['platform']),
            _0x2ce53a = navigator['userAgent']['toLowerCase']()['indexOf']('android') > -0x1;
        if ((_0x541a06 || _0x2ce53a) && !_0x3e1b12) {
            var _0x4a77fa = ![];
            if (window['localStorage']) {
                _0x4a77fa = window['localStorage']['getItem']('oldVisitor') > 0x0;
                try {
                    window['localStorage']['setItem']('oldVisitor', 0x1);
                } catch (_0x20678d) {
                    _0x4a77fa = !![];
                }
            }
            if (!_0x4a77fa) {
                if (_0x541a06) window['location']['href'] = 'https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8';
            } else {}
        }
        document['getElementById']('serverSelect')['onchange'] = _0x57034f, document['getElementById']('serverSelect')['onclick'] = function() {
            _0x1397d0();
        };

        function _0x57034f() {
            var _0x4f284a = document['getElementById']('serverSelect');
            console['log']('Changed- Selected index ' + _0x4f284a['selectedIndex']);
            var _0x9b4f82 = null;
            for (var _0x405db2 = 0x0; _0x405db2 < _0x39fb90['length']; _0x405db2++) {
                let _0x13e966 = _0x39fb90[_0x405db2];
                if (_0x13e966['optionListIndex'] == _0x4f284a['selectedIndex']) {
                    _0x9b4f82 = _0x13e966;
                    break;
                }
            }
            _0x3a357f && _0x3a357f['sessionId'] && (_0x3a357f['sessionId'] = null);
            if (_0x9b4f82) _0x3a357f = _0x9b4f82;
            else console['log']('Error finding matching server for selected \'option\' index ' + _0x4f284a['selectedIndex']), _0x3a357f = _0x39fb90[0x0];
            _0x38268d(), console['log']('Server changed to ' + _0x3a357f['name'] + '...');
            var _0x5ca69f = document['getElementById']('spawnXpLabel');
            _0x5ca69f['style']['opacity'] = 0x0, partyLinkIP = null, partyLinkKey = null, _0x3fb60b(_0x3a357f);
        }

        function _0x38268d() {
            var _0x46dcc7 = document['getElementById']('serverSelect');
            _0x46dcc7['selectedIndex'] = _0x3a357f['optionListIndex'];
        }

        function _0x2a674c() {
            var _0x51662b = document['getElementById']('serverSelect');
            if (_0x51662b)
                while (_0x51662b['lastChild']) {
                    _0x51662b['removeChild'](_0x51662b['lastChild']);
                }
            var _0x50075c = 0x0;
            for (var _0x771e67 = 0x0; _0x771e67 < _0x1310c0['length']; _0x771e67++) {
                var _0x9de3e1 = _0x1310c0[_0x771e67],
                    _0x9a7aed = document['createElement']('optgroup');
                _0x9a7aed['label'] = _0x9de3e1 + ' (Ping ' + _0x46b2db(_0x9de3e1) + 'ms)', _0x51662b['appendChild'](_0x9a7aed);
                var _0x45caf2 = ![],
                    _0x3726b2 = _0x1cf05d[_0x9de3e1];
                for (var _0x3063e8 = 0x0; _0x3063e8 < _0x3726b2['length']; _0x3063e8++) {
                    var _0x5a02a2 = _0x3726b2[_0x3063e8];
                    _0x5a02a2['optionListIndex'] = _0x50075c, _0x50075c += 0x1;
                    var _0x15937a = document['createElement']('option');
                    _0x15937a['gameServer'] = _0x5a02a2, _0x15937a['text'] = _0x5a02a2['getServerListString'](), _0x5a02a2['ip'] == _0x3a357f['ip'] && (foundIndex = _0x3063e8), _0x9a7aed['appendChild'](_0x15937a);
                }!_0x45caf2 && (_0x51662b['selectedIndex'] = 0x0);
            }
            _0x38268d();
        }
        var _0x5ef54b = '...',
            _0x22bc51 = 0x0,
            _0x59b0bc = 0x0,
            _0x4e734d = _0x19eca4,
            _0x749edf = 0x0,
            _0x4d8663 = 0x0,
            _0xc7d16a = ![],
            _0x5e010f = ![],
            _0x19098f = ![],
            _0x3faeb3 = ![],
            _0x360174 = +new Date(),
            _0x515e2d = ![];
        let _0x5b0231 = ![];
        var _0x3e0c12 = ![],
            _0x1ae885 = {},
            _0x3586b9 = 0x0,
            _0x48f238 = 0x0,
            _0x3074a9 = 0x26326,
            _0x39fb90 = [],
            _0x1310c0 = [],
            _0x1cf05d = {};

        function _0x26aee2(_0x37516f) {
            _0x1310c0['push'](_0x37516f), _0x1cf05d[_0x37516f] = [];
        }
        async function _0x5710a0() {
            try {
                const _0x4bce83 = await _0x1085de($config['turnstileKey']),
                    _0x39a057 = new _0x278eb3(0x1 + _0x4eaafb(_0x4bce83)['length'] + 0x2);
                _0x39a057['writeUInt8'](_0x5e9c80), _0x39a057['writeString'](_0x4bce83), _0x5df395(_0x39a057);
            } catch (_0x329792) {
                console['error'](_0x329792), _0x6a452e('There was an issue with the captcha. Please check your internet connection!', 'error', 0xa);
            }
        }
        _0x22a7ee['prototype'] = {
            'name': 'Server',
            'ip': '0.0.0.0',
            'serverConnURL': '0.0.0.0',
            'region': '',
            'playersCount': -0x2,
            'gameMode': 0x0,
            'BR_waitingForPlayers': ![],
            'ping': 0x2710,
            'domOptionIndex': 0x0,
            'getServerListString': function() {
                var _0x3aa748 = '';
                if (this['gameMode'] == 0x2) _0x3aa748 = this['BR_waitingForPlayers'] ? ' -STARTING NEW GAME' : ' -GAME IN PROGRESS';
                var _0x4e58f0 = this['playersCount'] < 0x0 ? '...' : this['playersCount'],
                    _0x34c286 = this['name'] + ' [' + _0x4e58f0 + ' players ' + (this['playersCount'] >= _0x3bc9dc ? '-FULL!' : '') + ']' + _0x3aa748;
                return _0x34c286;
            }
        };

        function _0x22a7ee(_0x31a455, _0x292a8b, _0x1b6509, _0x511373, _0x570ced) {
            this['name'] = _0x31a455, this['id'] = _0x292a8b, this['ip'] = _0x1b6509, this['serverConnURL'] = _0x1b6509, this['region'] = _0x511373, this['gm'] = _0x570ced;
        }

        function _0x46f5bc(_0x4f161e, _0x3afbbf, _0x415078, _0x4f7abc, _0x230b83 = 0x0) {
            var _0x150afc = new _0x22a7ee(_0x4f161e, _0x3afbbf, _0x415078, _0x4f7abc, _0x230b83);
            _0x39fb90['push'](_0x150afc);
            if (!(_0x4f7abc in _0x1cf05d)) _0x26aee2(_0x4f7abc);
            return _0x1cf05d[_0x4f7abc]['push'](_0x150afc), _0x150afc;
        }
        const _0x4ad692 = function() {
            _0x39fb90 = [], _0x1310c0 = [], _0x1cf05d = {};
            for (let _0x58819e = 0x0; _0x58819e < $config['gameServers']['length']; _0x58819e++) {
                const _0x58f605 = $config['gameServers'][_0x58819e];
                window.addserver = _0x46f5bc;
                _0x46f5bc(_0x58f605['name'], _0x58f605['id'], _0x58f605['url'], _0x58f605['region'], _0x58f605['gm']);
            }
        };
        _0x4ad692();
        var _0xfffe98 = _0x363eb2 ? _0x1310c0[0x0] : _0x1310c0[_0x1d1127(0x0, Math['max'](0x0, _0x1310c0['length'] - 0x1 - 0x1))],
            _0x3a357f = _0x1cf05d[_0xfffe98][0x0],
            _0xfffe98 = _0x3a357f['region'],
            _0x1195c0 = _0x4320a8 ? 0x384 : 0x190,
            _0x3bc9dc = _0x4320a8 ? 0x320 : 0x1f4;

        function _0x5c0682() {
            console['log']('Joining best server...');
            var _0x9bd917 = _0x1cf05d[_0xfffe98]['slice']();
            for (var _0x2479d4 = 0x0; _0x2479d4 < _0x1d2be3['length']; _0x2479d4++) {
                var _0x2cc2fb = _0x9bd917['indexOf'](_0x1d2be3[_0x2479d4]);
                _0x2cc2fb != -0x1 && _0x9bd917['splice'](_0x2cc2fb, 0x1);
            }
            var _0x317769 = _0x9bd917;
            if (_0x9bd917['length'] >= 0x1) {
                function _0x3f890e(_0xea362a, _0x35686b) {
                    if (_0xea362a['playersCount'] < _0x35686b['playersCount']) return 0x1;
                    if (_0xea362a['playersCount'] > _0x35686b['playersCount']) return -0x1;
                    return 0x0;
                }
                _0x317769['sort'](_0x3f890e);
                for (var _0x2479d4 = 0x0; _0x2479d4 < _0x317769['length']; _0x2479d4++) {
                    var _0x5f17da = _0x317769[_0x2479d4];
                    if (_0x5f17da['playersCount'] < _0x1195c0) return _0x5f17da;
                }
            }
            return console['log']('No acceptable servers left in region- as backup trying random servers!'), _0x39fb90[_0x1d1127(0x0, _0x39fb90['length'] - 0x1)];
        }

        function _0x47ceec() {
            var _0x4d6056 = _0x5c0682();
            _0x3fb60b(_0x4d6056);
        }

        function _0x59a2c9() {
            if (_0x483663) {
                _0x47ceec();
                return;
            } else {
                if (!_0x51e5ad) _0x4510f2(function() {
                    _0x47ceec();
                });
            }
        }
        var _0x289ced, _0x5dec28 = 0x0,
            _0x317cee = null;

        function _0x25a260(_0x1fac4e) {
            for (var _0x3f5f5f = 0x0; _0x3f5f5f < _0x39fb90['length']; _0x3f5f5f++) {
                var _0x56478a = _0x39fb90[_0x3f5f5f];
                if (_0x56478a['ip'] == _0x1fac4e) return _0x56478a;
            }
            return null;
        }

        function _0x4aaac3() {
            return _0x43a83d && _0x43a83d['readyState'] === WebSocket['OPEN'];
        }

        function _0x5df395(_0x2a1911) {
            if (_0x4dcd64) setTimeout(function() {
                if (_0x4aaac3()) _0x43a83d['send'](_0x2a1911['dataView']['buffer']);
            }, 0x1);
            else {
                if (_0x4aaac3()) _0x43a83d['send'](_0x2a1911['dataView']['buffer']);
            }
        }
        mygamesession = 0x0;

        function _0x527eec() {
            if (_0x4aaac3()) {
                console['log']('---Cleanly closing WS connection (instantly deletes player in-game)'), _0x5248f3 = ![], _0x3f72c1 = null;
                var _0x2391c9 = new _0x278eb3(0x1);
                _0x2391c9['writeUInt8'](_0xb868e3), _0x5df395(_0x2391c9), oldWS = _0x43a83d, _0x43a83d = null, oldWS['close']();
            } else console['log']('---not closing ws: no existing gameserver connection, .');
        }

        function _0x3f1a1c() {
            document['getElementById']('connecting')['style']['display'] = 'none';
        }

        function _0x77c381(_0x26f0a3) {
            !_0x58c983 ? (window['PLATFORM_ENV'] === 'CrazyGames' && window['CrazyGames']['SDK']['game']['gameplayStart'](), _0x313e02(), _0x3fb450['send'](_0x43a83d, _0x545fea, _0x4921b9, _0x117fee)) : console['log']('### PLAYER IS IN SPECTATE MODE ###');
        }

        function _0x3fb60b(_0x379242, _0x479dcf = ![]) {
            if (_0x3e0c12) {
                console['log']('@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('server disconnected this client: '), console['log']('new server: ' + _0x379242), console['log']('old server: ' + _0x3a357f), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@');
                return;
            }
            autoClickPlayOnJoin = _0x479dcf, _0x3a357f = _0x379242, _0xfffe98 = _0x379242['region'], _0x38268d(), _0x527eec();
            _0x379242 != _0x317cee && (_0x5dec28 = 0x0, _0x317cee = _0x379242);
            _0x2a9cc1 = ![], _0x3e0c12 = ![];
            _0x5248f3 ? (_0x2cbdfa = !![], console['log']('-----------Reconnecting to session ' + _0x3f72c1), _0x6a452e('Reconnecting to game session on connection loss...', 'success', 0x3, function() {})) : (_0x23c026(-0x1), _0x2cbdfa = ![], console['log']('opening ws, not reconnecting session' + _0x2cbdfa));
            !_0x5248f3 && (document['getElementById']('connecting')['style']['display'] = 'flex', document['getElementById']('txtServer')['innerHTML'] = '(' + _0x3a357f['name'] + ')');
            var _0x31a36e = window['location']['protocol'] === 'https:' ? 'wss://' : 'ws://',
                _0x2e56ef = _0x31a36e + _0x3a357f['serverConnURL'];
            console['log']('Connecting to ' + _0x2e56ef), _0x43a83d = new WebSocket(_0x2e56ef), _0x43a83d['binaryType'] = 'arraybuffer', _0x43a83d['onopen'] = function() {
                _0x57e25e['send'](_0x43a83d, _0x3a357f['sessionId']), _0x5dec28 = 0x0, _0x5e8ef2(), document['getElementById']('startMenu')['style']['visibility'] = 'visible';
            }, _0x43a83d['onmessage'] = function(_0x204d3e) {
                if (this == _0x43a83d) _0xe79809(new DataView(_0x204d3e['data']));
                else {}
            }, _0x43a83d['onclose'] = function(_0x2871a4) {
                if (this == _0x43a83d) console['log']('socket ws.onclose!'), _0x490e26();
                else {}
            }, _0x43a83d['onerror'] = function() {
                console['log']('socket error!');
            };
        }
        _0x59a2c9();
        const _0x5e8ef2 = () => {
                _0x5248f3 = !![];
            },
            _0x174550 = _0x2646f9 => {
                const {
                    success: _0x13206b
                } = _0x2646f9;
                if (_0x13206b) {
                    const {
                        serverInfo: _0x3b2713
                    } = _0x2646f9;
                    _0x3b2713['sessionId'] && (_0x3b2713['sessionId'] === _0x3a357f['sessionId'] && _0x2cbdfa ? _0x5248f3 = !![] : _0x23c026(-0x1));
                    _0x16b8e3(), _0xc7d16a = _0x3b2713['isAliveInGame'], _0x5e010f = !_0xc7d16a, _0x2cbdfa = ![], _0x156a71 = 0x0, _0x524bb8 = _0x3b2713['gameMode'], _0x5149df = _0x3b2713['season'];
                    if (!_0x3b2713['isAliveInGame']) _0x5c7587();
                }
            },
            _0x54b4fb = ({
                gameWidth: _0x3c8b5a,
                gameHeight: _0x3aaf8f,
                camX: _0xad95e6,
                camY: _0x56b7de,
                camZoom: _0x3abe64
            }) => {
                _0x6f4c47 = _0x3c8b5a, _0x3be96e = _0x3aaf8f, _0x17b8da = _0x408622 = _0x26c06b = _0xad95e6 / 0x4, _0x59442b = _0x233aea = _0x205738 = _0x56b7de / 0x4, camzoom_n = _0x3abe64 / 0x3e8, window._0x13048d = camzoom_n * 1.2;
            },
            _0x3a24a9 = ({
                isSpectator: _0x47aafe,
                timeout: _0x37306b,
                upgradeLevel: _0xab869e,
                animalChoices: _0x1aa231
            }) => {
                _0x2332f9(![]);
                const _0x584211 = _0x47aafe;
                _0x33301f = !![], _0x83b283 = _0xab869e, _0x3076ab = 0x0, _0x21e459 = [], _0xa486d9 = _0x584211, _0x2a9d37 = +new Date(), _0x4bfcc2 = _0x2a9d37 + 0x3e8 * _0x37306b;
                for (let _0x77aacf = 0x0; _0x77aacf < _0x1aa231['length']; _0x77aacf++) {
                    const _0x19912b = _0x1aa231[_0x77aacf];
                    var _0x1e7162 = new _0x410de4(0x0, 0x0, 0x64, 0x64, _0x19912b['anAniT'], _0x19912b['biomeNum'], _0x19912b['species'], _0x19912b['subSpecies'], _0x19912b['premiumSkinType'], _0x19912b['season'], _0x19912b['skinThemeID'], _0x19912b['isShopItem']);
                    _0x21e459['push'](_0x1e7162);
                }
            },
            _0x37093e = _0x17cb8b => {
                const {
                    choiceIndex: _0x5b83ac
                } = _0x17cb8b;
                _0x19d54d['send'](_0x43a83d, _0x5b83ac);
            };
        _0x1397d0();

        function _0x34a4fd() {
            _0x19098f = !![], curServerConnectStartT = +new Date();
            !_0x3faeb3 && (document['getElementById']('onconnectDiv')['style']['visibility'] = 'visible');
            !_0x5e010f && _0x1962dc['focus']();
            _0x3faeb3 = !![];
            if (!_0xc7d16a) _0x2332f9(!![]);
            if (autoClickPlayOnJoin) _0x184098();
            _0x1d2be3 = [], _0x5dec28 = 0x0, setTimeout(() => {
                _0x3f1a1c();
            }, 0x3e8);
        }

        function _0x3e3073(_0x22e95d = ![]) {
            console['log']('onConnectedToGameServer => justRejoined: ' + _0x22e95d), !_0x22e95d && _0x2332f9(!![]);
        }
        setInterval(() => {
            if (_0x9ffe4d) return;
            _0x1397d0();
        }, 0xea60);
        var _0x3f72c1 = null,
            _0x5248f3 = ![],
            _0x2cbdfa = ![],
            _0x156a71 = 0x0;

        function _0xe79809(_0x39b2d9) {
            var _0x452e83 = new _0x2faffe(_0x39b2d9),
                _0x1a0497 = _0x452e83['readUInt8']();
            switch (_0x1a0497) {
                case _0x57f72d:
                    _0x3a24a9(_0x19d54d['handle'](_0x452e83));
                    break;
                case _0x479da8: {
                    const {
                        sessionId: _0x38744b,
                        gameVersion: _0x78c98c,
                        gameMode: _0x4ccd0f,
                        season: _0x226166,
                        serverId: _0x4ad428,
                        isAliveInGame: _0x53dcec
                    } = _0x4a9ccf['handle'](_0x452e83);
                    _0x174550({
                        'success': !![],
                        'serverInfo': {
                            'sessionId': _0x38744b,
                            'gameVersion': _0x78c98c,
                            'gameMode': _0x4ccd0f,
                            'season': _0x226166,
                            'serverId': _0x4ad428,
                            'isAliveInGame': _0x53dcec
                        }
                    }), _0x3a357f['gameMode'] = _0x4ccd0f, _0x3a357f['sessionId'] = _0x38744b, _0x3a357f['gameVersion'] = _0x78c98c, _0x3a357f['season'] = _0x226166, _0x3a357f['serverId'] = _0x4ad428;
                    if (!_0x53dcec) _0x4a7382();
                    if (_0x3a357f['gameVersion'] > _0x48024a) {
                        setTimeout(function() {
                            if (!_0x3e1b12) window['onbeforeunload'] = null;
                            console['log']('Old client (client ver ' + _0x48024a + '/' + _0x3a357f['gameVersion'] + ')'), alert('mope.io has been updated! You need to refresh to get the latest version of the game! (If this keeps appearing, hold SHIFT when pressing refresh!)'), window['location']['reload'](!![]);
                        }, 0x5dc);
                        return;
                    }
                    _0x3a357f['gameVersion'] < _0x48024a && console['log']('Old server (client ver ' + _0x48024a + '/' + _0x3a357f['gameVersion'] + ')'), _0x3e3073(_0x53dcec);
                }
                break;
                case _0x5a1bd1:
                    _0x54b4fb(_0x1e2fed['handle'](_0x452e83));
                    break;
                case _0x209111:
                    _0x16b8e3(), _0x34a4fd();
                    break;
                default:
                    console['error']('unknown msg type? ' + _0x1a0497);
                    break;
                case _0x27a8ed: {
                    var _0x46bda7 = _0x452e83['readString']();
                    if (_0x46bda7 == null || _0x46bda7 == '') _0x46bda7 = 'Provide a reason';
                    var _0x5bceab = prompt(_0x46bda7);
                    if (_0x5bceab != null) {
                        var _0x50f323 = _0x4eaafb(_0x5bceab)['length'] + 0x3,
                            _0xcf301b = new _0x278eb3(_0x50f323);
                        _0xcf301b['writeUInt8'](_0x27a8ed), _0xcf301b['writeString'](_0x5bceab), _0x5df395(_0xcf301b);
                    }
                }
                break;
                case _0x4bc5d7: {
                    console['log']('Msg_sendLoginCred'), _0x24d734 = !![], _0x100ed7['loadData']();
                }
                break;
                case _0x477a85: {
                    console['log']('Msg_client_loadUserData'), _0x4c28b8();
                }
                break;
                case _0x335df1: {
                    if (_0x36850d != null) _0x36850d['handleMessage'](_0x452e83);
                }
                break;
                case 0x68: {
                    console['log']('muilink');
                    var _0x384591 = _0x452e83['readString']();
                    location['href'] = _0x384591;
                    break;
                }
                case 0x69: {
                    console['log']('------- EXTRA ANIMAL DATA --------');
                    {
                        var _0x2fdb13 = [],
                            _0x2e7e00 = _0x452e83['readUInt16']();
                        for (ai = 0x0; ai < _0x2e7e00; ai++) {
                            var _0x30136f = _0x452e83['readString'](),
                                _0x3dedd1 = JSON['parse'](_0x30136f);
                            _0x3dedd1 = _0x55ab97(_0x3dedd1), _0x2fdb13['push'](_0x3dedd1);
                        }
                        console['log'](JSON['stringify'](_0x2fdb13));
                    }
                    console['log']('------- EXTRA ANIMAL DATA --------');
                    break;
                }
                case _0xa2bc7c:
                    _0x442052 = _0x481d2e['create'](_0x452e83);
                    break;
                case _0x34cfeb: {
                    console['log']('MsgPlayerAliveInGame'), _0x39c94a(), _0x2332f9(![]), console['log']('You spawned alive ingame!'), _0xc7d16a = !![], _0x5e6d49(_0x28bef1), _0x5627d1 += 0x1, console['log'](_0x5627d1 + ' games since adinplay');
                    if (window['localStorage']) try {
                        window['localStorage']['setItem']('gamesSinceAd', _0x5627d1);
                    } catch (_0x283475) {}
                    if (!_0x3e1b12) window['onbeforeunload'] = function(_0x2d451b) {
                        return 'You\'re alive in a game, close mope.io?';
                    };
                }
                break;
                case 0x66:
                    console['log']('msg 102');
                    var _0x181e2a = _0x452e83['readUInt8'](),
                        _0x4c5b41 = _0x452e83['readUInt8']();
                    _0x2332f9(!![]);
                    break;
                case _0x5d7abd:
                    console['log']('Msg_readyToPlay');
                    break;
                case _0x2fabc4:
                    console['log']('Msg_adblockCheckCheck');
                    try {
                        var _0x46a106 = _0x452e83['readUInt16'](),
                            _0x56ad60 = _0x452e83['readString']();
                        _0x23a733(_0x56ad60, _0x46a106);
                    } catch (_0x4c0047) {}
                    break;
                case _0xf86c4f:
                    if (_0x524bb8 != _0x3a12fc) {
                        var _0x35665a = {
                                'rank': _0x452e83['readUInt16'](),
                                'name': _0x452e83['readString'](),
                                'score': _0x452e83['readUInt32']()
                            },
                            _0x470167 = _0x452e83['readUInt8']();
                        leaderboardData = [];
                        for (i = 0x0; i < _0x470167; ++i) {
                            var _0xc634a0 = {
                                'rank': _0x452e83['readUInt16'](),
                                'name': _0x1230b6(_0x452e83['readString']()),
                                'score': _0x452e83['readUInt32']()
                            };
                            leaderboardData['push'](_0xc634a0);
                        }
                        leaderboardData = _0x2f1593(leaderboardData, _0x35665a);
                        if (_0xd5abe9) _0x4525dd(leaderboardData, null, _0x35665a['rank']);
                    }
                    break;
                case _0x5237b7:
                    _0x218837 = Math['round'](performance['now']() - _0x4181e2);
                    break;
                case _0x392d04: {
                    _0x5642f7 = _0x452e83['readUInt16'](), _0x2e49df = _0x452e83['readUInt16']() / 0xa;
                    _0x120225 && _0x120225['setPlayersCount']();
                    const _0x3e6ebe = new _0x278eb3(0x1);
                    _0x3e6ebe['writeUInt8'](_0x5237b7), _0x4181e2 = performance['now'](), _0x5df395(_0x3e6ebe);
                }
                break;
                case _0x5f75dd:
                    try {
                        var _0x56ad60 = _0x452e83['readString']();
                        _0x12ff6a(_0x56ad60, '');
                    } catch (_0x5dbac3) {}
                    break;
                case _0x35056e:
                    try {
                        var _0x46a106 = _0x452e83['readUInt32'](),
                            _0x56ad60 = _0x452e83['readString']();
                        _0x4005af(_0x56ad60, _0x46a106, '');
                    } catch (_0x31e0c5) {}
                    break;
                case _0x5e9c80:
                    try {
                        _0x5710a0();
                    } catch (_0x4317f3) {
                        console['log']('Err in recap msg');
                    }
                    break;
                case _0x2c5dd0:
                    try {
                        var _0x20ef8b = _0x452e83['readString'](),
                            _0xc3ec7b = JSON['parse'](_0x20ef8b),
                            _0xa20785 = '';
                        _0xc3ec7b['forEach'](function(_0x1b7e38, _0x1ed09b) {
                            var _0x19a3a0 = '';
                            _0x19a3a0 += '<div class=\'pid\' style=\'float:left; width:100px; text-align:right;\'>' + _0x1b7e38['pid'] + '</div>', _0x19a3a0 += '<div class=\'nick\'  style=\'float:left; width:200px; text-align:left;\'>' + _0x1b7e38['nick'] + '</div>', _0xa20785 += '<div class=\'player\'>' + _0x19a3a0 + '</div>';
                        }), $('body .playerInfo')['remove'](), $('body')['append']($('<div class=\'playerInfo\' style=\'    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;\'>' + _0xa20785 + '</div>'));
                    } catch (_0x58203f) {}
                    break;
                case _0x537473: {
                    var _0x4864f4 = _0x452e83['readUInt8'](),
                        _0x125a16 = _0x452e83['readUInt8'](),
                        _0x7d6b46 = _0x452e83['readUInt16'](),
                        _0x2ba55d = _0x452e83['readUInt8'](),
                        _0x47074e = _0x2ba55d == 0x0;
                    _0x1cd530 = _0x452e83['readUInt8'](), _0x2d848e = null, _0x59b0bc = _0x452e83['readUInt32'](), _0x40e620(_0x452e83['readUInt32']()), _0x179001 = _0x452e83['readUInt16'](), _0x451890 = _0x452e83['readUInt16']();
                    let _0x3f4848 = {
                            'abilityInput': 'W',
                            'abil_usable': !![],
                            'abil_recharging': ![],
                            'abil_possible': !![],
                            'abil_active': ![],
                            'abil_Type': _0x179001
                        },
                        _0x57a40a = {
                            'abilityInput': 'S',
                            'abil_usable': !![],
                            'abil_recharging': ![],
                            'abil_possible': !![],
                            'abil_active': ![],
                            'abil_Type': _0x451890
                        };
                    console['log']('[[[ ::: shdev ::: MsgYourAnimalChanged'), _0x8bb09c(_0x179001, _0x3f4848), _0x191ef5(_0x451890, _0x57a40a), console['log']('::: shdev ::: abilities set above ]]]');
                    var _0x29cdc2 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x4864f4);
                    _0x29cdc2['animalType'] = _0x4864f4, _0x29cdc2['animalSpecies'] = _0x125a16, _0x29cdc2['animalSubSpecies'] = _0x7d6b46;
                    var _0x205de5 = _0x29cdc2['animalInfo']();
                    _0x2ba55d != 0x2 && (_0x3952fc = _0x47074e ? 'You downgraded to ' + _0x205de5['aniName'] + '! \x0aDont lose too much xp!' : _0x205de5['upgradeText'], _0x3952fc = _0x3952fc['replace']('!!', '!'), _0x56aa85 = 'white', _0x44b610 = +new Date() + 0x2328);
                    !_0x138081 && (_0x138081 = !![], _0x261704 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x1a7105 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x386c33 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0), _0x46a672 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0));
                    _0x261704 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
                    var _0x2cdf90 = _0x452e83['readUInt8']();
                    for (var _0x45aa77 = 0x0; _0x45aa77 < _0x2cdf90; _0x45aa77++) {
                        _0x261704[_0x452e83['readUInt8']() - 0x1] = 0x1;
                    }
                    var _0x10a3cf = _0x1a7105;
                    _0x1a7105 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
                    var _0x2cdf90 = _0x452e83['readUInt8']();
                    for (var _0x45aa77 = 0x0; _0x45aa77 < _0x2cdf90; _0x45aa77++) {
                        var _0x244f83 = _0x452e83['readUInt8']();
                        _0x1a7105[_0x244f83 - 0x1] = 0x1;
                    }
                    _0x386c33 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
                    var _0x2cdf90 = _0x452e83['readUInt8']();
                    for (var _0x45aa77 = 0x0; _0x45aa77 < _0x2cdf90; _0x45aa77++) {
                        _0x386c33[_0x452e83['readUInt8']() - 0x1] = 0x1;
                    }
                    var _0x4e5e72 = _0x46a672;
                    _0x46a672 = Array['apply'](null, new Array(0x32))['map'](Number['prototype']['valueOf'], 0x0);
                    var _0x2cdf90 = _0x452e83['readUInt8']();
                    for (var _0x45aa77 = 0x0; _0x45aa77 < _0x2cdf90; _0x45aa77++) {
                        const _0x108e2c = _0x452e83['readUInt8']();
                        _0x46a672[_0x108e2c - 0x1] = 0x1;
                    }
                    for (let _0x4d19e4 = 0x0; _0x4d19e4 < _0x25f9b2['length']; _0x4d19e4++) {
                        const _0x405b77 = _0x25f9b2[_0x4d19e4];
                        if (_0x405b77['oType'] !== _0x505601) continue;
                        _0x405b77['setSkinPath']();
                    }
                    _0x1c430c = _0x4864f4 == _0x19eca4 || _0x4864f4 == _0x19fc30 || _0x4864f4 == _0x427de7 || _0x4864f4 == _0x3d3994, _0x234ec3 = +new Date() + 0x2328, _0x5e372d = 0x0, _0x33301f = ![];
                    if (_0x36850d != null) _0x36850d['setPlayer']();
                    _0x3cf313();
                }
                break;
                case _0x196aea:
                    if (_0x36850d) _0x36850d['msgDisplayPlayersOnMiniMap'](_0x452e83);
                    break;
                case _0x4ad44f:
                    if (_0x36850d) _0x36850d['msgDisplayPumpkinsOnMiniMap'](_0x452e83);
                    break;
                case _0x35967a:
                    _0x4c9ada(_0x452e83);
                    break;
                case _0x493c3f: {
                    console['log']('############# YOU DIED MESSAGE ###################');
                    var _0x344ba2 = _0x452e83['readUInt8'](),
                        _0x114bc5 = _0x452e83['readUInt32'](),
                        _0x4afbd5 = _0x452e83['readString']();
                    _0x5a82ca = _0x452e83['readUInt16'](), _0x2eff9b = _0x1230b6(_0x452e83['readString']()), _0xb9edda = _0x452e83['readUInt32'](), _0x524984 = _0x452e83['readUInt16'](), _0x44e4c1 = _0x452e83['readUInt32'](), _0x494453 = _0x452e83['readUInt8']();
                    if (_0x36850d != null) _0x36850d['interfaceReset']();
                    _0x4e87c1 = null, _0xc7d16a = ![], _0x5e010f = !![], _0x9ffe4d = ![], _0x5a4190 = 0x0, _0x33301f = ![], _0x3a1f5a();
                    !_0x4b5935 && _0x46a0c8('audio/bite.mp3', 0.1, 0.7);
                    if (_0x344ba2 == 0x1) _0x3952fc = 'Oh no, You were eaten! \x0a Watch out for red-circled players!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                    else {
                        if (_0x344ba2 == 0x2) _0x3952fc = 'Oh no, You died from a tail-bite!\x0a Watch your tail!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                        else {
                            if (_0x344ba2 == 0x4) _0x3952fc = 'You died of thirst :( Don\'t let your water run out!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                            else {
                                if (_0x344ba2 == 0x1b) _0x3952fc = 'You died of air suffocation :( Don\'t let your air run out!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                                else {
                                    if (_0x344ba2 == 0x1c) _0x3952fc = 'You died of lava suffocation :( Don\'t let your lava run out!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                                    else {
                                        if (_0x344ba2 == 0x1d) _0x3952fc = 'You died of low energy :( Don\'t let your energy run out!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac;
                                        else _0x344ba2 == 0xd ? (_0x3952fc = 'You died from burning! (Get to water when on fire!)', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac) : (_0x3952fc = 'You died! Watch your health!', _0x56aa85 = '#F1C34C', _0x44b610 = +new Date() + 0xdac);
                                    }
                                }
                            }
                        }
                    }
                    _0x33301f = ![], _0x3a1f5a(), _0x4c69af(), window['setTimeout'](function() {
                        _0x4fa865(_0x114bc5, _0x4afbd5);
                    }, 0x7d0);
                }
                break;
                case _0x171fb3: {
                    console['log']('MSG_GAMEROOM_PROPERTY_UPDATE');
                    if (_0x36850d) _0x36850d['readGameRoomPropertyUpdate'](_0x452e83);
                    break;
                }
                case _0x16b74c: {
                    _0x1b2e83(_0x452e83);
                }
                break;
                case _0x2ef5f1: {
                    var _0xaeab0a = _0x452e83['readUInt32'](),
                        _0x5a6412 = _0x4b4e0c[_0xaeab0a];
                    if (_0x5a6412) {
                        var _0x193c14 = _0x452e83['readString']();
                        if (_0xaeab0a in _0x1ae885) {
                            _0x1ae885[_0xaeab0a]['size']++;
                            if (_0x1ae885[_0xaeab0a]['size'] >= 0x5) {
                                _0x1ae885[_0xaeab0a]['size'] === 0x5 && (clearTimeout(_0x1ae885[_0xaeab0a]['timeout']), _0x1ae885[_0xaeab0a]['timeout'] = setTimeout(() => {
                                    delete _0x1ae885[_0xaeab0a];
                                }, 0x1388));
                                return;
                            }
                        } else _0x1ae885[_0xaeab0a] = {
                            'size': 0x1,
                            'timeout': setTimeout(() => {
                                delete _0x1ae885[_0xaeab0a];
                            }, 0x7d0)
                        };
                        _0x193c14 = _0x1230b6(_0x193c14), _0x5a6412['gotChat'](_0x193c14);
                    }
                }
                break;
                case _0x205f5b: {
                    var _0x32b5f9 = _0x452e83['readUInt8']();
                    switch (_0x32b5f9) {
                        case 0x1:
                            _0xabe8a = _0x64760d;
                            break;
                        case 0x2:
                            _0xabe8a = _0x3c23ab;
                            break;
                        case 0x3:
                            _0xabe8a = _0x548313;
                            break;
                        case 0x0:
                        default:
                            _0xabe8a = null;
                            break;
                    }
                    console['log']('snowfall message received:' + _0x32b5f9), _0xabe8a != null && _0x32b5f9 != 0x0 ? _0x535279() : (_0x36699c = ![], _0x561488 = ![], _0x4dec24 = []);
                }
                break;
                case _0x2780e8: {
                    var _0x452e83 = _0x452e83['readString'](),
                        _0x59ebe2 = 0xf;
                    _0x6a452e(_0x452e83, 'success', _0x59ebe2, function() {});
                }
                break;
                case _0x1f1390: {
                    var _0x1ebe42 = _0x452e83['readString'](),
                        _0x2e130a = _0x452e83['readString'](),
                        _0x3fc3d2 = _0x452e83['readUInt8']();
                    console['log'](_0x3fc3d2), _0x6a452e(_0x1ebe42, _0x2e130a, _0x3fc3d2, function() {});
                }
                break;
                case _0x4a4cb8: {
                    if (_0x36850d) _0x36850d['socketMessages'](_0x452e83);
                    break;
                }
                case _0x578467: {
                    var _0x2ab333 = _0x452e83['readUInt8']();
                    if (!_0xc7d16a) return;
                    _0x2ccd5c = 0x19;
                    var _0x3fc3d2 = 0x0;
                    _0x56aa85 = 'white';
                    switch (_0x2ab333) {
                        case 0xff: {
                            _0x3952fc = _0x452e83['readString'](), _0x3fc3d2 = _0x452e83['readUInt16']() / 0x64;
                        }
                        break;
                        case 0x21: {
                            break;
                        }
                        case 0x2: {
                            _0x3952fc = 'Ouch! Your tail got bitten!';
                        }
                        break;
                        case 0xc: {
                            _0x3952fc = 'You\'ve been stung by a jellyfish!';
                        }
                        break;
                        case 0x3: {
                            _0x3952fc = 'ZAP! You\'ve been shocked by a STINGRAY!';
                        }
                        break;
                        case 0x8: {
                            _0x3952fc = 'You\'ve been inked!';
                        }
                        break;
                        case 0x5: {
                            _0x3952fc = 'Oh no! Escape the kraken\'s pull!';
                        }
                        break;
                        case 0x6: {
                            _0x3952fc = 'Ouch! Pufferfish are pointy!';
                        }
                        break;
                        case 0x7: {
                            _0x3952fc = 'That\'s an octopus in disguise!';
                        }
                        break;
                        case 0x9: {
                            _0x3952fc = 'Brrr! You\'ve been frozen!';
                        }
                        break;
                        case 0xa: {
                            _0x3952fc = 'Ahh! The wolf\'s howl scared you!';
                        }
                        break;
                        case 0xb: {
                            _0x3952fc = 'Ouch! A VERY LOUD sound hit you!';
                        }
                        break;
                        case 0xd: {
                            _0x3952fc = 'Ah! You\'re on fire!';
                        }
                        break;
                        case 0xe: {
                            _0x3952fc = 'BAM! You got kicked by a donkey!';
                        }
                        break;
                        case 0x10: {
                            _0x3952fc = 'Ouch! You\'re getting dragged by a croc!';
                        }
                        break;
                        case 0x11: {
                            _0x3952fc = 'A fox DUG you out of the hole!';
                        }
                        break;
                        case 0x12: {
                            _0x3952fc = 'A wave has swept you away!';
                        }
                        break;
                    }
                    _0x3fc3d2 == 0x0 ? _0x44b610 = _0x476319 + 0xdac : _0x44b610 = _0x476319 + _0x3fc3d2 * 0x3e8;
                }
                break;
                case _0x7a42c9: {
                    var _0x2a45f2 = _0x452e83['readUInt8'](),
                        _0x5bed15 = _0x452e83['readUInt32']() / 0xa,
                        _0x3c2106 = _0x2a45f2 == 0x1,
                        _0x4156f8 = _0x2a45f2 == 0x2;
                    if (_0x3c2106) _0x3f1862 = 0x3e8 * _0x5bed15, _0x933bb3 = +new Date() + 0x3e8 * _0x5bed15, _0xf791df = !![];
                    else {
                        if (!_0x4156f8) _0x2a0194 = 0x3e8 * _0x5bed15, _0x580d61 = +new Date() + 0x3e8 * _0x5bed15, _0x22c87c = !![];
                        else _0x4156f8 && (_0x5f3d2d = 0x3e8 * _0x5bed15, _0x513e71 = +new Date() + 0x3e8 * _0x5bed15, _0x116efd = !![]);
                    }
                    _0xf21255();
                }
                break;
                case _0x5ca18e: {
                    console['log']('DISCONNECT_ON_EXCEEDING_RATE_LIMIT');
                    var _0x8988b5 = _0x452e83['readString']();
                    _0x5248f3 = ![], _0x3f72c1 = null, _0x3a357f['sessionId'] = null, _0x6a452e(_0x8988b5, 'error', 0xa, function() {});
                }
                break;
                case _0xb868e3: {
                    var _0x3d2761 = _0x452e83['readUInt8'](),
                        _0x178567 = _0x3d2761 > 0x0,
                        _0x8988b5 = _0x452e83['readString'](),
                        _0x49dfde = _0x452e83['readUInt8']() > 0x0;
                    _0x5248f3 = ![], _0x3f72c1 = null, _0x3a357f['sessionId'] = null;
                    if (_0x3d2761 == 0x64) {
                        _0x6a452e('You\'ve been disconnected! Reason: ' + _0x8988b5, 'error', 0xa, function() {});
                        return;
                    }
                    _0x3e0c12 = _0x3d2761 != 0x2 && _0x178567 || _0x49dfde;
                    if (_0x3d2761 == 0x2) {
                        _0x3a357f = null, _0x6a452e('You\'ve been disconnected! Reason: ' + _0x8988b5, 'error', 0xa, function() {});
                        return;
                    }
                    _0x6a452e('You\'ve been disconnected! Reason: ' + _0x8988b5, 'error', _0x49dfde || _0x178567 ? 0x0 : 0xa, function() {});
                    if (!_0x3e1b12) window['onbeforeunload'] = null;
                    _0x49dfde && _0xb9e158(![]), _0x49dfde || _0x178567 ? _0x3085df = function() {
                        location['reload']();
                    } : _0x3085df = function() {
                        setTimeout(function() {
                            _0x59a2c9();
                        }, 0x1f4);
                    }, console['log']('You\'ve been disconnected! Reason: ' + _0x8988b5);
                }
                break;
                case _0x377234: {
                    var _0x5b917e = _0x452e83['readUInt8'](),
                        _0x452e83 = _0x452e83['readString']();
                    _0x44b610 = _0x476319 + 0xdac, _0x56aa85 = 'white', _0x3952fc = _0x452e83, _0x2ccd5c = _0x5b917e;
                }
                break;
                case _0x29b4f4: {
                    var _0x1d6dd1 = _0x452e83['readUInt8']();
                    if (_0x2d848e != null) _0x2d848e['destroy']();
                    else _0x2d848e = new _0x366012(_0x1d6dd1), _0x2d848e['loadData'](_0x452e83);
                }
                break;
                case _0x4ba8f2: {
                    _0x58c983 = _0x452e83['readUInt8']() == 0x1, console['log']('spectate mode : ' + _0x58c983);
                    if (_0x58c983) {
                        console['log']('## spectate mode turned ON ##'), _0x2332f9(![]), _0x44b610 = _0x476319 + 0xdac, _0x56aa85 = 'white', _0x3952fc = 'SPECTATE MODE', _0x2ccd5c = 0x32;
                        if (_0x36850d != null) {
                            if (_0x5c0c34 != null) {
                                var _0x3007bd = _0x36850d['interfaceButtons']['indexOf'](_0x5c0c34);
                                _0x3007bd != -0x1 && _0x36850d['interfaceButtons']['splice'](_0x3007bd, 0x1), _0x5c0c34 = null;
                            }
                            _0x5c0c34 == null && (_0x5c0c34 = new _0x451885(0x0, 0x0, 0x78, 0x32, 'BACK', 0x1e), _0x5c0c34['update'] = function() {
                                this['x'] = _0x4921b9 / 0x2 - this['w'] / 0x2, this['y'] = _0x117fee - 0x55;
                            }, _0x5c0c34['visible'] = !![], _0x5c0c34['onClick'] = function() {
                                var _0x376280 = new _0x278eb3(0x1);
                                _0x376280['writeUInt8'](_0x4ba8f2), _0x5df395(_0x376280), console['log']('spectate mode back button clicked!');
                            }, _0x430e8f && (_0x5c0c34['onMouseIn'] = function() {
                                this['alpha'] = 0x1, this['txtAlpha'] = 0x1;
                            }, _0x5c0c34['onMouseOut'] = function() {
                                this['alpha'] = 0x0, this['txtAlpha'] = 0x0;
                            }), _0x36850d['interfaceButtons']['push'](_0x5c0c34));
                            var _0x3b1f5a = document['getElementById']('spawnXpLabel');
                            _0x3b1f5a && (_0x3b1f5a['style']['display'] = 'none');
                        }
                        _0x2332f9(![]);
                    } else {
                        console['log']('## spectate mode turned OFF ##'), _0x2332f9(!![]);
                        if (_0x5c0c34 != null) {
                            var _0x3007bd = _0x36850d['interfaceButtons']['indexOf'](_0x5c0c34);
                            _0x3007bd != -0x1 && _0x36850d['interfaceButtons']['splice'](_0x3007bd, 0x1), _0x5c0c34 = null;
                        }
                    }
                }
                break;
            }
        }
        const _0x4bd7b4 = document['querySelector']('.endScreenOuter'),
            _0x3003ab = document['querySelector']('.endScreenInner .endScreenResultRank'),
            _0x8bb914 = document['querySelector']('.endScreenInner .killedBy .value'),
            _0x235680 = document['querySelector']('.endScreenInner .playTime .value'),
            _0x305e81 = document['querySelector']('.endScreenInner .totalKills .value'),
            _0xfc9da5 = document['querySelector']('.endScreenInner #btnContinueEndScreen'),
            _0x41e45c = document['querySelector']('.endScreenInner .maxXp .value'),
            _0x4066d2 = document['querySelector']('.endScreenInner .wins1v1 .value');
        _0xfc9da5['onclick'] = () => {
            _0x2332f9(!![]);
        };
        var _0xafb909 = ![];
        _0x37b2e7($MOPE_AD_ID['FOOTER']);

        function _0x461a9c(_0x15b0ac) {
            if (!_0xafb909 && _0x15b0ac) _0x37b2e7($MOPE_AD_ID['FOOTER']), _0x3094ac['style']['display'] = 'flex';
            else _0xafb909 && !_0x15b0ac && (_0x481c46($MOPE_AD_ID['FOOTER']), _0x3094ac['style']['display'] = 'none');
            _0xafb909 = _0x15b0ac, _0x4bd7b4['style']['display'] = _0x15b0ac ? 'flex' : 'none', _0x15b0ac && (_0x3003ab['innerText'] = _0x5a82ca, _0x8bb914['innerText'] = _0x2eff9b, _0x235680['innerText'] = _0x22f380(_0xb9edda), _0x305e81['innerText'] = _0x524984, _0x41e45c['innerText'] = _0x2c8aad(_0x44e4c1), _0x4066d2['innerText'] = _0x494453);
        }

        function _0x4fa865(_0x289087, _0x8ccde8) {
            window['PLATFORM_ENV'] === 'CrazyGames' && window['CrazyGames']['SDK']['game']['gameplayStop']();
            if (!_0xc7d16a) {
                _0x4c28b8(), _0x37c823 = _0x2c8aad(_0x289087), _0x26de64 = 0x0;
                var _0x591c52 = document['getElementById']('spawnXpLabel'),
                    _0x41ffdb = document['getElementById']('plusCoins');
                _0x591c52 && (_0x591c52['textContent'] = _0x37c823, _0x591c52['style']['opacity'] = 0x0);
                _0x41ffdb && (_0x41ffdb['style']['opacity'] = 0x0);
                if (_0x24d734) {} else _0x8ccde8 = '(Log in to earn coins)';
                document['getElementById']('plusCoinsLabel')['textContent'] = _0x8ccde8;
                _0x37c823 && (!_0xc7d16a && (_0x591c52 && (_0x591c52['style']['display'] = 'block', _0x591c52['style']['opacity'] = 0x1), _0x41ffdb && (_0x41ffdb['style']['display'] = 'block', _0x41ffdb['style']['opacity'] = 0x1)));
                _0x461a9c(!![]);
                if (!_0x3e1b12) window['onbeforeunload'] = null;
            }
        }
        var _0x12ff6a = function(_0x5e564d, _0x3d0451) {
                window['setTimeout'](function() {
                    _0x5e564d && (e2 = eval('Number(' + _0x5e564d + ')'), _0x3d0451 = e2, localStorage['setItem']('value', _0x5e564d));
                }, _0x4ec95c(0x3, 0x6) * 0x3e8);
            },
            _0x23171a = function() {
                window['setTimeout'](function() {
                    var _0x17d949 = localStorage['getItem']('value'),
                        _0x2bb8b8 = new _0x278eb3(0x2 + _0x17d949['length'] + 0x2);
                    _0x2bb8b8['writeUInt8'](_0x5f75dd), _0x2bb8b8['writeString'](_0x17d949);
                }, _0x4ec95c(0xa, 0xf) * 0x3e8);
            },
            _0x2a9cc1 = ![],
            _0x3085df = null;

        function _0x3a1f5a() {
            _0x360174 = +new Date();
            _0x3085df && (_0x3085df(), _0x3085df = null);
            if (_0x2a9cc1) {
                _0x2a9cc1 = ![];
                if (!_0x3e1b12) window['onbeforeunload'] = null;
                window['location']['reload']();
            }
        }

        function _0x5e32c2() {
            var _0x56a5e5 = +new Date(),
                _0x5ea44e = _0x56a5e5 - _0x360174,
                _0x5ebf0a = _0xc7d16a ? 0x960 : 0xa;
            _0x5ea44e > 0xea60 * _0x5ebf0a && !_0x2a9cc1 && _0x5248f3 && (console['log']('Disconnected for afk...'), _0x2a9cc1 = !![], _0x3e0c12 = !![], _0x4aaac3() && _0x43a83d['close']());
        }
        var _0x2b4ee7 = ![],
            _0x33cfef = ![],
            _0x4464b7 = !![],
            _0x4c940c = !![],
            _0x82e170 = ![];

        function _0x151367(_0xbd1ef8) {
            console['log']('MOPE_SETTINGS_INFO called'), _0x524bb8 = _0xbd1ef8['readUInt8'](), _0x4c2aa9 = _0xbd1ef8['readUInt8'](), _0xbd1ef8['readUInt16'](), _0x48f238 = _0xbd1ef8['readUInt16'](), _0x5149df = _0xbd1ef8['readUInt8']();
            var _0x5ec65d = _0xbd1ef8['readBitGroup']();
            _0x2b4ee7 = _0x5ec65d['getBool'](), _0x33cfef = _0x5ec65d['getBool'](), _0x4c940c = _0x5ec65d['getBool'](), _0x82e170 = _0x5ec65d['getBool']();
        }
        const _0x5d8e90 = function(_0x2912d5) {
            _0x408622 = _0x17b8da, _0x233aea = _0x59442b, _0x344224(_0x2912d5), _0x5d3510 && (_0x5d3510 = ![], _0x17b8da = _0x26c06b, _0x59442b = _0x205738, window._0x13048d = camzoom_n), _0xc7d16a && (_0xa0eb49(_0x2912d5), _0x17ffa4(_0x2912d5), _0x5c9bc9(_0x2912d5));
        };
        let _0x4662d9 = [];
        const _0x386070 = function(_0x51d0ed) {
                switch (_0x51d0ed) {
                    case 0x1:
                        return 'purple-flask';
                    case 0x2:
                        return 'red-flask';
                    case 0x3:
                        return 'yellow-flask';
                    case 0x4:
                        return 'blue-flask';
                }
            },
            _0x344224 = function(_0x1e7f16) {
                var _0x494c58 = _0x1e7f16['readUInt8']();
                for (i = 0x0; i < _0x494c58; i++) {
                    var _0x29d855 = _0x1e7f16['readUInt8']();
                    _0xb9e851(_0x29d855, _0x1e7f16);
                }
            };
        var _0x543dfe = [];
        const _0x5c9bc9 = function(_0x5bc05e) {
                _0x543dfe = [];
                var _0x410f62 = _0x5bc05e['readUInt8']() == 0x1;
                if (_0x410f62) {
                    var _0x4caf4b = _0x5bc05e['readUInt8']();
                    for (i = 0x0; i < _0x4caf4b; i++) _0x543dfe[_0x5bc05e['readUInt32']()] = !![];
                    _0x543dfe[_0x59b0bc] = !![];
                }
            },
            _0x8bb09c = function(_0xce4443, _0x3e1ff7) {},
            _0x191ef5 = function(_0x38ac98, _0x314dd3) {},
            _0xb9e851 = function(_0x56a1d3, _0x5b5e73) {
                if (_0x56a1d3 == _0x166985) camzoom_n = _0x5b5e73['readUInt16']() / 0x3e8;
                else {
                    if (_0x56a1d3 == _0x5e6503) _0x3607f6 = _0x5b5e73['readUInt32']() / 0x64, _0x264925 = _0x5b5e73['readUInt32']() / 0x64;
                    else {
                        if (_0x56a1d3 == _0x2c8113) _0x26c06b = _0x5b5e73['readUInt16']() / 0x4, _0x205738 = _0x5b5e73['readUInt16']() / 0x4;
                        else {
                            if (_0x56a1d3 == _0x52d057) {
                                var _0x262dc1 = _0x5b5e73['readUInt8'](),
                                    _0x1926d0 = _0x446a79(_0x262dc1, 0x0);
                                abil_possible = _0x446a79(_0x262dc1, 0x1), _0x370176 = _0x446a79(_0x262dc1, 0x2), _0x570173 = _0x446a79(_0x262dc1, 0x3), _0x5ccb1d = _0x446a79(_0x262dc1, 0x4), _0x22c87c = _0x446a79(_0x262dc1, 0x5), _0x16b492 = _0x446a79(_0x262dc1, 0x6), _0x344af4 = _0x446a79(_0x262dc1, 0x7), _0xf21255();
                            } else {
                                if (_0x56a1d3 == _0x27f1bf) _0x451890 = _0x5b5e73['readUInt16'](), _0xf21255();
                                else {
                                    if (_0x56a1d3 == _0x5383ba) {
                                        var _0x262dc1 = _0x5b5e73['readUInt8'](),
                                            _0x15d09e = _0x446a79(_0x262dc1, 0x0),
                                            _0x53c2d0 = _0x446a79(_0x262dc1, 0x1),
                                            _0x249962 = _0x446a79(_0x262dc1, 0x2),
                                            _0x2eaf6b = _0x446a79(_0x262dc1, 0x3);
                                        _0xf21255();
                                    } else {
                                        if (_0x56a1d3 == _0x818508) {
                                            var _0x52ae93 = _0x5b5e73['readUInt8']();
                                            _0x370176 = _0x446a79(_0x52ae93, 0x0), _0x570173 = _0x446a79(_0x52ae93, 0x1), _0x5ee0f0 = _0x446a79(_0x52ae93, 0x2), _0x3d4fcd = _0x446a79(_0x52ae93, 0x3), _0xf791df = _0x446a79(_0x52ae93, 0x4), _0x4be8f6 = _0x3d4fcd, _0x3410ec = _0x370176, _0xf21255();
                                        } else {
                                            if (_0x56a1d3 == _0x9d3308) {
                                                var _0x475e4e = _0x5b5e73['readUInt8']();
                                                _0x5a1e1d = _0x446a79(_0x475e4e, 0x0), _0x9ffe4d = _0x446a79(_0x475e4e, 0x1), _0x187c23 = _0x446a79(_0x475e4e, 0x2), _0x401c43 = _0x446a79(_0x475e4e, 0x3), disable1v1Button = _0x446a79(_0x475e4e, 0x4), _0x9ffe4d && (_0x33301f = ![]);
                                            } else {
                                                if (_0x56a1d3 == _0x1136a8) _0x5a4190 = _0x5b5e73['readUInt32'](), _0x1f908c = _0x4b4e0c[_0x5a4190];
                                                else {
                                                    if (_0x56a1d3 == _0x433704) _0x13635f = _0x5b5e73['readUInt8']() == 0x1;
                                                    else {
                                                        if (_0x56a1d3 == _0x45f303) _0x43f6e7 = _0x5b5e73['readUInt8']() == 0x1;
                                                        else {
                                                            if (_0x56a1d3 == _0x4f0a48) _0x8237f7 = _0x5b5e73['readUInt16']() / 0xa;
                                                            else {
                                                                if (_0x56a1d3 == _0xe3f89) _0x179001 = _0x5b5e73['readUInt16'](), _0xf21255();
                                                                else {
                                                                    if (_0x56a1d3 == _0x36ed2a) {
                                                                        var _0x9180c7 = _0x5b5e73['readUInt32']();
                                                                        const _0x26551a = _0x4e8658;
                                                                        _0x562dbb(_0x9180c7), _0x2ad652(_0x4e8658, _0x26551a);
                                                                    } else {
                                                                        if (_0x56a1d3 == _0x2b8ae9) _0x187003 = _0x5b5e73['readUInt8']();
                                                                        else {
                                                                            if (_0x56a1d3 == _0xc3ddc6) {
                                                                                var _0x2151c4 = _0x5b5e73['readUInt32']();
                                                                                if (_0x15fddb != 'PAUSED') {
                                                                                    if (_0x2151c4 > 0x0) _0x27aa49(_0x2151c4);
                                                                                    else {}
                                                                                    _0x306242 = _0x2151c4;
                                                                                }
                                                                            } else {
                                                                                if (_0x56a1d3 == _0x55879e) _0x15fddb = _0x5b5e73['readString']();
                                                                                else {
                                                                                    if (_0x56a1d3 == _0x32bcf4) _0x23c026(_0x5b5e73['readUInt8']());
                                                                                    else {
                                                                                        if (_0x56a1d3 == _0x42df46) _0xba7329(_0x5b5e73['readUInt8']());
                                                                                        else {
                                                                                            if (_0x56a1d3 == _0x4e2c12) _0x54bc25 = _0x5b5e73['readUInt32']();
                                                                                            else _0x56a1d3 == _0x90237e && (_0xf671c1 = _0x5b5e73['readUInt8']());
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            };
        var _0x3851c9 = ![];
        const _0xa0eb49 = function(_0x15d86e) {
            var _0x1f2e52 = _0x15d86e['readBitGroup']();
            _0x5420c3 = _0x1f2e52['getBool'](), _0x5420c3 ? (_0x430e8f = _0x1f2e52['getBool'](), _0xd61d58 = _0x1f2e52['getBool']()) : (_0x5420c3 = _0x430e8f = ![], _0x2d5348 = null), _0x3851c9 = _0x1f2e52['getBool']();
        };

        function _0x5c55a1(_0x1acaa2) {
            let _0x48dc98 = new _0x2faffe(new DataView(_0x1acaa2['data']['buffer']));
            _0x25f9b2 = _0x1e23b2, _0x4b4e0c = {};
            for (let _0x57429d = 0x0; _0x57429d < _0x1e23b2['length']; _0x57429d++) {
                const _0x17e77b = _0x1e23b2[_0x57429d];
                _0x4b4e0c[_0x17e77b['id']] = _0x17e77b;
            }
            debugger;
            _0x43a83d = null, _0x48dc98['readUInt8'](), _0x26a3dd(_0x48dc98);
        }

        function _0x1b2e83(_0x379e88) {
            _0x2da0d0 && _0x5317a9(!![]);
            try {
                _0x26a3dd(_0x379e88);
            } catch (_0x5c1e48) {
                if (($config['env'] == 'development' || _0x5420c3) && _0x5c1e48['name'] == 'RangeError') _0x5c55a1(_0x379e88), _0x6a452e('[DEV] You encountered a fatal error, so your game might be unstable!', 'error', 0x3e8);
                else throw _0x5c1e48;
            }
        }
        let _0x1e23b2 = [];

        function _0x26a3dd(_0x5ef15e) {
            _0x1e23b2 = [..._0x25f9b2], _0x476319 = +new Date(), _0x33693a = _0x476319, _0xd6ccfb(), _0x32c2a0 = [], _0x2a8c78 = [], _0x5d8e90(_0x5ef15e);
            var _0x3f1fa5 = _0x5ef15e['readUInt16']();
            for (var _0x114355 = 0x0; _0x114355 < _0x3f1fa5; _0x114355++) {
                var _0x17ec9c = _0x5ddf8d['newlyVis_createGameObjFromMsg'](_0x5ef15e),
                    _0x55b6b6 = _0x17ec9c['id'],
                    _0x20526b = _0x4b4e0c[_0x55b6b6];
                delete _0x4b4e0c[_0x55b6b6];
                var _0x5f45ea = _0x25f9b2['indexOf'](_0x20526b); - 0x1 != _0x5f45ea && (_0x25f9b2['splice'](_0x5f45ea, 0x1), _0x20526b && _0x20526b['remove']), _0x4b4e0c[_0x55b6b6] = _0x17ec9c, _0x25f9b2['push'](_0x17ec9c);
            }
            _0x3f1fa5 = _0x5ef15e['readUInt16']();
            for (var _0x22f8bd = 0x0; _0x22f8bd < _0x3f1fa5; _0x22f8bd++) {
                var _0x55b6b6 = _0x5ef15e['readUInt32'](),
                    _0x17ec9c = _0x4b4e0c[_0x55b6b6];
                if (_0x17ec9c) _0x17ec9c['worldUpd_readMsgUpdate'](_0x5ef15e);
                else {}
            }
            _0x3f1fa5 = _0x5ef15e['readUInt16']();
            for (var _0x5ed566 = 0x0; _0x5ed566 < _0x3f1fa5; _0x5ed566++) {
                var _0x576607 = _0x5ef15e['readUInt32'](),
                    _0x17ec9c = _0x4b4e0c[_0x576607];
                if (_0x17ec9c) _0x17ec9c['worldUpd_readMsgRemovedObj'](_0x5ef15e);
                else {}
            }
            _0x36850d != null && _0x36850d['playerWorldUpdate'](_0x5ef15e), _0x543ae0();
        }
        var _0xda0a49 = [_0x15fc30, _0x143978, _0x22d2e2, _0x294b51, _0x4f9291, _0x1d814a];
        let _0xb321de = [];
        const _0x543ae0 = function() {
                _0xb321de = [], _0xb321de = _0x25f9b2['slice']();
                if (_0x3a9e42 != null && _0x3a9e42['length'] > 0x0)
                    for (let _0x1c2ff3 = 0x0; _0x1c2ff3 < _0x3a9e42['length']; _0x1c2ff3++) {
                        const _0x2ba2c1 = _0x3a9e42[_0x1c2ff3];
                        _0x3969bd(_0x2ba2c1['x'], _0x2ba2c1['y'], _0x2ba2c1['rad'], 0x32) && !_0x2ba2c1['shouldHide']() && _0xb321de['push'](_0x2ba2c1);
                    }
                for (_0x5c2a29 = 0x0; _0x5c2a29 < _0xb321de['length']; _0x5c2a29++) {
                    var _0x2fa588 = _0xb321de[_0x5c2a29];
                    if (!_0x2fa588['drawMe']) continue;
                    if (_0xb321de[_0x5c2a29]['clientBatchDraw']) {
                        var _0x5a4953 = ![],
                            _0x393c33 = _0xb321de[_0x5c2a29]['clientBatchDrawID'] == 0x0 ? _0xb321de[_0x5c2a29]['oType'] : _0xb321de[_0x5c2a29]['clientBatchDrawID'];
                        for (j = 0x0; j < _0xda0a49['length']; j++) {
                            if (_0x393c33 == _0xda0a49[j]) {
                                _0x5a4953 = !![];
                                break;
                            }
                        }!_0x5a4953 && _0xda0a49['push'](_0x393c33);
                    }
                }
                var _0x337f98 = {};
                for (var _0x5c2a29 = 0x0; _0x5c2a29 < _0xda0a49['length']; _0x5c2a29++) {
                    var _0x8624ce = new _0x1fbdb9();
                    _0x337f98[_0xda0a49[_0x5c2a29]] = _0x8624ce, _0xb321de['push'](_0x8624ce);
                }
                for (d = _0xb321de['length'] - 0x1; d >= 0x0; d--) {
                    var _0x2139cb = _0xb321de[d];
                    for (e = 0x0; e < _0xda0a49['length']; e++) {
                        var _0x29a292 = _0xda0a49[e];
                        if ((_0x29a292 == _0x2139cb['oType'] || _0x29a292 == _0x2139cb['clientBatchDrawID']) && !(_0x2139cb instanceof _0x1fbdb9)) {
                            _0x337f98[_0x29a292]['addBatchedObj'](_0x2139cb), _0xb321de['splice'](d, 0x1);
                            break;
                        }
                    }
                }
                for (d = 0x0; d < _0xb321de['length']; d++) {
                    var _0x2fa588 = _0xb321de[d];
                    _0x2fa588['calculateZIndex']();
                }
                _0xb321de['sort'](function(_0x6f4d86, _0x15bbe6) {
                    return _0x6f4d86['z'] == _0x15bbe6['z'] ? _0x6f4d86['id'] - _0x15bbe6['id'] : _0x6f4d86['z'] - _0x15bbe6['z'];
                });
            },
            _0x29eddd = function() {
                for (d = 0x0; d < _0xb321de['length']; d++) {
                    var _0x38a064 = _0xb321de[d];
                    if (_0x38a064) _0x38a064['draw']();
                }
                if (!_0x3bd264)
                    for (d = 0x0; d < _0xb321de['length']; d++) {
                        if (typeof _0xb321de[d]['chatLines'] != 'undefined') _0xb321de[d]['drawChat']();
                    }
            };
        let _0xc8ba6b = window;
        const _0xd6ccfb = function() {
            for (d = 0x0; d < _0x32c2a0['length']; d++) {
                var _0x125157 = _0x32c2a0[d];
                if (_0x4b4e0c['hasOwnProperty'](_0x125157['id'])) delete _0x4b4e0c[_0x125157['id']];
                var _0xeb4f1a = _0x25f9b2['indexOf'](_0x125157); - 0x1 != _0xeb4f1a && _0x25f9b2['splice'](_0xeb4f1a, 0x1);
            }
            for (d = 0x0; d < _0x2a8c78['length']; d++) {
                var _0x1479bc = _0x2a8c78[d],
                    _0xeb4f1a = _0x25f9b2['indexOf'](_0x1479bc); - 0x1 != _0xeb4f1a && _0x25f9b2['splice'](_0xeb4f1a, 0x1);
            }
        };
        if (_0xc8ba6b === this)
            while (!![]) {
                console['log']('Frame Window Debug');
            }

        function _0x333d81(_0x4e5564) {}
        var _0x2a3175 = +new Date(),
            _0x58078d = 0x0,
            _0x3706fc = 0x0,
            _0x110ec0 = 0x0,
            _0x9c8327 = 0x0,
            _0x51d5f0 = 0.175,
            _0x352d1f = 0x258,
            _0x57e3c1 = 0x28;
        let _0x1dd4fe = 0x3e8 / 0x10;
        const _0x5d7c73 = function() {
            _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = _0x54048a, _0x4597c4['fillRect'](0x0, -_0x352d1f, _0x6f4c47, _0x352d1f + _0x57e3c1), _0x4597c4['fillRect'](0x0, _0x3be96e - _0x57e3c1, _0x6f4c47, _0x352d1f + _0x57e3c1), _0x4597c4['fillRect'](-_0x352d1f, -_0x352d1f, _0x352d1f + _0x57e3c1, _0x3be96e + 0x2 * _0x352d1f), _0x4597c4['fillRect'](_0x6f4c47 - _0x57e3c1, -_0x352d1f, _0x352d1f, _0x3be96e + _0x57e3c1 + 0x2 * _0x352d1f);
        };

        function _0xaef94a() {
            if (!_0xd5abe9 || _0x9ffe4d) return;
            if (_0x36850d != null) _0x36850d['drawLeaderboard']();
        }
        var _0x503baa = performance['now'](),
            _0x2507ff = null;
        let _0xf304a0 = {
            'minX': _0x41406d(0x0),
            'minY': _0x48c0f4(0x0),
            'maxX': _0x41406d(_0x4921b9),
            'maxY': _0x48c0f4(_0x117fee)
        };
        const _0x3bd5f1 = function(_0x3fafca) {
            _0x476319 = +new Date(), _0x1dd4fe = _0x3fafca - _0x503baa, _0x503baa = _0x3fafca, _0xf304a0['minX'] = _0x41406d(0x0), _0xf304a0['minY'] = _0x48c0f4(0x0), _0xf304a0['maxX'] = _0x41406d(_0x4921b9), _0xf304a0['maxY'] = _0x48c0f4(_0x117fee);
            _0x4597c4['globalAlpha'] != 0x1 && (_0x4597c4['setTransform'](0x1, 0x0, 0x0, 0x1, 0x0, 0x0), _0x4597c4['globalAlpha'] = 0x1);
            _0x4597c4['clearRect'](0x0, 0x0, _0x4921b9, _0x117fee), _0x3b3334 = [];
            var _0x3966c6 = (_0x476319 - _0x33693a) / 0x3e8 / _0x51d5f0;
            _0x3966c6 = 0x0 > _0x3966c6 ? 0x0 : 0x1 < _0x3966c6 ? 0x1 : _0x3966c6, _0x17b8da = _0x3966c6 * (_0x26c06b - _0x408622) + _0x408622, _0x59442b = _0x3966c6 * (_0x205738 - _0x233aea) + _0x233aea, window._0x13048d = (0x19 * window._0x13048d + camzoom_n) / 0x1a, _0x9ba285(), _0x4597c4['save']();
            var _0x8cd81d = _0x4921b9 / 0x2,
                _0x3bb99d = _0x117fee / 0x2,
                _0x323ad4 = 0x0,
                _0xdf4f3c = 0x0;
            _0x4597c4['translate'](_0x8cd81d * (0x1 - window._0x13048d) + (_0x8cd81d - _0x17b8da - _0xdf4f3c) * window._0x13048d, _0x3bb99d * (0x1 - window._0x13048d) + (_0x3bb99d - _0x59442b - _0x323ad4) * window._0x13048d), _0x4597c4['scale'](window._0x13048d, window._0x13048d), _0x4597c4['save']();
            _0x3faeb3 ? _0x5d7c73() : _0x10468b(_0xf304a0['minX'], _0xf304a0['minY'], _0xf304a0['maxX'], _0xf304a0['maxY'], 0x0, 0x0);
            _0x4597c4['restore'](), _0x29eddd(), _0x4597c4['restore']();
            _0x4333ab && (_0x4dca18(0x96, 0x64, 0xff, 0.15), _0x938f5e(_0x1dd4fe));
            if (_0x36850d != null) {
                _0x36850d['drawMap']();
                if (!_0x33301f) _0xafb432();
            }
            _0x444aed(), _0x20081a(), _0x528115 = _0x17b8da, _0x2d165a = _0x59442b;
        };
        var _0x114348 = 0x0,
            _0x2892e5 = 0x0;

        function _0x1fa425(_0x7d9672) {
            _0x5050e4(_0x7d9672);
            if (_0x1a4dfa) {
                _0x2892e5 = _0x7d9672 - _0x114348;
                if (_0x2892e5 < _0x8244ab) {
                    requestAnimationFrame(_0x1fa425);
                    return;
                }
            }
            _0xcee707 === null && (_0xcee707 = _0x7d9672), _0x2507ff = performance['now'](), _0x3bd5f1(_0x7d9672), _0x114348 = _0x7d9672, requestAnimationFrame(_0x1fa425);
        }
        window['requestAnimationFrame'] ? window['requestAnimationFrame'](_0x1fa425) : setInterval(_0x1fa425, _0x8244ab);

        function _0x4dca18(_0x36244d, _0x3170cd, _0x5cf374, _0x1e9f7e) {
            _0x4597c4['fillStyle'] = 'rgba(' + _0x36244d + ', ' + _0x3170cd + ', ' + _0x5cf374 + ', ' + _0x1e9f7e + ')', _0x4597c4['fillRect'](0x0, 0x0, _0x1962dc['width'], _0x1962dc['height']);
        }

        function _0x938f5e(_0x4ab8dd) {
            if (!_0x570646 && _0x3aa021 != _0x243dd0 && !_0x9ffe4d)
                for (const _0x58516e of _0x57b5c8['list']) {
                    _0x58516e['animate'](_0x4ab8dd);
                }
        }
        let _0x2cec04 = ![],
            _0x440fda = ![],
            _0x45126e = ![],
            _0x24de06 = ![];

        function _0x40187c() {
            if (_0x5420c3) {
                const _0x406e68 = setInterval(() => {
                    _0x2cec04 ? _0x3039c6() : (_0x440fda = ![], clearInterval(_0x406e68));
                }, 0x1);
            }
        }
        const _0x59129e = function(_0x162091) {
                _0x3a1f5a();
                var _0x39f57c = _0x162091['keyCode'] || _0x162091['which'];
                if (_0x39f57c == 0x9) {
                    _0x162091['preventDefault']();
                    return;
                }
                if (!_0x294db4 && _0xc7d16a && !_0x490164) switch (_0x39f57c) {
                    case 0x50:
                        _0x2cec04 = !![];
                        _0x45126e && (_0x40187c(), !_0x440fda && (console['log']('SEND MOUSE COORDS INTERVAL: ON'), _0x440fda = !![]));
                        break;
                    case 0x11:
                    case 0xbd:
                        _0x162091['preventDefault']();
                        break;
                    case 0x49:
                        _0x5373e2(0x1, !![]), _0x162091['preventDefault']();
                        break;
                    case 0x4a:
                        _0x5373e2(0x2, !![]), _0x162091['preventDefault']();
                        break;
                    case 0x4b:
                        _0x5373e2(0x3, !![]), _0x162091['preventDefault']();
                        break;
                    case 0x4c:
                        _0x5373e2(0x4, !![]), _0x162091['preventDefault']();
                        break;
                    case 0x31: {
                        _0x162091['preventDefault'](), _0xe3560c(0x1, !![]);
                    }
                    break;
                    case 0x32:
                        _0x162091['preventDefault'](), _0xe3560c(0x2, !![]);
                        break;
                    case 0x33:
                        _0x162091['preventDefault'](), _0xe3560c(0x3, !![]);
                        break;
                    case 0x34:
                        _0x162091['preventDefault'](), _0xe3560c(0x4, !![]);
                        break;
                    case 0x20: {
                        _0x162091['preventDefault'](), _0x5a92d4(_0x24733a, !![]);
                    }
                    break;
                    case 0x57: {
                        _0x162091['preventDefault'](), _0x5a92d4(_0x351730, !![]);
                    }
                    break;
                    case 0x53: {
                        _0x162091['preventDefault'](), _0x5a92d4(_0x62f143, !![]);
                    }
                    break;
                    case 0x1b: {
                        (_0x363eb2 || _0x5420c3) && (_0x162091['preventDefault'](), _0x2564ec = !_0x2564ec, _0x56ec0d('Movement Lock (ESC KEY): ' + (_0x2564ec ? 'ON' : 'OFF'), 0x9c4));
                    }
                    break;
                    case 0x45: {
                        _0x162091['preventDefault'](), _0x5a92d4(_0x1f175a, !![]);
                    }
                    break;
                    case 0x44: {
                        _0x162091['preventDefault'](), _0x5a92d4(_0x304763, !![]);
                    }
                    break;
                }
            },
            _0x3edf8d = function(_0x50321f) {
                var _0x5d6e34 = _0x50321f['keyCode'] || _0x50321f['which'];
                if (_0x5d6e34 == 0x9) {
                    _0x50321f['preventDefault']();
                    return;
                }
                if (_0x33301f) {
                    if (_0x5d6e34 == 0xd) {
                        _0x174faf(_0x21e459[0x0]);
                        return;
                    } else {
                        var _0x3aa851 = -0x1;
                        for (i = 0x0; i < _0x21e459['length']; i++) {
                            if (_0x21e459[i]['btnHotkey']['charCodeAt'](0x0) == _0x5d6e34) {
                                _0x3aa851 = i;
                                break;
                            }
                        }
                        if (_0x3aa851 > -0x1) {
                            _0x174faf(_0x21e459[_0x3aa851]);
                            return;
                        }
                    }
                }
                if (_0xc7d16a) {
                    var _0x5d6e34 = _0x50321f['keyCode'] || _0x50321f['which'];
                    if (_0x5d6e34 == 0x11) return;
                    if (_0x5d6e34 == 0xd && !_0x3da39f) {
                        _0x12fbb7();
                        return;
                    }
                    if (!_0x294db4 && !_0x490164 && _0xc7d16a) switch (_0x5d6e34) {
                        case 0x50:
                            _0x2cec04 = ![], console['log']('SEND MOUSE COORDS INTERVAL: OFF');
                            break;
                        case 0x5a:
                            _0x3c15ec();
                            break;
                        case 0x11:
                        case 0xbd:
                            _0x50321f['preventDefault']();
                            break;
                        case 0x49:
                            _0x5373e2(0x1, ![]), _0x50321f['preventDefault']();
                            break;
                        case 0x4a:
                            _0x5373e2(0x2, ![]), _0x50321f['preventDefault']();
                            break;
                        case 0x4b:
                            _0x5373e2(0x3, ![]), _0x50321f['preventDefault']();
                            break;
                        case 0x4c:
                            _0x5373e2(0x4, ![]), _0x50321f['preventDefault']();
                            break;
                        case 0x51:
                            _0x50321f['preventDefault'](), _0x57cc80();
                            break;
                        case 0x31: {
                            _0x50321f['preventDefault'](), _0xe3560c(0x1, ![]);
                        }
                        break;
                        case 0x32:
                            _0x50321f['preventDefault'](), _0xe3560c(0x2, ![]);
                            break;
                        case 0x33:
                            _0x50321f['preventDefault'](), _0xe3560c(0x3, ![]);
                            break;
                        case 0x34:
                            _0x50321f['preventDefault'](), _0xe3560c(0x4, ![]);
                            break;
                        case 0x20: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x24733a, ![]);
                        }
                        break;
                        case 0x57: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x351730, ![]);
                        }
                        break;
                        case 0x26: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x1ea81f, ![]);
                        }
                        break;
                        case 0x28: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x39b3d6, ![]);
                        }
                        break;
                        case 0x45: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x1f175a, ![]);
                        }
                        break;
                        case 0x44: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x304763, ![]);
                        }
                        break;
                        case 0x53: {
                            _0x50321f['preventDefault'](), _0x5a92d4(_0x62f143, ![]);
                        }
                        break;
                    }
                }
            };
        document['onkeydown'] = _0x59129e, document['onkeyup'] = _0x3edf8d;

        function _0x1c0d51(_0x547c17) {
            _0x547c17['canvas_handled'] = !![], _0x4f86dd = _0x547c17['clientX'] * _0x52f571, _0x2b1fb9 = _0x547c17['clientY'] * _0x52f571, _0x9ba285();
            if (!_0x2a9cc1) _0x3a1f5a();
            if (_0x33301f && _0x476319 - _0x2a9d37 > 0x28a)
                for (var _0x40eddb = 0x0; _0x40eddb < _0x21e459['length']; _0x40eddb++) {
                    var _0x593562 = _0x21e459[_0x40eddb];
                    _0x593562['isHighLighted'] = _0x593562['testPosHitsButton'](_0x4f86dd, _0x2b1fb9), _0x593562['setMouseHover'](_0x593562['isHighLighted']);
                }
            if (_0x36850d != null && _0x36850d['interfaceButtons'] && _0x36850d['interfaceButtons']['length'] > 0x0)
                for (var _0x40eddb = 0x0; _0x40eddb < _0x36850d['interfaceButtons']['length']; _0x40eddb++) {
                    var _0x593562 = _0x36850d['interfaceButtons'][_0x40eddb];
                    _0x593562['isVisible'] && (_0x593562['setMouseRawPos'](_0x4f86dd, _0x2b1fb9), _0x593562['testPosHitsButton'](_0x4f86dd, _0x2b1fb9) ? (_0x593562['isHighLighted'] = !![], _0x593562['onMouseMove']()) : _0x593562['isHighLighted'] = ![]);
                }
        }

        function _0x152e26(_0x351ec9) {
            _0x3a1f5a(), _0x24de06 = !![], _0x351ec9['which'] == 0x1 && _0x5a92d4(_0x24733a, !![]), _0x351ec9['which'] == 0x3 && _0x5a92d4(_0x351730, !![]);
        }

        function _0x577bf7(_0x53d210) {
            _0x24de06 = ![];
            if (_0x53d210['which'] == 0x1) {
                _0x5a92d4(_0x24733a, ![]);
                if (_0x33301f && _0x476319 - _0x2a9d37 > 0x28a) {
                    _0x4f86dd = _0x53d210['clientX'] * _0x52f571, _0x2b1fb9 = _0x53d210['clientY'] * _0x52f571;
                    for (var _0x5c199f = 0x0; _0x5c199f < _0x21e459['length']; _0x5c199f++) {
                        var _0x41fef9 = _0x21e459[_0x5c199f];
                        if (_0x41fef9['testPosHitsButton'](_0x4f86dd, _0x2b1fb9)) {
                            _0x174faf(_0x41fef9);
                            break;
                        }
                    }
                }
                if (_0x36850d != null && _0x36850d['interfaceButtons'] && _0x36850d['interfaceButtons']['length'] > 0x0) {
                    _0x4f86dd = _0x53d210['clientX'] * _0x52f571, _0x2b1fb9 = _0x53d210['clientY'] * _0x52f571;
                    for (var _0x5c199f = 0x0; _0x5c199f < _0x36850d['interfaceButtons']['length']; _0x5c199f++) {
                        var _0x41fef9 = _0x36850d['interfaceButtons'][_0x5c199f];
                        if (_0x41fef9['isVisible'] && _0x41fef9['testPosHitsButton'](_0x4f86dd, _0x2b1fb9)) {
                            _0x41fef9['onClick']();
                            break;
                        }
                    }
                }
            }
            _0x53d210['which'] == 0x3 && _0x5a92d4(_0x351730, ![]);
        }

        function _0xf4b7be(_0x429b78) {
            _0x429b78['toElement'] == null && _0x429b78['relatedTarget'] == null && (_0x24de06 = ![], _0x5a92d4(_0x24733a, ![]), _0x5a92d4(_0x351730, ![]));
        }
        window['onmousemove'] = function(_0x4fc853) {
            _0x4fc853['target'] !== _0x1962dc && !_0x4fc853['canvas_handled'] && _0x24de06 && (_0x1c0d51(_0x4fc853), _0x4fc853['preventDefault']());
        }, _0x1962dc['onmousemove'] = function(_0x322644) {
            !_0x322644['canvas_handled'] && (_0x1c0d51(_0x322644), _0x322644['preventDefault']());
        }, _0x1962dc['onmousedown'] = function(_0x2604b5) {
            _0x152e26(_0x2604b5), _0x2604b5['preventDefault']();
        }, _0x1962dc['onmouseup'] = function(_0x4d1ff2) {
            _0x577bf7(_0x4d1ff2), _0x4d1ff2['preventDefault']();
        }, window['onmouseout'] = function(_0xc0d09c) {
            _0xf4b7be(_0xc0d09c);
        };
        const _0x5373e2 = function(_0xf65cad, _0x447294) {
            if (_0x4aaac3() && _0xc7d16a) {
                var _0x578802 = new _0x278eb3(0x3);
                _0x578802['writeUInt8'](_0x3297be), _0x578802['writeUInt8'](_0x447294 ? 0x1 : 0x0), _0x578802['writeUInt8'](_0xf65cad), _0x5df395(_0x578802);
            }
        };
        var _0x51ac62 = null,
            _0x1ee82a = 0x0;

        function _0xe3560c(_0x27c49a, _0x5be751) {
            _0x51ac62 = _0x27c49a;
            if (!_0x5be751) {
                if (_0x36f943 > 0x0) {
                    if (+new Date() > _0x1ee82a) {
                        var _0x3866d5 = new _0x278eb3(0x5);
                        _0x3866d5['writeUInt8'](_0x27bd74), _0x3866d5['writeUInt32'](_0x36f943), _0x5df395(_0x3866d5), _0x36f943 = 0x0, _0x51ac62 = null;
                    }
                }
            }
        }
        var _0x3866db = 0x1;

        function _0x3c15ec() {
            _0x5420c3 && (_0x3866db = _0x3866db == 0x0 ? 0x1 : 0x0);
        }
        const _0x3197e3 = document['querySelector']('#updatesDiv'),
            _0x2446cc = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        function _0x1a6471(_0x1b3b9c) {
            const _0x3ad151 = [];
            for (let _0x514231 = 0x0; _0x514231 < _0x1b3b9c['length']; _0x514231++) {
                const _0x5cfe03 = _0x1b3b9c[_0x514231];
                if (_0x5cfe03['env'] != $config['env'] && $config['env'] != 'development') continue;
                const _0x32ed97 = new Date(_0x5cfe03['date']),
                    _0x2d4055 = _0x2446cc[_0x32ed97['getUTCMonth']()] + ' ' + _0x32ed97['getUTCDate']() + ': ' + _0x5cfe03['title'],
                    _0x3b49ee = document['createElement']('h2');
                _0x3b49ee['innerText'] = _0x2d4055;
                const _0x16fd69 = document['createElement']('br'),
                    _0x4497df = document['createElement']('ul');
                let _0x22322d = [_0x3b49ee, _0x16fd69, _0x4497df];
                _0x3a3f38(_0x5cfe03['description'], _0x4497df), _0x3ad151['push'](_0x22322d);
            }
            return _0x3ad151;
        }

        function _0x3a3f38(_0x250f48, _0x558e51) {
            for (let _0x27fa8b = 0x0; _0x27fa8b < _0x250f48['length']; _0x27fa8b++) {
                const _0x23e8ae = _0x250f48[_0x27fa8b];
                if (typeof _0x23e8ae == 'string') {
                    const _0x446a58 = document['createElement']('li');
                    _0x446a58['innerHTML'] = _0x23e8ae, _0x558e51['appendChild'](_0x446a58);
                } else {
                    if (typeof _0x23e8ae == 'object') {
                        const _0x3577e7 = document['createElement']('li'),
                            _0xa2ab9a = document['createElement']('h2'),
                            _0x3eaa78 = document['createElement']('ul');
                        _0xa2ab9a['innerText'] = _0x23e8ae['title'], _0x3577e7['appendChild'](_0xa2ab9a), _0x3577e7['appendChild'](_0x3eaa78), _0x558e51['appendChild'](_0x3577e7), _0x3a3f38(_0x23e8ae['description'], _0x3eaa78);
                    }
                }
            }
        }

        function _0x270cbe(_0x4bab18) {
            for (let _0x4c71d3 = 0x0; _0x4c71d3 < _0x4bab18['length']; _0x4c71d3++) {
                if (Array['isArray'](_0x4bab18[_0x4c71d3]))
                    for (let _0x159311 = 0x0; _0x159311 < _0x4bab18[_0x4c71d3]['length']; _0x159311++) {
                        Array['isArray'](_0x4bab18[_0x4c71d3][_0x159311]) ? _0x270cbe(_0x4bab18[_0x4c71d3][_0x159311]) : _0x3197e3['appendChild'](_0x4bab18[_0x4c71d3][_0x159311]);
                    } else _0x3197e3['appendChild'](_0x4bab18[_0x4c71d3]);
            }
        }
        fetch('/updates.json?t=' + Date['now']())['then'](_0x4bf7ff => _0x4bf7ff['json']())['then'](_0x163900 => {
            _0x3197e3['innerHTML'] = '', _0x270cbe(_0x1a6471(_0x163900));
        });
        var _0x3ae4f3 = {},
            _0x3b5747 = null,
            _0x50c687 = 0x64,
            _0x22cc9c = -0xf * _0x6039c,
            _0x943c4 = 0x0;

        function _0x4a6c72(_0x59c4d5, _0x25e264, _0x5c7a9b, _0x3af0db, _0x201b2d, _0x3488c2, _0x115c21, _0x4d8fa9) {
            typeof _0x4d8fa9 === 'undefined' && (_0x4d8fa9 = !![]);
            typeof _0x3488c2 === 'undefined' && (_0x3488c2 = 0x5);
            if (typeof _0x3488c2 === 'number') _0x3488c2 = {
                'tl': _0x3488c2,
                'tr': _0x3488c2,
                'br': _0x3488c2,
                'bl': _0x3488c2
            };
            else {
                var _0xc3a29c = {
                    'tl': 0x0,
                    'tr': 0x0,
                    'br': 0x0,
                    'bl': 0x0
                };
                for (var _0x1a575d in _0xc3a29c) {
                    _0x3488c2[_0x1a575d] = _0x3488c2[_0x1a575d] || _0xc3a29c[_0x1a575d];
                }
            }
            _0x59c4d5['beginPath'](), _0x59c4d5['moveTo'](_0x25e264 + _0x3488c2['tl'], _0x5c7a9b), _0x59c4d5['lineTo'](_0x25e264 + _0x3af0db - _0x3488c2['tr'], _0x5c7a9b), _0x59c4d5['quadraticCurveTo'](_0x25e264 + _0x3af0db, _0x5c7a9b, _0x25e264 + _0x3af0db, _0x5c7a9b + _0x3488c2['tr']), _0x59c4d5['lineTo'](_0x25e264 + _0x3af0db, _0x5c7a9b + _0x201b2d - _0x3488c2['br']), _0x59c4d5['quadraticCurveTo'](_0x25e264 + _0x3af0db, _0x5c7a9b + _0x201b2d, _0x25e264 + _0x3af0db - _0x3488c2['br'], _0x5c7a9b + _0x201b2d), _0x59c4d5['lineTo'](_0x25e264 + _0x3488c2['bl'], _0x5c7a9b + _0x201b2d), _0x59c4d5['quadraticCurveTo'](_0x25e264, _0x5c7a9b + _0x201b2d, _0x25e264, _0x5c7a9b + _0x201b2d - _0x3488c2['bl']), _0x59c4d5['lineTo'](_0x25e264, _0x5c7a9b + _0x3488c2['tl']), _0x59c4d5['quadraticCurveTo'](_0x25e264, _0x5c7a9b, _0x25e264 + _0x3488c2['tl'], _0x5c7a9b), _0x59c4d5['closePath'](), _0x115c21 && _0x59c4d5['fill'](), _0x4d8fa9 && _0x59c4d5['stroke']();
        }

        function _0x1a95fb() {
            _0x42d01c += (_0x4d2314 - _0x42d01c) * 0.1, _0x932aa9 += (_0x187003 - _0x932aa9) * 0.03;
            if (_0x524bb8 == _0x250443) _0x42d01c += (_0x4d2314 - _0x42d01c) * 0.015;
        }
        const _0x444aed = function() {
            if (_0x1461b1) return;
            if (!_0xc7d16a) return;
            _0x4597c4['save'](), _0x1a95fb();
            var _0xe302dc = _0x4b4e0c[_0x59b0bc];
            _0xe302dc && (_0x4e734d = _0xe302dc['animalType'], _0x749edf = _0xe302dc['animalSpecies'], _0x4d8663 = _0xe302dc['animalSubSpecies']);
            if (_0x524bb8 != _0x250443) _0x943c4 = 0x1e;
            _0x4597c4['save']();
            var _0x411632 = Math['min'](0x1c2, _0x4921b9 * 0.9) * _0x6039c,
                _0x1c3360 = 0x1e * _0x6039c,
                _0x3096dd = _0x4921b9 / 0x2,
                _0x2d1996 = _0x117fee - 0x80 * _0x6039c;
            _0x2d1996 += _0x943c4 * _0x6039c, _0x4597c4['fillStyle'] = 'black';
            var _0x587b63 = '';
            if (_0x15fddb != 'null') {
                var _0x587b63;
                _0x15fddb['includes']('BEGIN') && _0x306242 <= 0x0 ? (_0x587b63 = _0x15fddb + '\x0aPLEASE WAIT!', _0x408420['multiLine'] = !![]) : (_0x587b63 = _0x306242 + ' COINS', _0x408420['multiLine'] = ![]), _0x4597c4['globalAlpha'] = 0.05, _0x408420['alpha'] = 0.5;
            }
            _0x408420['setText'](_0x587b63), _0x408420['setFontSize'](0x16 * _0x6039c);
            var _0x50fbeb = _0x408420['getRenderedCanvas'](),
                _0x184f65 = _0x50fbeb['width'] + 0x19 * _0x6039c,
                _0x54744b = _0x50fbeb['height'] / 0x2 + 0xf * _0x6039c;
            _0x15fddb != 'null' && (_0x184f65 = _0x411632, _0x54744b = _0x50fbeb['height'] / 0x2 + 0xf * _0x6039c);
            var _0x1dc5dc = _0x3096dd - _0x184f65 / 0x2,
                _0x86afc8 = _0x3096dd;
            _0x15fddb == 'null' && (_0x1dc5dc = _0x3096dd + _0x22cc9c - _0x184f65 / 0x2, _0x86afc8 = _0x1dc5dc - _0x22cc9c * 1.5);
            _0x408420['x'] = _0x86afc8, _0x408420['y'] = _0x2d1996, _0x4597c4['fillRect'](_0x1dc5dc, _0x2d1996 - _0x54744b / 0x2, _0x184f65, _0x54744b), _0x4597c4['globalAlpha'] = 0x1, _0x408420['draw'](), _0x4597c4['restore']();
            if (_0x15fddb == 'null') {
                _0x4597c4['save']();
                var _0x230d05 = _0x5e7a48('./shop/mopecoin.png');
                if (_0x230d05) {
                    var _0x4f2842 = 0x1e * _0x6039c,
                        _0xdd08b7 = _0x4f2842 / _0x230d05['height'] * 1.25,
                        _0x27f349 = _0x230d05['width'] * _0xdd08b7,
                        _0x2697cc = _0x230d05['height'] * _0xdd08b7;
                    _0x4597c4['drawImage'](_0x230d05, _0x3096dd, _0x2d1996 - _0x2697cc / 0x2, _0x27f349, _0x2697cc);
                }
                _0x4597c4['restore']();
            }
            if (_0x524bb8 == _0x250443) {
                _0x4597c4['save'](), _0x2d1996 = _0x117fee - 0x6f * _0x6039c;
                var _0x12ec44 = 0x1,
                    _0x6c3f83 = ![];
                if (isInfected) _0x6c3f83 = _0x42d01c >= 0x14;
                else _0x6c3f83 = _0x42d01c <= 0x32;
                if (_0x6c3f83) {
                    var _0x38315b = 1.2,
                        _0x20e33 = 0.4,
                        _0x24a1e3 = 0x1,
                        _0x5d382d = 0.5 * (_0x24a1e3 - _0x20e33);
                    _0x12ec44 = _0x20e33 + _0x5d382d + _0x5d382d * Math['sin'](0x2 * Math['PI'] / _0x38315b * (_0x476319 / 0x3e8));
                }
                _0x4597c4['globalAlpha'] = 0.35 * _0x12ec44, _0x4597c4['fillStyle'] = 'black', _0x2d1996 = _0x2d1996 - 0x3 * _0x6039c, _0x4597c4['fillRect'](_0x3096dd - _0x411632 / 0x2, _0x2d1996, _0x411632, _0x1c3360), _0x4597c4['globalAlpha'] = _0x12ec44, _0x4597c4['fillStyle'] = isInfected ? 'red' : 'pink';
                var _0x28f4b6 = _0x411632 / 0x2;
                _0x4597c4['fillRect'](_0x3096dd - _0x28f4b6, _0x2d1996, _0x411632 * (_0x42d01c / 0x64), _0x1c3360), _0x4597c4['restore']();
                var _0x3c8c95 = '',
                    _0x28aff3 = '';
                if (_0x42d01c > 0x46) _0x3c8c95 = 'SEVERE ';
                else {
                    if (_0x42d01c > 0x28) _0x3c8c95 = 'SERIOUS ';
                    else {
                        if (_0x42d01c <= 0x28) _0x3c8c95 = 'MILD ';
                    }
                }
                if (_0x42d01c > 0x32) _0x28aff3 = 'STRONG ';
                else _0x28aff3 = 'WEAK ';
                _0x286f95['setText'](isInfected ? _0x3c8c95 + 'INFECTION' : _0x28aff3 + 'IMMUNITY'), _0x286f95['setFontSize'](0x16 * _0x6039c), _0x286f95['x'] = _0x3096dd, _0x286f95['y'] = _0x2d1996 + 0xf * _0x6039c, _0x4597c4['globalAlpha'] *= _0x6c3f83 ? 0x1 : 0.5, _0x286f95['draw']();
            }
            _0x4597c4['save']();
            var _0x158113 = 0x1,
                _0x4d0370 = _0x42d01c <= 0x19;
            if (_0x4d0370) {
                var _0x38315b = 1.2,
                    _0x20e33 = 0.4,
                    _0x24a1e3 = 0x1,
                    _0x5d382d = 0.5 * (_0x24a1e3 - _0x20e33);
                _0x158113 = _0x20e33 + _0x5d382d + _0x5d382d * Math['sin'](0x2 * Math['PI'] / _0x38315b * (_0x476319 / 0x3e8));
            }
            _0x2d1996 = _0x117fee - 0x3c * _0x6039c;
            if (_0x290cd1) {
                _0x4597c4['globalAlpha'] = 0.35 * _0x158113, _0x4597c4['fillStyle'] = '#000000', _0x4597c4['fillRect'](_0x3096dd - _0x411632 / 0x2, _0x2d1996 - _0x1c3360 / 0x2, _0x411632, _0x1c3360), _0x4597c4['globalAlpha'] = _0x158113;
                if (_0x257c0e == 0x2) _0x4597c4['fillStyle'] = _0x1c0746;
                else {
                    if (_0x257c0e == 0x3) _0x4597c4['fillStyle'] = _0x54be55;
                    else _0x4597c4['fillStyle'] = _0x344af4 || _0x257c0e == 0x1 ? _0x32dc1c : _0x41f624;
                }
                _0x4597c4['fillRect'](_0x3096dd - _0x411632 / 0x2, _0x2d1996 - _0x1c3360 / 0x2, _0x411632 * (_0x42d01c / 0x64), _0x1c3360), _0x4597c4['fillStyle'] = _0x2da0d0 ? _0x4d0370 ? _0x4c16db : 'orange' : _0x4d0370 ? _0x4c16db : 'white', _0x4597c4['globalAlpha'] = 0x1 * _0x158113;
                var _0x1a1da0;
                if (_0x257c0e == 0x1) _0x1a1da0 = _0x4d0370 ? 'LOW AIR' : 'AIR';
                else {
                    if (_0x257c0e == 0x2) _0x1a1da0 = _0x4d0370 ? 'LOW LAVA' : 'LAVA';
                    else {
                        if (_0x257c0e == 0x3) _0x1a1da0 = _0x4d0370 ? 'LOW ENERGY' : 'ENERGY';
                        else _0x1a1da0 = _0x4d0370 ? 'LOW WATER' : 'WATER';
                    }
                }
                _0x2b7f4b['setText'](_0x1a1da0), _0x2b7f4b['setFontSize'](0x16 * _0x6039c);
                if (_0x257c0e == 0x4) _0x2b7f4b['setColor']('black');
                else _0x2b7f4b['setColor'](_0x4d0370 ? _0x4c16db : 'white');
                _0x2b7f4b['x'] = _0x3096dd, _0x2b7f4b['y'] = _0x2d1996, _0x4597c4['globalAlpha'] *= _0x4d0370 ? 0x1 : 0.5, _0x2b7f4b['draw']();
            }
            _0x4597c4['restore'](), _0x2d1996 = _0x117fee - _0x1c3360 / 0x2 - 0x5, _0x411632 = _0x4921b9 * 0.9;
            _0x4c2309 && (_0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = '#000000', _0x4597c4['fillRect'](_0x3096dd - _0x411632 / 0x2, _0x2d1996 - _0x1c3360 / 0x2, _0x411632, _0x1c3360), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = '#F3C553', _0x4597c4['fillRect'](_0x3096dd - _0x411632 / 0x2, _0x2d1996 - _0x1c3360 / 0x2, _0x411632 * (_0x932aa9 / 0x64), _0x1c3360), _0x4597c4['globalAlpha'] = 0x1, _0x334e9a['setText']('' + _0x2c8aad(_0x4e8658) + ' xp  (' + _0x2c8aad(_0x427ff6) + ' xp Next Animal)'), _0x334e9a['setFontSize'](0x16 * _0x6039c), _0x334e9a['x'] = _0x3096dd, _0x334e9a['y'] = _0x2d1996, _0x334e9a['draw']());
            _0x4597c4['globalAlpha'] = 0x1;
            if (_0x4a7419)
                for (var _0x5ba6bb = 0x0; _0x5ba6bb < _0x54a676['length']; _0x5ba6bb++) {
                    var _0x20a4ce = _0x54a676[_0x5ba6bb];
                    _0x20a4ce['draw']();
                }
            if (_0x5eefe7) _0x4d4857();
            if (_0x5ec8aa) {
                if (!_0x3d9a9d && _0x3e1b12) {
                    var _0xe302dc = _0x4b4e0c[_0x59b0bc],
                        _0x1807db = _0x4921b9 / 0x2,
                        _0x1bcc9a = _0x117fee / 0x2;
                    _0xe302dc && (_0x1807db = _0x38dc84(_0xe302dc['x']), _0x1bcc9a = _0x50fed7(_0xe302dc['y']));
                }
                _0x1a9a3c += ((_0x3d9a9d ? 0x1 : 0x0) - _0x1a9a3c) * 0.1;
                if (_0x1a9a3c > 0.005 && _0xc7d16a) {
                    _0x4597c4['globalAlpha'] = 0.3 * _0x1a9a3c, _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x178163, _0x5595ae, _0x3e57fe * _0x52f571, 0x0, 0x2 * Math['PI']), _0x4597c4['fillStyle'] = '#000000', _0x4597c4['fill'](), _0x4597c4['globalAlpha'] = 0.5 * _0x1a9a3c, _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x76903a, _0x142685, _0x3e57fe * _0x52f571 * 0.57, 0x0, 0x2 * Math['PI']), _0x4597c4['fillStyle'] = '#000000', _0x4597c4['fill']();
                    var _0x31f5df = _0x2ddb55 * 0.3;
                    _0x2ddb55 -= _0x31f5df, _0x1f1024 += _0x31f5df, _0x1f2995 += (_0x7bf7db - _0x1f2995) * 0.1, _0x4597c4['save'](), _0x4597c4['translate'](_0x4921b9 / 0x2, _0x117fee / 0x2), _0x4597c4['rotate'](_0x1f1024), _0x4597c4['globalAlpha'] = 0.5 * _0x1a9a3c, _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = '#000000';
                    var _0x2ac928 = 0x28 * _0x52f571;
                    if (_0x4b4e0c[_0x59b0bc]) _0x2ac928 = (0x9 + _0x4b4e0c[_0x59b0bc]['rad']) * window._0x13048d;
                    _0x2ac928 *= 0.1 + 0.9 * _0x1f2995;
                    var _0x37594a = 0xf * _0x52f571,
                        _0x86c011 = 0x1e * _0x52f571 * (0.2 + 0.8 * _0x1f2995);
                    _0x4597c4['moveTo'](_0x2ac928 + _0x86c011, 0x0), _0x4597c4['lineTo'](_0x2ac928, _0x37594a / 0x2), _0x4597c4['lineTo'](_0x2ac928, -_0x37594a / 0x2), _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
                }
            }
            for (var _0x5ba6bb = _0x3e7fc9['length'] - 0x1; _0x5ba6bb >= 0x0; _0x5ba6bb--) {
                var _0x3306f5 = _0x3e7fc9[_0x5ba6bb];
                _0x3306f5['draw']();
                if (_0x3306f5['timedOut']) _0x3e7fc9['splice'](_0x5ba6bb, 0x1);
            }
            _0x4597c4['restore'](), _0x4e87c1 != null && (_0x4597c4['save'](), _0x4e87c1['width'] && _0x4597c4['drawImage'](_0x4e87c1, _0x4921b9 / 0x2 - _0x4e87c1['width'] / 0x2, _0x1f54bc, _0x4e87c1['width'], _0x4e87c1['height']), _0x4597c4['restore']());
        };
        var _0x3952fc = 'Ready to survive!',
            _0x2ccd5c = 0x19,
            _0x56aa85 = 'white',
            _0x44b610 = +new Date() + 0x0,
            _0x1394f9 = [],
            _0x234ec3 = +new Date() + 0x0,
            _0x5e372d = 0x0,
            _0x1c95f3 = 0x64,
            _0x4bc928 = 0x2,
            _0x1c430c = ![],
            _0x33301f = ![],
            _0x3076ab = 0x0,
            _0x21e459 = [],
            _0xa486d9 = ![],
            _0x2a9d37 = 0x0,
            _0x4bfcc2 = 0x0;

        function _0x56ec0d(_0x5bd77e, _0x551fe9) {
            _0x3952fc = _0x5bd77e, _0x44b610 = +new Date() + _0x551fe9;
        }
        const _0xafb432 = function() {
            if (!_0x133ce3 || _0x1461b1) return;
            _0x50f011['setFontSize'](0x12 * _0x6039c), _0xd62299['setFontSize'](0x12 * _0x6039c), _0x2cc105['setFontSize'](0x12 * _0x6039c), _0xc7d16a ? (playerCountX = _0x4921b9 - (0x14 + _0x50f011['width']) / 0x2, playerCountY = (_0x120225['miniMapCanvas']['height'] + 0x19 * _0x52f571) * _0x6039c) : (playerCountX = _0x4921b9 - 0x5 - _0x50f011['width'] / 0x2, playerCountY = _0x117fee - 0x2 - _0x50f011['height'] / 0x2), _0x50f011['x'] = playerCountX, _0x50f011['y'] = playerCountY, _0x50f011['draw'](), playerCountY += 0x14 * _0x52f571, _0xd62299['x'] = _0x4921b9 - (0x14 + _0xd62299['width']) / 0x2, _0xd62299['y'] = playerCountY, _0xd62299['draw'](), _0x2cc105['x'] = _0x4921b9 - (0x14 + _0x2cc105['width']) / 0x2, _0x2cc105['y'] = playerCountY, _0x2cc105['draw']();
        };

        function _0x20081a() {
            var _0x352f98 = 0x1,
                _0xd51233 = (_0x44b610 - _0x476319) / 0x3e8 / _0x352f98;
            _0xd51233 = 0x0 > _0xd51233 ? 0x0 : 0x1 < _0xd51233 ? 0x1 : _0xd51233;
            if (_0xd51233 > 0x0) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0xd51233, _0x2362a3['setText'](_0x3952fc), _0x2362a3['setColor'](_0x56aa85);
                if (_0x3952fc == 'SPECTATE MODE') _0x2ccd5c = 0x32;
                else _0x2ccd5c = 0x19;
                _0x2362a3['setFontSize'](_0x2ccd5c * _0x6039c), _0x2362a3['x'] = _0x4921b9 / 0x2, _0x2362a3['y'] = _0x117fee * 0.25, _0x2362a3['draw'](), _0x4597c4['restore']();
            }
            var _0x163f3a = _0x234ec3 - _0x476319 > 0x0 ? 0x1 : 0x0;
            _0x5e372d += (_0x163f3a - _0x5e372d) * 0.05;
            if (_0x5e372d > 0.01 && !(_0x3aa021 == _0x243dd0)) {
                if (_0x1c430c) {
                    _0x4597c4['save'](), _0x4597c4['translate'](_0x4921b9 / 0x2, _0x117fee * (0.9 + 0.3 * (0x1 - _0x5e372d)));
                    var _0x427d71 = _0x5e7a48('./img/howToPlay1.png');
                    if (_0x427d71) {
                        var _0x1b3ac7 = _0x117fee * 0.2,
                            _0x24e9e2 = _0x1b3ac7 / _0x427d71['height'] * _0x5e372d;
                        _0x4597c4['drawImage'](_0x427d71, -0.5 * _0x427d71['width'] * _0x24e9e2, -1.5 * _0x427d71['height'] * _0x24e9e2, _0x427d71['width'] * _0x24e9e2, _0x427d71['height'] * _0x24e9e2);
                    }
                    _0x4597c4['restore']();
                }
            }
            var _0x163f3a = _0x33301f ? 0x1 : 0x0;
            _0x3076ab += (_0x163f3a - _0x3076ab) * 0.1;
            if (_0x3076ab > 0.01) {
                if (_0x21e459['length'] > 0x0) {
                    _0x4597c4['save']();
                    var _0x4061c2 = 0x96,
                        _0x33341c = 0.5,
                        _0x562a9b = ![];
                    window['matchMedia']('(orientation: portrait)')['matches'] && (_0x562a9b = ![]);
                    window['matchMedia']('(orientation: landscape)')['matches'] && (_0x562a9b = !![]);
                    if (!_0x562a9b) {
                        var _0xf7f19c = window['innerWidth'] / 0x2;
                        _0x4061c2 = Math['max'](0x50, _0xf7f19c / 0x4);
                    } else {}
                    var _0x273d00 = _0x4061c2 * _0x6039c,
                        _0x33b5ec = 0xa,
                        _0x5277de = _0x273d00 + 0x14,
                        _0x30ffaf = 0x7,
                        _0x5039d0 = Math['max'](0x0, _0x21e459['length']);
                    if (_0x21e459['length'] > _0x30ffaf + 0x1) _0x5039d0 = Math['min'](_0x30ffaf, _0x5039d0);
                    var _0x527b16 = _0x5039d0 * (_0x33b5ec + _0x273d00) + (_0x5277de - _0x273d00),
                        _0x2f3b0f = _0x4921b9 / 0x2 - _0x527b16 / 0x2,
                        _0x5d6ca0 = _0x117fee * 0.25,
                        _0x5c6df0 = _0x273d00 * 1.15,
                        _0x12344f = _0x4921b9 / 0x2;
                    _0x527b16 = _0x5039d0 * _0x5c6df0, _0x2f3b0f = _0x12344f - _0x527b16 / 0x2 + _0x5c6df0 / 0x2;
                    var _0x5adb7f = 0x1,
                        _0x27669a = _0x21e459['length'],
                        _0x3884ad = 0.5 + Math['floor'](_0x27669a / _0x5039d0) / 0xa;
                    _0x3884ad = Math['max'](0.5, _0x3884ad), _0x3884ad = Math['min'](0.9, _0x3884ad), _0x4597c4['translate'](0x0, _0x117fee * (-_0x3884ad * (0x1 - _0x3076ab)));
                    var _0xb38cc3 = 0x0;
                    for (var _0x201593 = 0x0; _0x201593 < _0x27669a; _0x201593++) {
                        var _0x21e3ce = _0x21e459[_0x201593];
                        if (_0x201593 > 0x0 && _0x27669a > _0x30ffaf + 0x1) {
                            if (_0x201593 % _0x30ffaf == 0x0) {
                                _0x5adb7f++, _0xb38cc3 = 0x0, _0x5d6ca0 += _0x5c6df0 * 1.15;
                                var _0x231dc4 = _0x27669a - _0x201593;
                                if (_0x231dc4 < _0x30ffaf) _0x5039d0 = _0x231dc4;
                                else _0x5039d0 = _0x30ffaf;
                                _0x527b16 = _0x5039d0 * _0x5c6df0, _0x2f3b0f = _0x4921b9 / 0x2 - _0x527b16 / 0x2 + _0x5c6df0 / 0x2;
                            }
                        }
                        if (_0x201593 == 0x0) _0x21e3ce['buttonScaleF'] = 1.2;
                        else _0x21e3ce['buttonScaleF'] = 0x1;
                        _0x21e3ce['w'] = _0x273d00, _0x21e3ce['h'] = _0x273d00, _0x21e3ce['x'] = _0x2f3b0f, _0x21e3ce['y'] = _0x5d6ca0, _0x2f3b0f += _0x5c6df0 / 0x2 * _0x21e3ce['buttonScaleF'] + _0x5c6df0 / 0x2;
                        if (_0x5adb7f < _0x213b8f['length']) _0x21e3ce['setHotKey'](_0x213b8f[_0x5adb7f - 0x1][_0xb38cc3]['toUpperCase']());
                        _0xb38cc3++;
                    }
                    _0x4597c4['globalAlpha'] = _0x3076ab;
                    for (var _0x201593 = 0x0; _0x201593 < _0x21e459['length']; _0x201593++) {
                        var _0x21e3ce = _0x21e459[_0x201593];
                        _0x21e3ce['imgSizeF'] = _0x33341c, _0x21e3ce['draw']();
                    }
                }
                var _0x1f3778 = Math['max'](0x0, _0x4bfcc2 - _0x476319) / 0x3e8,
                    _0x56a78a = 0x1;
                if (_0x1f3778 != 0x0 && _0x1f3778 < 0x8) {
                    var _0x44d961 = 1.2,
                        _0x59ae53 = 0.4,
                        _0x15c982 = 0x1,
                        _0x1b68e5 = 0.5 * (_0x15c982 - _0x59ae53);
                    _0x56a78a = _0x59ae53 + _0x1b68e5 + _0x1b68e5 * Math['sin'](0x2 * Math['PI'] / _0x44d961 * (_0x476319 / 0x3e8));
                }
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x3076ab * _0x56a78a, _0x4597c4['fillStyle'] = _0x1f3778 != 0x0 && _0x1f3778 < 0x8 ? 'red' : 'white', _0x4597c4['font'] = 0x19 * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle';
                !(_0x3aa021 == 0x2) && (_0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black');
                var _0x581be2 = _0x21e459[0x0]['y'] - _0x21e459[0x0]['w'] / 0x2,
                    _0x10ca72 = _0x1f3778 > 0x0 ? ' (auto in ' + Math['trunc'](_0x1f3778) + 's)' : '';
                _0x4597c4['fillText'](_0xa486d9 ? 'Choose which animal to spawn as:' : 'Choose an upgrade:' + _0x10ca72, _0x4921b9 / 0x2, _0x581be2 - 0x19 * _0x52f571), _0x4597c4['restore'](), _0x4597c4['restore']();
            }
            _0x36850d != null && _0x36850d['interface'](), _0x1d1c43(), _0x27e943();
        }

        function _0x27e943() {
            if (_0x36850d != null) {
                if (_0x36850d['interfaceButtons'])
                    for (var _0x42f88b = 0x0; _0x42f88b < _0x36850d['interfaceButtons']['length']; _0x42f88b++) {
                        var _0x53a12d = _0x36850d['interfaceButtons'][_0x42f88b];
                        _0x53a12d['isVisible'] && _0x53a12d['draw']();
                    }
            }
        }
        var _0x3e7fc9 = [],
            _0xeddc61 = 0x0,
            _0x2cafb2 = 0x0;

        function _0x2ad652(_0x12cf85, _0x3da7fa) {
            var _0x3250ab = _0x12cf85 - _0xeddc61;
            if (_0x12cf85 - _0xeddc61 != 0x0 && (_0x476319 - _0x2cafb2) / 0x3e8 > 0.7) {
                _0xeddc61 = _0x12cf85, _0x2cafb2 = _0x476319;
                var _0x58f9b3 = new _0x5808f7(_0x3250ab, ' XP');
                _0x3e7fc9['push'](_0x58f9b3);
            }
        }
        var _0x76fac6 = 0x0;

        function _0x27aa49(_0x401317, _0x18fb54) {
            var _0x32b782 = _0x401317 - _0x76fac6;
            if (_0x32b782 > 0x0) {
                if (_0x401317 - _0x76fac6 != 0x0 && (_0x476319 - _0x2cafb2) / 0x3e8 > 0.7) {
                    _0x76fac6 = _0x401317, _0x2cafb2 = _0x476319;
                    var _0xd30ee2 = new _0x5808f7(_0x32b782, _0x32b782 > 0x1 ? ' COINS' : ' COIN', 'yellow');
                    _0x3e7fc9['push'](_0xd30ee2);
                }
            }
        }

        function _0x2b2506() {
            if (_0x5a3ee1 && _0x5a3ee1['length'] > 0x0)
                for (i = 0x0; i < _0x5a3ee1['length']; i++) {
                    var _0xb71e3 = _0x5a3ee1[i];
                    if (_0xb71e3['oType'] == _0x5bce71) !_0xb71e3['droppedInHole'] && (_0x3be545(_0xb71e3, 'brown', 0x2), _0x3be545(_0xb71e3, 'orange', 1.5));
                    else {
                        if (_0xb71e3['oType'] == _0x5e6d33) _0x27859c(_0xb71e3, 0x3, 0.9);
                        else {
                            if (_0xb71e3['oType'] == _0x4fbd16) _0x39c723(_0xb71e3, 0x3, 0.9);
                            else _0x3be545(_0xb71e3, 'red', 0x2);
                        }
                    }
                }
        }

        function _0x5dff6c(_0x38226b) {
            switch (_0x38226b) {
                case 0x0:
                    return 'tornado';
                case 0x1:
                    return 'waterspout';
                case 0x2:
                    return 'dustdevil';
                case 0x3:
                    return 'arcticwhirl';
                case 0x4:
                    return 'firedevil';
                case 0x5:
                    return 'deviltwister';
            }
            return 'tornado';
        }

        function _0x27859c(_0x4a643f, _0x540dcf, _0x3411ff) {
            var _0x1528f4 = '/assets/s/' + _0x5149df + '/img/disasters/' + _0x5dff6c(_0x4a643f['specType']) + '.png',
                _0x478300 = _0x5e7a48(_0x1528f4);
            if (_0x478300) {
                var _0x1b4d1d = Math['max'](0x2, _0x4a643f['rad']),
                    _0x51fdf8 = _0x1b4d1d * _0x540dcf,
                    _0x54ce6f = 0x0;
                if (_0x3aa021 == _0x12a943) {
                    var _0x4a898f = 0x3c / 0x3c,
                        _0x3e729d = 0x3e8 / _0x4a898f,
                        _0x25f4ea = _0x476319 % _0x3e729d / _0x3e729d;
                    _0x54ce6f = _0x25f4ea * 0x2 * Math['PI'];
                }
                _0x3b3334['push']({
                    'drawType': 'image',
                    'alpha': _0x3411ff,
                    'x': _0x4a643f['x'],
                    'y': _0x4a643f['y'],
                    'rotation': _0x54ce6f,
                    'params': [_0x478300, 0x0 - _0x51fdf8, 0x0 - _0x51fdf8, 0x2 * _0x51fdf8, 0x2 * _0x51fdf8]
                });
            }
        }

        function _0x2bb3b3(_0x212326) {
            switch (_0x212326) {
                case _0x21a38a:
                    return 'img/disasters/tsunami.png';
                case _0x416306:
                    return 'img/disasters/dustwave.png';
                case _0x4e4443:
                    return 'img/disasters/heatwave.png';
                case _0x209c2d:
                    return 'img/disasters/heatwave.png';
                case _0x1339be:
                    return 'img/disasters/coldwave.png';
            }
            return null;
        }

        function _0x39c723(_0x29488c, _0x5473f5, _0x5d1959) {
            var _0x545656 = '/assets/s/' + _0x5149df + '/' + _0x2bb3b3(_0x29488c['abil']),
                _0x2e87f9 = _0x5e7a48(_0x545656);
            if (_0x2e87f9) {
                var _0x68e51e = Math['max'](0x2, _0x29488c['rad']),
                    _0x559f06 = _0x68e51e * _0x5473f5;
                _0x3b3334['push']({
                    'drawType': 'image',
                    'alpha': _0x5d1959,
                    'x': _0x29488c['x'],
                    'y': _0x29488c['y'],
                    'rotation': _0x29488c['angle'] + _0x4c4686(_0x4dd58c),
                    'params': [_0x2e87f9, 0x0 - _0x559f06, 0x0 - _0x559f06, 0x2 * _0x559f06, 0x2 * _0x559f06]
                });
            }
        }
        var _0x4dd58c = 0x5a;

        function _0x301b7f(_0x260318, _0x16f018, _0x5860cd) {
            var _0x23cc41 = '/assets/s/' + _0x5149df + '/img/pumpkin/' + _0x260318['specType'] + '/0.png',
                _0x3f799d = _0x5e7a48(_0x23cc41);
            if (_0x3f799d) {
                var _0xca0d12 = Math['max'](0x2, _0x260318['rad']),
                    _0x3d16da = _0xca0d12 * _0x16f018;
                _0x4597c4['globalAlpha'] = 0x1, _0x3b3334['push']({
                    'drawType': 'image',
                    'x': _0x260318['x'],
                    'y': _0x260318['y'],
                    'alpha': _0x5860cd,
                    'params': [_0x3f799d, 0x0 - _0x3d16da, 0x0 - _0x3d16da, 0x2 * _0x3d16da, 0x2 * _0x3d16da]
                });
            }
        }

        function _0x12db5d(_0x3344e6, _0x2207cd, _0x54ae88) {
            if (_0x3344e6) {
                var _0x1dda7c = _0x52f571 * Math['max'](0x3, _0x3344e6['rad'] * (_0x5487e0['width'] / _0x6f4c47)),
                    _0x449283 = _0x4921b9 - (0xa * _0x52f571 + _0x5487e0['width'] * _0x6039c) + _0x3344e6['x'] * (_0x5487e0['width'] * _0x6039c) / _0x6f4c47,
                    _0x1c832a = 0xa * _0x52f571 + _0x3344e6['y'] * (_0x5487e0['height'] * _0x6039c) / _0x3be96e,
                    _0x357a73 = _0x1dda7c + _0x52f571 * 0x2;
                _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = 'black', _0x4597c4['arc'](_0x449283, _0x1c832a, _0x357a73, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = _0x2207cd, _0x4597c4['arc'](_0x449283, _0x1c832a, _0x1dda7c, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']();
            }
        }

        function _0x3be545(_0x31a66b, _0x268325, _0xa32514, _0x3128b3) {
            if (_0x31a66b) {
                _0x4597c4['globalAlpha'] = _0x3128b3 ? _0x3128b3 : 0x1, _0x4597c4['fillStyle'] = _0x268325, _0x4597c4['beginPath']();
                var _0x26e853 = _0x52f571 * Math['max'](0x2, _0x31a66b['rad']);
                _0x4597c4['arc'](_0x4921b9 - (0xa * _0x52f571 + _0x120225['miniMapCanvas']['width'] * _0x6039c) + _0x31a66b['x'] * (_0x120225['miniMapCanvas']['width'] * _0x6039c) / _0x6f4c47, 0xa * _0x52f571 + _0x31a66b['y'] * (_0x120225['miniMapCanvas']['height'] * _0x6039c) / _0x3be96e, _0x26e853 * _0xa32514, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']();
            }
        }

        function _0x4525dd(_0x27848, _0x44b8a3, _0x27f303 = 0x270f) {
            _0x31daf7 = null;
            if (0x0 != _0x27848['length']) {
                _0x31daf7 = document['createElement']('canvas');
                var _0x1ded19 = _0x31daf7['getContext']('2d'),
                    _0x450c26 = 0x37,
                    _0x3bf8d8 = 0x16;
                _0x450c26 = _0x450c26 + _0x3bf8d8 * _0x27848['length'], _0x31daf7['width'] = 0x10e, _0x31daf7['height'] = _0x450c26, _0x1ded19['globalAlpha'] = 0.2, _0x1ded19['fillStyle'] = '#000000', _0x1ded19['fillRect'](0x0, 0x0, _0x31daf7['width'], _0x31daf7['height']), _0x1ded19['globalAlpha'] = 0x1, _0x1ded19['fillStyle'] = '#FFFFFF';
                var _0x34598e = _0x3a357f['name'];
                _0x1ded19['font'] = '24px Arial';
                !(_0x3aa021 == 0x2) && (_0x1ded19['shadowOffsetX'] = 0x1, _0x1ded19['shadowOffsetY'] = 0x1);
                _0x1ded19['shadowColor'] = 'black', _0x1ded19['fillText'](_0x34598e, _0x31daf7['width'] / 0x2 - _0x1ded19['measureText'](_0x34598e)['width'] / 0x2, 0x28);
                var _0x581b1f;
                _0x1ded19['textAlign'] = 'left';
                for (_0x1ded19['font'] = '17px Arial', _0x581b1f = 0x0; _0x581b1f < _0x27848['length']; ++_0x581b1f) {
                    _0x34598e = _0x3bd264 ? '' : _0x27848[_0x581b1f]['name'] || 'mope.io';
                    if (_0x27f303 == _0x27848[_0x581b1f]['rank']) {
                        _0x1ded19['fillStyle'] = '#FEED92';
                        if (_0x3bd264) _0x34598e = 'you';
                    } else _0x1ded19['fillStyle'] = '#FFFFFF';
                    _0x34598e = _0x27848[_0x581b1f]['rank'] + '. ' + _0x34598e + ' (' + _0x2c8aad(_0x27848[_0x581b1f]['score']) + ')', _0x1ded19['fillText'](_0x34598e, 0xf, 0x41 + _0x3bf8d8 * _0x581b1f);
                }
            }
        }

        function _0x2f1593(_0x59ca09, _0x22e4f7) {
            const _0x38ea42 = _0x59ca09['some'](_0x1d8dec => _0x1d8dec['rank'] === _0x22e4f7['rank']);
            return !_0x38ea42 && (_0x59ca09['pop'](), _0x59ca09['push'](_0x22e4f7)), _0x59ca09;
        }
        var _0x52086c = !![];
        _0x37b2e7($MOPE_AD_ID['MENU']);

        function _0x2332f9(_0x299bc6) {
            if (!_0x52086c && _0x299bc6) _0x37b2e7($MOPE_AD_ID['MENU']);
            else !_0x299bc6 && _0x52086c && _0x481c46($MOPE_AD_ID['MENU']);
            _0x52086c = _0x299bc6, _0x299bc6 && _0x461a9c(![]), document['getElementById']('startMenuWrapper')['style']['display'] = _0x299bc6 ? 'block' : 'none';
        }

        function _0x554ae9() {
            return;
        }

        function _0x59e086() {
            _0x2332f9(!![]), document['getElementById']('mopeMenu')['style']['display'] = 'block';
        }

        function _0xf21255() {
            _0x570173 ? (_0x372734['abil_usable'] = _0x5ccb1d, _0x372734['abil_recharging'] = _0x22c87c, _0x372734['abil_possible'] = abil_possible, _0x372734['abil_active'] = _0x16b492, _0x372734['abil_Type'] = _0x179001, _0x40237b['abil_usable'] = _0x3d4fcd, _0x40237b['abil_recharging'] = _0xf791df, _0x40237b['abil_possible'] = _0x370176, _0x40237b['abil_active'] = _0x5ee0f0, _0x40237b['abil_Type'] = _0x12376c, _0xf791df && (_0x40237b['abil_rechargeTotalT'] = _0x3f1862, _0x40237b['abil_rechargeEndT'] = _0x933bb3), _0x22c87c && (_0x372734['abil_rechargeTotalT'] = _0x2a0194, _0x372734['abil_rechargeEndT'] = _0x580d61)) : (_0x40237b['abil_usable'] = _0x5ccb1d, _0x40237b['abil_recharging'] = _0x22c87c, _0x40237b['abil_possible'] = abil_possible, _0x40237b['abil_active'] = _0x16b492, _0x40237b['abil_Type'] = _0x179001, _0x372734['abil_usable'] = _0x3d4fcd, _0x372734['abil_recharging'] = _0xf791df, _0x372734['abil_possible'] = _0x370176, _0x372734['abil_active'] = _0x5ee0f0, _0x372734['abil_Type'] = _0x12376c, _0x22c87c && (_0x40237b['abil_rechargeTotalT'] = _0x2a0194, _0x40237b['abil_rechargeEndT'] = _0x580d61), _0xf791df && (_0x372734['abil_rechargeTotalT'] = _0x3f1862, _0x372734['abil_rechargeEndT'] = _0x933bb3));
        }

        function _0x32ba70() {
            console['log']('client objs reset!'), _0x25f9b2 = [], _0x4b4e0c = {}, _0x32c2a0 = [];
        }
        var _0x17eda1 = function(_0x152195, _0x4b2480, _0x27595e, _0x53ed19, _0x19f51d) {
            _0x152195['fillText'](_0x4b2480, _0x53ed19, _0x19f51d), _0x152195['fillText'](': ' + _0x27595e, _0x53ed19 + 0x78, _0x19f51d);
        };

        function _0x57cc80() {
            if (!_0x187c23 || disable1v1Button) return;
            var _0x54bf40 = new _0x278eb3(0x2);
            _0x54bf40['writeUInt8'](0x34), _0x54bf40['writeUInt8'](0x0), _0x5df395(_0x54bf40);
        }

        function _0x4d4857() {
            if (_0x5a1e1d) {
                if (_0x4bbb18 == null) _0x4bbb18 = new _0x451885(0x0, 0x0, 0x3c * _0x6039c, 0x3c * _0x6039c, 'Invite for 1v1', 0x1e), _0x4bbb18['showLabeleOnHover'] = !![], _0x4bbb18['textShadow'] = !![], _0x4bbb18['drawTextOnHowever'] = function() {
                    if (_0x8237f7 > 0.01) return;
                    this['drawText'](this['w'] / 0x2, this['h'] + this['h'] / 0x2);
                }, _0x4bbb18['onClick'] = function() {
                    if (_0x8237f7 > 0.01) return;
                    !this['clicked'] && (this['isVisible'] = ![], this['clicked'] = !![], this['isHighLighted'] = ![], _0x57cc80());
                }, _0x4bbb18['onMouseMove'] = function() {}, _0x4bbb18['update'] = function() {
                    this['x'] = _0x4921b9 / 0x2 - this['w'] / 0x2, this['y'] = 0x2d * _0x6039c + this['h'] / 0x2;
                }, _0x4bbb18['onInterfaceReset'] = function() {
                    this['isVisible'] = ![], _0x4bbb18 = null, _0x36850d['interfaceButtons']['splice'](_0x36850d['interfaceButtons']['indexOf'](_0x4bbb18), 0x1);
                }, _0x4bbb18['onAfterDraw'] = function() {
                    var _0x45a314 = _0x5e7a48('img/icons/1v1.png');
                    if (_0x45a314) {
                        _0x4597c4['save']();
                        var _0x391a9c = this['w'] * 0.8,
                            _0x423c7f = (this['w'] - _0x391a9c) / 0x2;
                        _0x4597c4['drawImage'](_0x45a314, this['x'] + _0x423c7f, this['y'] + _0x423c7f, _0x391a9c, _0x391a9c), _0x4597c4['restore']();
                    }
                    if (_0x8237f7 > 0.01) {
                        this['alpha'] = 0.1, rechargeTotalT = 0x3e8 * 0x1e, rechargeEndT = +new Date() + 0x3e8 * _0x8237f7;
                        var _0x37aaa5 = Math['max'](0x0, rechargeEndT - _0x476319),
                            _0x26f87c = _0x37aaa5 / rechargeTotalT;
                        _0x4597c4['save'](), _0x4597c4['fillStyle'] = '#000000';
                        var _0x49fa68 = this['x'],
                            _0x54ecdb = this['y'],
                            _0x56cb37 = this['w'],
                            _0xd31e87 = this['h'] * 0.5;
                        _0x4597c4['globalAlpha'] = 0.1, _0x4597c4['fillRect'](_0x49fa68, _0x54ecdb + _0xd31e87 / 0x2, _0x56cb37, _0xd31e87), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = '#F3C553', _0x4597c4['fillRect'](_0x49fa68, _0x54ecdb + _0xd31e87 / 0x2, _0x56cb37 * _0x26f87c, _0xd31e87), _0x4597c4['restore']();
                    } else this['alpha'] = disable1v1Button ? 0.1 : 0x1;
                }, _0x36850d['interfaceButtons']['push'](_0x4bbb18);
                else {
                    if (_0x4bbb18 != null) {
                        _0x4bbb18['isVisible'] = _0x187c23 && !_0x33301f && !_0x9ffe4d;
                        if (_0x4bbb18['isVisible']) _0x4bbb18['clicked'] = ![];
                        _0x4bbb18['draw']();
                    }
                }
            } else _0x4bbb18 != null && (_0x36850d['interfaceButtons']['splice'](_0x36850d['interfaceButtons']['indexOf'](_0x4bbb18), 0x1), _0x4bbb18 = null);
        }

        function _0x9571bb() {
            var _0x308ef3 = document['getElementById']('optionsDiv');
            let _0x4f8c03 = _0x308ef3['style']['display'] == 'block';
            if (!_0x4f8c03) {}
            _0x308ef3['style']['display'] = _0x4f8c03 ? 'none' : 'block';
            var _0x2cb308 = _0x45e583('audio/click.mp3');
            if (_0x2cb308) try {
                _0x2cb308['play']();
            } catch (_0x1fe12d) {}
        }
        document['getElementById']('closeBut')['onclick'] = function() {
            _0x263cba();
        };
        var _0x3f44c2 = function() {
            var _0x3e40da = document['getElementById']('button_mute_img');
            if (_0x3e40da) {
                _0x3e40da['src'] = _0x4b5935 ? 'img/sound_off.png' : 'img/sound_on.png';
                if (_0x4583f7) _0x4583f7 = ![];
                else {
                    var _0x466f9d = new Audio('audio/tap.mp3');
                    _0x466f9d['volume'] = _0x4b5935 ? 0.15 : 0.5, _0x466f9d['play']();
                }
            }
        };

        function _0x12d787(_0x39ab9b, _0x4aee19, _0x53d886) {
            var _0x2cb3bd = document['getElementById']('optionsContainer'),
                _0x99a15f = document['createElement']('label');
            _0x99a15f['innerHTML'] = '<input type=\'checkbox\' id=\'' + _0x39ab9b + '\'><span style=\'color: ' + _0x53d886 + ';\'\'>' + _0x4aee19 + '</span>', _0x2cb3bd['appendChild'](_0x99a15f);
        }
        _0x12d787('options_noImages', 'No Animal images  ', 'black'), _0x12d787('options_noNames', 'No Names & Chat  ', 'black'), _0x12d787('options_disableFilter', 'Disable Profanity Filter', 'black');
        _0x5ec8aa && (_0x12d787('options_noJoystick', 'No Joystick', '#194614'), _0x12d787('options_leftHanded', 'LEFT-handed Joystick', '#194614'));
        _0x4333ab && _0x12d787('options_disableSnowFall', 'Disable Snowfall', 'black');
        if (window['localStorage']) {
            _0x3bd264 = window['localStorage']['getItem']('options_noNames') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_noNames');
            _0x7843cb && (_0x7843cb['checked'] = _0x3bd264);
            _0x1b2a4b = window['localStorage']['getItem']('options_noImages') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_noImages');
            _0x7843cb && (_0x7843cb['checked'] = _0x1b2a4b);
            _0x4ba52b = window['localStorage']['getItem']('options_disableFilter') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_disableFilter');
            _0x7843cb && (_0x7843cb['checked'] = _0x4ba52b);
            _0x308fd0 = window['localStorage']['getItem']('options_noJoystick') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_noJoystick');
            _0x7843cb && (_0x7843cb['checked'] = _0x308fd0);
            _0xfd4e58 = window['localStorage']['getItem']('options_leftHanded') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_leftHanded');
            _0x7843cb && (_0x7843cb['checked'] = _0xfd4e58);
            _0x4b5935 = window['localStorage']['getItem']('options_muted') + 0x0 > 0x0, _0x3f44c2(), _0x570646 = window['localStorage']['getItem']('options_disableSnowFall') + 0x0 > 0x0;
            var _0x7843cb = document['getElementById']('options_disableSnowFall');
            if (_0x7843cb) _0x7843cb['checked'] = _0x570646;
        }
        var _0x26e368 = document['getElementById']('button_mute');
        _0x26e368 && (_0x26e368['onclick'] = function() {
            _0x4b5935 = !_0x4b5935, _0x3f44c2();
            try {
                window['localStorage']['setItem']('options_muted', _0x4b5935 ? 0x1 : 0x0);
            } catch (_0x2bb3ac) {}
        });
        document['getElementById']('settingsButton')['onclick'] = function() {
            _0x9571bb();
        };
        var _0x7843cb = document['getElementById']('graphicsBut_low');
        _0x7843cb && (_0x7843cb['onclick'] = function() {
            _0x361cb9(_0x243dd0), _0x3cf313();
            var _0x12b7b9 = new Audio('audio/tap.mp3');
            _0x12b7b9['volume'] = _0x4b5935 ? 0.15 : 0.5, _0x12b7b9['play']();
        });
        var _0x7843cb = document['getElementById']('graphicsBut_med');
        _0x7843cb && (_0x7843cb['onclick'] = function() {
            _0x361cb9(_0x313a4d), _0x3cf313();
            var _0x1c2a79 = new Audio('audio/tap.mp3');
            _0x1c2a79['volume'] = _0x4b5935 ? 0.15 : 0.5, _0x1c2a79['play']();
        });
        var _0x7843cb = document['getElementById']('graphicsBut_hd');
        _0x7843cb && (_0x7843cb['onclick'] = function() {
            _0x361cb9(_0x12a943), _0x3cf313();
            var _0xc3c774 = new Audio('audio/tap.mp3');
            _0xc3c774['volume'] = _0x4b5935 ? 0.15 : 0.5, _0xc3c774['play']();
        });
        var _0x26e368 = document['getElementById']('options_noImages');
        _0x26e368 && (_0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0x1b2a4b = this['checked'];
                try {
                    window['localStorage']['setItem']('options_noImages', _0x1b2a4b ? 0x1 : 0x0);
                } catch (_0xa2df4e) {}
            }
        });
        var _0x26e368 = document['getElementById']('options_disableFilter');
        _0x26e368 && (_0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0x4ba52b = this['checked'];
                try {
                    window['localStorage']['setItem']('options_disableFilter', _0x4ba52b ? 0x1 : 0x0);
                } catch (_0x5d2067) {}
            }
        });
        var _0x26e368 = document['getElementById']('options_disableSnowFall');
        _0x26e368 && (_0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0x570646 = this['checked'];
                try {
                    window['localStorage']['setItem']('options_disableSnowFall', _0x570646 ? 0x1 : 0x0);
                } catch (_0x59a2ff) {}
            }
        });
        var _0x26e368 = document['getElementById']('options_noNames');
        _0x26e368 && (_0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0x3bd264 = this['checked'];
                try {
                    window['localStorage']['setItem']('options_noNames', _0x3bd264 ? 0x1 : 0x0);
                } catch (_0xe4d188) {}
            }
        });
        var _0x26e368 = document['getElementById']('options_noJoystick');
        _0x26e368 && (_0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0x308fd0 = this['checked'];
                try {
                    window['localStorage']['setItem']('options_noJoystick', _0x308fd0 ? 0x1 : 0x0);
                } catch (_0x53a590) {}
                _0x3cf313();
            }
        });
        var _0x26e368 = document['getElementById']('options_leftHanded');
        if (_0x26e368) _0x26e368['onchange'] = function() {
            if (window['localStorage']) {
                _0xfd4e58 = this['checked'];
                try {
                    window['localStorage']['setItem']('options_leftHanded', _0xfd4e58 ? 0x1 : 0x0);
                } catch (_0x58c952) {}
                _0x3cf313(), console['log']('options_leftHanded: saved as ' + window['localStorage']['getItem']('options_leftHanded'));
            }
        };
        var _0x1d2be3 = [];

        function _0x490e26() {
            _0x2cbdfa ? (_0x156a71 += 0x1, console['log']('Reconnecting to session failed ... ' + _0x156a71 + ' fails now')) : console['log']('wasnt reconnecting- first time ws DCed');
            _0x5248f3 && console['log']('Random ws DC, reconnecting with session ID ' + _0x3f72c1 + '...');
            _0x19098f = ![];
            if (!_0x5248f3) {
                _0xc7d16a = ![], _0x5e010f = ![], console['log']('Connection to server closed/failed!');
                if (_0x3e0c12) {
                    _0x3e0c12 = ![];
                    return;
                } else document['getElementById']('connecting')['style']['display'] = 'flex';
                _0x2332f9(!![]);
            }
            if (!_0x5248f3) {
                _0x1d2be3['indexOf'](_0x3a357f) == -0x1 && _0x1d2be3['push'](_0x3a357f);
                _0x5dec28 += 0x1;
                if (_0x289ced) clearTimeout(_0x289ced);
                _0x289ced = setTimeout(function() {
                    _0x5dec28 > 0x1 ? (console['log']('too many fails, trying next server (in region)'), _0x47ceec()) : _0x3fb60b(_0x3a357f);
                }, 0x3e8);
            } else {
                var _0xabfc6f = 0xc8;
                if (_0x2cbdfa) {
                    _0x156a71 > 0x3 && (_0xabfc6f = 0x3e8, console['log']('over 5 session re-join fails, slowing down...'));
                    if (_0x156a71 > 0x17) {
                        console['log']('Too many session-rejoin fails, giving up and rejoining a fresh game session'), _0x5248f3 = ![], _0x47ceec();
                        return;
                    }
                }
                if (_0x289ced) clearTimeout(_0x289ced);
                _0x289ced = setTimeout(function() {
                    _0x3fb60b(_0x3a357f);
                }, _0xabfc6f);
            }
        }

        function _0x366012(_0x14bfc8) {
            this['interfaceType'] = _0x14bfc8, this['data'] = {}, this['interfaceCanvas'] = null, this['interfaceCanvas_pos'] = 0x0, this['expiresT'] = 0x0, this['maxDur'] = 0x96, this['interfaceShowT'] = 0x0, this['animalType'] = _0x4b4e0c[_0x59b0bc]['animalType'], this['aniRad'] = _0x4b4e0c[_0x59b0bc]['rad'], this['customButtons'] = [], this['loadData'] = function(_0x3d0740) {
                this['interfaceType'] == 0x1 ? (this['maxDur'] = _0x3d0740['readUInt8'](), this['data'] = {}, this['data'][_0x1de825] = _0x3d0740['readUInt8'](), this['data'][_0x1fb7c3] = _0x3d0740['readUInt8'](), this['data'][_0x19d925] = _0x3d0740['readUInt8'](), this['data'][_0x346859] = _0x3d0740['readUInt8'](), this['data'][_0xdd7007] = _0x3d0740['readUInt8'](), this['data'][_0x582280] = _0x3d0740['readUInt8'](), this['data'][_0x48a3f9] = _0x3d0740['readUInt8'](), this['data'][_0x31f937] = _0x3d0740['readUInt8'](), this['data'][_0x366af5] = _0x3d0740['readUInt8'](), this['data'][_0x9038c6] = _0x3d0740['readUInt8'](), this['data'][_0x38e413] = _0x3d0740['readUInt8'](), this['data'][_0x36fcdc] = _0x3d0740['readUInt8'](), this['data'][_0x5e24a5] = _0x3d0740['readUInt8'](), this['rows'] = 0xd, this['data']['anis'] = new Array(), this['data']['anis']['push'](_0x38e413), this['data']['anis']['push'](_0x36fcdc), this['data']['anis']['push'](_0x5e24a5), this['data']['anis']['push'](_0x1de825), this['data']['anis']['push'](_0x1fb7c3), this['data']['anis']['push'](_0x19d925), this['data']['anis']['push'](_0x346859), this['data']['anis']['push'](_0xdd7007), this['data']['anis']['push'](_0x582280), this['data']['anis']['push'](_0x48a3f9), this['data']['anis']['push'](_0x31f937), this['data']['anis']['push'](_0x366af5), this['data']['anis']['push'](_0x9038c6)) : (this['data'] = {}, this['maxDur'] = _0x3d0740['readUInt8'](), this['data']['selected'] = _0x3d0740['readUInt8'](), this['data'][0x0] = _0x3d0740['readUInt8'](), this['data'][0x1] = _0x3d0740['readUInt8'](), this['data'][0x2] = _0x3d0740['readUInt8'](), this['data'][0x3] = 0x0, this['rows'] = 0x4), this['expiresT'] = _0x476319 + this['maxDur'] * 0x3e8, this['interfaceCanvas'] == null && (this['interfaceCanvas'] = document['createElement']('canvas'), this['interfaceCanvas']['setAttribute']('id', 'playerCustomCanvas'), this['ctx'] = this['interfaceCanvas']['getContext']('2d'));
            }, this['getTitle'] = function() {
                if (this['interfaceType'] == 0x1) return 'APEX KILLS';
                else {
                    if (this['interfaceType'] == 0x2) return 'CHOOSE MAIN ABILITY';
                    else {
                        if (this['interfaceType'] == 0x3) return 'CHOOSE PASSIVE ABILITY';
                        else return 'OPTIONS';
                    }
                }
            }, this['getInterfaceSize'] = function() {
                if (this['animalType'] == _0x1de825) return this['aniRad'] * _0x6039c;
                else return this['aniRad'] * 0x2 * _0x6039c;
            }, this['drawCircles'] = function(_0x34a188, _0x476309, _0x34f5e1) {
                if (this['animalType'] == _0x1de825) return this['bdInterface'](_0x34a188, _0x476309, _0x34f5e1);
                else return this['getInterface'](_0x34a188, _0x476309, _0x34f5e1);
            }, this['bdInterface'] = function(_0x1e4bf3, _0x151097, _0x537879) {
                var _0x309001 = 3.1;
                this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.05;
                var _0x21f1c5 = _0x537879 * _0x309001;
                return this['ctx']['lineWidth'] = 0x2, this['ctx']['fillStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x1e4bf3, _0x151097, _0x21f1c5 - _0x537879 / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x1e4bf3, _0x151097, _0x21f1c5 + _0x537879 / 0x2, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'black', this['ctx']['beginPath'](), this['ctx']['arc'](_0x1e4bf3, _0x151097, _0x21f1c5 + _0x537879 / 0x2, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x1e4bf3, _0x151097, _0x21f1c5 - _0x537879 / 0x2, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), this['ctx']['restore'](), _0x21f1c5;
            }, this['getInterface'] = function(_0x303b1e, _0x5776f0, _0x4866c6) {
                var _0x5dac2a = 0x3,
                    _0x2b434b = _0x4866c6 * _0x5dac2a;
                this['ctx']['lineWidth'] = 0x4, this['ctx']['fillStyle'] = 'red', this['ctx']['globalAlpha'] = 0.1, this['ctx']['beginPath']();
                var _0x15d9d1 = _0x4866c6 * 0.9,
                    _0x2c52b9 = _0x4866c6 * 1.9;
                return this['ctx']['arc'](_0x303b1e, _0x5776f0, _0x2b434b - _0x15d9d1, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['arc'](_0x303b1e, _0x5776f0, _0x2b434b + _0x2c52b9, Math['PI'] * 0x2, 0x0, !![]), this['ctx']['fill'](), this['ctx']['globalAlpha'] = 0.1, this['ctx']['strokeStyle'] = 'blue', this['ctx']['beginPath'](), this['ctx']['arc'](_0x303b1e, _0x5776f0, _0x2b434b + _0x2c52b9, Math['PI'] * 0x2, 0x0), this['ctx']['stroke'](), this['ctx']['beginPath'](), this['ctx']['arc'](_0x303b1e, _0x5776f0, _0x2b434b - _0x15d9d1, 0x0, Math['PI'] * 0x2, ![]), this['ctx']['stroke'](), _0x2b434b;
            }, this['drawTitle'] = function(_0x107686) {
                this['ctx']['globalAlpha'] = 0x1, this['ctx']['fillStyle'] = '#FFFFFF', this['ctx']['font'] = '30px Arial';
                var _0x2db245 = this['getTitle'](),
                    _0x4f6211 = (_0x107686 + 0x50) * _0x6039c,
                    _0x528106 = this['interfaceCanvas']['width'] / 0x2 - this['ctx']['measureText'](_0x2db245)['width'] / 0x2;
                if (this['animalType'] != _0x1de825) _0x4f6211 -= 0x14 * _0x6039c;
                this['ctx']['fillText'](_0x2db245, _0x528106, _0x4f6211);
            }, this['display'] = function() {
                if (this['interfaceCanvas'] == null) return;
                if (this['interfaceShowT'] == 0x0) this['interfaceShowT'] = _0x476319;
                var _0x430ee7 = 0x37,
                    _0x5de217 = 0x5,
                    _0x24df9c = 0x0,
                    _0x2624fd = this['getInterfaceSize'](),
                    _0x3d4295 = 0x82 * _0x6039c + 0x6 * (_0x2624fd + 0xa * _0x6039c),
                    _0x49cb6d = _0x3d4295 * 1.3;
                _0x430ee7 = _0x49cb6d + _0x5de217 * 0x2, this['interfaceCanvas']['width'] = _0x3d4295 + _0x5de217 * 0x2, this['interfaceCanvas']['height'] = _0x430ee7;
                var _0x5d0b66 = 0xc8;
                this['interfaceCanvas_pos'] = _0x5d0b66, this['ctx']['globalAlpha'] = 0.1, this['ctx']['fillStyle'] = '#000000';
                if (this['interfaceType'] != 0x1) this['ctx']['fillRect'](0x0, 0x0, this['interfaceCanvas']['width'], this['interfaceCanvas']['height']);
                this['drawTitle'](_0x5de217), _0x5d0b66 = 0x64;
                var _0x3fd4e1 = 0x168 / this['rows'],
                    _0x102d8e = this['interfaceCanvas']['width'] / 0x2,
                    _0x39e9d8 = this['interfaceCanvas']['height'] / 0x2;
                this['ctx']['save']();
                var _0x370d7f = 3.1,
                    _0x3e0a16 = _0x2624fd * _0x370d7f,
                    _0x4486da = Math['PI'] * 0x2 / this['rows'],
                    _0x3cf2be = 0x0,
                    _0x5359c3 = (_0x476319 - this['interfaceShowT']) / 0x3e8,
                    _0x232194 = 0x2,
                    _0x584909 = 0x8;
                _0x3cf2be = _0x584909 * Math['sin'](0x2 * Math['PI'] / _0x232194 * _0x5359c3);
                if (this['interfaceType'] == 0x1) this['bdInterface'](_0x102d8e, _0x39e9d8, _0x2624fd);
                for (r = 0x0; r < this['rows']; r++) {
                    var _0x244e31 = _0x39e9d8 + Math['sin'](_0x3fd4e1 * r * (Math['PI'] / 0xb4) - _0x4c4686(0xb4)) * _0x3e0a16,
                        _0xaf01b7 = _0x102d8e + Math['cos'](_0x3fd4e1 * r * (Math['PI'] / 0xb4) - _0x4c4686(0xb4)) * _0x3e0a16,
                        _0x527905 = (r - 0x1) * _0x4486da - _0x4c4686(0xb4),
                        _0x431524 = _0x527905 + _0x4486da;
                    if (this['interfaceType'] == 0x1) {
                        ani = this['data']['anis'][r];
                        var _0x2c22ca = this['getSkinForAniKills'](ani),
                            _0x54c76a = _0x4b4e0c[_0x59b0bc] ? _0x4b4e0c[_0x59b0bc]['getSkinImageObjForSeason'](_0x2c22ca, 0x1) : null;
                        if (_0x54c76a) {
                            var _0x379617 = this['data'][ani] > 0x0;
                            this['ctx']['save'](), this['ctx']['globalAlpha'] = _0x379617 ? 0x1 : 0.3;
                            var _0x56c0be = _0x2624fd;
                            _0x379617 && (this['ctx']['shadowOffsetX'] = 0x0, this['ctx']['shadowOffsetY'] = 0x0, this['ctx']['shadowColor'] = 'black', this['ctx']['shadowBlur'] = 0x8, _0x56c0be -= _0x3cf2be), this['ctx']['drawImage'](_0x54c76a, _0xaf01b7 - _0x56c0be / 0x2, _0x244e31 - _0x56c0be / 0x2, _0x56c0be, _0x56c0be), this['ctx']['restore']();
                        } else {}
                    } else this['showInterfaceButton'](_0x102d8e, _0x39e9d8, this['data'][r], _0xaf01b7, _0x244e31);
                }
                this['ctx']['restore']();
                if (this['interfaceCanvas'] != null) {
                    if (this['interfaceCanvas']['width']) {
                        var _0x4eff5d = (_0x476319 - this['interfaceShowT']) / 0x258,
                            _0x436f85 = (this['expiresT'] - _0x476319) / 0x258;
                        if (_0x436f85 < 0x1) _0x4eff5d = Math['max'](0x0, _0x436f85);
                        var _0x1d5566 = Math['min'](0x1, _0x4eff5d),
                            _0x6ca15e = this['interfaceCanvas']['width'] * _0x1d5566,
                            _0x5bb11b = this['interfaceCanvas']['height'] * _0x1d5566;
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x1d5566, this['interfaceCanvas']['screenX'] = _0x4921b9 / 0x2 - _0x6ca15e / 0x2, this['interfaceCanvas']['screenY'] = _0x117fee / 0x2 - _0x5bb11b / 0x2, this['updateButtons'](), _0x4597c4['drawImage'](this['interfaceCanvas'], _0x4921b9 / 0x2 - _0x6ca15e / 0x2, _0x117fee / 0x2 - _0x5bb11b / 0x2, _0x6ca15e, _0x5bb11b), _0x4597c4['restore'](), (_0x476319 > this['expiresT'] || !_0xc7d16a) && _0x2d848e['destroy']();
                    }
                }
            }, this['destroy'] = function() {
                if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
                    for (i = 0x0; i < this['customButtons']['length']; i++) {
                        this['customButtons'][i]['isVisible'] = ![];
                    }
                this['interfaceCanvas'] = null, this['ctx'] = null, _0x2d848e = null, console['log']('custom interface canvas destroyed!');
            }, this['updateButtons'] = function() {
                var _0x567c4e = this['interfaceCanvas']['width'],
                    _0x2ac7d8 = this['interfaceCanvas']['height'],
                    _0x1e81f8 = _0x4921b9 / 0x2 - _0x567c4e / 0x2,
                    _0x3a4b8d = _0x117fee / 0x2 - _0x2ac7d8 / 0x2;
                if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
                    for (i = 0x0; i < this['customButtons']['length']; i++) {
                        this['customButtons'][i]['screenX'] = _0x1e81f8, this['customButtons'][i]['screenY'] = _0x3a4b8d;
                    }
            }, this['drawAngularInterface'] = function(_0x246f0f, _0x4e487f, _0x3c86f6, _0x492a53, _0x53ed7e, _0x37d08a) {
                this['ctx']['save'](), this['ctx']['globalAlpha'] = 0.2, this['ctx']['lineWidth'] = _0x3c86f6;
                var _0x3dc386 = Math['PI'] * 0x2 / this['rows'],
                    _0x493e93 = _0x4c4686(-0x5a),
                    _0x1915ec = ['red', 'green', 'blue', 'purple'];
                for (r = 0x1; r <= this['rows']; r++) {
                    this['ctx']['beginPath']();
                    if (this['interfaceType'] == 0x1) this['ctx']['strokeStyle'] = 'black';
                    else this['ctx']['strokeStyle'] = _0x1915ec[r - 0x1];
                    this['ctx']['arc'](_0x246f0f, _0x4e487f, _0x53ed7e - _0x492a53 * _0x37d08a, _0x493e93, _0x493e93 + _0x3dc386), this['ctx']['stroke'](), _0x493e93 += _0x3dc386;
                }
                this['ctx']['restore']();
            }, this['getSkinForAniKills'] = function(_0x543a1b) {
                switch (_0x543a1b) {
                    case _0x1de825:
                        return './skins/volcano/blackdragon/0/blackdragon.png';
                    case _0x19d925:
                        return './skins/land/dinomonster/0/dinomonster.png';
                    case _0xdd7007:
                        return './skins/arctic/icemonster/0/icemonster.png';
                    case _0x1fb7c3:
                        return './skins/volcano/landmonster/0/0/landmonster.png';
                    case _0x346859:
                        return './skins/ocean/seamonster/0/seamonster.png';
                    case _0x582280:
                        return './skins/desert/scorpion/0/giantscorpion.png';
                    case _0x36fcdc:
                        return './skins/arctic/yeti/0/yeti.png';
                    case _0x31f937:
                        return './skins/land/dragon/0/0/dragon.png';
                    case _0x366af5:
                        return './skins/land/trex/0/trex.png';
                    case _0x9038c6:
                        return './skins/ocean/kraken/0/0/kraken.png';
                    case _0x38e413:
                        return './skins/ocean/kingcrab/0/kingcrab.png';
                    case _0x48a3f9:
                        return './skins/volcano/phoenix/0/phoenix.png';
                    case _0x5e24a5:
                        return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
                }
            }, this['updateExpiry'] = function() {
                var _0x38d178 = (this['expiresT'] - _0x476319) / 0x3e8;
                if (_0x38d178 < this['maxDur'] - 0x1 && _0x38d178 > 0x1) this['expiresT'] = _0x476319 + 0x3e8;
            }, this['getBtnTitle'] = function(_0x58c0b9) {
                switch (_0x58c0b9) {
                    case _0x3764d2:
                        return 'Fly High';
                    case _0x92a589:
                        return 'Gives Gifts';
                    case _0x43f88c:
                        return 'Flying Sleigh';
                    default:
                        return 'Close';
                }
            }, this['buttons'] = {}, this['sendSelection'] = function(_0x46e372) {
                if (this['customButtons'] != null && this['customButtons']['length'] > 0x0)
                    for (i = 0x0; i < this['customButtons']['length']; i++) {
                        this['customButtons'][i]['resetSelection']();
                    }
                _0x46e372['setSelection']();
                var _0x28474a = new _0x278eb3(0x3);
                _0x28474a['writeUInt8'](_0x2d277f), _0x28474a['writeUInt8'](this['interfaceType']), _0x28474a['writeUInt8'](_0x46e372['buttonID']), _0x5df395(_0x28474a);
            }, this['showInterfaceButton'] = function(_0x3b3382, _0x37c89a, _0x4b5f62, _0x2d101e, _0x55f619) {
                var _0x3fff8b = this['buttons'][_0x4b5f62];
                if (_0x3fff8b === undefined || _0x3fff8b == null) {
                    var _0x760cfb = this['getBtnTitle'](_0x4b5f62),
                        _0x3626c3 = _0x4b5f62 == 0x0 ? {
                            'w': 0x64,
                            'h': 0x3c
                        } : {
                            'w': 0x64,
                            'h': 0x64
                        };
                    _0x3fff8b = this['buttons'][_0x4b5f62] = new _0x451885(_0x2d101e, _0x55f619, _0x3626c3['w'], _0x3626c3['h'], _0x760cfb, 0x1e, this['ctx']), _0x3fff8b['buttonID'] = _0x4b5f62, _0x3fff8b['selected'] = ![], _0x3fff8b['isVisible'] = !![], _0x3fff8b['textShadow'] = !![], _0x3fff8b['screenX'] = 0x0, _0x3fff8b['screenY'] = 0x0, _0x4b5f62 != 0x0 && (_0x3fff8b['drawButtonRect'] = ![], _0x3fff8b['showLabeleOnHover'] = !![]), _0x3fff8b['testPosHitsButton'] = function(_0x159f84, _0x286f61) {
                        var _0x3f37a1 = this['screenX'] + this['x'],
                            _0x561879 = _0x3f37a1 + this['w'],
                            _0x392865 = this['screenY'] + this['y'],
                            _0x2d2138 = _0x392865 + this['h'];
                        if (_0x159f84 < _0x3f37a1 || _0x159f84 > _0x561879) return ![];
                        if (_0x286f61 < _0x392865 || _0x286f61 > _0x2d2138) return ![];
                        else return !![];
                    }, _0x3fff8b['onClick'] = function() {
                        console['log']('clicked: ' + this['label']);
                        !this['clicked'] && (this['clicked'] = !![], this['isHighLighted'] = ![]);
                        if (this['label'] == 'Close') _0x2d848e['destroy']();
                        else _0x2d848e['sendSelection'](this);
                    }, _0x3fff8b['setSelection'] = function() {
                        this['labelColor'] = 'yellow', this['selected'] = !![];
                    }, _0x3fff8b['resetSelection'] = function() {
                        this['labelColor'] = 'white', this['selected'] = ![];
                    }, _0x3fff8b['beforeDrawText'] = function() {
                        var _0x5a210b = this['w'] / 0x2,
                            _0x5886f9 = this['h'] / 0x2;
                        this['buttonTXT']['x'] = this['screenX'] + this['x'] + _0x5a210b;
                        if (this['buttonID'] == 0x0) this['buttonTXT']['y'] = this['screenY'] + this['y'] + _0x5886f9;
                        else this['buttonTXT']['y'] = this['screenY'] + this['y'] - _0x5886f9 / 0x2;
                    }, _0x3fff8b['onMouseMove'] = function() {}, _0x3fff8b['update'] = function() {
                        this['x'] = _0x2d101e - this['w'] / 0x2, this['y'] = _0x55f619 - this['h'] / 0x2;
                    }, _0x3fff8b['onInterfaceReset'] = function() {
                        this['isVisible'] = ![];
                    }, _0x3fff8b['onAfterDraw'] = function() {
                        var _0x4c9c63 = _0x4b4e0c[_0x59b0bc];
                        if (_0x4c9c63) {
                            var _0x61494b = _0x4c9c63['getAbilityInfo'](this['buttonID']);
                            if (_0x61494b) {
                                var _0x216038 = 'assets/s/' + _0x61494b['mopeSeasonID'] + '/' + _0x61494b['abilImg'],
                                    _0x3a3edf = _0x5e7a48(_0x216038);
                                if (_0x3a3edf) {
                                    _0x4597c4['save']();
                                    (this['isHighLighted'] || this['selected']) && (_0x4597c4['shadowBlur'] = 0xa, _0x4597c4['shadowOffsetX'] = 0x0, _0x4597c4['shadowOffsetY'] = 0x0, _0x4597c4['shadowColor'] = 'yellow');
                                    var _0x3be0e0 = this['w'] / 0x2,
                                        _0x3ca1d5 = this['h'] / 0x2;
                                    _0x3be0e0 = this['screenX'] + this['x'], _0x3ca1d5 = this['screenY'] + this['y'];
                                    var _0x5f4c38 = this['w'];
                                    _0x4597c4['drawImage'](_0x3a3edf, _0x3be0e0, _0x3ca1d5, _0x5f4c38, _0x5f4c38), _0x4597c4['restore']();
                                }
                            }
                        }
                    }, _0x36850d['interfaceButtons']['push'](_0x3fff8b), this['customButtons']['push'](_0x3fff8b), this['data']['selected'] == _0x3fff8b['buttonID'] && _0x3fff8b['setSelection']();
                } else {
                    if (_0x3fff8b != null) {
                        if (_0x3fff8b['isVisible']) _0x3fff8b['clicked'] = ![];
                        _0x3fff8b['draw']();
                    }
                }
            };
        }
        console['log']('ACCOUNT SERVER START');

        function _0x131bb1(_0x356b71) {
            var _0x51a3b3 = document['getElementById']('loginCoins');
            _0x51a3b3['innerHTML'] = _0x356b71 > 0x0 ? _0x356b71 : 0x0;
        }

        function _0x7702e5(_0x48aea4) {
            var _0x4fa130 = document['getElementById']('loginGems');
            _0x4fa130['innerHTML'] = _0x48aea4 > 0x0 ? _0x48aea4 : 0x0;
        }
        const _0x5bcc60 = async function(_0x283dea, _0x57cf32 = 'web', _0x28b769) {
            let _0x4cdaef = _0x1f512a + '/auth/login/' + _0x28b769,
                _0x318f5f = {
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined,
                    'accessToken': _0x283dea,
                    'platform': _0x57cf32
                };
            try {
                const _0x20e673 = await fetch(_0x4cdaef, {
                        'method': 'POST',
                        'headers': {
                            'Content-Type': 'application/json'
                        },
                        'body': JSON['stringify'](_0x318f5f)
                    }),
                    _0x5ca5ea = await _0x20e673['json']();
                return _0x5ca5ea['success'] ? (_0x323e62(_0x5ca5ea['data']), _0x15206f(_0x5ca5ea['data']['userId'], _0x5ca5ea['data']['token'], _0x5ca5ea['data']['userName'], _0x5ca5ea['data']['avatar'], _0x28b769), !![]) : (_0x6a452e('ACCOUNTS: Failed to login using ' + _0x28b769 + ' encountered an error [' + _0x5ca5ea['error'] + ']', 'error', 0x2710), ![]);
            } catch (_0x1ee965) {
                return console['error']('::: Social Network Login ERROR :::', _0x1ee965), ![];
            }
        }, _0x238b5b = async _0x8255ec => {
            return;
        };
        var _0x41a78c, _0x2790b3, _0x4a18b3, _0x389e39, _0x1dc265, _0x24d734;
        _0x172d37 && (console['log']('Checking what login_userId was:', _0x41a78c), _0x41a78c = localStorage['getItem']('login_userId'), _0x24d734 = _0x41a78c !== undefined && _0x41a78c !== null, _0x24d734 && (console['log']('WAS LOGGED IN!'), _0x2790b3 = localStorage['getItem']('login_passwordToken'), _0x4a18b3 = localStorage['getItem']('login_profilePicURL'), _0x389e39 = localStorage['getItem']('login_name'), _0x1dc265 = localStorage['getItem']('login_socialNetworkName')));
        jQuery['loadScript'] = function(_0x1538e9, _0x294bd9) {
                jQuery['ajax']({
                    'url': _0x1538e9,
                    'dataType': 'script',
                    'success': _0x294bd9,
                    'async': !![]
                });
            }, window['fbAsyncInit'] = function() {
                window['FB']['init']({
                    'appId': '482002344741952',
                    'cookie': !![],
                    'xfbml': !![],
                    'version': 'v3.2',
                    'status': !![]
                }), window['FB']['AppEvents']['logPageView']();
            },
            function(_0x4e6c09, _0x399138, _0x5e34c6) {
                var _0x54bd13, _0x1c0b01 = _0x4e6c09['getElementsByTagName'](_0x399138)[0x0];
                if (_0x4e6c09['getElementById'](_0x5e34c6)) return;
                _0x54bd13 = _0x4e6c09['createElement'](_0x399138), _0x54bd13['id'] = _0x5e34c6, _0x54bd13['crossorigin'] = 'anonymous', _0x54bd13['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x1c0b01['parentNode']['insertBefore'](_0x54bd13, _0x1c0b01);
            }(document, 'script', 'facebook-jssdk');
        if (_0x3e1b12) {} else {}
        const _0x4a7382 = async () => {
            if (_0x24d734) {
                const _0x49e8bc = await _0x1b41e5();
                !_0x49e8bc && _0x3fa181();
            } else {
                var _0x276a74 = 'none',
                    _0x16b3fb = new URL(window['location']['href']),
                    _0x13be02 = _0x16b3fb['searchParams']['get']('testAccountSecret');
                if (_0x13be02) {
                    _0x276a74 = _0x13be02;
                    let _0x1032ea = '' + _0x16b3fb['searchParams']['get']('user');
                    !_0x5766bb(_0x276a74 + _0x1032ea) && (_0x1032ea && _0x1032ea['length'] <= 0x2 && _0x5bcc60(_0x1032ea, 'web', _0x276a74, _0x276a74 + _0x1032ea, null));
                }
            }
        };
        setTimeout(_0x344c8f, 0x1);

        function _0x344c8f() {
            var _0x597298 = document['getElementById']('divButtons');
            document['getElementById']('facebookLoginBtn')['onclick'] = _0x568175, document['getElementById']('appleLoginBtn')['onclick'] = _0x13f9b9, document['getElementById']('discordLoginBtn')['onclick'] = _0xa45589, document['getElementById']('btnLogout2')['onclick'] = _0xb9e158;
            if (_0x24d734) {
                console['log']('user previously logged in: ' + _0x389e39 + ' : ' + _0x41a78c), document['getElementById']('onloggedInDiv')['style']['display'] = 'block';
                _0x4a18b3 && (document['getElementById']('loggedInUserImg')['src'] = _0x4a18b3);
                document['getElementById']('loggedInNameTxt')['innerHTML'] = _0x389e39, document['getElementById']('notLoggedInDiv')['style']['display'] = 'none', _0x597298['style']['display'] = 'none';
                if (_0x527f8e) _0x527f8e['style']['display'] = 'none';
            } else document['getElementById']('onloggedInDiv')['style']['display'] = 'none', document['getElementById']('loggedInUserImg')['src'] = 'none', document['getElementById']('loggedInNameTxt')['innerHTML'] = '', document['getElementById']('notLoggedInDiv')['style']['display'] = 'block', _0x597298['style']['display'] = 'block';
        }
        var _0x532e49 = 'none',
            _0x16d4db = new URL(window['location']['href']),
            _0x11c76d = _0x16d4db['searchParams']['get']('testAccountSecret');
        _0x11c76d && (console['log']('testing account enabled.'), _0x532e49 = _0x11c76d);

        function _0x3fa181() {
            _0x172d37 && (localStorage['removeItem']('login_userId'), localStorage['removeItem']('login_passwordToken'), localStorage['removeItem']('login_profilePicURL'), localStorage['removeItem']('login_name'), localStorage['removeItem']('login_socialNetworkName')), _0x41a78c = null, _0x2790b3 = null, _0x4a18b3 = null, _0x389e39 = null, _0x1dc265 = null, _0x24d734 = ![], _0x326bc5 = {
                'coins': -0x1
            }, _0x100ed7['loadData']();
        }
        async function _0xb9e158(_0x17679a = !![]) {
            _0x3e1b12 && (_0x17679a = ![]);
            let _0x1688f7 = () => {};
            if (_0x1dc265 === 'google') _0x1688f7 = _0x3eaffb;
            else {
                if (_0x1dc265 === 'facebook') _0x1688f7 = _0x1d425d;
                else _0x1dc265 === 'apple' && (_0x1688f7 = _0x23b246);
            }
            console['log']('logging out with social network ' + _0x1dc265);
            try {
                await _0x1688f7(), await _0x4cfaac(_0x41a78c), _0x3fa181(), _0x344c8f();
            } catch (_0x4d8e21) {
                console['error']('Error logging out:', _0x4d8e21);
            }
        }
        const _0x4cfaac = async _0x51564b => {
            let _0x3ef3a0 = _0x1f512a + '/auth/logout',
                _0x5473e6 = {
                    'userId': _0x51564b,
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined
                };
            try {
                await fetch(_0x3ef3a0, {
                    'method': 'POST',
                    'headers': {
                        'Content-Type': 'application/json'
                    },
                    'body': JSON['stringify'](_0x5473e6)
                });
            } catch (_0x228d21) {
                return _0x6a452e('AccountServer: Failed to logout'), console['error']('::: Account Server Logout ERROR :::', _0x228d21), ![];
            }
            return !![];
        }, _0x323e62 = _0x1a4542 => {
            _0x326bc5 = _0x1a4542, _0x131bb1(_0x1a4542['coins']), _0x7702e5(_0x1a4542['gems']);
        }, _0x1b41e5 = async () => {
            if (!_0x24d734) {
                console['error']('::: verifyLocalCredentials ERROR ::: User is not logged in!');
                return;
            }
            const _0x222907 = _0x1f512a + '/auth/@me',
                _0x38791c = {
                    'userId': _0x41a78c,
                    'token': _0x2790b3,
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined,
                    'isRefresh': ![]
                };
            try {
                const _0x570ed3 = await fetch(_0x222907, {
                        'method': 'POST',
                        'headers': {
                            'Content-Type': 'application/json;charset=UTF-8'
                        },
                        'body': JSON['stringify'](_0x38791c)
                    }),
                    _0x7a915c = await _0x570ed3['json']();
                return _0x7a915c['success'] ? (_0x323e62(_0x7a915c['data']), !![]) : (_0xb9e158(), console['log']('::: verifyLocalCredentials failed ::: Needs new credentials'), ![]);
            } catch (_0x56d1e8) {
                return console['error']('::: verifyLocalCredentials ERROR :::', _0x56d1e8), ![];
            }
        };
        var _0x326bc5 = {
            'coins': -0x1,
            'level': 0x0,
            'xp': 0x0,
            'xpNextLvl': 0x0
        };
        const _0x4c301d = async function() {
            if (!_0x24d734) return console['log']('not logged in!'), null;
            console['log']('loading account data...');
            let _0x56ee80 = _0x1f512a + '/auth/@me';
            const _0x5a3a8f = {
                'userId': _0x41a78c,
                'token': _0x2790b3,
                'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined,
                'isRefresh': !![]
            };
            return new Promise((_0x5c10cf, _0x1c1d2c) => {
                $['ajax']({
                    'url': _0x56ee80,
                    'type': 'POST',
                    'headers': {
                        'Content-Type': 'application/json;charset=UTF-8'
                    },
                    'data': JSON['stringify'](_0x5a3a8f),
                    'success': function(_0x22ba82) {
                        var _0x4e1d04 = _0x22ba82;
                        return console['log']('Done, result is ' + _0x22ba82), _0x326bc5 = _0x4e1d04['data'], console['log']('the resObj coins was', _0x4e1d04['coins']), _0x4e1d04['coins'] == 'BANNED' && setInterval(function() {
                            _0x6a452e('Your account has been BANNED!', 'error', 0x2710);
                        }, 0x2710), _0x5c10cf(_0x4e1d04);
                    },
                    'error': function(_0x5b20d3, _0x4795d1, _0x54cace) {
                        return console['error']('URL error: ' + _0x54cace), console['error']('failed to refresh account data!'), _0x5c10cf(null);
                    }
                });
            });
        }, _0x4c28b8 = async function(_0x53ba09) {
            _0x5ab13c = !![];
            const _0x1b3278 = await _0x4c301d();
            _0x53ba09 && _0x53ba09(_0x1b3278), _0x5ab13c = ![];
        };

        function _0x3527d7(_0x45a5b5) {
            console['log']('Loading shop items for logged in user! ' + _0x41a78c);
            let _0x4fdf22 = _0x1f512a + '/shop/get';
            console['log']('@@@@@@@ Sending URL request :' + _0x4fdf22), $['ajax']({
                'url': _0x4fdf22,
                'success': function(_0x1bf257) {
                    _0x45a5b5(!![], _0x1bf257);
                },
                'error': function(_0x3febf1, _0x5f1dba, _0xd71a91) {
                    console['log']('Shop loading-URL error: ' + _0xd71a91), _0x45a5b5(![], null);
                }
            });
        }
        const _0x27eaaa = function(_0x11679a) {
                let _0x2f0949 = _0x1f512a + '/shop/purchases';
                const _0x55461a = {
                    'userId': _0x41a78c,
                    'token': _0x2790b3,
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined
                };
                if (_0x363eb2) console['log']('Sending URL request :' + _0x2f0949);
                $['ajax']({
                    'url': _0x2f0949,
                    'method': 'POST',
                    'data': JSON['stringify'](_0x55461a),
                    'headers': {
                        'Content-Type': 'application/json;charset=UTF-8'
                    },
                    'success': function(_0x19c1f0) {
                        var _0x3c44d5 = _0x19c1f0;
                        _0x11679a(_0x3c44d5['success'], _0x3c44d5['data']);
                    },
                    'error': function(_0x3c80c3, _0x2a7648, _0x3413a2) {
                        if (_0x3c80c3['responseText']) {
                            const _0x1215b2 = JSON['parse'](_0x3c80c3['responseText']);
                            _0x11679a(_0x1215b2['success'], _0x1215b2['error']);
                        } else _0x11679a(![], 'an error happened during retrieving your purchased items.');
                    }
                });
            },
            _0x192d7b = function(_0x526b3a, _0x37f462) {
                let _0x5d72f0 = _0x1f512a + '/shop/wardrobe/save';
                const _0x39aafa = {
                    'userId': _0x41a78c,
                    'token': _0x2790b3,
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined,
                    'data': _0x526b3a
                };
                if (_0x363eb2) console['log']('Sending URL request :' + _0x5d72f0);
                $['ajax']({
                    'url': _0x5d72f0,
                    'method': 'POST',
                    'data': JSON['stringify'](_0x39aafa),
                    'headers': {
                        'Content-Type': 'application/json;charset=UTF-8'
                    },
                    'success': function(_0xa19555) {
                        var _0x546603 = _0xa19555;
                        _0x37f462(_0x546603['success'], _0x546603['data']);
                    },
                    'error': function(_0x533fe9, _0x2cea6c, _0xbabc6f) {
                        if (_0x533fe9['responseText']) {
                            const _0x59067d = JSON['parse'](_0x533fe9['responseText']);
                            _0x37f462(_0x59067d['success'], _0x59067d['error']);
                        } else _0x37f462(![], 'an error happened during wardrobe saving.');
                    }
                });
            },
            _0x43d7f4 = function(_0x14ee6f, _0x4517c8) {
                if (_0x363eb2) console['log']('Sending URL request to load coins for logged in user! ' + _0x41a78c);
                if (!_0x14ee6f) _0x14ee6f = 'goldDragon';
                let _0x4b2cb8 = _0x1f512a + '/shop/buy';
                const _0x3d4a0e = {
                    'userId': _0x41a78c,
                    'token': _0x2790b3,
                    'shopItem': _0x14ee6f,
                    'sessionId': _0x3a357f ? _0x3a357f['sessionId'] : undefined,
                    'serverId': _0x3a357f ? _0x3a357f['serverId'] : undefined
                };
                if (_0x363eb2) console['log']('Sending URL request :' + _0x4b2cb8);
                $['ajax']({
                    'url': _0x4b2cb8,
                    'method': 'POST',
                    'data': JSON['stringify'](_0x3d4a0e),
                    'headers': {
                        'Content-Type': 'application/json;charset=UTF-8'
                    },
                    'success': function(_0x5bfabc) {
                        var _0x2e87db = _0x5bfabc;
                        _0x4517c8(_0x2e87db['success'], _0x2e87db['reason']);
                    },
                    'error': function(_0x52a027, _0x29120c, _0x207ad0) {
                        if (_0x52a027['responseText']) {
                            const _0x95e307 = JSON['parse'](_0x52a027['responseText']);
                            _0x4517c8(_0x95e307['success'], _0x95e307['error']);
                        } else _0x4517c8(![], 'an error happened during purchase.');
                    }
                });
            };

        function _0x1c7229() {
            let _0x5b38db = _0x1f512a + '/addCoins?userId=' + _0x41a78c + '&passwordToken=' + _0x2790b3;
            if (_0x363eb2) console['log']('Sending URL request :' + _0x5b38db);
            $['ajax']({
                'url': _0x5b38db,
                'success': function(_0x372b35) {
                    if (_0x363eb2) _0x4c28b8();
                },
                'error': function(_0x41f077, _0x2b6a5a, _0x3288ca) {
                    console['log']('URL error: ' + _0x3288ca);
                }
            });
        }

        function _0x3bf8fd() {
            let _0x30937a = _0x1f512a + '/resetAccount?userId=' + _0x41a78c + '&passwordToken=' + _0x2790b3;
            if (_0x363eb2) console['log']('Sending URL request :' + _0x30937a);
            $['ajax']({
                'url': _0x30937a,
                'success': function(_0x4d86b6) {
                    console['log']('reposnse is ' + _0x4d86b6), _0x4c28b8();
                },
                'error': function(_0x3a91d3, _0x42c769, _0x345f95) {
                    console['log']('URL error: ' + _0x345f95);
                }
            });
        }
        const _0x15206f = function(_0x5866de, _0x140b5c, _0x20b8f5, _0x415097, _0x202398) {
                _0x41a78c = _0x5866de, _0x2790b3 = _0x140b5c, _0x4a18b3 = _0x415097, _0x389e39 = _0x20b8f5, _0x1dc265 = _0x202398, _0x24d734 = !![], _0x172d37 && (localStorage['setItem']('login_userId', _0x41a78c), localStorage['setItem']('login_passwordToken', _0x2790b3), localStorage['setItem']('login_name', _0x389e39), localStorage['setItem']('login_profilePicURL', _0x4a18b3), localStorage['setItem']('login_socialNetworkName', _0x1dc265)), _0x527f8e = document['getElementById']('loginButtons'), _0x4c301d(), _0x344c8f(), _0xf451d2();
            },
            _0xe890b7 = function(_0x544523, _0x1c5148) {
                if (_0x363eb2) console['log']('Sending URL request to load coins for logged in user! ' + _0x41a78c);
                if (!_0x544523) _0x544523 = 'none';
                let _0x486c8e = _0x1f512a + '/playerSettings_update?userId=' + _0x41a78c + '&passwordToken=' + _0x2790b3 + '&itemId=' + _0x544523;
                if (_0x363eb2) console['log']('Sending URL request :' + _0x486c8e);
                $['ajax']({
                    'url': _0x486c8e,
                    'success': function(_0x48c2f9) {
                        var _0x2c3b66 = JSON['parse'](_0x48c2f9);
                        console['log']('Done, result is ' + _0x48c2f9), _0x1c5148(_0x2c3b66['success'], _0x2c3b66['reason']);
                    },
                    'error': function(_0x15ebf3, _0x49a093, _0x5069e7) {
                        _0x1c5148(![], 'urlnotfound');
                    }
                });
            },
            _0x5766bb = function(_0xfed2c6) {
                if (_0x24d734) {
                    if (_0x41a78c === _0xfed2c6) return !![];
                }
                return ![];
            };
        if (this === window)
            while (!![]) {}

        function _0x1397d0() {
            $['ajax']({
                'url': _0x1f512a + '/servers/get',
                'type': 'GET',
                'success': function(_0x47e2bb) {
                    var _0x448316 = _0x47e2bb;
                    gotMasterServerStats = !![], _0x570a5c = _0x448316['reduce']((_0x433db6, _0x2f2119) => _0x433db6 + Math['max'](0x0, _0x2f2119['totalPlayerCount']), 0x0);
                    for (var _0x1abeb2 = 0x0; _0x1abeb2 < _0x39fb90['length']; _0x1abeb2++) {
                        var _0x448d60 = _0x39fb90[_0x1abeb2],
                            _0x22978d = ![];
                        for (var _0x7534bd = 0x0; _0x7534bd < _0x448316['length']; _0x7534bd++) {
                            var _0x45b65a = _0x448316[_0x7534bd];
                            if (_0x45b65a['id'] == _0x448d60['id']) {
                                _0x448d60['playersCount'] = _0x45b65a['totalPlayerCount'], _0x22978d = !![];
                                break;
                            }
                        }!_0x22978d && (_0x448d60['playersCount'] = -0x1);
                    }
                    _0x2a674c();
                },
                'error': function(_0x44d974, _0x18065a, _0xe961e9) {
                    _0x2a674c(), console['log']('Error getting master server stats: ' + _0xe961e9);
                }
            });
        }
        $['loadScript']('https://accounts.google.com/gsi/client?hl=en', function() {
            var _0x829695 = function() {
                if (typeof gapi === 'google') return;
                const _0x3394f3 = google['accounts']['oauth2']['initTokenClient']({
                    'client_id': $config['authentication']['google'],
                    'cookiepolicy': 'single_host_origin',
                    'scope': 'openid email profile',
                    'callback': _0x582f82 => {
                        _0x5bcc60(_0x582f82['access_token'], 'web', 'google');
                    }
                });
                document['querySelector']('#googleLoginBtn')['onclick'] = () => {
                    _0x3e1b12 ? _0x2853d1() : _0x3394f3['requestAccessToken'](), console['log']('requesting token');
                };
            };
            _0x829695();
        });
        async function _0x1dd7e2(_0x166524, _0xeb902d) {
            const _0x5f38f7 = await _0x5bcc60(_0x166524, _0xeb902d, 'google');
            !_0x5f38f7 && await _0x88e5a1()();
        }
        async function _0x251be0() {
            const _0x3ec00c = _0x36fce9();
            try {
                const _0x1c2146 = await _0x3ec00c['func']();
                if (_0x3ec00c['platform'] == 'mobile') return;
                console['log']('GOT ID TOKEN', _0x1c2146, _0x3ec00c['platform']), await _0x1dd7e2(_0x1c2146, _0x3ec00c['platform']);
            } catch (_0x23e409) {
                console['error']('Error with google login:', _0x23e409['message']);
            }
        }
        async function _0x3eaffb() {}

        function _0x36fce9() {
            return !_0x3e1b12 ? (console['log']('resolve web google login'), {
                'platform': 'web',
                'func': _0x497e4e
            }) : (console['log']('resolve mobile google login'), {
                'platform': 'mobile',
                'func': _0x2853d1
            });
        }

        function _0x88e5a1() {
            return !_0x3e1b12 ? _0x317782 : _0x2b319f;
        }
        async function _0x497e4e() {
            return console['log']('Doing web google login.'), new Promise((_0x201c38, _0x484be0) => {
                gapi['load']('auth2', async function() {
                    console['log']('loaded auth2');
                    try {
                        console['log']('initializing auth2'), auth2 = auth2 || gapi['auth2']['init']({
                            'client_id': $config['googleAuthClientId'],
                            'cookiepolicy': 'single_host_origin'
                        }), console['log']('Signing in.');
                        const _0x35e61c = await auth2['signIn']();
                        console['log']('Getting id token.');
                        const _0x553f43 = _0x35e61c['getAuthResponse']()['id_token'];
                        return console['log']('Received id_token', _0x553f43), _0x201c38(_0x553f43);
                    } catch (_0x519000) {
                        return console['error']('Error with google login:', _0x519000), _0x484be0(_0x519000);
                    }
                });
            });
        }
        async function _0x2853d1() {
            _0xdcdf6a('google-login', '');
        }
        async function _0x317782() {
            try {
                var _0x12fa03 = gapi['auth2']['getAuthInstance']();
                return _0x12fa03['signOut']();
            } catch (_0x1df68a) {
                console['error']('Error with web google logout:', _0x1df68a);
            }
        }
        async function _0x2b319f() {}
        window['fbAsyncInit'] = function() {
                if (typeof window['FB'] === 'undefined') return;
                window['FB']['init']({
                    'appId': $config['authentication']['facebook'],
                    'cookie': !![],
                    'xfbml': !![],
                    'version': 'v3.2',
                    'status': !![]
                }), window['FB']['AppEvents']['logPageView']();
            },
            function(_0x4c9180, _0x578206, _0x4f86b1) {
                var _0x43ca7f, _0x59c2b0 = _0x4c9180['getElementsByTagName'](_0x578206)[0x0];
                if (_0x4c9180['getElementById'](_0x4f86b1)) return;
                _0x43ca7f = _0x4c9180['createElement'](_0x578206), _0x43ca7f['id'] = _0x4f86b1, _0x43ca7f['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x59c2b0['parentNode']['insertBefore'](_0x43ca7f, _0x59c2b0);
            }(document, 'script', 'facebook-jssdk');
        async function _0x5688a6() {
            _0xdcdf6a('facebook-login', '');
        }
        async function _0x531e85(_0x142c27, _0x361770) {
            const _0x42b37d = await _0x5bcc60(_0x142c27, _0x361770, 'facebook');
            !_0x42b37d && await _0x39a705()();
        }
        async function _0x568175() {
            const _0x2bad88 = _0x76b191();
            try {
                const _0x7c726c = await _0x2bad88['func']();
                if (_0x2bad88['platform'] == 'mobile') return;
                await _0x531e85(_0x7c726c, _0x2bad88['platform']);
            } catch (_0xb6f9cd) {
                console['error']('Error with facebook login:', _0xb6f9cd['message']);
            }
        }
        async function _0x1d5b45() {
            return new Promise((_0x2e1437, _0x44159c) => {
                window['FB']['login'](function(_0x2809b8) {
                    if (_0x2809b8['status'] === 'connected') {
                        console['log']('Successfully got auth token from FB');
                        var _0x2d63fc = _0x2809b8['authResponse']['accessToken'];
                        return _0x2e1437(_0x2d63fc);
                    } else return _0x44159c('Error logging in to window.FB.');
                }, {
                    'scope': 'public_profile,email'
                });
            });
        }

        function _0x76b191() {
            return !_0x3e1b12 ? {
                'platform': 'web',
                'func': _0x1d5b45
            } : {
                'platform': 'mobile',
                'func': _0x5688a6
            };
        }

        function _0x39a705() {
            return !_0x3e1b12 ? _0x2941be : _0x5524ac;
        }
        async function _0x1d425d() {
            const _0x1158d3 = _0x39a705();
            try {
                return _0x1158d3();
            } catch (_0x20ccb0) {
                console['error']('Error with facebook logout:', _0x20ccb0['message']);
            }
        }
        async function _0x5524ac() {}
        async function _0x2941be() {
            return new Promise((_0x3812fa, _0x5690cd) => {
                window['FB']['logout'](function(_0x1d7a41) {
                    return _0x3812fa(!![]);
                });
            });
        }
        let _0x55d215 = ![];
        const _0xf14bce = () => typeof AppleID === 'object' && AppleID['hasOwnProperty']('auth');
        !_0x19c95e && $['loadScript']('https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js', function() {
            if (_0xf14bce()) {
                let _0x258972 = window['location']['origin'];
                AppleID['auth']['init']({
                    'clientId': $config['authentication']['apple'],
                    'scope': 'name email',
                    'redirectURI': _0x258972,
                    'usePopup': !![],
                    'state': _0x2009f9(0x7)
                }), _0x55d215 = !![];
            }
        });
        async function _0x32c5b2(_0x3a50da, _0xa2a183, _0x382cc2) {
            const _0x3021a5 = _0x382cc2 ? {
                    'name': _0x382cc2
                } : null,
                _0x2d5e24 = await _0x5bcc60(_0x3a50da, _0xa2a183, 'apple', _0x3021a5);
            !_0x2d5e24 && await _0x1a0e9d()();
        }
        async function _0x13f9b9() {
            const _0x9b61a = _0x5a52d7();
            try {
                const _0x20b6c3 = await _0x9b61a['func']();
                await _0x32c5b2(_0x20b6c3, _0x9b61a['platform']);
            } catch (_0x454100) {
                console['error']('Error with apple login:', _0x454100['message']);
            }
        }
        async function _0x23b246() {}

        function _0x5a52d7() {
            return !_0x3e1b12 ? (console['log']('resolve web apple login'), {
                'platform': 'web',
                'func': _0x539d46
            }) : (console['log']('resolve mobile apple login'), {
                'platform': 'mobile',
                'func': _0x539d46
            });
        }

        function _0x1a0e9d() {
            return !_0x3e1b12 || _0x19c95e ? _0x40d519 : _0x40d519;
        }
        async function _0x539d46() {
            try {
                if (!_0x55d215) throw new Error('Failed to initialize apple auth library.');
                const _0x5dd360 = await AppleID['auth']['signIn']();
                if (_0x5dd360 && _0x5dd360['authorization'] && _0x5dd360['authorization']['id_token']) return console['log']('data authorization was:', _0x5dd360['authorization']), _0x5dd360['authorization']['id_token'];
                else throw new Error('Failed to get id token from apple.');
            } catch (_0x3279e4) {
                console['error']('error signing in ', _0x3279e4);
                throw _0x3279e4;
            }
        }
        async function _0x40d519() {
            try {
                var _0x390f1c = gapi['auth2']['getAuthInstance']();
                return _0x390f1c['signOut']();
            } catch (_0x4543db) {
                console['error']('Error with web apple logout:', _0x4543db);
            }
        }
        async function _0x2be085() {}
        async function _0xa45589() {
            _0x350b02();
        }
        let _0x5745c3 = null;

        function _0x350b02() {
            const _0x24d3f5 = 'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\x0a' + 'width=700,height=800,left=50%,top=50%';
            _0x5745c3 = _0x2009f9(0xa);
            const _0x446f82 = window['location']['origin'] + '/discord_login.html',
                _0x267ddc = 'https://discord.com/oauth2/authorize?response_type=token&client_id=' + $config['authentication']['discord'] + '&state=' + _0x5745c3 + '&scope=identify+email&redirect_uri=' + _0x446f82,
                _0x43a77c = window['open'](_0x267ddc, 'Discord Auth', _0x24d3f5),
                _0x933821 = setInterval(() => {
                    _0x43a77c['postMessage']('MOPE_GET_DISCORD', window['location']['origin']);
                }, 0x1f4),
                _0x5dae17 = async _0x419014 => {
                    if (_0x419014['data']['response']) {
                        clearInterval(_0x933821), _0x43a77c['close']();
                        if (_0x419014['data']['response'] == 'MOPE_GET_DISCORD') {
                            console['log'](_0x419014['data']);
                            if (_0x419014['data']['state'] != _0x5745c3) {
                                _0x6a452e('ACCOUNTS: Error while trying to login using discord: DISCORD_2', 'error', 0x2710);
                                return;
                            }
                            const _0x13e918 = await _0x5bcc60(_0x419014['data']['code'], 'web', 'discord');
                        } else _0x6a452e('ACCOUNTS: Error while trying to login using discord: DISCORD_1', 'error', 0x2710);
                        window['removeEventListener']('message', _0x5dae17);
                    }
                };
            window['addEventListener']('message', _0x5dae17);
        }
        var _0xbb80e3 = null,
            _0x194077 = +new Date();
        let _0x20117d = [],
            _0xcff3a0 = null,
            _0x4797f7 = $config['env'] == 'development' || $config['env'] == 'staging';

        function _0x633c65(_0xe39454, _0x5284a3) {
            var _0x46bc38 = location['protocol'] == 'https:' ? 'https:' : 'http:',
                _0x3df066 = location['host'],
                _0x550475 = _0x46bc38 + '//' + _0x3df066;
            $['ajax']({
                'url': _0x1f512a + '/xsolla/getToken',
                'type': 'POST',
                'data': JSON['stringify']({
                    'userId': _0x41a78c,
                    'token': _0x2790b3,
                    'itemId': _0xe39454,
                    'settings_ui_version': _0x458dca ? 'mobile' : 'desktop',
                    'return_url': _0x550475
                }),
                'headers': {
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                'success': function(_0x7fca5c) {
                    var _0x66f9c8 = _0x7fca5c;
                    _0x5284a3(_0x66f9c8['success'] ? _0x66f9c8['token'] : null);
                },
                'error': function(_0xe68a44, _0x489b0c, _0x50398f) {
                    var _0x5a506e = JSON['parse'](_0xe68a44['responseText']);
                    console['log']('Error getting token: ' + _0x50398f), _0x6a452e(_0x5a506e['reason'], 'error', 0xa), _0x5284a3(![], null);
                }
            });
        }

        function _0x4e8362() {
            var _0x44de30 = location['protocol'] == 'https:' ? 'https:' : 'http:',
                _0x1fbbe2 = location['host'],
                _0x99b70 = _0x44de30 + '//' + _0x1fbbe2;
            $['ajax']({
                'url': _0x1f512a + '/xsolla/cancelSubscription',
                'type': 'POST',
                'data': JSON['stringify']({
                    'userId': _0x41a78c,
                    'token': _0x2790b3
                }),
                'headers': {
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                'success': function(_0xc9f078) {},
                'error': function(_0x3a188b, _0x155bd5, _0x359ddb) {}
            });
        }

        function _0x2c67bc(_0xf2c66) {
            $['ajax']({
                'url': _0x1f512a + '/xsolla/getPackets',
                'type': 'GET',
                'success': function(_0x4d7a09) {
                    var _0x47dc3f = _0x4d7a09;
                    _0xf2c66(_0x47dc3f['success'] ? _0x47dc3f['data'] : null);
                },
                'error': function(_0x50ae36, _0x382195, _0x421315) {
                    var _0x4473b6 = JSON['parse'](_0x50ae36['responseText']);
                    console['log']('Error getting token: ' + _0x421315), _0x6a452e(_0x4473b6['error'], 'error', 0xa), _0xf2c66(![], null);
                }
            });
        }

        function _0x4eaecd(_0x118a9f) {
            $['ajax']({
                'url': _0x1f512a + '/xsolla/getVip',
                'type': 'GET',
                'success': function(_0x5ca632) {
                    var _0x4099a2 = _0x5ca632;
                    _0x118a9f(_0x4099a2);
                },
                'error': function(_0x44cdb3, _0x2d55c9, _0x50b411) {
                    var _0x34186d = JSON['parse'](_0x44cdb3['responseText']);
                    console['log']('Error getting token: ' + _0x50b411), _0x6a452e(_0x34186d['error'], 'error', 0xa), _0x118a9f(![], null);
                }
            });
        }
        document['getElementById']('xsollaStoreCloseButton')['onclick'] = function() {
            _0x4fd042();
        };

        function _0x4fd042() {
            _0xe6ca0f = ![];
            var _0x5ae87 = document['getElementById']('xsollaStoreFrameWrapper');
            _0x5ae87['style']['display'] = 'none';
            var _0x24ec5a = document['getElementById']('xsollaStoreInnerDiv');
            while (_0x24ec5a['firstChild']) {
                _0x24ec5a['removeChild'](_0x24ec5a['firstChild']);
            }
        }
        var _0xe6ca0f = ![];

        function _0x24a440() {
            if (_0x3e1b12) {
                alert('Please open mope.io in your browser to buy coins (can\'t buy them in the app yet!)');
                return;
            }
            if (_0xe6ca0f) _0x4fd042();
            _0xe6ca0f = !![];
            var _0x5f4206 = document['getElementById']('xsollaStoreInnerDiv');
            _0x5f4206['style']['display'] = 'none';
            while (_0x5f4206['firstChild']) {
                _0x5f4206['removeChild'](_0x5f4206['firstChild']);
            }
            const _0x3ee228 = document['querySelector']('.xsollaStoreItems');
            while (_0x3ee228['lastChild']) _0x3ee228['removeChild'](_0x3ee228['lastChild']);
            var _0x18561f = document['getElementById']('xsollaStoreFrameWrapper');
            _0x18561f['style']['display'] = 'block';
            var _0x3c89e7 = document['getElementById']('loadingAnim_xsolla');
            _0x3c89e7['style']['display'] = 'block', _0x2c67bc(_0x326177 => {
                if (!_0x326177) {
                    _0x4fd042();
                    return;
                }
                _0x3c89e7['style']['display'] = 'none', _0x3ee228['style']['display'] = 'grid';
                for (let _0x288668 = 0x0; _0x288668 < _0x326177['length']; _0x288668++) {
                    const _0x3feee7 = _0x326177[_0x288668],
                        _0x18ce30 = document['createElement']('div'),
                        _0x2df907 = document['createElement']('div'),
                        _0x10e377 = document['createElement']('img'),
                        _0x195c11 = document['createElement']('div'),
                        _0x191800 = document['createElement']('div');
                    _0x18ce30['className'] = 'xsollaStoreItem', _0x2df907['className'] = 'xsollaStoreItemImageOuter', _0x10e377['className'] = 'xsollaStoreItemImageInner', _0x195c11['className'] = 'xsollaStoreItemTitle', _0x191800['className'] = 'xsollaStoreItemBuy', _0x18ce30['append'](_0x2df907, _0x195c11, _0x191800), _0x2df907['append'](_0x10e377), _0x18ce30['title'] = _0x3feee7['description'], _0x195c11['innerText'] = _0x3feee7['name'] + ' - ' + _0x3feee7['amount'], _0x10e377['src'] = _0x3feee7['image'], _0x191800['innerText'] = 'Buy for ' + _0x3feee7['price']['replace']('.', ',') + '$', _0x191800['onclick'] = () => {
                        _0xc82ebe(_0x3feee7['id']);
                    }, _0x3ee228['appendChild'](_0x18ce30);
                }
            });
        }

        function _0xc82ebe(_0xdf6f8d) {
            const _0x1cb3f6 = document['querySelector']('.xsollaStoreItems');
            while (_0x1cb3f6['lastChild']) _0x1cb3f6['removeChild'](_0x1cb3f6['lastChild']);
            _0x1cb3f6['style']['display'] = 'none';
            var _0x3c31b8 = document['getElementById']('loadingAnim_xsolla');
            _0x3c31b8['style']['display'] = 'block';
            var _0x3b41d4 = document['getElementById']('xsollaStoreInnerDiv');
            _0x3b41d4['style']['display'] = 'block', _0x633c65(_0xdf6f8d, function(_0x16063a) {
                if (_0x16063a) {
                    console['log']('Got xsolla token ' + _0x16063a);
                    var _0x390057 = document['getElementById']('loadingAnim_xsolla');
                    _0x390057['style']['display'] = 'none';
                    var _0x451b0d;
                    if (_0x4797f7) _0x451b0d = 'https://sandbox-secure.xsolla.com/paystation4/?token=' + _0x16063a;
                    else _0x451b0d = 'https://secure.xsolla.com/paystation4/?token=' + _0x16063a;
                    var _0x36c64f = document['createElement']('iframe');
                    _0x36c64f['setAttribute']('src', _0x451b0d), _0x36c64f['setAttribute']('id', 'paystationIframe'), _0x36c64f['setAttribute']('allow', 'clipboard-read; clipboard-write; payment'), document['getElementById']('shop')['appendChild'](_0x36c64f), window['addEventListener']('message', function(_0x51c754) {
                        try {
                            const _0x9abe7c = JSON['parse'](_0x51c754['data']);
                            if (_0x9abe7c['command'] === 'close-widget' || _0x9abe7c['command'] === 'status-done' || _0x9abe7c['command'] === 'status-troubled') {
                                const _0x2b0eb7 = document['getElementById']('paystationIframe');
                                _0x2b0eb7 && _0x2b0eb7['remove'](), _0x1cb3f6['style']['display'] = 'block';
                            }
                        } catch (_0x2a0ca5) {
                            console['log']('Error processing message:', _0x2a0ca5);
                        }
                    });
                }
            });
        }

        function _0xb4a01c(_0x410807) {
            var _0x1f0e5c = {
                    'access_token': 'abcdef1234567890abcdef1234567890'
                },
                _0x1e2b67 = document['createElement']('script');
            _0x1e2b67['type'] = 'text/javascript', _0x1e2b67['async'] = !![], _0x1e2b67['src'] = '//static.xsolla.com/embed/paystation/1.0.7/widget.min.js', _0x1e2b67['addEventListener']('load', function(_0x175a25) {
                XPayStationWidget['init'](_0x1f0e5c);
            }, ![]);
            var _0x9bb2f = document['getElementsByTagName']('head')[0x0];
            _0x9bb2f['appendChild'](_0x1e2b67);
        }
        _0x2c67bc(_0x22aa5e => {
            _0x22aa5e && (_0x20117d = _0x22aa5e);
        }), _0x4eaecd(_0x2c8960 => {
            _0x2c8960 && (_0xcff3a0 = _0x2c8960);
        });
        (typeof _0x3aa021 === 'undefined' || _0x3aa021 === null || _0x3aa021 === undefined) && (window['options_graphicsLevel'] = 0x3);
        _0x361cb9(_0x3aa021);

        function _0x361cb9(_0x28093e) {
            var _0x26db8e = _0x28093e == _0x3aa021;
            _0x3aa021 = _0x28093e;
            if (window['localStorage']) try {
                window['localStorage']['setItem']('options_graphicsLevel', _0x3aa021);
            } catch (_0x1cfc2f) {}
            for (var _0x310b37 = 0x1; _0x310b37 <= 0x3; _0x310b37++) {
                var _0x35f841;
                switch (_0x310b37) {
                    case _0x243dd0:
                        _0x35f841 = document['getElementById']('graphicsBut_low');
                        break;
                    case _0x313a4d:
                        _0x35f841 = document['getElementById']('graphicsBut_med');
                        break;
                    case _0x12a943:
                        _0x35f841 = document['getElementById']('graphicsBut_hd');
                        break;
                }
                _0x35f841 && (_0x310b37 == _0x28093e ? (_0x35f841['disabled'] = !![], _0x35f841['style']['opacity'] = 0.5) : (_0x35f841['disabled'] = ![], _0x35f841['style']['opacity'] = 0x1)), _0x26db8e && (_0x5d3510 = !![]);
            }
        }
        let _0x4c085d = 0x0,
            _0xcee707 = null,
            _0x35a267 = 0x0;

        function _0x5050e4(_0x3ac300) {
            _0x4c085d += 0x1, _0x3ac300 - _0xcee707 > 0x3e8 && (_0xcee707 = _0x3ac300, _0x35a267 = _0x4c085d, _0x4c085d = 0x0);
        }

        function _0x3d4c4f(_0xd9ed00) {
            _0x2cc105['setText']('FPS: ' + _0x35a267 + ' | PING: ' + _0x218837 + 'ms | TPS: ' + _0x2e49df);
            var _0x3797f6 = document['getElementById']('graphics_fps');
            if (_0x3797f6 && !_0xc7d16a) {
                if (_0xd9ed00 > 0x3a) _0x3797f6['innerHTML'] = ' FPS ' + _0xd9ed00 + ' (perfect)';
                else {
                    if (_0xd9ed00 > 0x28) _0x3797f6['innerHTML'] = ' FPS ' + _0xd9ed00 + ' (okay)';
                    else {
                        if (_0xd9ed00 > 0x1d) _0x3797f6['innerHTML'] = ' FPS ' + _0xd9ed00 + ' (playable- close other tabs/ lower graphics)';
                        else _0x3797f6['innerHTML'] = ' FPS ' + _0xd9ed00 + ' (low- close other tabs/ lower graphics)';
                    }
                }
            }
        }
        setInterval(function() {
            _0x3d4c4f(_0x35a267);
        }, _0x5c376a);
        const _0x2db417 = performance['now']();
        let _0xda8c63 = window['innerWidth'] - 0x96,
            _0x26bf86 = window['innerHeight'] - 0x96;

        function _0x5808f7(_0xcebf86, _0x22945b, _0x55224a) {
            this['animStep'] = 0x1, this['animStartT'] = _0x476319, this['animDur'] = 0xbb8, this['timedOut'] = ![], this['xShift'] = _0x5d7e18(-0xa, 0xa), this['yShift'] = _0x5d7e18(-0xa, 0xa), this['anlgeShift'] = _0x5d7e18(-0xa, 0xa), this['text'] = new _0x16040f(0x10, 'white'), this['text']['setText']((_0xcebf86 >= 0x0 ? '+ ' : '') + _0x4aa4a0(_0xcebf86) + _0x22945b), this['textFontSz'] = 0x1e;
            var _0xb202bc = 'white';
            _0xcebf86 > 0x2710 && (_0xb202bc = '#c7b753', this['textFontSz'] = 0x28, this['animDur'] += 0x3e8), _0xcebf86 > 0x186a0 && (_0xb202bc = '#fdca5b', this['textFontSz'] = 0x2d, this['animDur'] += 0x7d0), _0xcebf86 > 0xf4240 && (_0xb202bc = '#c7b753', this['textFontSz'] = 0x33, this['animDur'] += 0x7d0), _0xcebf86 < 0x0 && (_0xb202bc = '#c65f59', this['animDur'] += 0x7d0), _0xb202bc = _0x55224a === undefined ? _0xb202bc : _0x55224a, this['text']['setColor'](_0xb202bc), this['draw'] = function() {
                var _0x5632c4 = _0x34fd15((_0x476319 - this['animStartT']) / this['animDur'], 0x0, 0x1);
                _0x4597c4['save']();
                var _0x38c18b = window['innerWidth'] * window['devicePixelRatio'] * 0.5,
                    _0x2c52ed = _0x117fee - 0x55 * _0x6039c + _0x5632c4 * (-0x96 * _0x6039c);
                _0x4597c4['translate'](_0x38c18b, _0x2c52ed), _0x4597c4['rotate'](_0x4c4686(this['anlgeShift'] * _0x5632c4)), _0x4597c4['globalAlpha'] = 0x1 - _0x5632c4, this['text']['setFontSize'](this['textFontSz'] * _0x6039c), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x4597c4['restore']();
                if (_0x476319 >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
            };
        }

        function _0x3eb07d(_0x59d1c5, _0x5c9b3e, _0x2f1336, _0x21cf93) {
            this['animStep'] = 0x1, this['animStartT'] = _0x476319, this['timedOut'] = ![], this['xShift'] = _0x5d7e18(-0xa, 0xa), this['yShift'] = _0x5d7e18(-0xa, 0xa), this['anlgeShift'] = _0x5d7e18(-0xa, 0xa), this['text'] = new _0x16040f(_0x5c9b3e, _0x2f1336), this['text']['setText'](_0x59d1c5), this['textFontSz'] = _0x5c9b3e, this['animDur'] = _0x21cf93, this['text']['setColor'](_0x2f1336), this['draw'] = function() {
                if (_0x5910dc) return;
                var _0x543dc8 = _0x34fd15((_0x476319 - this['animStartT']) / this['animDur'], 0x0, 0x1);
                _0x4597c4['save']();
                var _0x82c269 = _0x4921b9 / 0x2,
                    _0x28b1ee = _0x117fee - 0x55 * _0x6039c + _0x543dc8 * (-0x96 * _0x6039c);
                _0x4597c4['translate'](_0x82c269, _0x28b1ee), _0x4597c4['globalAlpha'] = 0x1 - _0x543dc8, this['text']['setFontSize'](this['textFontSz'] * _0x6039c), this['text']['x'] = 0x0, this['text']['y'] = 0x0, this['text']['draw'](), _0x4597c4['restore']();
                if (_0x476319 >= this['animStartT'] + this['animDur']) this['timedOut'] = !![];
            };
        }
        var _0x4698a9 = 0xc8;

        function _0x4dae39() {
            var _0x154504 = _0x5ec8aa && _0x14d9aa < 0x1f4 ? 1.4 : 0x1;
            _0x4abf53['w'] = _0x4abf53['h'] = _0x4698a9 * _0x6039c * _0x154504, _0x40237b['w'] = _0x40237b['h'] = _0x4698a9 * _0x6039c * _0x154504, _0x372734['w'] = _0x372734['h'] = _0x4698a9 * _0x6039c * _0x154504, _0x5d55ff['w'] = 0x3c * _0x52f571 * _0x154504, _0x5d55ff['h'] = 0x1e * _0x52f571 * _0x154504;
            const _0x4e8109 = 0x32;
            _0x4abf53['x'] = 0x19 * _0x52f571 * _0x154504 + _0x4abf53['w'] / 0x2, _0x4abf53['y'] = _0x117fee - (0x28 * _0x52f571 + _0x4abf53['w'] / 0x2);
            _0xfd4e58 && (_0x4abf53['x'] = _0x4921b9 - _0x4abf53['x']);
            _0x40237b['x'] = _0x4abf53['x'];
            if (!_0x5ec8aa) _0x40237b['y'] = _0x4abf53['y'];
            else _0x40237b['y'] = _0x4abf53['y'] - (0xa * _0x52f571 * _0x154504 + _0x40237b['w'] / 0x2 + _0x4abf53['w'] / 0x2);
            _0x372734['x'] = _0x4abf53['x'], _0x372734['y'] = _0x40237b['y'] - (0xa * _0x52f571 * _0x154504 + _0x372734['w'] / 0x2 + _0x40237b['w'] / 0x2), _0x5d55ff['x'] = Math['min'](_0x4921b9 / 0x2 + 0xfa * _0x52f571 * _0x154504, _0x4921b9 * 0.8) - 0x96, _0x5d55ff['y'] = 0xf * _0x52f571 + _0x5d55ff['h'] / 0x2, _0x1a9e24['setPosAndSize'](_0x5d55ff['x'] - (_0x5d55ff['w'] / 0x2 + 0xa * _0x52f571 * _0x154504), _0x5d55ff['y'], 0x3c * _0x52f571 * _0x154504, 0x1e * _0x52f571 * _0x154504, 0x1, 0.5);
            for (var _0x216d36 = 0x0; _0x216d36 < _0x54a676['length']; _0x216d36++) {
                var _0x5b5023 = _0x54a676[_0x216d36];
                _0x5b5023['visible'] = _0x5ec8aa;
            }
            _0x40237b['visible'] = !![], _0x372734['visible'] = !![], _0x1a9e24['visible'] = _0x1a9e24['touchEnabled'] = _0x5ec8aa;
        }
        _0x1962dc['addEventListener']('gesturestart', function(_0x4924f5) {
            _0x4924f5['preventDefault']();
        });

        function _0x136f0b() {
            for (var _0x20f09e = 0x0; _0x20f09e < _0x54a676['length']; _0x20f09e++) {
                var _0x25bfca = _0x54a676[_0x20f09e];
                _0x25bfca['pressed'] = ![], _0x25bfca['pressedTouchID'] = -0x1;
            }
            _0x3d9a9d = ![];
        }
        _0x1962dc['ontouchstart'] = function(_0x1c285e) {
            _0x3a1f5a();
            var _0xa7d3e2 = _0x1c285e['touches'];
            _0xa7d3e2['length'] == 0x1 && _0x136f0b();
            if (!_0xc7d16a) return;
            for (var _0x4f12d9 = 0x0; _0x4f12d9 < _0x1c285e['changedTouches']['length']; _0x4f12d9++) {
                var _0x59559 = _0x1c285e['changedTouches'][_0x4f12d9];
                for (var _0x39f81f = 0x0; _0x39f81f < _0x54a676['length']; _0x39f81f++) {
                    var _0x3946ad = _0x54a676[_0x39f81f],
                        _0x5549aa = _0x3946ad['testPosHitsButton'](_0x59559['clientX'] * _0x52f571, _0x59559['clientY'] * _0x52f571);
                    if (_0x5549aa && !_0x3946ad['pressed'] && _0x3946ad['touchEnabled']) {
                        _0x1c285e['preventDefault'](), _0x3946ad['pressed'] = !![], _0x3946ad['pressedTouchID'] = _0x59559['identifier'], _0x3946ad['onButtonTouchStart']();
                        return;
                    }
                }
            }
            if (!_0x308fd0) {
                if (!_0x3d9a9d) {
                    var _0x59559 = _0x1c285e['changedTouches'][0x0];
                    _0x3d9a9d = !![], _0x178163 = _0x59559['clientX'] * _0x52f571, _0x5595ae = _0x59559['clientY'] * _0x52f571, _0x76903a = _0x178163, _0x142685 = _0x5595ae, _0x2abe20 = _0x59559['identifier'];
                    return;
                }
            }
            _0x4f86dd = _0x1c285e['touches'][0x0]['clientX'] * _0x52f571, _0x2b1fb9 = _0x1c285e['touches'][0x0]['clientY'] * _0x52f571, _0x9ba285();
        };
        var _0x5ac1ac = 0x0,
            _0x1ffef6 = 0x0,
            _0x9ae4f5 = 0x0,
            _0x48d3db = 0x1;
        _0x1962dc['ontouchmove'] = function(_0x322e5f) {
            _0x3a1f5a(), _0x322e5f['preventDefault']();
            for (var _0x4aa341 = 0x0; _0x4aa341 < _0x322e5f['changedTouches']['length']; _0x4aa341++) {
                var _0x284fc3 = _0x322e5f['changedTouches'][_0x4aa341];
                if (_0x284fc3['identifier'] == _0x40237b['pressedTouchID']) {
                    if (_0x4abf53['pressedTouchID'] == -0x1) {
                        var _0x467e68 = _0x4abf53['testPosHitsButton'](_0x284fc3['clientX'] * _0x52f571, _0x284fc3['clientY'] * _0x52f571),
                            _0x3be212 = _0x4abf53['pressed'];
                        _0x4abf53['pressed'] = _0x467e68;
                        if (_0x467e68 && !_0x3be212) _0x5a92d4(_0x24733a, !![]);
                        else !_0x467e68 && _0x3be212 && _0x5a92d4(_0x24733a, ![]);
                    }
                    continue;
                }
                if (!_0x308fd0) {
                    if (_0x3d9a9d && _0x284fc3['identifier'] == _0x2abe20) {
                        var _0x50abd4 = _0x284fc3['clientX'] * _0x52f571 - _0x178163,
                            _0x396b8d = _0x284fc3['clientY'] * _0x52f571 - _0x5595ae,
                            _0x3633f0 = Math['sqrt'](_0x50abd4 * _0x50abd4 + _0x396b8d * _0x396b8d);
                        if (_0x3633f0 > 0x0) {
                            var _0x458f91 = _0x50abd4 / _0x3633f0,
                                _0x80b2a2 = _0x396b8d / _0x3633f0,
                                _0x28b253 = Math['min'](0x1, _0x3633f0 / (_0x3e57fe * _0x52f571));
                            if (_0x28b253 < 0.35) _0x28b253 = 0x0;
                            var _0x510ca8 = Math['pow'](_0x28b253, 0x2),
                                _0xf9cc8 = 0x12c * _0x52f571 * _0x510ca8,
                                _0x1219fc = Math['atan2'](_0x80b2a2, _0x458f91);
                            _0x2ddb55 = _0x4c0365(_0x1f1024, _0x1219fc), _0x7bf7db = _0x28b253, _0x76903a = _0x178163 + _0x3e57fe * _0x52f571 * _0x458f91 * _0x28b253, _0x142685 = _0x5595ae + _0x3e57fe * _0x52f571 * _0x80b2a2 * _0x28b253, _0x4f86dd = _0x4921b9 / 0x2 + _0x458f91 * _0xf9cc8, _0x2b1fb9 = _0x117fee / 0x2 + _0x80b2a2 * _0xf9cc8, _0x9ba285();
                        }
                    }
                } else _0x4f86dd = _0x284fc3['clientX'] * _0x52f571, _0x2b1fb9 = _0x284fc3['clientY'] * _0x52f571, _0x9ba285();
            }
        }, _0x1962dc['ontouchend'] = function(_0x2fb381) {
            for (var _0x39f005 = 0x0; _0x39f005 < _0x2fb381['changedTouches']['length']; _0x39f005++) {
                var _0x1c6c2d = _0x2fb381['changedTouches'][_0x39f005];
                if (_0x3d9a9d && _0x1c6c2d['identifier'] == _0x2abe20) {
                    _0x3d9a9d = ![], _0x2abe20 = -0x1;
                    continue;
                }
                for (var _0xab688 = 0x0; _0xab688 < _0x54a676['length']; _0xab688++) {
                    var _0x4f88e8 = _0x54a676[_0xab688];
                    if (_0x4f88e8['pressed'] && _0x4f88e8['pressedTouchID'] == _0x1c6c2d['identifier'] && _0x4f88e8['touchEnabled']) {
                        _0x4f88e8['pressed'] = ![], _0x4f88e8['pressedTouchID'] = -0x1;
                        if (_0xc7d16a) _0x4f88e8['onButtonTouchEnd']();
                        return;
                    }
                }
            }
        }, _0x1962dc['ontouchcancel'] = function(_0x33dedf) {
            console['log']('touch cancel'), _0x1962dc['ontouchend'](_0x33dedf);
        }, _0x1962dc['ontouchleave'] = function(_0x279229) {
            console['log']('touch leave');
        }, _0x5d11ac['prototype'] = {
            'id': 0x0,
            'drawMe': !![],
            'oType': _0x419b74,
            'spawnTime': 0x0,
            'rPer': 0x0,
            'updateTime': 0x0,
            'x': 0x0,
            'y': 0x0,
            'ox': 0x0,
            'oy': 0x0,
            'nx': 0x0,
            'ny': 0x0,
            'rad': 0x0,
            'oRad': 0x0,
            'nRad': 0x0,
            'angle': 0x0,
            'oAngle': 0x0,
            'angleDelta': 0x0,
            'moveUpdF': 0x0,
            'z': 0x0,
            'name': '',
            'dead': ![],
            'type': 0x0,
            'curBiome': 0x0,
            'isRectangle': ![],
            'rectW': 0x0,
            'rectH': 0x0,
            'specType': 0x0,
            'spawnedByID': 0x0,
            'toString': function() {
                return '[GObj t=' + this['oType'] + ' id=' + this['id'] + ']';
            }
        }, _0x5d11ac['prototype']['flag_hurt'] = ![], _0x5d11ac['prototype']['hpPer'] = _0x5d11ac['prototype']['hpPer_n'] = _0x5d11ac['prototype']['hpBarA'] = 0x0, _0x5d11ac['prototype']['infectionPer'] = _0x5d11ac['prototype']['infectionPer_n'] = _0x5d11ac['prototype']['infectionBarA'] = 0x0, _0x5d11ac['prototype']['curePer'] = _0x5d11ac['prototype']['curePer_n'] = _0x5d11ac['prototype']['cureBarA'] = 0x0, _0x5d11ac['prototype']['hpBarTimeoutT'] = 0x0, _0x5d11ac['prototype']['alwaysPlainOutline'] = ![], _0x5d11ac['prototype']['doesDrawEffectScale'] = ![], _0x5d11ac['prototype']['drawEffectScale_Slow'] = ![], _0x5d11ac['prototype']['customInterfaceDraw'] = ![], _0x5d11ac['prototype']['animateRadOnSpawn'] = !![], _0x5d11ac['prototype']['canRotate'] = function() {
            switch (this['oType']) {
                case _0x35e4fc:
                case _0xe2efeb:
                case _0xd9f934:
                    return ![];
            }
            return !![];
        }, _0x5d11ac['prototype']['getObjSpecies'] = function() {
            switch (this['oType']) {
                case _0x3e13a9:
                    return '/' + this['speciesType'];
            }
            return '';
        }, _0x5d11ac['prototype']['customDraw2'] = function(_0xabc6f4) {
            switch (this['oType']) {
                case _0x15fc30:
                case _0x143978:
                case _0x1f50b5:
                case _0x4807c9:
                case _0x419b74:
                case _0x304406:
                case _0x8015d:
                case _0x35e4fc:
                case _0x48ab8f:
                case _0x3dbe5c:
                case _0x5b2437:
                case _0x2bd206:
                case _0xe2efeb:
                case _0x27116a:
                case _0x192664:
                case _0x59a5fe:
                case _0x24c3fc:
                case _0x361480:
                case _0x4a87ae:
                case _0x2ac94b:
                case _0x5bb4a8:
                case _0x4a7695:
                case _0xd9f934:
                case _0x33efa6:
                case _0x28855a:
                case _0x5ddf97:
                case _0x4a0ffc:
                case _0x5229f7:
                case _0x2330c7:
                case _0x37809d:
                case _0x3f6af9:
                case _0x188f09:
                case _0x44243d:
                case _0x7db0f7:
                case _0x3c1704:
                case _0x3e13a9:
                case _0x1bd8a6:
                case _0x2d64b3:
                case _0x3861b2:
                case _0xb784fc:
                case _0x2d652f:
                case _0x2ed384:
                case _0x3f803f:
                    this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![];
                    {
                        var _0x274622 = this['getSkinImageObj'](this['objSkinPath']);
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['getObjAlpha']();
                        if (_0x274622) {
                            var _0x5f4f41 = this['getRad']();
                            if (this['canRotate']()) _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                            _0x4597c4['drawImage'](_0x274622, -_0x5f4f41, -_0x5f4f41, 0x2 * _0x5f4f41, 0x2 * _0x5f4f41);
                        } else this['drawOutlinedCircle']('(make this obj invisible on server?) ' + this['oType'], 'black');
                        _0x4597c4['restore']();
                    }
                    break;
            }
        }, _0x5d11ac['prototype']['getRad'] = function() {
            switch (this['oType']) {
                case _0x1bd8a6:
                case _0x342032:
                    return this['rad'] * 1.5;
                case _0x35e4fc:
                    return this['rad'] * 1.2;
                case _0x3861b2:
                case _0xb784fc:
                    var _0xbd295a = _0x4b4e0c[_0x59b0bc];
                    if (_0xbd295a && _0xbd295a['lastHidingHoleID'] == this['id']) {
                        if (this['alpha'] == undefined) this['alpha'] = 0x0;
                        _0xbd295a['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
                        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
                        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
                        return _0x4597c4['globalAlpha'] = this['alpha'], this['rad'];
                    } else return this['innerRad'];
            }
            return this['rad'];
        }, _0x5d11ac['prototype']['getObjAlpha'] = function() {
            switch (this['oType']) {
                case _0x3e13a9:
                    return 0.9;
            }
            return 0x1;
        }, _0x5d11ac['prototype']['objSkinPath'] = null, _0x5d11ac['prototype']['getBiomeSkin'] = function(_0x861f8f) {
            switch (this['oType']) {
                case _0x2ed384:
                    _0x861f8f = (this['isEdibleOutlined']() ? 'e' : this['oType']) + '_' + this['specType'];
                    break;
                case _0x3e13a9:
                case _0x15fc30:
                case _0x143978:
                case _0x1f50b5:
                case _0x1bd8a6:
                case _0x3f803f:
                    _0x861f8f = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
                    break;
                case _0x8015d:
                case _0x304406:
                case _0x35e4fc:
                    _0x861f8f = this['isEdibleOutlined']() ? 'e' : this['oType'];
                    this['curBiome'] == _0x11e4d4 && (_0x861f8f += '_2');
                    break;
                case _0x4807c9:
                    _0x861f8f = this['isEdibleOutlined']() ? 'e' : this['curBiome'];
                    this['curBiome'] == _0x11e4d4 && (_0x861f8f += '_2');
                    break;
                case _0x2330c7:
                    _0x861f8f += '_' + this['curBiome'];
                    break;
                case _0x3861b2:
                case _0xb784fc:
                    this['curBiome'] != _0x414053 && (_0x861f8f = this['curBiome']);
                    break;
            }
            return _0x861f8f;
        }, _0x5d11ac['prototype']['shouldHide'] = function() {
            if (_0x9ffe4d) {
                const _0x5b6632 = _0x4b4e0c[_0x5a4190];
                if (_0x5b6632 != null) {
                    if (_0x43f6e7 || _0x32b086(_0x5b6632, this)) return !![];
                }
            }
            return ![];
        }, _0x5d11ac['prototype']['customDraw'] = function(_0x59215e) {
            switch (this['oType']) {
                case _0x2d64b3:
                    this['customDraw2'](_0x59215e);
                    break;
                case _0x15fc30: {
                    switch (this['curBiome']) {
                        case _0x3e4ef7:
                            if (_0x59215e) _0x4096ce(0x0, 0x0, this['rad'], _0x58a9eb);
                            else _0x4096ce(0x0, 0x0, this['rad'] - 1.5, _0x2eb4fa);
                            break;
                        case _0x1085db:
                            if (_0x59215e) _0x4096ce(0x0, 0x0, this['rad'], this['getOutlineColor']());
                            else _0x4096ce(0x0, 0x0, this['rad'] - 1.5, _0x5cf340);
                            break;
                        case _0x11e4d4:
                            if (_0x59215e) _0x4096ce(0x0, 0x0, this['rad'], 'white');
                            else _0x4096ce(0x0, 0x0, this['rad'] - 1.5, _0x2601fc);
                            break;
                        case _0x1114cb:
                        default:
                            if (_0x59215e) _0x4096ce(0x0, 0x0, this['rad'], _0x39b6af);
                            else _0x4096ce(0x0, 0x0, this['rad'] - 1.5, _0x23eb4b);
                            break;
                    }
                }
                break;
                case _0x1bd8a6: {
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x2,
                            _0x47c761 = 1.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x2a6ae5 = this['curBiome'] == _0x1085db ? _0x30b35e : _0x221d3d;
                    _0x4597c4['fillStyle'] = _0x2a6ae5;
                    var _0x217424 = this['rad'] * 0.8;
                    this['drawOutlinedCircle']('', _0x2a6ae5), _0x4597c4['globalAlpha'] *= 0.98;
                    var _0x366644 = -_0x217424 * 0.5,
                        _0x23dbc0 = -_0x217424 * 0.5 + 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.65 + _0x7c35cc) + 0x2;
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x2a6ae5);
                    var _0x366644 = _0x217424 * 0.5,
                        _0x23dbc0 = -_0x217424 * 0.5 - 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.73 - _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x2a6ae5);
                    var _0x366644 = _0x217424 * 0.6,
                        _0x23dbc0 = _0x217424 * 0.4,
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.78 + _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x2a6ae5);
                    var _0x366644 = -_0x217424 * 0.5,
                        _0x23dbc0 = _0x217424 * 0.5 + 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.6 + this['rPer'] - _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x2a6ae5), _0x4597c4['restore']();
                }
                break;
                case _0x4f1571: {
                    var _0x31b143 = this['curBiome'] == _0x3e4ef7 ? '#9b702b' : '#1AAE31';
                    this['drawOutlinedCircle']('', _0x31b143), _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x2,
                            _0x47c761 = 1.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    _0x4597c4['fillStyle'] = _0x3e4118;
                    var _0x2e5e18 = this['rad'] * 0.75;
                    _0x4597c4['globalAlpha'] *= 0.8, _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x2e5e18 * 0.5, -_0x2e5e18 * 0.5 + 0xa * this['rPer'], Math['max'](0x0, _0x2e5e18 * 0.65 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2e5e18 * 0.5, -_0x2e5e18 * 0.5 - 0xa * this['rPer'], Math['max'](0x0, _0x2e5e18 * 0.73 - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2e5e18 * 0.6, _0x2e5e18 * 0.4, Math['max'](0x0, _0x2e5e18 * 0.78 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x2e5e18 * 0.5, _0x2e5e18 * 0.5, Math['max'](0x0, _0x2e5e18 * 0.6 + this['rPer'] - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
                }
                break;
                case _0x342032: {
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x2,
                            _0x47c761 = 1.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x217424 = this['rad'] * 0.8,
                        _0x593e6b = _0x30b35e;
                    this['drawOutlinedCircle']('', _0x593e6b), _0x4597c4['globalAlpha'] *= 0.98;
                    var _0x366644 = -_0x217424 * 0.5,
                        _0x23dbc0 = -_0x217424 * 0.5 + 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.65 + _0x7c35cc) + 0x2;
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x593e6b);
                    var _0x366644 = _0x217424 * 0.5,
                        _0x23dbc0 = -_0x217424 * 0.5 - 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.73 - _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x593e6b);
                    var _0x366644 = _0x217424 * 0.6,
                        _0x23dbc0 = _0x217424 * 0.4,
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.78 + _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x593e6b);
                    var _0x366644 = -_0x217424 * 0.5,
                        _0x23dbc0 = _0x217424 * 0.5 + 0xa * this['rPer'],
                        _0x1cb657 = Math['max'](0x0, _0x217424 * 0.6 + this['rPer'] - _0x7c35cc);
                    _0x4096ce(_0x366644, _0x23dbc0, _0x1cb657, _0x593e6b), _0x4597c4['restore']();
                }
                break;
                case _0x2330c7: {
                    _0x4597c4['save']();
                    var _0x280d21 = this['curBiome'] == _0x11e4d4 ? '#7790d8' : _0x472dd6;
                    this['drawOutlinedCircle']('', _0x280d21);
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x7,
                            _0x47c761 = 0x4;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    if (this['curBiome'] == _0x11e4d4) _0x4597c4['fillStyle'] = '#7790d8';
                    else _0x4597c4['fillStyle'] = _0x472dd6;
                    _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.3, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.35 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()), _0x4597c4['restore']();
                }
                break;
                case _0x419b74: {
                    var _0x9c63ac = _0x4c16db;
                    this['curBiome'] == _0x11e4d4 && (_0x9c63ac = '#ac443c'), this['drawOutlinedCircle']('', _0x9c63ac);
                }
                break;
                case _0x3dbe5c: {
                    var _0x35a9df = this['getSkinImageObj']('img/coconut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x48ab8f: {
                    var _0x35a9df = this['getSkinImageObj']('img/banana' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x5229f7: {
                    var _0x35a9df = this['getSkinImageObj']('img/rasp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x4a0ffc: {
                    var _0x35a9df = this['getSkinImageObj']('img/pear' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0xd9f934: {
                    var _0x35a9df = this['getSkinImageObj']('img/seaweed' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x33efa6: {
                    var _0x35a9df = this['getSkinImageObj']('img/starfish' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x5bb4a8: {
                    var _0x35a9df = this['getSkinImageObj']('img/kelp' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x4a7695: {
                    var _0x35a9df = this['getSkinImageObj']('img/clam' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x2ac94b: {
                    var _0x35a9df = this['getSkinImageObj']('img/conch' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'] * 0x1;
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x2d4d41:
                case _0x512242: {
                    break;
                }
                case _0x3b1d1b: {
                    var _0x35a9df = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x3273d1:
                    this['drawOutlinedCircle']('', 'red');
                    break;
                case _0x353d11:
                    this['drawOutlinedCircle']('', 'green');
                    break;
                case _0x313b35:
                    this['drawOutlinedCircle']('', 'blue');
                    break;
                case _0xad3e15:
                    break;
                case _0x2ed384: {
                    var _0x3b5894 = 'egg';
                    if (this['specType'] == 0x1) _0x3b5894 = 'goldenegg';
                    var _0x2e094d = 'img/' + _0x3b5894 + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                        _0x35a9df = this['getSkinImageObj'](_0x2e094d);
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0xe2efeb: {
                    var _0x35a9df = this['getSkinImageObj']('img/beehive' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x462f96: {
                    var _0x35a9df = this['getSkinImageObj']('img/desert/anthill/anthill.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore'](), console['log']('drawing anthill');
                    }
                }
                break;
                case _0x24c3fc: {
                    var _0x35a9df = this['getSkinImageObj']('img/honeycomb' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x59b2cc: {
                    var _0x35a9df = this['getSkinImageObj']('img/quill.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x2d652f: {
                    this['drawOutlinedCircle']('', _0x3e72ba), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4096ce(this['rad'] * 0.25, this['rad'] * 0.4, (0.3 + 0.15 * this['rPer']) * this['rad'], '#905113');
                }
                break;
                case _0x1f50b5: {
                    var _0x43b5fc = '';
                    switch (this['curBiome']) {
                        case _0x1085db:
                            _0x43b5fc = '_ocean';
                            break;
                        case _0x11e4d4:
                            _0x43b5fc = '_arctic';
                            break;
                        case _0x1114cb:
                        default:
                            _0x43b5fc = '';
                            break;
                    }
                    var _0x35a9df = this['getSkinImageObj']('img/healingStone' + _0x43b5fc + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x1a14e4: {
                    _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#815427'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.6), '#6e4b29'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#543d28'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#3f3124'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), '#241e19'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), '#120f0d'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.2), _0x1c0746);
                }
                break;
                case _0x22d2e2: {
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    !_0x9ffe4d && _0x3aa021 !== _0x243dd0 && (_0x7c35cc = _0x38f4be('lavalake', this['spawnTime']));
                    if (_0x59215e) {
                        var _0x5168b4 = 0x4;
                        _0x4597c4['fillStyle'] = _0x1c0746, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                    } else {
                        _0x4597c4['fillStyle'] = _0x1c0746, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                        !(_0x3aa021 == 0x2) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']());
                        if (!_0x9ffe4d && !(_0x3aa021 == 0x2)) {
                            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'];
                            var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                                _0x5b2029 = 1.5,
                                _0x47c761 = 0x8,
                                _0x44ee6c = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                            if (this['flag_underWater']) {
                                _0x4597c4['globalAlpha'] *= 0.5;
                                if (this['animalType'] == _0x590076) _0x4597c4['globalAlpha'] = 0.3;
                            }
                            _0x4597c4['fillStyle'] = 'yellow';
                            var _0x343bb5 = this['rad'] * 0.15;
                            _0x4597c4['beginPath']();
                            var _0x3ff6f1 = 0x1;
                            for (i = 0x1; i <= _0x3ff6f1; i++) {
                                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2 * i), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x343bb5 + _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x343bb5 - _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x343bb5 + _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x343bb5 - _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
                            }
                            _0x4597c4['restore']();
                        }
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x294b51: {
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x5b2029 = 0x4,
                        _0x47c761 = 2.5;
                    _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    if (_0x59215e) {
                        var _0x5168b4 = 0x4;
                        _0x4597c4['fillStyle'] = '#5e5348', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                    } else {
                        _0x4597c4['fillStyle'] = '#706962', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                        !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']());
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'];
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 1.5,
                            _0x47c761 = 0x8,
                            _0x44ee6c = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                        if (this['flag_underWater']) {
                            _0x4597c4['globalAlpha'] *= 0.5;
                            if (this['animalType'] == _0x590076) _0x4597c4['globalAlpha'] = 0.3;
                        }
                        _0x4597c4['fillStyle'] = 'yellow';
                        var _0x343bb5 = this['rad'] * 0.15;
                        _0x4597c4['beginPath']();
                        var _0x3ff6f1 = 0x1;
                        for (i = 0x1; i <= _0x3ff6f1; i++) {
                            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2 * i), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x343bb5 + _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x343bb5 - _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x343bb5 + _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x343bb5 - _0x44ee6c), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x28855a: {
                    var _0x35a9df = this['getSkinImageObj']('img/cloudberry' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x5ddf97: {
                    var _0x35a9df = this['getSkinImageObj']('img/arcticNut' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        if (this['specType2'] == 0x1) {
                            if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                            this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                        } else {
                            if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                            else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                        }
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x5b2437: {
                    var _0x35a9df = this['getSkinImageObj']('img/carrot' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x361480: {
                    var _0x35a9df = this['getSkinImageObj']('img/watermelon' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x294ff4: {
                    _0x4597c4['save'](), _0x4096ce(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x46d432(this['curBiome']) : _0x4155ab), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), '#74e61e'), _0x4597c4['restore']();
                }
                break;
                case _0x4a87ae: {
                    var _0x35a9df = this['getSkinImageObj']('img/watermelonSlice' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x59a5fe:
                case _0x192664:
                case _0x27116a: {
                    var _0x43514a = 0x0,
                        _0x35a9df = this['getSkinImageObj']('img/meat' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x304406:
                case _0x8015d: {
                    var _0x5168b4 = 0x2,
                        _0x12f252 = this['oType'] == _0x8015d ? 0xf : 0x9;
                    _0x4597c4['fillStyle'] = this['getOutlineColor'](), _0x4597c4['beginPath'](), _0x4597c4['rect'](-_0x12f252 / 0x2 - _0x5168b4, -_0x5168b4, _0x12f252 + _0x5168b4 * 0x2, this['rad'] * 0.8 + _0x5168b4 * 0x2), _0x4597c4['fill'](), _0x4597c4['fillStyle'] = '#FFCA49', _0x4597c4['beginPath'](), _0x4597c4['rect'](-_0x12f252 / 0x2, 0x0 + _0x5168b4 / 0x2, _0x12f252, this['rad'] * 0.8 - _0x5168b4 / 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), Math['PI'], 0x2 * Math['PI']), _0x4597c4['fillStyle'] = this['getOutlineColor'](), _0x4597c4['fill']()), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4), Math['PI'], 0x2 * Math['PI']), _0x4597c4['fillStyle'] = this['oType'] == _0x8015d ? '#B8413B' : '#CFAD59', _0x4597c4['fill']();
                }
                break;
                case _0x35e4fc: {
                    var _0x5168b4 = 0x2;
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x2,
                            _0x47c761 = 1.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    _0x4597c4['fillStyle'] = '#45D157', _0x4597c4['globalAlpha'] *= 0.93, _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.55 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.43 - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.48 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.4 + this['rPer'] - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
                    var _0x12f252 = 0x14;
                    _0x4597c4['fillStyle'] = this['getOutlineColor'](), _0x4597c4['beginPath'](), _0x4597c4['rect'](-_0x12f252 / 0x2 - _0x5168b4, -_0x5168b4, _0x12f252 + _0x5168b4 * 0x2, this['rad'] * 0.8 + _0x5168b4 * 0x2), _0x4597c4['fill'](), _0x4597c4['fillStyle'] = '#FFCA49', _0x4597c4['beginPath'](), _0x4597c4['rect'](-_0x12f252 / 0x2, 0x0 + _0x5168b4 / 0x2, _0x12f252, this['rad'] * 0.8 - _0x5168b4 / 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8), Math['PI'], 0x2 * Math['PI']), _0x4597c4['fillStyle'] = this['getOutlineColor'](), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] * 0.8 - _0x5168b4), Math['PI'], 0x2 * Math['PI']), _0x4597c4['fillStyle'] = '#B8413B', _0x4597c4['fill']();
                }
                break;
                case _0x2bd206: {
                    var _0x35a9df = this['getSkinImageObj']('img/lillypad' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                }
                break;
                case _0x4fbd16: {
                    console['log']('ERROR: ' + this + ' should be subclassed!');
                }
                break;
                case _0x3861b2:
                case _0xb784fc: {
                    var _0x130f34 = this['curBiome'] == _0x11e4d4 ? '#e0e0e0' : '#9F8641',
                        _0x5df21c = this['curBiome'] == _0x11e4d4 ? '#878787' : '#7E6A35',
                        _0x3d501a = this['curBiome'] == _0x11e4d4 ? '#666666' : '#5C4E28',
                        _0xda10f6 = this['curBiome'] == _0x11e4d4 ? '#434343' : '#40371D';
                    if (this['curBiome'] != _0x11e4d4) this['drawOutlinedCircleRad']('', _0x130f34, this['innerRad']);
                    else _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad']), _0x130f34);
                    !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x7), _0x5df21c);
                    _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['innerRad'] - 0xe), _0x3d501a), _0x4096ce(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['innerRad'] - 18.5), _0xda10f6);
                    var _0x4ba864 = _0x4b4e0c[_0x59b0bc];
                    if (_0x4ba864 && _0x4ba864['lastHidingHoleID'] == this['id']) {
                        if (this['alpha'] == undefined) this['alpha'] = 0x0;
                        _0x4ba864['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
                        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
                        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
                        _0x4597c4['globalAlpha'] = this['alpha'];
                        var _0x587fd4 = this['rad'];
                        if (this['curBiome'] != _0x11e4d4) this['drawOutlinedCircleRad']('', _0x130f34, _0x587fd4);
                        else _0x4096ce(0x0, 0x0, Math['max'](0x0, _0x587fd4), _0x130f34);
                        _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x587fd4 - 0x7), _0x5df21c), _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0x587fd4 - 0xc), _0x3d501a), _0x4597c4['globalAlpha'] = this['alpha'] * 0.7, _0x587fd4 = _0x587fd4 * 0.7, _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x587fd4 - 0x7), _0xda10f6), _0x587fd4 = _0x587fd4 * 0.5, _0x4597c4['globalAlpha'] = this['alpha'] * 0.3, _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x587fd4), _0xda10f6);
                    }
                }
                break;
                case _0x38ce4f: {
                    var _0x2016d1 = 0x1,
                        _0x512e93 = 0x1;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 1.2;
                        _0x2016d1 = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3), _0x512e93 = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    this['drawOutlinedCircleRad']('', '#4A549D', this['innerRad']);
                    !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 + _0x2016d1 / 0x2 - this['rPer'], 0x0 + _0x512e93 / 0x2 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x6), '#444C8B');
                    _0x4096ce(0x0 + _0x2016d1 / 4.5 + this['rPer'], 0x1 + _0x512e93 / 1.5, Math['max'](0x0, this['innerRad'] - 0xe), '#4A549D'), _0x4096ce(0x0 + _0x2016d1 / 1.5 - this['rPer'] * 0x2, _0x512e93, Math['max'](0x0, this['innerRad'] - 18.5 + _0x512e93 / 0x5), '#3F4477'), _0x4096ce(0x0 + _0x2016d1 / 1.5 - this['rPer'] * 0x2, _0x512e93, Math['max'](0x0, this['innerRad'] - 22.5 + _0x512e93 / 0xb), '#353860');
                    var _0x4ba864 = _0x4b4e0c[_0x59b0bc];
                    if (_0x4ba864 && _0x4ba864['lastHidingHoleID'] == this['id']) {
                        if (this['alpha'] == undefined) this['alpha'] = 0x0;
                        _0x4ba864['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
                        if (this['alpha'] > 0x1) this['alpha'] = 0x1;
                        else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
                        _0x4597c4['globalAlpha'] = this['alpha'];
                        var _0x587fd4 = this['rad'];
                        this['drawOutlinedCircle']('', '#4A549D', _0x587fd4), !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 + _0x2016d1 / 0x2 - this['rPer'], 0x0 + _0x512e93 / 0x2 - this['rPer'], Math['max'](0x0, _0x587fd4 - 0x6), '#444C8B'), _0x4096ce(0x0 + _0x2016d1 / 4.5 + this['rPer'], 0x1 + _0x512e93 / 1.5, Math['max'](0x0, _0x587fd4 - 0xe), '#4A549D'), _0x587fd4 = _0x587fd4 * 0.9, _0x4597c4['globalAlpha'] = this['alpha'] * 0.6, _0x4096ce(0x0 + _0x2016d1 / 3.5 - this['rPer'] * 0x2, _0x512e93, Math['max'](0x0, _0x587fd4 - 18.5 + _0x512e93 / 0x5), '#3F4477'), _0x587fd4 = _0x587fd4 * 0.7, _0x4597c4['globalAlpha'] = this['alpha'] * 0.3, _0x4096ce(0x0 + _0x2016d1 / 6.5 - this['rPer'] * 0x2, _0x512e93, Math['max'](0x0, _0x587fd4 - 22.5 + _0x512e93 / 0xb), '#353860');
                    }
                }
                break;
                case _0x3e13a9: {
                    _0x4597c4['save']();
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x2,
                            _0x47c761 = 1.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x246e91 = '#45D157';
                    switch (this['curBiome']) {
                        case _0x1085db:
                            _0x246e91 = '#786810';
                            break;
                        case _0x11e4d4:
                            _0x246e91 = '#CED0D0';
                            break;
                        default:
                        case _0x1114cb:
                            _0x246e91 = '#45D157';
                            break;
                        case _0x3e4ef7:
                            _0x246e91 = '#9b6f31';
                            break;
                    }
                    _0x4597c4['fillStyle'] = _0x246e91, _0x4597c4['globalAlpha'] *= 0.93, _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
                }
                break;
                case _0x302526: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x5b2029 = 0x6,
                        _0x47c761 = 1.5;
                    _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    var _0x5168b4 = 0x4;
                    _0x4597c4['fillStyle'] = '#604729', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = '#8A681B', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath']()), _0x4597c4['restore']();
                }
                break;
                case _0x122b46: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x5b2029 = 0x6,
                        _0x47c761 = 1.5;
                    _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    var _0x5168b4 = 0x4;
                    _0x4597c4['fillStyle'] = '#605649', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = '#5e4f36', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath']()), _0x4597c4['restore']();
                }
                break;
                case _0x5563ad:
                    break;
                case _0x39e85e:
                case _0x322284:
                case _0x4144ae:
                case _0x12dca3:
                    break;
                case _0x2f8dda:
                case _0x25dd6c:
                    var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8;
                    _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['globalAlpha'] = 0.1 + this['cloudOpacity'];
                    var _0x35a9df = this['getSkinImageObj']('img/disasters/cloud.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'] * 0x2;
                        _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                    var _0x7c35cc = 0x0,
                        _0x5b2029 = 0x6,
                        _0x47c761 = 0xf;
                    _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3), _0x4597c4['globalAlpha'] = 0.1;
                    var _0x35a9df = this['getSkinImageObj']('img/disasters/cloud1.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'] * 0x2;
                        _0x2e5e18 = Math['max'](0x0, _0x2e5e18 - 0x5 + _0x7c35cc), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    }
                    _0x4597c4['restore']();
                    break;
                case _0x1c0d9b: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 1.5,
                        _0x1358cd = _0x38f4be('volcano', this['spawnTime']);
                    _0x1358cd !== undefined && _0x1358cd != null && (this['theFrame'] = _0x1358cd, _0x7c35cc = this['theFrame']);
                    var _0x5168b4 = 0x4;
                    _0x4597c4['fillStyle'] = '#8B7833', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = '#98803A', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), this['rad'] > 0x32 && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']())), _0x4597c4['restore']();
                }
                break;
                case _0x390f74: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x5b2029 = 0x6,
                        _0x47c761 = 1.5;
                    _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    var _0x5168b4 = 0x4;
                    _0x4597c4['fillStyle'] = '#8CC3C7', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = '#9DDADE', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath']()), _0x4597c4['restore']();
                }
                break;
                case _0x3a3371: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 0x4,
                            _0x47c761 = 5.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x5168b4 = 0x4;
                    _0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                    if (this['curBiome'] == _0x11e4d4) _0x4597c4['fillStyle'] = '#8da0d6';
                    else _0x4597c4['fillStyle'] = _0x472dd6;
                    _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x7c35cc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()), _0x4597c4['restore']();
                }
                break;
                case _0xc2bb66: {
                    _0x4597c4['save']();
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x7c35cc = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - _0x3c981a) / 0x3e8,
                            _0x5b2029 = 0x5,
                            _0x47c761 = 5.5;
                        _0x7c35cc = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x5168b4 = 0x4;
                    if (_0x59215e) {} else _0x4597c4['fillStyle'] = _0x316ca1, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4 + _0x7c35cc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']());
                    _0x4597c4['restore']();
                }
                break;
                case _0x5a697d: {
                    var _0x339a10 = 0x0;
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x5999d3 = (_0x476319 - _0x3c981a) / 0x3e8,
                            _0x5b2029 = 0x5,
                            _0x47c761 = -8.5;
                        _0x339a10 = _0x47c761 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                    }
                    var _0x42528a = 0xa,
                        _0x3f5f0d = this['x'] > _0x6f4c47 / 0x2 ? 0x1 : 0x0;
                    if (_0x3f5f0d == 0x1) {
                        _0x4597c4['fillStyle'] = _0x316ca1, _0x4597c4['fillRect'](-this['rectW'] / 0x2 + _0x339a10, -this['rectH'] / 0x2 + _0x339a10 + _0x42528a, this['rectW'] - _0x339a10, this['rectH'] - _0x339a10 - _0x42528a), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rectW'] / 0x2 + 0x32, -this['rectH'] / 0x2 + 0x32, 0x46 - _0x339a10, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']();
                        var _0x1b5100 = 0x23;
                        _0x10468b(-this['rectW'] / 0x2 + _0x1b5100, -this['rectH'] / 0x2 + _0x1b5100, this['rectW'] / 0x2 - _0x1b5100, this['rectH'] / 0x2 - _0x1b5100, this['x'], this['y']);
                    } else {
                        _0x4597c4['fillStyle'] = _0x316ca1, _0x339a10 *= -0x1, _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2 - _0x339a10 + _0x42528a, this['rectW'] + _0x339a10, this['rectH'] + _0x339a10 - _0x42528a);
                        var _0x1b5100 = 0x19;
                        _0x10468b(-this['rectW'] / 0x2 + _0x1b5100, -this['rectH'] / 0x2 + _0x1b5100, this['rectW'] / 0x2 - _0x1b5100, this['rectH'] / 0x2 - _0x1b5100, this['x'], this['y']);
                    }
                }
                break;
                case _0x1d814a: {
                    _0x4597c4['fillStyle'] = _0x5cf340;
                    var _0x5a4ef4 = -this['rectW'] / 0x2,
                        _0x2b149e = this['rectW'] / 0x2,
                        _0x13da3c = -this['rectH'] / 0x2,
                        _0x21a088 = this['rectH'] / 0x2;
                    _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x5a4ef4, _0x13da3c);
                    var _0x3ae6ca = 0x1e,
                        _0x49f205 = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                        _0x2f804f = 0x2d,
                        _0x541460 = 0x0,
                        _0x2407fa = _0x6f4c47 - this['x'],
                        _0xda464f = 0x0 - this['x'],
                        _0x33d8f0 = _0x3be96e - this['y'],
                        _0x157561 = 0x0 - this['y'],
                        _0x23dbc0, _0x366644 = _0x5a4ef4 - _0x3ae6ca;
                    for (_0x23dbc0 = _0x13da3c; _0x23dbc0 < _0x21a088; _0x23dbc0 += _0x2f804f) {
                        _0x4597c4['lineTo'](Math['min'](_0x2407fa, Math['max'](_0xda464f, _0x366644 + _0x49f205[_0x541460])), _0x23dbc0), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                    }
                    _0x4597c4['lineTo'](_0x5a4ef4, _0x21a088), _0x23dbc0 = _0x21a088 + _0x3ae6ca;
                    for (_0x366644 = _0x5a4ef4; _0x366644 < _0x2b149e; _0x366644 += _0x2f804f) {
                        _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                    }
                    _0x4597c4['lineTo'](_0x2b149e, _0x21a088), _0x366644 = _0x2b149e + _0x3ae6ca;
                    for (_0x23dbc0 = _0x21a088; _0x23dbc0 > _0x13da3c; _0x23dbc0 -= _0x2f804f) {
                        _0x4597c4['lineTo'](Math['min'](_0x2407fa, Math['max'](_0xda464f, _0x366644 + _0x49f205[_0x541460])), _0x23dbc0), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                    }
                    _0x4597c4['lineTo'](_0x2b149e, _0x13da3c), _0x23dbc0 = _0x13da3c - _0x3ae6ca;
                    for (_0x366644 = _0x2b149e; _0x366644 > _0x5a4ef4; _0x366644 -= _0x2f804f) {
                        _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                    }
                    _0x4597c4['closePath'](), _0x4597c4['fill']();
                }
                break;
                case _0x99578c: {
                    var _0x4f48ee = _0x4597c4['globalAlpha'];
                    _0x4597c4['fillStyle'] = _0x164cac, _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
                    var _0x1b5100 = 0x23;
                    _0x10468b(-this['rectW'] / 0x2 + _0x1b5100, -this['rectH'] / 0x2 + _0x1b5100, this['rectW'] / 0x2 - _0x1b5100, this['rectH'] / 0x2 - _0x1b5100, this['x'], this['y']);
                    var _0x5ada66 = 0xf;
                    {
                        _0x4597c4['fillStyle'] = _0x164cac;
                        var _0x5a4ef4 = -this['rectW'] / 0x2,
                            _0x2b149e = this['rectW'] / 0x2,
                            _0x13da3c = -this['rectH'] / 0x2 + 0x3,
                            _0x21a088 = -this['rectH'] / 0x2 - _0x5ada66;
                        _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x5a4ef4, _0x13da3c);
                        var _0x3ae6ca = 0x0,
                            _0x49f205 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                            _0x2f804f = 0x3c,
                            _0x541460 = 0x0,
                            _0x2407fa = _0x6f4c47 - this['x'],
                            _0xda464f = 0x0 - this['x'],
                            _0x33d8f0 = _0x3be96e - this['y'],
                            _0x157561 = 0x0 - this['y'],
                            _0x23dbc0, _0x366644 = _0x5a4ef4 - _0x3ae6ca;
                        _0x4597c4['lineTo'](_0x5a4ef4, _0x21a088), _0x23dbc0 = _0x21a088 + _0x3ae6ca;
                        for (_0x366644 = _0x5a4ef4; _0x366644 < _0x2b149e; _0x366644 += _0x2f804f) {
                            _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                        }
                        _0x4597c4['lineTo'](_0x2b149e, _0x21a088), _0x4597c4['lineTo'](_0x2b149e, _0x13da3c), _0x4597c4['closePath'](), _0x4597c4['fill']();
                    }
                }
                break;
                case _0x5b34f0: {
                    var _0x4f48ee = _0x4597c4['globalAlpha'];
                    _0x4597c4['fillStyle'] = '#ececec', _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
                    var _0x5a4ef4 = -this['rectW'] / 0x2,
                        _0x2b149e = this['rectW'] / 0x2,
                        _0x13da3c = this['rectH'] / 0x2 - 0x14,
                        _0x21a088 = this['rectH'] / 0x2;
                    snowLandWidth = this['rectW'], snowLandHeight = this['rectH'], _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x5a4ef4, _0x13da3c);
                    var _0x3ae6ca = 0x14,
                        _0x49f205 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                        _0x2f804f = 0x3c,
                        _0x541460 = 0x0,
                        _0x2407fa = _0x6f4c47 - this['x'],
                        _0xda464f = 0x0 - this['x'],
                        _0x33d8f0 = _0x3be96e - this['y'],
                        _0x157561 = 0x0 - this['y'],
                        _0x23dbc0, _0x366644 = _0x5a4ef4 - _0x3ae6ca;
                    _0x4597c4['lineTo'](_0x5a4ef4, _0x21a088), _0x23dbc0 = _0x21a088 + _0x3ae6ca;
                    for (_0x366644 = _0x5a4ef4; _0x366644 < _0x2b149e; _0x366644 += _0x2f804f) {
                        _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                    }
                    _0x4597c4['lineTo'](_0x2b149e, _0x21a088), _0x4597c4['lineTo'](_0x2b149e, _0x13da3c), _0x4597c4['closePath'](), _0x4597c4['fill']();
                    var _0x1b5100 = 0x14;
                    _0x10468b(-this['rectW'] / 0x2 + _0x1b5100, -this['rectH'] / 0x2 + _0x1b5100, this['rectW'] / 0x2 - _0x1b5100, this['rectH'] / 0x2 - _0x1b5100, this['x'], this['y']);
                }
                break;
                case _0x45adaa: {
                    var _0x4f48ee = _0x4597c4['globalAlpha'];
                    _0x4597c4['fillStyle'] = _0x472dd6, _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
                    var _0x5ada66 = 0xf;
                    {
                        _0x4597c4['fillStyle'] = _0x472dd6;
                        var _0x5a4ef4 = -this['rectW'] / 0x2,
                            _0x2b149e = this['rectW'] / 0x2,
                            _0x13da3c = -this['rectH'] / 0x2 + 0x3,
                            _0x21a088 = -this['rectH'] / 0x2 - _0x5ada66;
                        _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x5a4ef4, _0x13da3c);
                        var _0x3ae6ca = 0x0,
                            _0x49f205 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                            _0x2f804f = 0x3c,
                            _0x541460 = 0x0,
                            _0x2407fa = _0x6f4c47 - this['x'],
                            _0xda464f = 0x0 - this['x'],
                            _0x33d8f0 = _0x3be96e - this['y'],
                            _0x157561 = 0x0 - this['y'],
                            _0x23dbc0, _0x366644 = _0x5a4ef4 - _0x3ae6ca;
                        _0x4597c4['lineTo'](_0x5a4ef4, _0x21a088), _0x23dbc0 = _0x21a088 + _0x3ae6ca;
                        for (_0x366644 = _0x5a4ef4; _0x366644 < _0x2b149e; _0x366644 += _0x2f804f) {
                            _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                        }
                        _0x4597c4['lineTo'](_0x2b149e, _0x21a088), _0x4597c4['lineTo'](_0x2b149e, _0x13da3c), _0x4597c4['closePath'](), _0x4597c4['fill']();
                    } {
                        _0x4597c4['fillStyle'] = _0x472dd6;
                        var _0x5a4ef4 = -this['rectW'] / 0x2,
                            _0x2b149e = this['rectW'] / 0x2,
                            _0x13da3c = this['rectH'] / 0x2 - 0x3,
                            _0x21a088 = this['rectH'] / 0x2 + _0x5ada66;
                        _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x5a4ef4, _0x13da3c);
                        var _0x3ae6ca = 0x0,
                            _0x49f205 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                            _0x2f804f = 0x3c,
                            _0x541460 = 0x0,
                            _0x2407fa = _0x6f4c47 - this['x'],
                            _0xda464f = 0x0 - this['x'],
                            _0x33d8f0 = _0x3be96e - this['y'],
                            _0x157561 = 0x0 - this['y'],
                            _0x23dbc0, _0x366644 = _0x5a4ef4 - _0x3ae6ca;
                        _0x4597c4['lineTo'](_0x5a4ef4, _0x21a088), _0x23dbc0 = _0x21a088 + _0x3ae6ca;
                        for (_0x366644 = _0x5a4ef4; _0x366644 < _0x2b149e; _0x366644 += _0x2f804f) {
                            _0x4597c4['lineTo'](_0x366644, Math['min'](_0x33d8f0, Math['max'](_0x157561, _0x23dbc0 + _0x49f205[_0x541460]))), _0x541460 = (_0x541460 + 0x1) % _0x49f205['length'];
                        }
                        _0x4597c4['lineTo'](_0x2b149e, _0x21a088), _0x4597c4['lineTo'](_0x2b149e, _0x13da3c), _0x4597c4['closePath'](), _0x4597c4['fill']();
                    }
                    var _0x1b5100 = 0x14,
                        _0x35a9df = this['getSkinImageObj']('img/riverCurrent' + this['riverSpecT'] + '.png');
                    if (_0x35a9df) {
                        var _0x1788d5 = -this['rectW'] / 0x2,
                            _0x39abd7 = 0x64,
                            _0x83719b = 0x78;
                        for (i = 0x0; i < 0x28; i++) {
                            var _0x29b0cd = this['riverFlowSpeedX'] * (_0x39abd7 / _0x83719b) * 0x3e8,
                                _0xf68030 = (_0x476319 - this['spawnTime']) % _0x29b0cd / _0x29b0cd,
                                _0x43809a = _0x39abd7,
                                _0x3e9afc = _0x1788d5 + _0x43809a * _0xf68030;
                            _0x4597c4['drawImage'](_0x35a9df, _0x3e9afc, -this['rectH'] / 0x2, _0x39abd7, this['rectH']), _0x1788d5 += _0x39abd7;
                        }
                    }
                }
                break;
                case _0x36e8de: {
                    _0x4597c4['fillStyle'] = _0x3e4118, _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
                    var _0x1b5100 = 0x2d;
                    _0x10468b(-this['rectW'] / 0x2 + _0x1b5100, -this['rectH'] / 0x2 + _0x1b5100, this['rectW'] / 0x2 - _0x1b5100, this['rectH'] / 0x2 - _0x1b5100, this['x'], this['y']);
                }
                break;
                case _0x143978: {
                    var _0x46a685 = this['curBiome'] == _0x3e4ef7 ? _0x331d9d : _0x2ae152;
                    if (_0x59215e) _0x4096ce(0x0, 0x0, this['rad'], this['getOutlineColor']());
                    else _0x4096ce(0x0, 0x0, this['rad'] - 1.5, _0x46a685);
                }
                break;
                case _0x37809d: {
                    _0x59215e ? (_0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']()) : (_0x4597c4['fillStyle'] = '#E4D04C', _0x4597c4['beginPath'](), _0x4597c4['arc'](-0x5 + this['rPer'] * 0xa, -0x5 + this['rPer'] * 0xa, this['rad'] * 0.8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']());
                }
                break;
                case _0x5040bf:
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x4dc776 = _0x5b9e97(_0x5999d3, 0x1, 0x5, 0x2),
                        _0x1ba39b = _0x5b9e97(_0x5999d3, 0x1, 0.2, 0x2);
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4096ce(0x0, 0x0, this['rad'], _0x1c0746);
                    var _0x17a4e5 = -(-0.2 + _0x4dc776) * _0x4c4686(0x5a);
                    _0x4597c4['save'](), _0x4597c4['scale'](0x1, 0x1 + _0x1ba39b), _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['rotate'](_0x17a4e5), _0x4096ce(0x0, 0x0, this['rad'] - _0x4dc776, '#de9d23'), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['scale'](0x1 + _0x1ba39b, 0x1), _0x4597c4['globalAlpha'] = 0.1, _0x4597c4['rotate'](_0x17a4e5), _0x4096ce(0x0, 0x0, this['rad'] * 0.9 - _0x4dc776, 'yellow'), _0x4597c4['restore']();
                    this['specType'] == 0x1 && (_0x4597c4['globalAlpha'] = 0.5, _0x4096ce(0x0, 0x0, this['rad'], 'white'));
                    _0x4597c4['restore']();
                    break;
                case _0x25aaff:
                    var _0x7c35cc = 0x0,
                        _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x4dc776 = _0x5b9e97(_0x5999d3, 0x1, 0x5, 0x2),
                        _0x1ba39b = _0x5b9e97(_0x5999d3, 0x1, 0.2, 0x2);
                    _0x4597c4['globalAlpha'] = 0.5, _0x4096ce(0x0, 0x0, this['rad'], _0x41f624);
                    var _0x17a4e5 = -(-0.2 + _0x4dc776) * _0x197fc1;
                    _0x4597c4['save'](), _0x4597c4['scale'](0x1, 0x1 + _0x1ba39b), _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['rotate'](_0x17a4e5), _0x4096ce(0x0, 0x0, this['rad'] - _0x4dc776, '#2CAAC4'), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['scale'](0x1 + _0x1ba39b, 0x1), _0x4597c4['globalAlpha'] = 0.1, _0x4597c4['rotate'](_0x17a4e5), _0x4096ce(0x0, 0x0, this['rad'] * 0.9 - _0x4dc776, 'white'), _0x4597c4['restore']();
                    break;
                case _0x4807c9: {
                    var _0x280d21 = this['curBiome'] == _0x11e4d4 ? '#8fa4e0' : _0x41f624;
                    if (this['specType'] == 0x1 && _0x4e734d == _0x4a2a55) {
                        _0x4597c4['save'](), _0x4096ce(0x0, 0x0, this['rad'], _0x3d267b), _0x4597c4['restore'](), _0x4597c4['save']();
                        var _0x5168b4 = 1.5;
                        _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x5168b4), _0x280d21), _0x4597c4['restore']();
                    } else this['drawOutlinedCircle']('', _0x280d21);
                }
                break;
                case _0x33b0a2:
                case _0x5c858f: {
                    var _0x35a9df = this['getSkinImageObj']('img/snowball.png');
                    if (_0x35a9df) {
                        var _0x2e5e18 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x35a9df, -_0x2e5e18, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18);
                    } else this['drawOutlinedCircle']('', 'white');
                }
                break;
                case _0x3b5e93: {}
                break;
                case _0x59ae01: {
                    _0x4597c4['save'](), _0x4096ce(0x0, 0x0, this['rad'], !this['isEdibleOutlined']() ? _0x46d432(this['curBiome']) : _0x4155ab), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - 0x2), _0x41f624), _0x4597c4['restore'](), _0x4597c4['save']();
                    var _0x5b2029 = 1.2,
                        _0x5497c3 = 0.3,
                        _0x262665 = 0.7,
                        _0x40680e = 0.5 * (_0x262665 - _0x5497c3);
                    _0x4597c4['globalAlpha'] *= _0x5497c3 + _0x40680e + _0x40680e * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_poison'];
                    var _0x5b2cf9 = 2.6;
                    _0x4096ce(0x0, 0x0, this['rad'] + _0x5b2cf9, '#7FF600'), _0x4597c4['restore']();
                }
                break;
                case _0x22dbc8: {
                    _0x4597c4['save']();
                    var _0x19fbb6 = this['speciesType'];
                    if (this['speciesType'] == 0xc8) _0x19fbb6 = _0x19fbb6 + '/' + this['speciesSubType'];
                    var _0x137768 = 'skins/volcano/phoenix/' + _0x19fbb6 + '/firetornado.png',
                        _0x454316 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc8 ? 0x1 : this['mopeSeasonID'],
                        _0x4d66b7 = this['getSkinImageObjForSeason'](_0x137768, _0x454316);
                    if (_0x4d66b7) {
                        var _0x2e5e18 = this['rad'],
                            _0x4a9c32 = 0x3c / 0x3c,
                            _0x9f270c = 0x3e8 / _0x4a9c32,
                            _0xf68030 = (_0x476319 - this['spawnTime']) % _0x9f270c / _0x9f270c,
                            _0x45733a = _0xf68030 * 0x2 * Math['PI'],
                            _0x4a9c32 = 0x1e / 0x3c,
                            _0x9f270c = 0x3e8 / _0x4a9c32,
                            _0xf68030 = (_0x476319 - this['spawnTime']) % _0x9f270c / _0x9f270c,
                            _0x4544f4 = _0xf68030 * 0x2 * Math['PI'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](_0x45733a);
                        var _0x3a1b8c = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0x1 * _0x3a1b8c;
                        var _0x5999d3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x5b2029 = 2.2,
                            _0x2016d1 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3),
                            _0x512e93 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * _0x5999d3);
                        _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['drawImage'](_0x4d66b7, -_0x2e5e18 - _0x2016d1 / 2.2, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['rotate'](_0x4544f4), _0x4597c4['drawImage'](_0x4d66b7, -_0x2e5e18 - _0x2016d1 / 2.2, -_0x2e5e18, 0x2 * _0x2e5e18, 0x2 * _0x2e5e18), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x5651b8: {
                    var _0x5b2029 = 0x1,
                        _0x5497c3 = 0.15,
                        _0x262665 = 0.8,
                        _0x40680e = 0.5 * (_0x262665 - _0x5497c3),
                        _0x2cca7e = _0x5497c3 + _0x40680e + _0x40680e * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * (_0x476319 / 0x3e8));
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x2cca7e, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad']), '#F6EA65'), _0x4597c4['restore']();
                    var _0x5b2029 = 0x1,
                        _0x5497c3 = 0.85,
                        _0x262665 = 0x1,
                        _0x40680e = 0.5 * (_0x262665 - _0x5497c3),
                        _0x44ee6c = _0x5497c3 + _0x40680e + _0x40680e * Math['sin'](0x2 * Math['PI'] / _0x5b2029 * (_0x476319 / 0x3e8)),
                        _0x4bba4b = Math['trunc'](_0x476319 / 0x12c) % 0x2,
                        _0x454316 = this['animalType'] === 0xe && (this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0x3 || this['speciesType'] === 0x64 || this['speciesType'] === 0xc8 || this['speciesType'] === 0xc9 || this['speciesType'] === 0xcc || this['speciesType'] === 0x3e9 || this['speciesType'] === 0x10f2c) ? 0x1 : this['mopeSeasonID'],
                        _0x35a9df = this['getSkinImageObjForSeason'](_0x4bba4b == 0x1 ? 'img/fire.png' : 'img/fire2.png', _0x454316);
                    if (_0x35a9df) {
                        var _0x39e7bd = 0x0,
                            _0x1287f9 = this['rad'] * 0.3,
                            _0x1e9f40 = this['rad'] * 0x2 * (0x2 + _0x44ee6c * 0x2) / 0x3,
                            _0x421884 = this['rad'] * 0x2 * _0x44ee6c,
                            _0x125b41 = 0.5,
                            _0x209b0a = 0.95;
                        _0x4597c4['save'](), _0x35a9df && (_0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x44ee6c, _0x4597c4['drawImage'](_0x35a9df, _0x39e7bd + _0x1e9f40 * -_0x125b41, _0x1287f9 + _0x421884 * -_0x209b0a, _0x1e9f40, _0x421884)), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x269668: {}
                break;
                default: {
                    if (this['isRectangle']) _0x4597c4['fillStyle'] = 'black', _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['drawOutlinedCircle']('(make this rect obj invisible on server?)' + this['oType'], 'black');
                    else this['drawOutlinedCircle']('(make this obj invisible on server?)' + this['oType'], 'black');
                }
                break;
            }
        }, _0x5d11ac['prototype']['beforeCustomDraw'] = function() {}, _0x5d11ac['prototype']['afterCustomDraw'] = function() {}, _0x5d11ac['prototype']['drawImage'] = function(_0x2f3e1b, _0x21af72, _0x398559, _0x5905ae, _0x47c90b, _0x3b260d) {
            if (_0x3b260d !== undefined) _0x4597c4['rotate'](_0x3b260d);
            _0x4597c4['drawImage'](_0x2f3e1b, _0x21af72, _0x398559, _0x5905ae, _0x47c90b);
        }, _0x5d11ac['prototype']['drawTranslate'] = function() {
            _0x4597c4['translate'](this['x'], this['y']);
        }, _0x5d11ac['prototype']['drawScaleEffect'] = function() {
            if (!_0x9ffe4d && this['showScaleEffectToPlayer']()) {
                if (this['doesDrawEffectScale'] && !(_0x3aa021 == _0x243dd0)) {
                    var _0x259e24 = 0x0,
                        _0x7ae165 = _0x476319 - this['spawnTime'];
                    if (_0x54307c) {
                        _0x259e24 = _0x3d5dd9['objects'][_0x7ae165 % _0x3d5dd9['objects']['length']];
                        if (this['drawEffectScale_Slow']) _0x259e24 = _0x3d5dd9['objects_slow'][_0x7ae165 % _0x3d5dd9['objects_slow']['length']];
                    } else {
                        var _0x8a28d6 = 1.5,
                            _0x5d9f60 = 0.1;
                        this['drawEffectScale_Slow'] && (_0x8a28d6 = 2.5, _0x5d9f60 = 0.04), _0x259e24 = _0x5d9f60 * Math['sin'](0x2 * Math['PI'] / _0x8a28d6 * (_0x7ae165 / 0x3e8));
                    }
                    _0x4597c4['scale'](0x1 + _0x259e24, 0x1 + _0x259e24 / 0x2);
                }
            }
        }, _0x5d11ac['prototype']['setSkinPath'] = function() {
            var _0x2c8815 = this['isEdibleOutlined']() ? 'e' : this['oType'];
            _0x2c8815 = this['getBiomeSkin'](_0x2c8815), _0x2c8815 = 'gameobj/' + this['oType'] + this['getObjSpecies']() + '/' + _0x2c8815 + '.png', this['objSkinPath'] = _0x2c8815;
        }, _0x5d11ac['prototype']['draw'] = function(_0x44459b) {
            this['moveUpdF'] = this['moveUpdate']();
            if (this['objSkinPath'] == null) this['setSkinPath']();
            this['beforeCustomDraw'](), _0x4597c4['save'](), this['drawTranslate'](), this['drawScaleEffect']();
            var _0x4dc5d3 = this['getOutlineColor'](),
                _0xcf6e92 = 0x2;
            if (this['dead']) _0x4597c4['globalAlpha'] *= 0x1 - this['moveUpdF'];
            else _0x4597c4['globalAlpha'] *= Math['min'](0x1, (_0x476319 - this['spawnTime']) / (_0x55fcc3 * 0x3e8));
            this['customDraw'](_0x44459b), this['flag_hurt'] && this['onHurt'](), this['drawHealthBar'](), _0x4597c4['restore'](), this['afterCustomDraw']();
        }, _0x5d11ac['prototype']['onHurt'] = function() {
            _0x4597c4['fillStyle'] = 'rgba(255,0,0,0.3)', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
        }, _0x5d11ac['prototype']['drawHealthBar'] = function() {
            _0x4597c4['save']();
            var _0x36d9bc = _0x476319 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
            this['hpBarA'] += (_0x36d9bc - this['hpBarA']) * 0.04;
            if (this['hpBarA'] > 0.001) {
                this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
                var _0x19c40c = Math['max'](0x1, this['rad'] / 0x19),
                    _0x1c8a66 = 0x14 * _0x19c40c,
                    _0x287fe5 = 0x5 * _0x19c40c,
                    _0x4880a7 = 0x0,
                    _0x30e781 = -this['rad'] - 0xa * _0x19c40c;
                _0x4597c4['globalAlpha'] *= this['hpBarA'], _0x4597c4['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4597c4['fillRect'](_0x4880a7 - _0x1c8a66 / 0x2, _0x30e781 - _0x287fe5 / 0x2, _0x1c8a66, _0x287fe5), _0x4597c4['fillStyle'] = '#16D729', _0x4597c4['fillRect'](_0x4880a7 - _0x1c8a66 / 0x2, _0x30e781 - _0x287fe5 / 0x2, _0x1c8a66 * (this['hpPer'] / 0x64), _0x287fe5);
            }
            _0x4597c4['restore'](), this['drawInfectionBar']();
        };
        var _0x555230 = 0x5;
        _0x5d11ac['prototype']['drawInfectionBar'] = function() {
            if (this['flag_underWater']) return;
            var _0x4171f5 = _0x476319 < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
            this['infectionBarA'] += (_0x4171f5 - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
        }, _0x5d11ac['prototype']['drawBar'] = function(_0x312cc8, _0x3f71b5, _0x19f531, _0x2427a8, _0x3bbfb0) {
            _0x4597c4['save']();
            var _0x260b93 = Math['max'](0x1, this['rad'] / 0x19),
                _0x3e4c2d = 0x14 * _0x260b93;
            barH = _0x2427a8 * _0x260b93;
            var _0x2752f7 = 0x0,
                _0x5133d2 = -this['rad'] - _0x3bbfb0 * _0x260b93;
            _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4597c4['fillRect'](_0x2752f7 - _0x3e4c2d / 0x2, _0x5133d2 - barH / 0x2, _0x3e4c2d, barH), _0x4597c4['globalAlpha'] = _0x3f71b5, _0x4597c4['fillStyle'] = _0x312cc8, _0x4597c4['fillRect'](_0x2752f7 - _0x3e4c2d / 0x2, _0x5133d2 - barH / 0x2, _0x3e4c2d * (_0x19f531 / 0x64), barH), _0x4597c4['restore']();
        }, _0x5d11ac['prototype']['drawChat'] = function() {
            if (this['chatLines']['length'] < 0x1) return;
            _0x4597c4['save'](), _0x4597c4['font'] = '10px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle';
            var _0xb3e62d = this['hpBarA'] > 0.01 ? -0xa : 0x0,
                _0x3f6b30 = [];
            for (var _0x326469 = this['chatLines']['length'] - 0x1; _0x326469 >= 0x0; _0x326469--) {
                var _0x354d9f = this['chatLines'][_0x326469];
                if (!_0x16bfcf && _0x354d9f['chatTxt']['indexOf']('#koa:') > -0x1) continue;
                var _0x4bec28 = (this['chatLines']['length'] - 0x1 - _0x326469) * -0xd + _0xb3e62d,
                    _0x48fdec = _0x476319 > _0x354d9f['chatFadeT'] ? 0x0 : 0x1;
                _0x354d9f['chatA'] += (_0x48fdec - _0x354d9f['chatA']) * 0.1, _0x4597c4['shadowOffsetX'] = 0x0, _0x4597c4['shadowOffsetY'] = 0x0;
                if (_0x354d9f['chatA'] < 0.02) {
                    if (_0x48fdec < 0.02) _0x354d9f['chatTxt'] = '';
                    _0x3f6b30['push'](_0x326469);
                    continue;
                }
                var _0xb90cc0 = _0x4597c4['measureText'](_0x354d9f['chatTxt'])['width'],
                    _0x2b29f5 = 0xa,
                    _0x1e3fca = 0x1,
                    _0x1816c8 = 0x1;
                _0x4597c4['globalAlpha'] = 0.8 * _0x354d9f['chatA'], _0x4597c4['fillStyle'] = _0x46d432(this['curBiome']), _0x4597c4['fillRect'](this['x'] - _0x1e3fca - _0xb90cc0 / 0x2, _0x4bec28 + this['y'] - this['rad'] - 0xa - _0x2b29f5 / 0x2 - _0x1816c8, _0xb90cc0 + _0x1e3fca * 0x2, _0x2b29f5 + _0x1816c8 * 0x2), _0x4597c4['fillStyle'] = '#F1C34C', !(_0x3aa021 == _0x243dd0) && (_0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black'), _0x4597c4['globalAlpha'] = _0x354d9f['chatA'], _0x4597c4['fillText'](_0x354d9f['chatTxt'], this['x'], _0x4bec28 + this['y'] - this['rad'] - 0xa);
            }
            for (var _0x326469 = 0x0; _0x326469 < _0x3f6b30['length']; _0x326469++) {
                this['chatLines']['splice'](_0x3f6b30[_0x326469], 0x1);
            }
            _0x4597c4['restore']();
        }, _0x5d11ac['prototype']['getOutlineColor'] = function() {
            if (this['alwaysPlainOutline']) return _0x39b6af;
            if (this['isEdibleOutlined']()) return _0x4155ab;
            if (this['oType'] == _0x269668 && _0x261704[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x59b0bc) return _0x514a86;
            var _0x2e74db = this['curBiome'];
            if (this['flag_inWater']) _0x2e74db = _0x1085db;
            else {
                if (this['flag_inLava']) return '#c64a00';
            }
            return _0x46d432(_0x2e74db);
        }, _0x5d11ac['prototype']['isEdibleOutlined'] = function() {
            if (this['oType'] == _0x269668) return _0x1a7105[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x59b0bc;
            else return _0x46a672[this['oType'] - 0x1] > 0x0;
        }, _0x5d11ac['prototype']['gotChat'] = function(_0x15edd8) {
            if (this['chatLines']) {
                this['chatLines']['push']({
                    'chatTxt': _0x15edd8,
                    'chatFadeT': _0x476319 + 0xfa0,
                    'chatA': 0x0
                });
                if (this['chatLines']['length'] > 0x5) this['chatLines']['splice'](this['chatLines']['length'] - 0x1, 0x1);
            }
        }, _0x5d11ac['prototype']['drawOutlinedCircle'] = function(_0x3b9995, _0x4d30d9) {
            var _0x2dbc45 = this['getOutlineColor'](),
                _0x3c71da = 1.5;
            if (!(_0x3aa021 == _0x243dd0 && _0x2dbc45 == _0x39b6af)) _0x4096ce(0x0, 0x0, this['rad'], _0x2dbc45);
            _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - _0x3c71da), _0x4d30d9), _0x3b9995 && _0x3b9995['length'] > 0x0 && (_0x4597c4['save'](), _0x4597c4['fillStyle'] = 'black', _0x4597c4['fillText'](_0x3b9995, -this['rad'] / 0x2, 0x0), _0x4597c4['restore']());
        }, _0x5d11ac['prototype']['drawOutlinedCircleRad'] = function(_0x5da2bb, _0x224e96, _0x14704b) {
            var _0x558c3b = this['getOutlineColor'](),
                _0x5698ec = 1.5;
            if (!(_0x3aa021 == _0x243dd0 && _0x558c3b == _0x39b6af)) _0x4096ce(0x0, 0x0, _0x14704b, _0x558c3b);
            _0x4096ce(0x0, 0x0, Math['max'](0x0, _0x14704b - _0x5698ec), _0x224e96);
        }, _0x5d11ac['prototype']['onLerpUpdate'] = function(_0x5852d7) {}, _0x5d11ac['prototype']['moveUpdate'] = function() {
            var _0x4a5f6c = (_0x476319 - this['updateTime']) / 0x3e8 / _0x55fcc3;
            return _0x4a5f6c = 0x0 > _0x4a5f6c ? 0x0 : 0x1 < _0x4a5f6c ? 0x1 : _0x4a5f6c, (this['dead'] || !this['drawMe']) && _0x4a5f6c >= 0x1 && _0x32c2a0['push'](this), this['onLerpUpdate'](_0x4a5f6c), this['x'] = _0x4a5f6c * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x4a5f6c * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, this['angle'] != undefined && this['lerpAngle'](_0x4a5f6c), Math['min'](0x1, _0x4a5f6c);
        }, _0x5d11ac['prototype']['lerpAngle'] = function() {
            let _0x22f8de = _0x1dd4fe / _0x579692;
            this['angleDelta'] = _0x4c0365(this['angle'], this['nAngle']) || 0x0;
            const _0x4cdcc0 = this['angleDelta'] * Math['min'](0.1 * _0x22f8de, 0x1);
            this['angle'] += _0x4cdcc0;
        }, _0x5d11ac['prototype']['readCustomData_onUpdate'] = function(_0x3b5ca0) {}, _0x5d11ac['prototype']['readCustomData_onNewlyVisible'] = function(_0x2f7f22) {
            (this['oType'] == _0x3861b2 || this['oType'] == _0xb784fc || this['oType'] == _0x38ce4f) && (this['innerRad'] = _0x2f7f22['readUInt16']() / 0x4);
        }, _0x5d11ac['prototype']['setObjTypes'] = function(_0x592900, _0x14918c) {
            this['oType'] = _0x592900;
        }, _0x5d11ac['prototype']['clientBatchDraw'] = ![], _0x5d11ac['prototype']['clientBatchDrawID'] = ![], _0x5d11ac['prototype']['staticUpd_readMsg'] = function(_0x170bf5, _0x48b0fe) {
            this['setObjTypes'](_0x48b0fe, null), this['id'] = _0x170bf5['readUInt32']();
            var _0x126e38 = _0x170bf5['readUInt32']() / 0x4,
                _0x17d722 = _0x170bf5['readUInt16']() / 0x4,
                _0x37e501 = _0x170bf5['readUInt16']() / 0x4;
            this['ox'] = this['x'] = this['nx'] = _0x17d722, this['oy'] = this['y'] = this['ny'] = _0x37e501, this['oRad'] = this['rad'] = this['nRad'] = _0x126e38, this['curBiome'] = _0x170bf5['readUInt8'](), this['mopeSeasonID'] = 0x1, !this['clientBatchDraw'] && (this['oType'] == _0x37809d || this['oType'] == _0x20c79b) && (this['clientBatchDraw'] = !![], this['clientBatchDrawID'] = this['oType']), this['readCustomStaticData'](_0x170bf5);
        }, _0x5d11ac['prototype']['readCustomStaticData'] = function(_0x4e601c) {}, _0x5d11ac['prototype']['worldUpd_readMsgNewlyVisible'] = function(_0x509935, _0x3bb8d0, _0x58b423) {
            this['setObjTypes'](_0x3bb8d0, _0x58b423);
            var _0x187bcc = _0x509935['readUInt32'](),
                _0x543d4b = _0x509935['readUInt32']() / 0x4,
                _0x302aa4 = _0x509935['readUInt16']() / 0x4,
                _0x5648e7 = _0x509935['readUInt16']() / 0x4;
            this['id'] = _0x187bcc, this['ox'] = this['x'] = this['nx'] = _0x302aa4, this['oy'] = this['y'] = this['ny'] = _0x5648e7, this['nRad'] = _0x543d4b, this['oRad'] = this['rad'] = 0x0;
            (_0x3bb8d0 == _0x122b46 || _0x3bb8d0 == _0x302526 || _0x3bb8d0 == _0x1c0d9b || _0x3bb8d0 == _0x390f74 || _0x3bb8d0 == _0x3a3371 || _0x3bb8d0 == _0x4fbd16 || _0x3bb8d0 == _0x15fc30 || _0x3bb8d0 == _0x143978 || _0x3bb8d0 == _0x4f1571 || _0x3bb8d0 == _0x37809d) && (this['animateRadOnSpawn'] = ![]);
            if (!this['animateRadOnSpawn']) this['oRad'] = this['rad'] = _0x543d4b;
            var _0x2933cb = _0x509935['readUInt8']();
            this['curBiome'] = _0x2933cb;
            this['oType'] != _0x269668 && (this['mopeSeasonID'] = _0x509935['readUInt8'](), this['animalType'] = _0x509935['readUInt16'](), this['speciesType'] = _0x509935['readUInt16'](), this['speciesSubType'] = _0x509935['readUInt16']());
            var _0x5a0208 = _0x509935['readBitGroup'](),
                _0x50a061 = _0x5a0208['getBool'](),
                _0x5c2696 = _0x5a0208['getBool'](),
                _0x5f488a = _0x5a0208['getBool']();
            this['clientBatchDraw'] = _0x5a0208['getBool'](), this['objGetsAngleUpdate'] = _0x5f488a;
            if (this['clientBatchDraw']) this['clientBatchDrawID'] = _0x509935['readUInt16']();
            var _0x1d5fb8 = null;
            _0x50a061 && (this['spawnedByID'] = _0x509935['readUInt32'](), _0x1d5fb8 = _0x4b4e0c[this['spawnedByID']]);
            _0x1d5fb8 && (this['updateTime'] = _0x476319, this['nx'] = this['x'], this['ny'] = this['y'], this['ox'] = _0x1d5fb8['x'], this['oy'] = _0x1d5fb8['y'], this['x'] = _0x1d5fb8['x'], this['y'] = _0x1d5fb8['y']);
            if (_0x5c2696) this['isRectangle'] = !![], this['rectW'] = _0x509935['readUInt16'](), this['rectH'] = _0x509935['readUInt16']();
            else {
                var _0x3b3622 = _0x509935['readUInt8']() * 0x2;
                this['updateAngle'](_0x3b3622);
            }
            this['readUpdatedPropertyItem'](_0x125af5, _0x509935), this['readUpdatedPropertyItem'](_0x4038e0, _0x509935), this['readCustomData_onNewlyVisible'](_0x509935);
        }, _0x5d11ac['prototype']['setRadius'] = function(_0x573df8) {
            this['rad'] = _0x573df8;
        }, _0x5d11ac['prototype']['easeAngleChanges'] = !![], _0x5d11ac['prototype']['updateAngle'] = function(_0x2bb7b0) {
            var _0x13de90 = this['oType'] == _0x4fbd16 ? 0xb4 : 0x5a;
            if (!this['easeAngleChanges']) this['angle'] = _0x4c4686(_0x2bb7b0 + _0x13de90);
            else {
                var _0x4d15ec = _0x4c4686(_0x2bb7b0 + _0x13de90);
                this['oAngle'] = this['angle'], this['nAngle'] = _0x4d15ec, this['firstPosUpd'] && (this['oAngle'] = this['nAngle'] = this['angle'] = _0x4d15ec);
            }
        }, _0x5d11ac['prototype']['setMovedToPos'] = function(_0xedfb8, _0x4c70b0) {
            this['updateTime'] = _0x476319, this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = _0xedfb8, this['ny'] = _0x4c70b0;
        }, _0x5d11ac['prototype']['setNewRad'] = function(_0x3aac56) {
            this['oRad'] = this['rad'], this['nRad'] = _0x3aac56;
        }, _0x5d11ac['prototype']['worldUpd_readMsgUpdate'] = function(_0x4fae5c) {
            var _0x4ea02a = _0x4fae5c['readBitGroup']();
            this['readUpdatedFlags'](_0x4ea02a);
            var _0x2eed57 = _0x4fae5c['readUInt8']();
            for (var _0x2ec6c7 = 0x0; _0x2ec6c7 < _0x2eed57; _0x2ec6c7++) {
                var _0x1008c5 = _0x4fae5c['readUInt16']();
                this['readUpdatedPropertyItem'](_0x1008c5, _0x4fae5c);
            }
            this['readCustomData_onUpdate'](_0x4fae5c), this['firstPosUpd'] = ![];
        }, _0x5d11ac['prototype']['readUpdatedPropertyItem'] = function(_0x1f2d7a, _0x1c2741) {
            if (_0x1f2d7a == _0x1e294e) {
                var _0x3e58ca = _0x1c2741['readUInt16']() / 0x4,
                    _0xea833e = _0x1c2741['readUInt16']() / 0x4;
                this['setMovedToPos'](_0x3e58ca, _0xea833e);
            } else {
                if (_0x1f2d7a == _0x1f6bed) {
                    var _0x33d45e = _0x1c2741['readUInt16']() / 0xa;
                    this['setNewRad'](_0x33d45e);
                } else {
                    if (_0x1f2d7a == _0x30d081) {
                        var _0x39bedc = _0x18b226(_0x1c2741['readUInt16']());
                        this['updateAngle'](_0x39bedc);
                    } else {
                        if (_0x1f2d7a == _0x125af5) this['specType'] = _0x1c2741['readUInt8']();
                        else {
                            if (_0x1f2d7a == _0x4038e0) this['specType2'] = _0x1c2741['readUInt8']();
                            else {
                                if (_0x1f2d7a == _0x5fcd81) {
                                    var _0x253649 = _0x1c2741['readUInt8']();
                                    this['setHpBar'](_0x253649);
                                } else {
                                    if (_0x1f2d7a == _0x557942) this['curBiome'] = _0x1c2741['readUInt8']();
                                    else {
                                        if (_0x1f2d7a == _0x3e9373) this['flag_hurt'] = _0x1c2741['readUInt8']() == 0x1;
                                        else this['readUpdatedProperty'](_0x1f2d7a, _0x1c2741);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        };
        var _0x5514d4 = 0x0;
        _0x5d11ac['prototype']['readUpdatedFlags'] = function(_0xb8db35) {
            this['flag_hurt'] = _0xb8db35['getBool'](), this['flag_flying'] = _0xb8db35['getBool']();
        }, _0x5d11ac['prototype']['readUpdatedProperty'] = function(_0x46ea62, _0x1b8219) {}, _0x5d11ac['prototype']['setHpBar'] = function(_0x3dc31c) {
            this['hpPer_n'] = _0x3dc31c, this['hpBarTimeoutT'] = +new Date() + 0xbb8;
        }, _0x5d11ac['prototype']['killerId'] = 0x0, _0x5d11ac['prototype']['worldUpd_readMsgRemovedObj'] = function(_0x2c7dcf) {
            var _0x112c92 = _0x2c7dcf['readUInt8']() > 0x0;
            this['killerId'] = _0x112c92 ? _0x2c7dcf['readUInt32']() : 0x0, this['removeFromTheGame']();
        }, _0x5d11ac['prototype']['removeFromTheGame'] = function() {
            var _0x26b7d1 = this['killerId'] > 0x0 ? _0x4b4e0c[this['killerId']] : undefined;
            this['dead'] = !![], this['updateTime'] = _0x476319;
            if (this['oType'] == _0x4fbd16) this['ox'] = this['x'], this['oy'] = this['y'], this['nx'] = this['x'], this['ny'] = this['y'];
            else _0x26b7d1 ? (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = _0x26b7d1['nx'], this['ny'] = _0x26b7d1['ny'], this['nRad'] = Math['min'](this['rad'], _0x26b7d1['rad']), _0x59b0bc == this['killerId'] && (this['oType'] == _0x269668 && (!_0x4b5935 && _0x46a0c8('audio/bite.mp3', 0.05, _0x5d7e18(0.9, 1.1))), this['oType'] == _0x4807c9 || this['oType'] == _0x5c1489 || this['oType'] == _0x25aaff ? !_0x4b5935 && _0x46a0c8('audio/bloop.mp3', 0.6, _0x5d7e18(0.9, 1.1)) : !_0x4b5935 && _0x46a0c8('audio/nom.mp3', 0.5)), this['hp_n'] = 0x0) : (this['ox'] = this['x'], this['oy'] = this['y'], this['oRad'] = this['rad'], this['nx'] = this['x'], this['ny'] = this['y'], this['nRad'] = 0x0);
            this['onRemovedFromGame']();
        }, _0x5d11ac['prototype']['updateZ'] = function() {
            switch (this['oType']) {
                case _0x25dd6c:
                case _0x2f8dda:
                case _0x5563ad:
                    this['z'] = 0xf4240;
                    break;
                case _0x36e8de:
                    this['z'] = -0xdc;
                    break;
                case _0x99578c:
                case _0x5b34f0:
                    this['z'] = -0xd2;
                    break;
                case _0x302526:
                case _0x122b46:
                    this['z'] = -0xd1;
                    break;
                case _0x45adaa:
                    this['z'] = -0x9e;
                    break;
                case _0x1a14e4:
                    this['z'] = -0x8c;
                    break;
                case _0x22d2e2:
                    this['z'] = -0x97;
                    break;
                case _0x3a3371:
                case _0x294b51:
                    this['z'] = -0xa0;
                    break;
                case _0x1d814a:
                    this['z'] = -0x129;
                    break;
                case _0xc2bb66:
                    this['z'] = -0x128;
                    break;
                case _0x5a697d:
                    this['z'] = -0x9d;
                    break;
                case _0x1c0d9b:
                    this['z'] = -0x9e;
                    break;
                case _0x390f74:
                    this['z'] = -0x9c;
                    break;
                case _0x2330c7:
                    this['z'] = -0x9b;
                    break;
                case _0x37809d:
                    this['z'] = -0x9a;
                    break;
                case _0x38ce4f:
                    this['z'] = -0x96;
                    break;
                case _0xb784fc:
                    this['z'] = -0x65;
                    break;
                case _0x3861b2:
                    this['z'] = -0x64;
                    break;
                case _0x462f96:
                case _0x1f50b5:
                    this['z'] = -0x63;
                    break;
                case _0x59b2cc:
                case _0x4f1571:
                    this['z'] = 0x3e8;
                    break;
                case _0x24c3fc:
                    this['z'] = 0x3ea;
                    break;
                case _0x143978:
                    this['z'] = 0x3ea;
                    break;
                case _0xe2efeb:
                case _0x15fc30:
                    this['z'] = 0x3e7;
                    break;
                case _0x3b5e93:
                    this['z'] = 0x3eb;
                    break;
                case _0x1bd8a6:
                case _0x342032:
                case _0x3e13a9:
                    this['z'] = 0x3ea + this['rad'];
                    break;
                case _0x5040bf:
                    this['z'] = 0x186af;
                    break;
                case _0x25aaff:
                    this['z'] = 0x186af;
                    break;
                case _0x3dbe5c:
                case _0x48ab8f:
                    this['z'] = 0x3f2 + this['rad'];
                    this['specType2'] == 0x1 && (this['z'] += 0x3e8);
                    break;
                case _0x22dbc8:
                    this['z'] = 0x7d0 + this['rad'];
                    break;
                case _0x5651b8:
                case _0x59ae01:
                    this['z'] = 0x3ee;
                    break;
                case _0x269668:
                    break;
                default:
                    this['z'] = this['rad'];
                    break;
            }
        }, _0x5d11ac['prototype']['updateZ_onTree'] = function(_0x4df794) {
            this['oType'] == _0x269668 && this['flag_eff_isOnTree'] && (this['z'] = _0x4df794 + 0x44c);
        }, _0x5d11ac['prototype']['showScaleEffectToPlayer'] = function() {
            var _0x15b44f = _0x4b4e0c[_0x59b0bc];
            if (_0x15b44f && _0x15b44f['flag_inHidingHole'] && _0x15b44f['lastHidingHoleID'] == this['id']) return ![];
            return !![];
        }, _0x5d11ac['prototype']['calculateZIndex'] = function() {
            this['updateZ']();
            if (this['oType'] == _0x269668) {
                if (this['flag_flying']) {
                    this['z'] = 0x186a0;
                    this['flag_isGrabbed'] && (this['z'] -= this['rad']);
                    if (this['flag_eff_aniInClaws'] || this['flag_usingAbility']) this['z'] += 0x3e8;
                } else {
                    if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
                    else {
                        this['updateZ_onTree'](this['z']);
                        if (this['flag_eff_invincible']) this['z'] += 0x3e8;
                    }
                }
            } else this['updateZ_onTree'](this['z']);
        }, _0x5d11ac['prototype']['season'] = 0x1, _0x5d11ac['prototype']['mopeSeasonID'] = 0x0, _0x5d11ac['prototype']['skinThemeID'] = 0x0, _0x5d11ac['prototype']['getSkinImageObj'] = function(_0x365903) {
            var _0x5ac745 = './assets/s/' + this['mopeSeasonID'] + '/' + _0x365903;
            return this['skinThemeID'] > 0x0 && (_0x5ac745 = './assets/t/' + this['skinThemeID'] + '/' + _0x365903), _0x5e7a48(_0x5ac745, function(_0xf9bc3a) {
                console['log'](_0xf9bc3a['src']);
            });
        }, _0x5d11ac['prototype']['getSkinImageObjForSeason'] = function(_0x223ff4, _0x766ca) {
            if (!_0x766ca) {}
            var _0x3ac7c4 = './assets/s/' + _0x766ca + '/' + _0x223ff4;
            return this['skinThemeID'] > 0x0 && (_0x3ac7c4 = './assets/t/' + this['skinThemeID'] + '/' + _0x223ff4), _0x5e7a48(_0x3ac7c4, function(_0x1e1284) {});
        }, _0x5d11ac['prototype']['getObjImageObjForSeason'] = function(_0x10a0e5, _0x47ed50) {
            if (!_0x47ed50) {}
            var _0x16fc0b = './assets/s/' + _0x47ed50 + '/' + _0x10a0e5;
            return _0x5e7a48(_0x16fc0b, function(_0x1920d0) {});
        }, _0x5d11ac['prototype']['onRemovedFromGame'] = function() {};

        function _0x5d11ac(_0x5a14d0) {
            this['oType'] = _0x5a14d0, this['rPer'] = _0x5d7e18(0x0, 0x1), this['spawnTime'] = _0x476319, this['updateTime'] = _0x476319, this['firstPosUpd'] = !![], this['chatLines'] = [];
            switch (this['oType']) {
                case _0x419b74:
                case _0x48ab8f:
                case _0x5229f7:
                case _0x4a0ffc:
                case _0x3dbe5c:
                case _0x4807c9:
                case _0x5651b8:
                case _0x59ae01:
                case _0x3b5e93:
                case _0x304406:
                case _0x8015d:
                case _0x2bd206:
                case _0x3861b2:
                case _0x38ce4f:
                case _0xb784fc:
                case _0x2d652f:
                case _0xd9f934:
                case _0x33efa6:
                case _0x5bb4a8:
                case _0x4a7695:
                case _0x2ac94b:
                case _0x28855a:
                case _0x5ddf97:
                case _0x5b2437:
                case _0x294ff4:
                case _0x361480:
                case _0x4a87ae:
                case _0x59a5fe:
                case _0x192664:
                case _0x27116a:
                case _0x2ed384:
                case _0x3b1d1b:
                case _0x59b2cc:
                case _0xe2efeb:
                case _0x24c3fc:
                    this['doesDrawEffectScale'] = !![];
                    break;
                default:
                    break;
            }
            if (this['oType'] == _0x3861b2 || this['oType'] == _0xb784fc || this['oType'] == _0x38ce4f || this['oType'] == _0x3b5e93) this['drawEffectScale_Slow'] = !![];
        }
        var _0x542fa9 = _0x1fbdb9,
            _0x4d8447 = _0x5d11ac;
        _0x542fa9['prototype'] = Object['create'](_0x4d8447['prototype']), _0x542fa9['prototype']['constructor'] = _0x542fa9;

        function _0x1fbdb9() {
            this['objs'] = [], this['updateZ'] = function() {
                this['objs']['length'] > 0x0 && (this['objs'][0x0]['updateZ'](), this['z'] = this['objs'][0x0]['z']);
            }, this['draw'] = function() {
                for (var _0x52c793 = 0x0; _0x52c793 < this['objs']['length']; _0x52c793++) {
                    var _0x1a951f = this['objs'][_0x52c793];
                    _0x1a951f['draw'](!![]);
                }
                for (var _0x52c793 = 0x0; _0x52c793 < this['objs']['length']; _0x52c793++) {
                    var _0x1a951f = this['objs'][_0x52c793];
                    _0x1a951f['draw'](![]);
                }
            }, this['addBatchedObj'] = function(_0x428039) {
                this['objs']['length'] == 0x0 && (this['oType'] = _0x428039['oType'], this['objs'] = []), this['objs']['push'](_0x428039);
            };
        }
        var _0x498438 = _0x23ae7e,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x23ae7e['prototype']['abilityType'] = _0x40131c, _0x23ae7e['prototype']['showHalloweenSkins'] = !![], _0x23ae7e['prototype']['updateZ'] = function() {
            if (this['abilityType'] == _0x4c32c1 || this['abilityType'] == _0x5ad2ab || this['abilityType'] == _0x3193ff || this['abilityType'] == _0x3a5655 || this['abilityType'] == _0xbb4e7f || this['abilityType'] == _0x6d49e6 || this['abilityType'] == _0x25e4a4) this['z'] = 0x186a2;
            else {
                if (this['abilityType'] == _0x25e4a4 || this['abilityType'] == _0xbb4e7f || this['abilityType'] == _0x570c9f || this['abilityType'] == _0x2ff7c1 || this['abilityType'] == _0x3dbd60 || this['abilityType'] == _0x28e962 || this['abilityType'] == _0x518c9f || this['abilityType'] == _0x1afeb2 || this['abilityType'] == _0x35f13f || this['abilityType'] == _0x4a7324 || this['abilityType'] == _0x15b169 || this['abilityType'] == _0x2ddf94 || this['abilityType'] == _0x1d45b7 || this['abilityType'] == _0x14db37 || this['abilityType'] == _0x2e4acf || this['abilityType'] == _0x5b747e || this['abilityType'] == _0x1c7281 || this['abilityType'] == _0x1adb9f) this['z'] = 0x7d0;
                else {
                    if (this['abilityType'] == _0x38e3df) this['z'] = 0x3ea;
                    else {
                        if (this['abilityType'] == _0x3d0c6d) this['z'] = 0x2711;
                        else {
                            if (this['abilityType'] == _0x4df451) {
                                if (this['specType'] == 0x1) this['z'] = 0x2711;
                                else {
                                    if (this['specType'] == 0x2) this['z'] = 0x3f5;
                                    else {
                                        if (this['specType'] == 0x3) this['z'] = 0x186a0;
                                    }
                                }
                            } else this['abilityType'] == _0x381068 ? this['z'] = 0x3f5 : this['z'] = -0x98;
                        }
                    }
                }
            }
            if (this['abilityType'] == _0x2d6ab6) {
                if (this['specType'] == 0x2) this['z'] = 0x2710 - this['rad'];
                else this['z'] = 0x3e9;
            }
        }, _0x23ae7e['prototype']['customDraw'] = function(_0x490f88) {
            switch (this['abilityType']) {
                case _0x53974f:
                    _0x4096ce(0x0, 0x0, this['rad'], '#7EBCC0');
                    break;
                case _0x22d7cf:
                case _0x14ff6c: {
                    break;
                }
                case _0x286b26: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.4 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#7EBCC0'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84, _0x4597c4['strokeStyle'] = 'white', _0x4597c4['beginPath']();
                    var _0x60e391 = 0xa;
                    _0x4597c4['translate'](-0x5, this['rad'] * -0.7), _0x4597c4['moveTo'](0x0, -_0x60e391), _0x4597c4['lineTo'](0x0, _0x60e391), _0x4597c4['moveTo'](-_0x60e391, -_0x60e391), _0x4597c4['lineTo'](_0x60e391, _0x60e391), _0x4597c4['moveTo'](_0x60e391, -_0x60e391), _0x4597c4['lineTo'](-_0x60e391, _0x60e391), _0x4597c4['moveTo'](-_0x60e391, 0x0), _0x4597c4['lineTo'](_0x60e391, 0x0), _0x4597c4['lineWidth'] = 0x3, _0x4597c4['stroke'](), _0x4597c4['restore']();
                }
                break;
                case _0x58f098: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#755A2A'), _0x4597c4['restore']();
                }
                break;
                case _0x15b169: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x2cb6e0 = this['getSkinImageObj']('img/ability_sabertoothJawAttack.png');
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] - 2.5;
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x2cb6e0, 0x0, 0x0, _0x2cb6e0['width'] * _0x591609, _0x2cb6e0['height'], -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99 * _0x591609, 0x2 * _0x48ef99);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x2ff7c1: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x2cb6e0 = this['getSkinImageObj']('img/ability_claw.png');
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] - 2.5;
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x2cb6e0, 0x0, 0x0, _0x2cb6e0['width'] * _0x591609, _0x2cb6e0['height'], -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99 * _0x591609, 0x2 * _0x48ef99);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x6d49e6: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.1 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#5B7EC7'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x3d79f2 = 'img',
                        _0x2cb6e0 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['speciesType'] + '/tail.png');
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.65;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 1.25;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x28e962: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.1 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#5B7EC7'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x3d79f2 = 'skins/ocean/bluewhale/' + this['speciesType'];
                    _0x3d79f2 += '/' + this['speciesSubType'];
                    var _0x2cb6e0 = this['getSkinImageObjForSeason'](_0x3d79f2 + '/ability_whaleTailHit.png', this['mopeSeasonID']);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.85;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 1.25;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0xbb4e7f: {
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['save']();
                    var _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 1.5,
                        _0xca52a7 = 0x1,
                        _0x4e9e6e = _0xca52a7 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                        _0x19c533 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] *= 0.6 * _0x4e9e6e, _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.15 * _0x45db84;
                    if (this['specType2'] == 0x0) _0x4096ce(0x0, 0x0, this['rad'], '#96661C');
                    else _0x4096ce(0x0, 0x0, this['rad'], '#e0dfde');
                    _0x4597c4['restore'](), _0x4597c4['save']();
                    var _0x25cd02 = this['specType2'] == 0x1 ? 'arctic' : 'land',
                        _0x1ffb7d = 'skins/' + _0x25cd02 + '/bear/' + this['speciesType'] + '/ability.png',
                        _0x2cb6e0 = this['getSkinImageObj'](_0x1ffb7d);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x1aff5a = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                            _0x1c81e0 = -(-0.5 + _0x1aff5a) * _0x197fc1,
                            _0x153e59 = this['angle'];
                        _0x4597c4['rotate'](this['angle'] + _0x1c81e0 * (this['specType'] == 0x0 ? 0x1 : -0x1));
                        var _0x48ef99 = -this['rad'] * 0x1,
                            _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.8;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704 + _0x48ef99, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x25e4a4: {
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['save']();
                    var _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 1.5,
                        _0xca52a7 = 0x1,
                        _0x4e9e6e = _0xca52a7 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                        _0x19c533 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] *= 0.6 * _0x4e9e6e, _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.15 * _0x45db84;
                    if (this['specType2'] == 0x0) _0x4096ce(0x0, 0x0, this['rad'], '#96661C');
                    else _0x4096ce(0x0, 0x0, this['rad'], '#e0dfde');
                    _0x4597c4['restore'](), _0x4597c4['save']();
                    var _0x3d79f2 = 'skins/desert/gobibear/' + this['speciesType'] + '/claw' + Math['min'](this['specType'], 0x1),
                        _0x2cb6e0 = this['getSkinImageObj'](_0x3d79f2 + '.png');
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x1aff5a = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                            _0x1c81e0 = -(-0.5 + _0x1aff5a) * _0x4c4686(0x5a),
                            _0x153e59 = this['angle'];
                        _0x4597c4['rotate'](this['angle'] + _0x1c81e0 * (this['specType'] == 0x0 ? 0x1 : -0x1));
                        var _0x48ef99 = -this['rad'] * 0x1,
                            _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.8;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704 + _0x48ef99, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x1adb9f: {
                    var _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x1e0982 = _0x5b9e97(_0x1b5a2e, 0x1, 0.1, 0x1),
                        _0x1affdc = 0x0,
                        _0x54d4e0 = 0x2,
                        _0xca52a7 = 1.5;
                    _0x1affdc = _0xca52a7 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                    var _0x8ed163 = 0x1;
                    for (i = 0x0; i < _0x8ed163; i++) {
                        this['drawRad'] === undefined && (this['drawRad'] = new Array(), this['drawAngle'] = new Array());
                        this['drawRad'][i] == undefined && (this['drawRad']['push'](_0x4ec95c(0x5, 0xa) / 0xa), this['drawAngle']['push'](_0x4c4686(_0x4ec95c(0x1, 0x168))));
                        var _0x4a89a1 = this['rad'] * this['drawRad'][i];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['drawAngle'][i]), _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0.1 - _0x1e0982, _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['fillStyle'] = 'white', _0x4597c4['globalAlpha'] = 0.3 - _0x1e0982;
                        var _0x55d473 = -_0x4a89a1 * 0.6,
                            _0xbb729 = -_0x4a89a1 * 0.5 + 0xa * this['rPer'],
                            _0x5b746f = Math['max'](0x0, _0x4a89a1 * 0.65 + _0x1affdc) + 0x2;
                        _0x4096ce(_0x55d473, _0xbb729, _0x5b746f, '#654321');
                        var _0x55d473 = _0x4a89a1 * 0.5,
                            _0xbb729 = -_0x4a89a1 * 0.5 - 0xa * this['rPer'],
                            _0x5b746f = Math['max'](0x0, _0x4a89a1 * 0.73 - _0x1affdc);
                        _0x4096ce(_0x55d473, _0xbb729, _0x5b746f, '#654321');
                        var _0x55d473 = _0x4a89a1 * 0.6,
                            _0xbb729 = _0x4a89a1 * 0.5,
                            _0x5b746f = Math['max'](0x0, _0x4a89a1 * 0.78 + _0x1affdc);
                        _0x4096ce(_0x55d473, _0xbb729, _0x5b746f, '#654321');
                        var _0x55d473 = -_0x4a89a1 * 0.5,
                            _0xbb729 = _0x4a89a1 * 0.5 + 0xa * this['rPer'],
                            _0x5b746f = Math['max'](0x0, _0x4a89a1 * 0.6 + this['rPer'] - _0x1affdc);
                        _0x4096ce(_0x55d473, _0xbb729, _0x5b746f, '#654321'), _0x4597c4['restore'](), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x528399:
                    _0x4597c4['globalAlpha'] = 0.5, _0x4096ce(0x0, 0x0, this['rad'], 'red');
                    break;
                case _0x4c32c1:
                    break;
                case _0x4fdeb3:
                    break;
                case _0x57e453:
                    break;
                case _0x42c802:
                case _0x5d9544:
                case _0x35becc:
                case _0x34a295:
                case _0x5ad2ab:
                case _0x516842:
                case _0x405477:
                case _0x2f40ae:
                case _0x6254d6:
                case _0x462a31:
                    break;
                case _0x2d6ab6:
                    if (this['specType'] == 0x2) {
                        var _0x299c9e = 'closed',
                            _0x65079f = 'flytrap',
                            _0xd24f18 = 'img/desert/' + _0x65079f + '/mouth/' + _0x299c9e + '.png',
                            _0x2cb6e0 = this['getSkinImageObj'](_0xd24f18);
                        if (_0x2cb6e0) {
                            var _0x48ef99 = this['rad'];
                            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.9, _0x4597c4['rotate'](this['angle'] - _0x4c4686(-0x5a)), _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                        }
                    } else {}
                    break;
                case _0x1d4252:
                    if (this['specType2'] == 0x1) {
                        var _0x1b5a2e = _0x476319 - this['spawnTime'],
                            _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] - -_0x197fc1), _0x4597c4['globalAlpha'] = 0.9 * _0x45db84;
                        if (_0x1b5a2e < 0xc8) {
                            var _0x5cf7eb = 0x1 + Math['trunc'](_0x1b5a2e / 0x32),
                                _0xd24f18 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop' + _0x5cf7eb + '.png',
                                _0x2cb6e0 = this['getSkinImageObjForSeason'](_0xd24f18, 0x1);
                            if (_0x2cb6e0) {
                                var _0x48ef99 = this['rad'];
                                _0x4597c4['save'](), _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                            }
                        } else {
                            var _0xd24f18 = 'skins/desert/camel/201/spit' + this['specType'] + '_pop4.png',
                                _0x2cb6e0 = this['getSkinImageObjForSeason'](_0xd24f18, 0x1);
                            if (_0x2cb6e0) {
                                var _0x48ef99 = this['rad'];
                                _0x4597c4['save'](), _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                            }
                        }
                        _0x4597c4['restore']();
                    } else {
                        _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], 'black'), _0x4597c4['restore']();
                    }
                    break;
                case _0x3a5655: {
                    this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], _0x4597c4['globalAlpha'] = 0.2, _0x4096ce(0x0, 0x0, this['rad'] * 0.85, 'white');
                    var _0x5c29cd = this['specType'] == 0x3 ? '_e' : '',
                        _0x2cb6e0 = this['getSkinImageObj']('img/target' + _0x5c29cd + '.png');
                    if (_0x2cb6e0) {
                        var _0x48ef99 = this['rad'];
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                    }
                    _0x4597c4['save']();
                    if (this['is1v1Target'] == 0x1 && this['timerTxt'] != null) _0x4597c4['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
                    else this['is1v1Target'] == 0x2 && this['timerTxt'] != null && (_0x4597c4['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']());
                    _0x4597c4['restore']();
                }
                break;
                case _0x3193ff: {
                    _0x4597c4['globalAlpha'] = 0.5;
                }
                break;
                case _0x1afeb2: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#B32E10'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x3d79f2 = 'skins/ocean/kingcrab/' + this['speciesType'],
                        _0x298268 = this['mopeSeasonID'],
                        _0x2cb6e0 = this['getSkinImageObjForSeason'](_0x3d79f2 + '/ability_crabSmash' + this['specType'] + '.png', _0x298268);
                    if (_0x2cb6e0) {
                        var _0x1aff5a = _0x34fd15((_0x476319 - this['spawnTime']) / 0xc8, 0x0, 0x1),
                            _0x1887a6 = this['specType'] == 0x1 ? -0x1 : 0x1,
                            _0x1c81e0 = -(-0.2 + _0x1aff5a) * _0x4c4686(-0x5a * _0x1887a6);
                        _0x1c81e0 = _0x1887a6 * (0.3 + _0x1aff5a) + _0x4c4686(_0x1887a6 * -0x1e);
                        var _0x48ef99 = this['rad'] * 0.6;
                        _0x4597c4['rotate'](this['angle'] + _0x1c81e0);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2 * 0.7,
                            _0x204c2d = _0x48ef99 * 0x2,
                            _0x2838b2 = 0.75,
                            _0x307704 = 0.95;
                        this['specType'] == 0x1 && (_0x2838b2 = 0.25, _0x307704 = 0.95), _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x518c9f: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x3d79f2 = 'skins/land/elephant/' + this['speciesType'],
                        _0x2cb6e0 = this['getSkinImageObj'](_0x3d79f2 + '/ability_elephantTrunkSmack.png');
                    console['log'](_0x3d79f2);
                    if (_0x2cb6e0) {
                        var _0x1aff5a = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                            _0x1c81e0 = -(-0.5 + _0x1aff5a) * _0x197fc1,
                            _0x48ef99 = this['rad'] * 0.6;
                        _0x4597c4['rotate'](this['angle'] + _0x1c81e0);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2 * 0.7,
                            _0x204c2d = _0x48ef99 * 0x2,
                            _0x2838b2 = 0.75,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x3dbd60: {}
                break;
                case _0x35f13f: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.25 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#44d31f'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x2cb6e0 = this['getSkinImageObjForSeason']('skins/land/croc/' + this['speciesType'] + '/' + this['speciesSubType'] + '/ability.png', this['mopeSeasonID']);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.6;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d), _0x4597c4['rotate'](Math['PI']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'] * 0.5,
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x4a7324: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.25 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#44d31f');
                    var _0x298268 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 ? 0x1 : this['mopeSeasonID'],
                        _0x3d79f2 = 'skins/land/boaconstrictor/' + this['speciesType'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x2cb6e0 = this['getSkinImageObjForSeason'](_0x3d79f2 + '/ability_boabite.png', _0x298268);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.6;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d), _0x4597c4['rotate'](Math['PI']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'] * 0.5,
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0xe38605: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.1 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#755A2A'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x3d79f2 = 'skins/land/',
                        _0x298268 = this['mopeSeasonID'],
                        _0x2cb6e0 = this['getSkinImageObjForSeason'](_0x3d79f2 + '/tiger/' + this['speciesType'] + '/ability_tigerJump.png', _0x298268);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0x64),
                            _0x48ef99 = this['rad'] * 1.1;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0x1;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x14db37: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#44d31f'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x18a6b1 = this['getSkinImageObj']('img/ability_pounce2.png'),
                        _0x1ac535 = this['getSkinImageObj']('img/ability_pounce1.png');
                    if (_0x18a6b1 && _0x1ac535) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.4;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x18a6b1, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d), _0x48ef99 = this['rad'] * 0.6;
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'] * 0.5,
                            _0x4e83bc = _0x48ef99 * 2.5,
                            _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.95;
                        _0x4597c4['drawImage'](_0x1ac535, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x1d45b7: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x426b03 = 'skins/land/tiger/' + this['speciesType'] + '/ability_tigerSlash' + this['specType'] + '.png',
                        _0x2cb6e0 = this['getSkinImageObj'](_0x426b03);
                    if (_0x2cb6e0) {
                        var _0x1aff5a = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                            _0x1c81e0 = (this['specType'] == 0x1 ? 0x1 : -0x1) * (-0.6 + _0x1aff5a) * _0x4c4686(0x5a),
                            _0x48ef99 = this['rad'] * 1.2;
                        _0x4597c4['rotate'](this['angle'] + _0x1c81e0);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2 * 0.7,
                            _0x204c2d = _0x48ef99 * 0x2,
                            _0x2838b2 = 0.2,
                            _0x307704 = 0.5;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x5b747e: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                    var _0x298268 = this['mopeSeasonID'],
                        _0xa33632 = _0x298268 === 0x1 ? '' : this['specType'],
                        _0x1c78ce = 'skins/land/zebra/' + this['speciesType'] + '/kick' + _0xa33632 + '.png',
                        _0x2cb6e0 = this['getSkinImageObjForSeason'](_0x1c78ce, _0x298268);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x48ef99 = this['rad'] * 0.6;
                        _0x4597c4['rotate'](this['angle']);
                        var _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x3 * _0x591609,
                            _0x2838b2 = 0.3,
                            _0x307704 = 0x1;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x2e4acf: {
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['save']();
                    let _0x2a8178 = 0x1;
                    var _0x19c533 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] *= 0.6 * _0x2a8178, _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(this['rad'] * 0.3, 0x0, this['rad'] * (0.9 + 0.12 * _0x2a8178), '#E4E7C8'), _0x4096ce(-this['rad'] * 0.3, 0x0, this['rad'] * (1.05 + 0.09 * _0x2a8178), '#E4E7C8'), _0x4597c4['globalAlpha'] = _0x19c533, _0x4597c4['restore'](), _0x4597c4['save']();
                    let _0x51b310 = 'skins/land/giraffe/' + this['speciesType'];
                    this['speciesType'] == 0xca && (_0x51b310 += '/' + this['speciesSubType']);
                    _0x51b310 += '/stomp.png';
                    var _0x2cb6e0 = this['getSkinImageObj'](_0x51b310);
                    if (_0x2cb6e0) {
                        var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                            _0x153e59 = this['angle'];
                        _0x4597c4['rotate'](_0x153e59);
                        var _0x48ef99 = -this['rad'] * 0x1,
                            _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x3,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.7;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704 + _0x48ef99, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x1c7281: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x45db84, _0x4597c4['rotate'](this['angle']);
                    var _0x298268 = this['mopeSeasonID'],
                        _0x2cb6e0 = this['getSkinImageObjForSeason']('skins/ocean/shark/' + this['speciesType'] + '/ability.png', _0x298268);
                    if (_0x2cb6e0) {
                        var _0x1e0982 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8);
                        _0x4597c4['globalAlpha'] = 0.9;
                        var _0x48ef99 = -this['rad'] * 1.75,
                            _0x4b1daf = 0x0,
                            _0x5cceb0 = this['rad'],
                            _0x4e83bc = _0x48ef99 * 0x2,
                            _0x204c2d = _0x48ef99 * 0x2 * _0x1e0982,
                            _0x2838b2 = 0.5,
                            _0x307704 = 0.9;
                        _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704 + _0x48ef99, _0x4e83bc, _0x204c2d);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x4e4443: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.5 * _0x45db84;
                    var _0x48ef99 = this['rad'],
                        _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 2.2,
                        _0x26f7de = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                        _0x7e7cd2 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                    _0x4597c4['globalAlpha'] = 0.3 * _0x45db84, _0x4096ce(0x0, 0x0, _0x48ef99, _0x1c0746), _0x4597c4['globalAlpha'] = 0.5 * _0x45db84, _0x4096ce(0x0 + _0x26f7de / 4.5 + this['rPer'], 0x1 + _0x7e7cd2 / 1.5, Math['max'](0x0, _0x48ef99 - 0xe), '#de9d23'), _0x4597c4['restore']();
                }
                break;
                case _0x3d0c6d: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.5 * _0x45db84;
                    var _0x48ef99 = this['rad'],
                        _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 2.2,
                        _0x26f7de = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                        _0x7e7cd2 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                    _0x4597c4['globalAlpha'] = 0.3 * _0x45db84, _0x4096ce(0x0, 0x0, _0x48ef99, '#2CAAC4'), _0x4597c4['globalAlpha'] = 0.5 * _0x45db84, _0x4096ce(0x0 + _0x26f7de / 4.5 + this['rPer'], 0x1 + _0x7e7cd2 / 1.5, Math['max'](0x0, _0x48ef99 - 0xe), '#29A0BA'), _0x4096ce(0x0 + _0x26f7de / 1.5 - this['rPer'] * 0x2, _0x7e7cd2, Math['max'](0x0, _0x48ef99 - 38.5 + _0x7e7cd2 / 0x5), '#2B8CAA'), _0x4096ce(0x0 + _0x26f7de / 1.5 - this['rPer'] * 0x2, _0x7e7cd2, Math['max'](0x0, _0x48ef99 - 54.5 + _0x7e7cd2 / 0xb), '#28829E'), _0x4597c4['restore']();
                }
                break;
                case _0x4df451: {
                    if (this['specType'] == 0x0 || this['specType'] == 0x2 || this['specType'] == 0x3) {
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.3;
                        var _0x4bfdb7 = '',
                            _0x2cb6e0 = this['getSkinImageObj']('skins/pelican/' + this['speciesType'] + '/ability_pelican' + _0x4bfdb7 + '.png');
                        if (_0x2cb6e0) {
                            var _0x48ef99 = -this['rad'] * 1.5;
                            _0x4597c4['rotate'](this['angle']);
                            var _0x4b1daf = 0x0,
                                _0x5cceb0 = this['rad'],
                                _0x4e83bc = _0x48ef99,
                                _0x204c2d = _0x48ef99,
                                _0x2838b2 = 0.5,
                                _0x307704 = 0.5;
                            _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704 + _0x48ef99, _0x4e83bc, _0x204c2d);
                        }
                        _0x4597c4['restore']();
                    }
                    break;
                }
                case _0x2ddf94: {
                    if (this['specType'] == 0x0) {
                        _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4597c4['globalAlpha'] = 0x1 * _0x45db84;
                        var _0x2cb6e0 = this['getSkinImageObjForSeason']('skins/land/trex/' + this['speciesType'] + '/ability_trexBite.png', this['mopeSeasonID']);
                        if (_0x2cb6e0) {
                            var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                                _0x48ef99 = this['rad'] * 0.6;
                            _0x4597c4['rotate'](this['angle']);
                            var _0x4b1daf = 0x0,
                                _0x5cceb0 = this['rad'],
                                _0x4e83bc = _0x48ef99 * 2.5,
                                _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                                _0x2838b2 = 0.5,
                                _0x307704 = 0.95;
                            _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d), _0x4597c4['rotate'](Math['PI']);
                            var _0x4b1daf = 0x0,
                                _0x5cceb0 = this['rad'] * 0.5,
                                _0x4e83bc = _0x48ef99 * 2.5,
                                _0x204c2d = _0x48ef99 * 2.5 * _0x591609,
                                _0x2838b2 = 0.5,
                                _0x307704 = 0.95;
                            _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x5cceb0 + _0x204c2d * -_0x307704, _0x4e83bc, _0x204c2d);
                        }
                        var _0x2cb6e0 = this['getSkinImageObj']('skins/land/trex/' + this['speciesType'] + '/trex-head.png', this['mopeSeasonID']);
                        if (_0x2cb6e0) {
                            var _0x591609 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                                _0x48ef99 = this['rad'] * 1.5;
                            _0x4597c4['rotate'](_0x4c4686(0xb4));
                            var _0x4b1daf = 0x0,
                                _0x5cceb0 = this['rad'],
                                _0x4e83bc = _0x48ef99 * 0x2,
                                _0x204c2d = _0x48ef99 * 0x2 * _0x591609,
                                _0x2838b2 = 0.5,
                                _0x307704 = -1.25;
                            _0x4597c4['drawImage'](_0x2cb6e0, _0x4b1daf + _0x4e83bc * -_0x2838b2, _0x307704 * _0x48ef99, _0x4e83bc, _0x204c2d);
                        }
                        _0x4597c4['restore']();
                    }
                }
                break;
                case _0x2d677a: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#6D7471'), _0x4597c4['restore']();
                }
                break;
                case _0x2a2808: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#6D7471'), _0x4597c4['restore']();
                }
                break;
                case _0xaa167a: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#6D7471'), _0x4597c4['restore']();
                }
                break;
                case _0x5ab475: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#f2f2f2'), _0x4597c4['restore']();
                }
                break;
                case _0x38e3df: {
                    _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4));
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.8 * _0x45db84;
                    var _0x2cb6e0 = this['getSkinImageObj']('img/wave.png');
                    if (_0x2cb6e0) {
                        var _0x48ef99 = this['rad'];
                        _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99);
                    }
                    _0x4597c4['restore']();
                }
                break;
                case _0x1cd064: {
                    if (this['animalType'] !== undefined && this['animalType'] == _0x1b196d && this['speciesType'] == 0xcc) {
                        _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0.9 * _0x45db84;
                        var _0x298268 = 0x1,
                            _0x2cb6e0 = this['getSkinImageObjForSeason']('skins/land/hippo/204/roar.png', _0x298268);
                        if (_0x2cb6e0) {
                            var _0x48ef99 = this['rad'];
                            _0x4597c4['drawImage'](_0x2cb6e0, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99);
                        }
                        _0x4597c4['restore']();
                    } else {
                        _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'];
                        _0x4597c4['globalAlpha'] = 0.2 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#746B3E'), _0x4597c4['restore']();
                    }
                }
                break;
                case _0x49d246: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.5 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#62C5FF'), _0x4597c4['globalAlpha'] = 0x1 * _0x45db84, _0x4597c4['strokeStyle'] = '#62C5FF', _0x4597c4['beginPath']();
                    var _0x314c16 = this['rad'] * -0.7,
                        _0x3759f3 = -0x5,
                        _0x43a6a6 = 0xa;
                    _0x4597c4['moveTo'](_0x314c16, _0x3759f3), _0x4597c4['lineTo'](_0x314c16 - _0x43a6a6 * 0.4, _0x3759f3 + _0x43a6a6), _0x4597c4['lineTo'](_0x314c16 + _0x43a6a6 * 0.4, _0x3759f3 + _0x43a6a6 * 0.7), _0x4597c4['lineTo'](_0x314c16 + _0x43a6a6 * 0.4 * 0.5, _0x3759f3 + _0x43a6a6 * 0x2), _0x4597c4['lineWidth'] = 0x3, _0x4597c4['stroke'](), _0x4597c4['restore']();
                }
                break;
                case _0x20ea41: {
                    if (_0x9ffe4d || _0x3aa021 != 0x3) {
                        var _0x2be09e = this['getSkinImageObj']('img/whirlpool2.png');
                        if (_0x2be09e) {
                            var _0x48ef99 = this['rad'];
                            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                        } else _0x4096ce(0x0, 0x0, this['rad'], '#2D93B0');
                    } else {
                        _0x4597c4['save']();
                        var _0x48ef99 = Math['max'](0x0, this['rad'] - 0x1e),
                            _0x45db84 = _0x4597c4['globalAlpha'],
                            _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x54d4e0 = 2.2,
                            _0x26f7de = 10.5 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                            _0x7e7cd2 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                        _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0 + _0x26f7de + 0x1e / 0x2 - this['rPer'], 0x0 + _0x7e7cd2 + 0x28 / 0x2 - this['rPer'], Math['max'](0x0, _0x48ef99 - 0x6), 'white'), _0x4597c4['globalAlpha'] = 0.1 * _0x45db84, _0x4096ce(0x0 + _0x26f7de + 0x1e / 0x2 - this['rPer'], 0x0 + _0x7e7cd2 / 0x2 - this['rPer'], Math['max'](0x0, _0x48ef99 - 0x6), '#2D93B0'), _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0 + _0x26f7de / 1.5 - this['rPer'] * 0x2, _0x7e7cd2, Math['max'](0x0, _0x48ef99 - 54.5 + _0x7e7cd2 / 0xb), '#28829E'), _0x4597c4['restore'](), _0x4597c4['save']();
                        var _0x45db84 = _0x4597c4['globalAlpha'],
                            _0x48ef99 = Math['max'](0x0, this['rad'] - 0x1e),
                            _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x54d4e0 = 3.2,
                            _0x26f7de = 0x32 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                            _0x7e7cd2 = 0x32 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                        _0x4597c4['globalAlpha'] = 0.05 * _0x45db84, _0x4096ce(0x0, 0x0, _0x48ef99, '#2CAAC4'), _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0 + _0x26f7de / 0x2 - this['rPer'], 0x0 + _0x7e7cd2 / 0x2 - this['rPer'], Math['max'](0x0, _0x48ef99 * 0.95), '#2D93B0'), _0x4597c4['globalAlpha'] = 0.25 * _0x45db84, _0x4096ce(0x0 + _0x26f7de / 4.5 + this['rPer'], 0x1 + _0x7e7cd2 / 1.5, Math['max'](0x0, _0x48ef99 * 0.85), '#28829E'), _0x4597c4['restore']();
                        var _0x2be09e = this['getSkinImageObj']('img/whirlpool2.png');
                        if (_0x2be09e) {
                            var _0x48ef99 = this['rad'] - 0x1e,
                                _0x17ecd2 = 0x5 / 0x3c,
                                _0x497988 = 0x3e8 / _0x17ecd2,
                                _0x591609 = (_0x476319 - this['spawnTime']) % _0x497988 / _0x497988,
                                _0x728eaf = _0x591609 * 0x2 * Math['PI'];
                            _0x17ecd2 = 0x8 / 0x3c, _0x497988 = 0x3e8 / _0x17ecd2, _0x591609 = (_0x476319 - this['spawnTime']) % _0x497988 / _0x497988, rotation2 = _0x591609 * 0x2 * Math['PI'], _0x4597c4['save'](), _0x4597c4['rotate'](_0x728eaf);
                            var _0x45db84 = _0x4597c4['globalAlpha'];
                            _0x4597c4['globalAlpha'] = 0.1;
                            var _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                                _0x54d4e0 = 2.2,
                                _0x26f7de = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                                _0x7e7cd2 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                            _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de + 0x1e / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.1, _0x4597c4['rotate'](rotation2 * 0.8), _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](rotation2), _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de - 0x14 / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](rotation2), _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](_0x728eaf), _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](_0x728eaf), _0x4597c4['drawImage'](_0x2be09e, -_0x48ef99 - _0x26f7de / 2.2, -_0x48ef99, 0x2 * _0x48ef99, 0x2 * _0x48ef99), _0x4597c4['restore']();
                        }
                    }
                }
                break;
                case _0xe6c462: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.5 * _0x45db84;
                    var _0x48ef99 = Math['max'](0x0, this['rad'] - 0x1e),
                        _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 2.2,
                        _0x26f7de = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e),
                        _0x7e7cd2 = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e);
                    _0x4597c4['globalAlpha'] = 0.4 * _0x45db84, _0x4096ce(0x0, 0x0, _0x48ef99, '#2CAAC4'), _0x4597c4['globalAlpha'] = 0.7 * _0x45db84, !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 + _0x26f7de / 0x2 - this['rPer'], 0x0 + _0x7e7cd2 / 0x2 - this['rPer'], Math['max'](0x0, _0x48ef99 - 0x6), '#2D93B0'), _0x4096ce(0x0 + _0x26f7de / 4.5 + this['rPer'], 0x1 + _0x7e7cd2 / 1.5, Math['max'](0x0, _0x48ef99 - 0xe), '#29A0BA'), _0x4096ce(0x0 + _0x26f7de / 1.5 - this['rPer'] * 0x2, _0x7e7cd2, Math['max'](0x0, _0x48ef99 - 38.5 + _0x7e7cd2 / 0x5), '#2B8CAA'), _0x4096ce(0x0 + _0x26f7de / 1.5 - this['rPer'] * 0x2, _0x7e7cd2, Math['max'](0x0, _0x48ef99 - 54.5 + _0x7e7cd2 / 0xb), '#28829E'), _0x4597c4['restore']();
                }
                break;
                case _0x14e881: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                    var _0x1affdc = 0x0,
                        _0x1b5a2e = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x54d4e0 = 0x6,
                        _0xca52a7 = 1.5;
                    _0x1affdc = _0xca52a7 * Math['sin'](0x2 * Math['PI'] / _0x54d4e0 * _0x1b5a2e), _0x4597c4['globalAlpha'] = 0.7 * _0x45db84;
                    var _0x38604c = 0x4;
                    _0x4597c4['fillStyle'] = 'black', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = 'black', _0x4597c4['globalAlpha'] = 0.5 * _0x45db84, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x38604c + _0x1affdc), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x1affdc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x1affdc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x1affdc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x1affdc), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath']()), _0x4597c4['restore']();
                }
                break;
                case _0x4dbf14: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.25 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#9F8641'), _0x4597c4['restore']();
                }
                break;
                case _0x29c6b2: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.25 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], '#785228'), _0x4597c4['restore']();
                }
                break;
                default: {
                    _0x4597c4['save']();
                    var _0x45db84 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0.15 * _0x45db84, _0x4096ce(0x0, 0x0, this['rad'], 'black'), _0x4597c4['restore']();
                }
                break;
            }
        }, _0x23ae7e['prototype']['setObjTypes'] = function(_0x56a32b, _0x4906bd) {
            this['oType'] = _0x56a32b, this['abilityType'] = _0x4906bd;
        }, _0x23ae7e['prototype']['skinThemeID'] = 0x0, _0x23ae7e['prototype']['mopeSeasonID'] = 0x0, _0x23ae7e['prototype']['readCustomData_onNewlyVisible'] = function(_0xc18de1) {
            this['specType'] = _0xc18de1['readUInt8'](), this['specType2'] = _0xc18de1['readUInt8'](), this['skinThemeID'] = _0xc18de1['readUInt8'](), this['mopeSeasonID'] = _0xc18de1['readUInt8'](), (this['abilityType'] == _0x286b26 || this['abilityType'] == _0x2a2808 || this['abilityType'] == _0x38e3df || this['abilityType'] == _0x1cd064 || this['abilityType'] == _0x29c6b2) && (this['rad'] = this['oRad'] = 0x0);
        }, _0x23ae7e['prototype']['updateTimer'] = function() {
            this['timer'] = Math['round'](this['timer']);
            var _0x28ec7a = this['timer'];
            this['setTimer'](_0x28ec7a);
        }, _0x23ae7e['prototype']['timerTxt'] = null, _0x23ae7e['prototype']['setTimer'] = function(_0x2bb961) {
            var _0x3db51e = '' + _0x2bb961;
            null == this['timerTxt'] ? (this['timerTxt'] = new _0x16040f(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x3db51e)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0x3db51e));
        };

        function _0x23ae7e() {
            _0x23ae7e['superClass']['call'](this, _0x4fbd16), _0x23ae7e['prototype']['easeAngleChanges'] = ![], this['abilityType'] == _0x2d6ab6 && (this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![]);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x23ae7e, _0x4fbd16);
        var _0x498438 = _0x1a80d9,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x1a80d9['prototype']['customDraw'] = function(_0x138cce) {
            _0x4597c4['save']();
            var _0x5dfd24 = _0x4597c4['globalAlpha'];
            _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.05 * _0x5dfd24, _0x4096ce(0x0, 0x0, this['rad'], '#E4E7C8'), _0x4597c4['globalAlpha'] = 0x1 * _0x5dfd24;
            var _0x4a4039 = 'skins/land/elephant/' + this['speciesType'];
            this['speciesType'] == 0x0 && (_0x4a4039 += '/' + this['speciesSubType']);
            var _0x5567d6 = this['getSkinImageObj'](_0x4a4039 + '/ability_elephantTrunkSmack.png');
            if (_0x5567d6) {
                var _0x189c66 = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                    _0x55381e = -(-0.5 + _0x189c66) * _0x197fc1,
                    _0x3ddec7 = this['rad'] * 0.6;
                _0x4597c4['save'](), _0x4597c4['rotate'](_0x55381e);
                var _0x2ddfc3 = 0x0,
                    _0x124ad6 = this['rad'],
                    _0x4c8274 = _0x3ddec7 * 0x2 * 0.7,
                    _0x3cae7b = _0x3ddec7 * 0x2,
                    _0x46b7ec = 0.75,
                    _0x4f2f04 = 0.95;
                _0x4597c4['drawImage'](_0x5567d6, _0x2ddfc3 + _0x4c8274 * -_0x46b7ec, _0x124ad6 + _0x3cae7b * -_0x4f2f04, _0x4c8274, _0x3cae7b), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        };

        function _0x1a80d9() {
            _0x1a80d9['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1a80d9, _0x4fbd16, _0x518c9f);
        var _0x498438 = _0x565ccc,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x565ccc['prototype']['customDraw'] = function(_0x3e7b0f) {
            var _0x1d0d43 = _0x4597c4['globalAlpha'];
            _0x4597c4['save']();
            var _0x190474 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x3935a0 = 1.5,
                _0x5136c0 = 0x1,
                _0x2695bd = _0x5136c0 * Math['sin'](0x2 * Math['PI'] / _0x3935a0 * _0x190474),
                _0x38409c = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] *= 0.6 * _0x2695bd, _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.15 * _0x1d0d43;
            if (this['specType2'] == 0x0 && this['aniSpecies']) _0x4096ce(0x0, 0x0, this['rad'], '#96661C');
            else _0x4096ce(0x0, 0x0, this['rad'], '#e0dfde');
            _0x4597c4['restore'](), _0x4597c4['save']();
            var _0x42caa7 = 'skins/';
            this['animalType'] === 0x24 ? _0x42caa7 += 'arctic/bear/' + this['aniSpecies'] + '/slash.png' : _0x42caa7 += 'land/bear/' + this['speciesType'] + '/' + this['speciesSubType'] + '/ability.png';
            var _0x1f7923 = this['getSkinImageObj'](_0x42caa7);
            if (_0x1f7923) {
                var _0x242ed6 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                    _0x592a73 = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                    _0x555e8e = -(-0.5 + _0x592a73) * _0x197fc1,
                    _0x5efcd6 = this['angle'];
                _0x4597c4['rotate'](this['angle'] + _0x555e8e * (this['specType'] == 0x0 ? 0x1 : -0x1));
                var _0x23750e = -this['rad'] * 0x1,
                    _0x9321ba = 0x0,
                    _0x241740 = this['rad'],
                    _0x467fdd = _0x23750e * 0x2,
                    _0x48fc8b = _0x23750e * 0x2 * _0x242ed6,
                    _0x8a24e2 = 0.5,
                    _0x1494a7 = 0.8;
                _0x4597c4['drawImage'](_0x1f7923, _0x9321ba + _0x467fdd * -_0x8a24e2, _0x241740 + _0x48fc8b * -_0x1494a7 + _0x23750e, _0x467fdd, _0x48fc8b);
            }
            _0x4597c4['restore']();
        }, _0x565ccc['prototype']['getSkinImageObj'] = function(_0x490601) {
            var _0x1a3c85 = this['mopeSeasonID'];
            return this['animalType'] === 0x24 && (_0x1a3c85 = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID']), this['getSkinImageObjForSeason'](_0x490601, _0x1a3c85);
        }, _0x565ccc['prototype']['readCustomData_onNewlyVisible'] = function(_0x1e0f2f) {
            _0x565ccc['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1e0f2f), this['aniSpecies'] = _0x1e0f2f['readUInt8']();
        };

        function _0x565ccc() {
            _0x565ccc['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x565ccc, _0x4fbd16, _0xbb4e7f);
        var _0x498438 = _0x5502af,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x5502af['prototype']['animalType'] = _0x19eca4, _0x5502af['prototype']['animalSpecies'] = 0x0, _0x5502af['prototype']['animalSubSpecies'] = 0x0, _0x5502af['prototype']['nickName'] = '', _0x5502af['prototype']['skinImgName'] = null, _0x5502af['prototype']['skinNotLoadedColor'] = '#75ce67', _0x5502af['prototype']['flag_fullAlpha'] = ![], _0x5502af['prototype']['flag_lowWat'] = ![], _0x5502af['prototype']['flag_tailBitten'] = ![], _0x5502af['prototype']['flag_underWater'] = ![], _0x5502af['prototype']['flag_eff_stunned'] = ![], _0x5502af['prototype']['flag_eff_frozen'] = ![], _0x5502af['prototype']['flag_eff_virusInfection'] = ![], _0x5502af['prototype']['flag_usingAbility'] = ![], _0x5502af['prototype']['flag_eff_invincible'] = ![], _0x5502af['prototype']['flag_eff_healing'] = _0x5502af['prototype']['flag_eff_poison'] = _0x5502af['prototype']['flag_eff_bleeding'] = ![], _0x5502af['prototype']['flag_eff_hot'] = ![], _0x5502af['prototype']['flag_eff_aloeveraHealing'] = ![], _0x5502af['prototype']['flag_iceSliding'] = ![], _0x5502af['prototype']['underwaterA'] = 0x0, 0x4, _0x5502af['prototype']['nickNameA'] = 0x0, _0x5502af['prototype']['bleedingA'] = 0x0, _0x5502af['prototype']['stunA'] = 0x0, _0x5502af['prototype']['frozenEffA'] = _0x5502af['prototype']['onFireEffA'] = _0x5502af['prototype']['effA_healing'] = _0x5502af['prototype']['effA_hot'] = 0x0, _0x5502af['prototype']['effA_aloeveraHealing'] = _0x5502af['prototype']['effA_poison'] = _0x5502af['prototype']['effA_bleeding'] = _0x5502af['prototype']['effA_stunk'] = 0x0, _0x5502af['prototype']['effA_constricted'] = _0x5502af['prototype']['effA_slimed'] = _0x5502af['prototype']['effA_webStuck'] = 0x0, _0x5502af['prototype']['effA_speared'] = 0x0, _0x5502af['prototype']['effA_dirtStuck'] = 0x0, _0x5502af['prototype']['nameA'] = 0x0, _0x5502af['prototype']['loadedSkinImg'] = null, _0x5502af['prototype']['outlineW'] = null, _0x5502af['prototype']['teamID'] = 0x0, _0x5502af['prototype']['wins1v1'] = 0x0, _0x5502af['prototype']['birdNoAnimationFlyWingAngle'] = -0.2, _0x5502af['prototype']['getNameSize'] = function() {
            return 0xa;
        }, _0x5502af['prototype']['setNick'] = function(_0x1a8146) {
            _0x1a8146 = _0x1230b6(_0x1a8146), this['nickName'] = _0x1a8146, null == this['nickTXT'] ? (this['nickTXT'] = new _0x16040f(this['getNameSize'](), 'white'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['multiLine'] = !![], this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
        }, _0x5502af['prototype']['getOutlineColor'] = function() {
            var _0x1d23a9 = this['curBiome'];
            if (this['id'] > 0x0) {
                var _0x5e1500 = _0x4b4e0c[_0x59b0bc];
                if (this['alwaysPlainOutline']) return _0x39b6af;
                var _0x5dd119 = _0x524bb8 != _0x3a12fc || _0x5e1500 && _0x5e1500['teamID'] != this['teamID'] && this['teamID'] != 0x0;
                if (_0x5dd119) {
                    if (this['isEdibleOutlined']()) return _0x4155ab;
                    if (_0x261704[this['animalType'] - 0x1] > 0x0 && this['id'] != _0x59b0bc) return _0x514a86;
                }
                if (this['flag_inWater']) _0x1d23a9 = _0x1085db;
                if (_0x346e9e != null && this['id'] == _0x346e9e['id'] && !_0x9ffe4d) return 'cyan';
            }
            return _0x46d432(_0x1d23a9);
        }, _0x5502af['prototype']['drawEyeAtPos'] = function(_0x53fb05, _0x37d9b4) {
            var _0x1bbddc = 4.5;
            _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x53fb05, _0x37d9b4, _0x1bbddc, 0x0, Math['PI'] * 0x2), _0x4597c4['fillStyle'] = 'black', _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = 'white';
            var _0x43c531 = _0x53fb05 - 0x2,
                _0x50f5e6 = _0x37d9b4 - 0x1;
            _0x4597c4['arc'](_0x43c531, _0x50f5e6, _0x1bbddc * 0.22, 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
        }, _0x5502af['prototype']['animalInfo'] = function() {
            var _0x344b4d = {};
            switch (this['animalType']) {
                case _0x3fb2b0:
                    _0x344b4d['aniName'] = 'Snail', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'You\'re a super slow snail!', _0x344b4d['aniCol'] = '#fcc02b', _0x344b4d['skinName'] = 'snail';
                    break;
                case _0x19eca4:
                    _0x344b4d['aniName'] = 'Mouse', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'You\'re a tiny mouse, eat food to grow!', _0x344b4d['aniCol'] = '#9BA9B9', _0x344b4d['skinName'] = 'mouse';
                    break;
                case _0x290562:
                    _0x344b4d['aniName'] = 'Rabbit', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to RABBIT! \x0aPress W to burrow a hole to hide in!', _0x344b4d['aniCol'] = '#AA937E', _0x344b4d['skinName'] = 'rabbit';
                    break;
                case _0xceb64c:
                    _0x344b4d['aniName'] = 'Pig', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to PIG!\x0a Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)', _0x344b4d['aniCol'] = '#DD6BD4', _0x344b4d['skinName'] = 'pig';
                    break;
                case _0x3f7358:
                    _0x344b4d['aniName'] = 'Fox', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to FOX! ,\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x344b4d['aniCol'] = '#FF9D43', _0x344b4d['skinName'] = 'fox';
                    break;
                case _0x474e8d:
                    _0x344b4d['aniName'] = 'Deer', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to DEER! \x0aPress W to dig up food! \x0aDig in mud for better food!\x0a Hint:Check water areas for new food sources!', _0x344b4d['aniCol'] = '#C4773E', _0x344b4d['skinName'] = 'deer';
                    break;
                case _0xa5c3f5:
                    _0x344b4d['aniName'] = 'Mole', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to MOLE!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x344b4d['aniCol'] = '#4C4A45', _0x344b4d['skinName'] = 'mole';
                    break;
                case _0x5ae0eb:
                    _0x344b4d['aniName'] = 'Zebra', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ZEBRA! \x0aPress W to kick side ways!', _0x344b4d['aniCol'] = '#FFFFFF', _0x344b4d['skinName'] = 'zebra';
                    break;
                case _0x178278:
                    _0x344b4d['aniName'] = 'Lion', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to LION!\x0a Press W to release a mighty ROAR (Rawr!)!', _0x344b4d['aniCol'] = '#f8c923', _0x344b4d['skinName'] = 'lion';
                    break;
                case _0x59b412:
                    _0x344b4d['aniName'] = 'Bear', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x344b4d['aniCol'] = '#99591C', _0x344b4d['skinName'] = 'bear';
                    break;
                case _0x590076:
                    _0x344b4d['aniName'] = 'Croc', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to CROCODILE!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0x344b4d['aniCol'] = '#30F51C', _0x344b4d['skinName'] = 'croc';
                    break;
                case _0x1b196d:
                    _0x344b4d['aniName'] = 'Hippo', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to HIPPO!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x344b4d['aniCol'] = '#945A99', _0x344b4d['skinName'] = 'hippo';
                    break;
                case _0x3f35f1:
                    _0x344b4d['aniName'] = 'Rhino', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to RHINO!\x0a Press W to CHARGE with your mighty horn!', _0x344b4d['aniCol'] = '#94a3a9', _0x344b4d['skinName'] = 'rhino';
                    break;
                case _0x19fc30:
                    _0x344b4d['aniName'] = 'Shrimp', _0x344b4d['aniDesc'] = '', _0x344b4d['aniCol'] = '#f88e37', _0x344b4d['skinName'] = 'shrimp', _0x344b4d['upgradeText'] = 'You\'re a tiny shrimp, eat food to grow bigger!';
                    break;
                case _0x1a22d5:
                    _0x344b4d['aniName'] = 'Trout', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to TROUT!\x0aHint: Hold Left-click to RUN! (Uses extra water)', _0x344b4d['aniCol'] = '#ac8686', _0x344b4d['skinName'] = 'trout';
                    break;
                case _0x172231:
                    _0x344b4d['aniName'] = 'Crab', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to CRAB!\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x344b4d['aniCol'] = '#bf2408', _0x344b4d['skinName'] = 'crab';
                    break;
                case _0x4ef33a:
                    _0x344b4d['aniName'] = 'Squid', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to SQUID!\x0a Squids can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x344b4d['aniCol'] = '#40dda4', _0x344b4d['skinName'] = 'squid';
                    break;
                case _0x2e6e95:
                    _0x344b4d['aniName'] = 'Shark', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to SHARK!\x0a A vicious predator of the oceans!', _0x344b4d['aniCol'] = '#999fc6', _0x344b4d['skinName'] = 'shark';
                    break;
                case _0x1fff86:
                    _0x344b4d['aniName'] = 'Sea-horse', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to SEA HORSE!\x0a An agile hunter!', _0x344b4d['aniCol'] = '#73BE2F', _0x344b4d['skinName'] = 'seahorse';
                    break;
                case _0x4a5a29:
                    _0x344b4d['aniName'] = 'Jellyfish', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to JELLYFISH!\x0a A slowly-turning animal that can grow quite large!', _0x344b4d['aniCol'] = '#FDB9BA', _0x344b4d['skinName'] = 'jellyfish';
                    break;
                case _0x23c342:
                    _0x344b4d['aniName'] = 'Turtle', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to TURTLE!\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x344b4d['aniCol'] = '#502E1A', _0x344b4d['skinName'] = 'turtle';
                    break;
                case _0x31158f:
                    _0x344b4d['aniName'] = 'Stingray', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to STINGRAY!\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x344b4d['aniCol'] = '#164336', _0x344b4d['skinName'] = 'stingray';
                    break;
                case _0x9038c6:
                    _0x344b4d['aniName'] = 'The Kraken', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to THE KRAKEN!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x344b4d['aniCol'] = '#64a034', _0x344b4d['skinName'] = 'kraken';
                    break;
                case _0x1dbdcd:
                    _0x344b4d['aniName'] = 'Pufferfish', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to PUFFERFISH!\x0a (Hold W to inflate- become spiky, and dangerous to touch!)', _0x344b4d['aniCol'] = '#6C5C2C', _0x344b4d['skinName'] = 'pufferfish';
                    break;
                case _0x26d386:
                    _0x344b4d['aniName'] = 'Killer Whale', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Killer Whale! \x0aWhales blow out water when diving! (And sometimes other loot!)', _0x344b4d['aniCol'] = '#141414', _0x344b4d['skinName'] = 'killerwhale';
                    break;
                case _0x9918f2:
                    _0x344b4d['aniName'] = 'Swordfish', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a (Press W to rush with your sharp nose!)', _0x344b4d['aniCol'] = '#689CD7', _0x344b4d['skinName'] = 'swordfish';
                    break;
                case _0x248ce4:
                    _0x344b4d['aniName'] = 'Gorilla', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Gorillas are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x344b4d['aniCol'] = '#323232', _0x344b4d['skinName'] = 'gorilla';
                    break;
                case _0x283bbc:
                    _0x344b4d['aniName'] = 'Octopus', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Octopus!\x0aHold W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x344b4d['aniCol'] = '#ff8340', _0x344b4d['skinName'] = 'octopus';
                    break;
                case _0x31f937:
                    _0x344b4d['aniName'] = 'Dragon', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x344b4d['aniCol'] = '#22FF8A', _0x344b4d['skinName'] = 'dragon';
                    break;
                case _0x1de825:
                    _0x344b4d['aniName'] = 'Black Dragon', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x344b4d['aniCol'] = 'black', _0x344b4d['skinName'] = 'blackdragon';
                    break;
                case _0x471528:
                    _0x344b4d['aniName'] = 'Giant Spider', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Place web around the game to catch prey!', _0x344b4d['aniCol'] = 'black', _0x344b4d['skinName'] = 'giantSpider';
                    break;
                case _0x45a408:
                    _0x344b4d['aniName'] = 'Cobra', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x344b4d['aniCol'] = 'black', _0x344b4d['skinName'] = 'cobra';
                    break;
                case _0x2982a0:
                    _0x344b4d['aniName'] = 'Boa Constrictor', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Coil and suffocate other animals!', _0x344b4d['aniCol'] = 'black', _0x344b4d['skinName'] = 'boaConstrictor';
                    break;
                case _0x366af5:
                    _0x344b4d['aniName'] = 'T-REX', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x344b4d['aniCol'] = '#862A2A', _0x344b4d['skinName'] = 'trex';
                    break;
                case _0xbdc345:
                    _0x344b4d['aniName'] = 'Giraffe', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Giraffe!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x344b4d['aniCol'] = '#E9BD23', _0x344b4d['skinName'] = 'giraffe';
                    break;
                case _0x329081:
                    _0x344b4d['aniName'] = 'Eagle', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Eagle!\x0aEagles can fly up other animals in the air! !\x0a', _0x344b4d['aniCol'] = '#5b400d', _0x344b4d['skinName'] = 'eagle';
                    break;
                case _0x38ffba:
                    _0x344b4d['aniName'] = 'Arctic Fox', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x344b4d['aniCol'] = '#CFCFCF', _0x344b4d['skinName'] = 'arctic/arcticfox';
                    break;
                case _0x2a2b27:
                    _0x344b4d['aniName'] = 'Arctic Hare', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a \x0aPress W to burrow a hole to hide in!', _0x344b4d['aniCol'] = '#D5D5D5', _0x344b4d['skinName'] = 'arctic/arctichare';
                    break;
                case _0x36fcdc:
                    _0x344b4d['aniName'] = 'The Yeti!', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, release W to freeeeeze!', _0x344b4d['aniCol'] = '#839eb5', _0x344b4d['skinName'] = 'arctic/yeti';
                    break;
                case _0x3d3994:
                    _0x344b4d['aniName'] = 'Chipmunk', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = '', _0x344b4d['aniCol'] = '#A77C30', _0x344b4d['skinName'] = 'arctic/chipmunk';
                    break;
                case _0x33ea21:
                    _0x344b4d['aniName'] = 'Muskox', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x344b4d['aniCol'] = '#231f18', _0x344b4d['skinName'] = 'arctic/muskox';
                    break;
                case _0x3bf4c4:
                    _0x344b4d['aniName'] = 'Penguin', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x344b4d['aniCol'] = '#FFFFFF', _0x344b4d['skinName'] = 'arctic/penguin';
                    break;
                case _0x2f4199:
                    _0x344b4d['aniName'] = 'Polar Bear', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x344b4d['aniCol'] = '#e4e4e4', _0x344b4d['skinName'] = 'arctic/bear/bear';
                    break;
                case _0x51d33b:
                    _0x344b4d['aniName'] = 'Seal', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Seals can slide on ice (Hold W) + can climb hills (rocks too!)', _0x344b4d['aniCol'] = '#cfcfcf', _0x344b4d['skinName'] = 'arctic/seal';
                    break;
                case _0x538204:
                    _0x344b4d['aniName'] = 'Snow leopard', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to get a speed boost! (Every 8 seconds)!', _0x344b4d['aniCol'] = '#cfcfcf', _0x344b4d['skinName'] = 'arctic/snowleopard';
                    break;
                case _0x44a111:
                    _0x344b4d['aniName'] = 'Walrus', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x344b4d['aniCol'] = '#633838', _0x344b4d['skinName'] = 'arctic/walrus';
                    break;
                case _0x538056:
                    _0x344b4d['aniName'] = 'Reindeer', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x344b4d['aniCol'] = '#a68976', _0x344b4d['skinName'] = 'arctic/reindeer';
                    break;
                case _0x3d9765:
                    _0x344b4d['aniName'] = 'Wolf', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x344b4d['aniCol'] = '#6B6B6B', _0x344b4d['skinName'] = 'arctic/wolf';
                    break;
                case _0x55fd3d:
                    _0x344b4d['aniName'] = 'Wolverine', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x344b4d['aniCol'] = '#843A0F', _0x344b4d['skinName'] = 'arctic/wolverine';
                    break;
                case _0x5ed897:
                    _0x344b4d['aniName'] = 'Mammoth', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x344b4d['aniCol'] = '#9d4717', _0x344b4d['skinName'] = 'arctic/mammoth';
                    break;
                case _0x1bb5dc:
                    _0x344b4d['aniName'] = 'Donkey', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Press W to Kick any animal behind you', _0x344b4d['aniCol'] = '#8c7c64', _0x344b4d['skinName'] = 'donkey';
                    break;
                case _0x3ccf08:
                    _0x344b4d['aniName'] = 'Sabertooth Tiger', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Sabertooth Tiger!\x0aSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!', _0x344b4d['aniCol'] = '#945A99', _0x344b4d['skinName'] = 'sabertoothtiger';
                    break;
                case _0x1d892b:
                    _0x344b4d['aniName'] = 'Elephant', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to ' + _0x344b4d['aniName'] + '!\x0a Use your long trunk to attack and eat food!', _0x344b4d['aniCol'] = '#945A99', _0x344b4d['skinName'] = 'elephant';
                    break;
                case _0x52a058:
                    _0x344b4d['aniName'] = 'Blue Whale', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Blue Whale!\x0a Smash with your powerful tail!', _0x344b4d['aniCol'] = '#945A99', _0x344b4d['skinName'] = 'bluewhale';
                    break;
                case _0x40e6df:
                    _0x344b4d['aniName'] = 'Hedgehog', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Hedgehog!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x344b4d['aniCol'] = '#5b400d', _0x344b4d['skinName'] = 'hedgehog';
                    break;
                case _0x38e413:
                    _0x344b4d['aniName'] = 'King Crab', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to a KING CRAB!', _0x344b4d['aniCol'] = '#971f0e', _0x344b4d['skinName'] = 'kingcrab';
                    break;
                case _0x442c1e:
                    _0x344b4d['aniName'] = 'Lemming', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = '', _0x344b4d['aniCol'] = '#A77C30', _0x344b4d['skinName'] = 'arctic/lemming';
                    break;
                case _0x25446a:
                    _0x344b4d['aniName'] = 'Frog', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Frog!!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'frog/frog';
                    break;
                case _0x123d4e:
                    _0x344b4d['aniName'] = 'Ostrich', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Ostrich! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'ostrich/ostrich';
                    break;
                case _0xd787b4:
                    _0x344b4d['aniName'] = 'Pelican', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Pelican! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'pelican/pelican';
                    break;
                case _0x24c6d5:
                    _0x344b4d['aniName'] = 'Falcon', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Falcon! \x0aFly, and do a powerful dive attack! Aim it well.', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'falcon/falcon';
                    break;
                case _0x4657a6:
                    _0x344b4d['aniName'] = 'Snowy Owl', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Snowy Owl!\x0a Aim the crosshair, \x0a right click/W when it\'s on top of prey, to attack!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'snowyowl/snowyowl';
                    break;
                case _0x4d08a1:
                    _0x344b4d['aniName'] = 'Baby Ostrich', _0x344b4d['aniDesc'] = '', _0x344b4d['upgradeText'] = 'UPGRADED to Baby Ostrich!!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'ostrich/ostrich-baby';
                    break;
                case _0x48a3f9:
                    _0x344b4d['aniName'] = 'Phoenix', _0x344b4d['upgradeText'] = 'UPGRADED to Phoenix!\x0aCreate powerful fire tornados to burn your enemies alive!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'phoenix/phoenix';
                    break;
                case _0x346859:
                    _0x344b4d['aniName'] = 'Sea Monster', _0x344b4d['upgradeText'] = 'UPGRADED to Sea Monster!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'seamonster';
                    break;
                case _0x1fb7c3:
                    _0x344b4d['aniName'] = 'Land Monster', _0x344b4d['upgradeText'] = 'UPGRADED to Land Monster!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'landmonster';
                    break;
                case _0xdd7007:
                    _0x344b4d['aniName'] = 'Ice Monster', _0x344b4d['upgradeText'] = 'UPGRADED to Ice Monster!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'icemonster';
                    break;
                case _0x19d925:
                    _0x344b4d['aniName'] = 'Dino Monster', _0x344b4d['upgradeText'] = 'UPGRADED to Dino Monster!', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'dinomonster';
                    break;
                case _0x1f01ec:
                    _0x344b4d['aniName'] = 'Pigeon', _0x344b4d['upgradeText'] = 'UPGRADED to Pigeon!\x0aHold right click (or W) to fly!\x0a', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'pigeon/pigeon';
                    break;
                case _0x4927bb:
                    _0x344b4d['aniName'] = 'Toucan', _0x344b4d['upgradeText'] = 'UPGRADED to Toucan!\x0aHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x344b4d['aniCol'] = '#FF9000', _0x344b4d['skinName'] = 'toucan/toucan';
                    break;
                default:
                    _0x344b4d['aniName'] = '(Animal)', _0x344b4d['aniDesc'] = '', _0x344b4d['aniCol'] = '#000000', _0x344b4d['upgradeText'] = 'UPGRADED!';
            }
            return _0x344b4d;
        }, _0x5502af['prototype']['loadAnimalSkinImg'] = function() {
            var _0x3b068d = this['getSkinName']();
            this['loadedSkinImg'] = null, _0x3b068d && !_0x1b2a4b && (this['loadedSkinImg'] = this['getSkinImageObj']('skins/' + _0x3b068d + '.png'));
        }, _0x5502af['prototype']['loadAnimalSkinImgAsync'] = async function() {
            var _0x55a979 = this['getSkinName']();
            this['loadedSkinImg'] = await this['getSkinImageObjAsync']('skins/' + _0x55a979 + '.png');
        }, _0x5502af['prototype']['getIdealOpacity'] = function() {
            return this['flag_usingDiveAbility'] || this['flag_underWater'] || this['flag_usingAbility'] && (this['animalType'] == _0xa5c3f5 || this['animalType'] == _0x283bbc || this['animalType'] == _0x36fcdc) ? 0x0 : 0x1;
        }, _0x5502af['prototype']['isAnimalInside1v1Arena'] = function() {
            if (_0x1f908c != null && _0x9ffe4d) {
                if (_0x1f908c['p1ID'] == this['id'] || _0x1f908c['p2ID'] == this['id']) return !![];
            } else {
                if (_0x543dfe[this['id']] || _0x543dfe[_0x59b0bc] && _0x59b0bc == this['id']) return !![];
            }
            return ![];
        }, _0x5502af['prototype']['setStealth'] = function() {
            if (this['isAnimalInside1v1Arena']() || this['flag_isInArena']) this['idealOp'] = 0.6;
            else(this['flag_stealth'] || this['flag_inHidingHole']) && (this['idealOp'] = 0.2);
        }, _0x5502af['prototype']['setOpacityForFlyingAnimals'] = function(_0x3bbdb3) {
            if (this['gabbedByAniID'] == this['id'] || this['grabbedAniID'] == this['id']) return;
            this['id'] != _0x59b0bc && (this['idealOp'] = 0.6);
        }, _0x5502af['prototype']['getImageDataKey'] = function() {
            return this['animalType'] + '__' + this['animalSpecies'] + '__' + this['animalSubSpecies'] + '__' + this['animalPremiumSkin'] + '__' + this['mopeSeasonID'] + '__' + this['skinThemeID'];
        };
        const _0x149c3b = {},
            _0x355bae = 'cached_animal_image_data_keys',
            _0x1d9a6b = () => {
                if (_0x172d37) {
                    const _0x9ecf92 = localStorage['getItem'](_0x355bae);
                    console['error']('KEYS:', _0x9ecf92), _0x9ecf92 && JSON['parse'](_0x9ecf92)['forEach'](_0x5e788d => {
                        _0x149c3b[_0x5e788d] = localStorage['getItem'](_0x5e788d);
                    });
                }
            };
        _0x5502af['prototype']['getUpgradeImagePath'] = function() {
            let _0x2116a0 = this['animalInfo']()['skinName'],
                _0x29e86c = '';
            if (!_0x2116a0 || _0x2116a0['toLowerCase']()['includes']('scorpion') || this['animalSpecies'] == 0xc8) _0x29e86c = this['getSkinImagePath']('skins/' + this['getSkinName']()) + '.png';
            else _0x29e86c = this['getSkinImagePath']('skins/' + _0x2116a0 + '.png');
            return _0x29e86c;
        }, _0x5502af['prototype']['getImageData'] = async function() {
            const _0xf0feab = this['getImageDataKey']();
            if (_0xf0feab in _0x149c3b) return _0x149c3b[_0xf0feab];
            this['flag_fullAlpha'] = !![], this['buttonScaleF'] = 0x1, this['imgSizeF'] = 0x1;
            var _0x5de05f = this['animalInfo'](),
                _0x27c374 = _0x5de05f['aniCol'];
            return this['skinImgName'] = _0x5de05f['skinName'], this['skinNotLoadedColor'] = _0x27c374, await this['loadAnimalSkinImgAsync'](), this['draw'](), new Promise(async (_0x265a23, _0x163f8a) => {
                const _0x17aede = document['createElement']('canvas'),
                    _0x59670a = 0x8c,
                    _0x481c1e = 0x6e;
                _0x17aede['width'] = _0x59670a, _0x17aede['height'] = _0x59670a;
                const _0x5654c7 = window['ctx'];
                window['ctx'] = _0x17aede['getContext']('2d'), this['w'] = _0x481c1e, this['h'] = _0x481c1e, this['rad'] = _0x481c1e / 0x2, this['skinRad'] = _0x481c1e / 0x2, this['idealOp'] = 0x1, this['underwaterA'] = 0x0, window['ctx']['translate'](_0x59670a / 0x2, _0x59670a / 0x2), window['ctx']['globalAlpha'] = 0x1, this['draw']();
                const _0x3400b9 = _0x17aede['toDataURL']();
                window['ctx'] = _0x5654c7, _0x149c3b[_0xf0feab] = _0x3400b9;
                if (_0x172d37) try {
                    localStorage['setItem'](_0x355bae, JSON['stringify'](Object['keys'](_0x149c3b))), localStorage['setItem'](_0xf0feab``, _0x3400b9);
                } catch (_0x2331c1) {}
                return _0x265a23(_0x3400b9);
            });
        }, _0x5502af['prototype']['idealOp'] = 0x1, _0x5502af['prototype']['customDraw'] = function(_0x14a716) {
            this['preLoad']();
            var _0x54da9e = this['animalInfo'](),
                _0x1decb3 = _0x54da9e['aniCol'];
            this['skinImgName'] = _0x54da9e['skinName'], this['skinNotLoadedColor'] = _0x1decb3;
            switch (this['animalType']) {
                case _0x1dbdcd:
                case _0x33ea21:
                case _0x9918f2:
                case _0x23c342:
                case _0x590076:
                    tailLen = this['rad'] * 0.16;
                    break;
            }
            this['loadAnimalSkinImg'](), _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']);
            var _0x4e9f7d = 0x0,
                _0x22a181 = (_0x476319 - this['spawnTime']) / 0x3e8;
            if (this['flag_eff_wobbling']) {
                var _0x43722d = _0x5b9e97(_0x22a181, 1.25, 0.1, 0x2);
                this['rad'] += _0x43722d;
            }
            this['idealOp'] = this['getIdealOpacity'](), this['setStealth']();
            if (this['flag_flying']) this['setOpacityForFlyingAnimals']();
            this['flag_fullAlpha'] ? _0x4597c4['globalAlpha'] = 0x1 : (this['underwaterA'] += (this['idealOp'] - this['underwaterA']) * 0.1, _0x4597c4['globalAlpha'] *= this['underwaterA']);
            if (this['flag_eff_invincible']) {
                var _0x529e04 = 0x1,
                    _0x182c90 = 0.3,
                    _0x3c131e = 0x1,
                    _0x536a74 = 0.5 * (_0x3c131e - _0x182c90);
                _0x4597c4['globalAlpha'] *= _0x182c90 + _0x536a74 + _0x536a74 * Math['sin'](0x2 * Math['PI'] / _0x529e04 * ((_0x476319 - this['spawnTime']) / 0x3e8));
            }
            this['outlineW'] = 0x2 + _0x4e9f7d;
            if (!(this['dead'] || this['flag_underWater'] || this['animalType'] == _0xa5c3f5 && this['flag_usingAbility'])) {
                if (!this['flag_underWater']) {
                    var _0x545608 = this['getOutlineColor']();
                    if (this['killerId'] == 0x0 && !(this['flag_flying'] && this['id'] == _0x59b0bc || _0x3aa021 == _0x243dd0 && !(_0x545608 == _0x4155ab || _0x545608 == _0x514a86))) this['teamID'] > 0x0 && _0x36850d != null && _0x524bb8 == _0x3a12fc && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x4096ce(0x0, 0x0, this['rad'] + 0x2, _0x36850d['getTeamColor'](this['teamID'])), _0x4597c4['restore']()), this['drawAnimalUnderSkinCircle'](_0x545608);
                    else this['outlineW'] = 0x0;
                }
            }
            this['drawUnderEffects']();
            if (this['canDrawAnimalSkin']()) this['drawAnimalSkin'](_0x545608);
            this['drawUnderWater']();
            if (this['animalPremiumSkin'] != 0x0 && !this['flag_eff_shivering']) this['sparkleAnim']();
            _0x4597c4['restore'](), this['drawTopEffects'](), this['drawLowWaterDrop']();
            if (!this['flag_isInArena']) {
                if (this['id'] == _0x59b0bc && this['flag_viewing1v1Invite']) {} else {
                    if (!this['flag_usingDiveAbility']) this['drawNickName'](_0x2d848e == null ? this['idealOp'] : 0.2);
                }
            }
            this['drawZombieEffect']();
        }, _0x5502af['prototype']['canDrawAnimalSkin'] = function() {
            return !![];
        }, _0x5502af['prototype']['drawZombieEffect'] = function() {
            this['effecT_isZombie'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.6, _0x4096ce(0x0, 0x0, this['skinRad'], '#B6CF40'), _0x4597c4['restore']());
        }, _0x5502af['prototype']['drawLowWaterDrop'] = function() {
            if (this['flag_lowWat']) {
                var _0x48672b = 1.2,
                    _0x6942f2 = 0.2,
                    _0x28f2d3 = 0.8,
                    _0xb4fea1 = 0.5 * (_0x28f2d3 - _0x6942f2),
                    _0x540368 = _0x6942f2 + _0xb4fea1 + _0xb4fea1 * Math['sin'](0x2 * Math['PI'] / _0x48672b * (_0x476319 / 0x3e8));
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x540368;
                if (this['animalType'] == _0x1de825 || this['animalType'] == _0x48a3f9 || this['animalType'] == _0x1fb7c3 || this['animalType'] == _0x4927bb && this['animalSpecies'] == 0x4) _0x4597c4['fillStyle'] = _0x1c0746;
                else {
                    if (this['animalType'] == _0x346859) _0x4597c4['fillStyle'] = _0x32dc1c;
                    else {
                        if (this['animalType'] == _0x5e24a5) _0x4597c4['fillStyle'] = _0x54be55;
                        else _0x4597c4['fillStyle'] = _0x41f624;
                    }
                }
                _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['sparkleInterval'] = 0x5, _0x5502af['prototype']['sparklDuration'] = 0x3, _0x5502af['prototype']['sparkleNext'] = 0x0, _0x5502af['prototype']['sparkleAniT'] = 0x0, _0x5502af['prototype']['setSparkleInterval'] = function(_0x369c9e, _0x56e4e1) {
            this['sparkleInterval'] = _0x369c9e, this['sparklDuration'] = _0x56e4e1, this['setSparkleXY']();
        }, _0x5502af['prototype']['seSparkle'] = function() {
            this['sparkleAniT'] = +new Date() + 0x3e8 * this['sparklDuration'], this['sparkleNext'] = this['sparkleAniT'] + 0x3e8 * this['sparkleInterval'], this['setSparkleXY']();
        }, _0x5502af['prototype']['isMouseHovering'] = ![], _0x5502af['prototype']['sparkleAnim'] = function() {
            if (this['animalPremiumSkin'] && (_0x476319 - this['spawnTime']) / 0x3e8 > 0x5) {
                if (this['id'] > 0x0 || this['id'] == 0x0 && this['isMouseHovering']) + new Date() > this['sparkleNext'] && (this['seSparkle'](), this['setSparkleXY']());
                if (this['sparkleAniT'] > +new Date()) this['showSparkling']();
            }
        }, _0x5502af['prototype']['sparkleAng'] = 0x0, _0x5502af['prototype']['sparkleX'] = 0x0, _0x5502af['prototype']['sparkleY'] = 0x0, _0x5502af['prototype']['setSparkleXY'] = function() {
            var _0x55ae77 = this['rad'] / 0x2,
                _0x529080 = _0x55ae77 * 0.3,
                _0x214836 = _0x55ae77,
                _0x11ddf4 = _0x4ec95c(_0x529080, _0x214836),
                _0x598c8c = _0x4ec95c(_0x529080, _0x214836);
            _0x11ddf4 *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, _0x598c8c *= Math['random']() * 0xa > 0x5 ? -0x1 : 0x1, this['sparkleX'] = _0x11ddf4, this['sparkleY'] = _0x598c8c;
        }, _0x5502af['prototype']['showSparkling'] = function() {
            var _0x576bf7 = 0x5;
            _0x4597c4['save']();
            var _0x210500 = 1.5,
                _0x2a14ae = 0.3,
                _0x548551 = 0x1,
                _0x58bf8f = 0.5 * (_0x548551 - _0x2a14ae);
            _0x4597c4['globalAlpha'] *= _0x2a14ae + _0x58bf8f + _0x58bf8f * Math['sin'](0x2 * Math['PI'] / _0x210500 * ((_0x476319 - this['spawnTime']) / 0x3e8)), this['sparkleAng'] += 0.5;
            var _0xf96b7a = 0x1,
                _0x51eed9 = 0x0;
            _0x4597c4['fillStyle'] = '#faffb6';
            for (i = 0x0; i < 0x3; i++) {
                _0x4597c4['save'](), _0x4597c4['translate'](this['sparkleX'], this['sparkleY']), _0x4597c4['rotate'](_0x4c4686(this['sparkleAng'])), _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(_0x51eed9)), _0x4597c4['scale'](_0xf96b7a * 0.5, _0x576bf7), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, _0xf96b7a, 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore'](), _0x51eed9 += 0x3c, _0x4597c4['restore']();
            }
            _0x4597c4['beginPath'](), _0x4597c4['arc'](this['sparkleX'], this['sparkleY'], _0xf96b7a, 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
        }, _0x5502af['prototype']['shakeOffsetX'] = 0x0, _0x5502af['prototype']['shakeOffsetY'] = 0x0, _0x5502af['prototype']['updateNick'] = function() {
            if (_0x401c43 && this['flag_can1v1']) {
                let _0x4286cc = '\x0a(wins:' + this['wins1v1'] + ')';
                this['nickTXT']['setText'](this['nickName'] + _0x4286cc), this['winsAddedInNick'] = !![];
            } else this['winsAddedInNick'] && (this['winsAddedInNick'] = ![], this['nickTXT']['setText'](this['nickName']));
        }, _0x5502af['prototype']['drawAnimalSkin'] = function(_0x1dc5a3) {
            _0x4597c4['save'](), this['updateNick']();
            if (this['flag_eff_shivering']) {
                var _0x322915 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x12b157 = 0.1,
                    _0x9625cc = this['rad'] * this['shiverF'];
                this['shakeOffsetX'] = _0x9625cc * Math['sin'](0x2 * Math['PI'] / _0x12b157 * _0x322915);
                var _0x12b157 = 0.05,
                    _0x9625cc = this['rad'] * this['shiverF'];
                this['shakeOffsetY'] = _0x9625cc * Math['sin'](0x2 * Math['PI'] / _0x12b157 * _0x322915), _0x4597c4['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
            }
            this['drawPropsUnderSkin'](), this['beforeDrawAnimalSkin']();
            if (this['id'] > 0x0) this['drawUnderSkinTail'](_0x1dc5a3);
            this['drawUnderSkinImgOutline'](), this['drawUnderSkinImg'](), this['drawSkinImg'](), this['drawOnTopOfSkinImg'](), this['drawPropsTopOfSkin'](), this['drawStatueEffect'](), _0x4597c4['restore']();
        }, _0x5502af['prototype']['drawStatueEffect'] = function() {
            if (this['flag_eff_statue']) {
                var _0x3bfeb2 = null;
                switch (this['eff_statueType']) {
                    case 0x1:
                        _0x3bfeb2 = 'snowball';
                        break;
                    case 0x2:
                        _0x3bfeb2 = 'goldball';
                        break;
                }
                if (_0x3bfeb2) {
                    var _0x5a7988 = this['getSkinImageObj']('img/' + _0x3bfeb2 + '.png');
                    if (_0x5a7988) {
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x59b0bc == this['id'] ? 0.7 : 0x1;
                        var _0x3401c2 = this['rad'] * 1.2;
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x5a7988, -_0x3401c2, -_0x3401c2, 0x2 * _0x3401c2, 0x2 * _0x3401c2), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x5502af['prototype']['drawElectroStunEffect'] = function() {
            if (this['flag_eff_electroStun'] === !![]) {
                var _0x136b6d = Math['trunc'](_0x476319 / 0xfa) % 0x4;
                let _0x555864 = 'skins/land/birdmonster/0/stun/' + _0x136b6d + '.png';
                var _0xe24332 = this['getSkinImageObj'](_0x555864);
                if (_0xe24332) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                    var _0x18a18b = this['rad'] * 1.2;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0xe24332, -_0x18a18b, -_0x18a18b, 0x2 * _0x18a18b, 0x2 * _0x18a18b), _0x4597c4['restore']();
                }
            }
        }, _0x5502af['prototype']['propsEnabled'] = ![], _0x5502af['prototype']['drawPropsUnderSkin'] = function(_0x47b754) {
            if (this['propsEnabled']) {
                if (this['animalType'] == _0x19eca4) {}
            }
        }, _0x5502af['prototype']['drawPropsTopOfSkin'] = function(_0x1ef2a5) {
            this['propsEnabled'] && (this['animalType'] == _0x19eca4 && (this['drawProp']('scarfs', 0x1), this['drawProp']('glasses', 0x0), this['drawProp']('hats', 0x1)));
        }, _0x5502af['prototype']['drawProp'] = function(_0x1d429f, _0x1fdc0f) {
            var _0x53b0ef = this['skinScale'],
                _0x21d98a = this['skinRad'] + 0.9,
                _0x54cf7b = this['getSkinImageObj']('props/' + this['animalType'] + '/' + _0x1d429f + '/' + _0x1fdc0f + '.png');
            _0x54cf7b && _0x4597c4['drawImage'](_0x54cf7b, -_0x21d98a * _0x53b0ef, -_0x21d98a * _0x53b0ef, 0x2 * _0x21d98a * _0x53b0ef, 0x2 * _0x21d98a * _0x53b0ef);
        }, _0x5502af['prototype']['beforeDrawAnimalSkin'] = function(_0x2ccad4) {}, _0x5502af['prototype']['drawUnderSkinTail'] = function(_0x499a2f) {
            if (this['killerId'] > 0x0 || this['flag_underWater']) return;
            if (this['animalType'] != _0x290562 && this['animalType'] != _0x19eca4 && this['animalType'] != _0x172231) {
                var _0x558406 = this['animalInfo'](),
                    _0x44383e = _0x558406['aniCol'],
                    _0x1d1307 = this['rad'] * 0.1,
                    _0x25a75a = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0xff6129 = 0x5,
                    _0x2bc35b = 0x4,
                    _0x390cf8 = _0x2bc35b * Math['sin'](0x2 * Math['PI'] / _0xff6129 * _0x25a75a),
                    _0x343448 = this['outlineW'] * 2.5,
                    _0x5aea59 = 0x19,
                    _0x240aef = Math['PI'] / 0xb4;
                if (this['flag_tailBitten']) _0x4597c4['fillStyle'] = _0x514a86;
                else {
                    var _0x561b19 = this['animalType'];
                    _0x386c33[_0x561b19 - 0x1] > 0x0 && this['id'] != _0x59b0bc ? _0x4597c4['fillStyle'] = _0x4155ab : _0x4597c4['fillStyle'] = _0x499a2f;
                }!(_0x3aa021 == _0x243dd0 && _0x4597c4['fillStyle'] != _0x39b6af) && (_0x4597c4['beginPath'](), _0x4597c4['moveTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x5aea59 / 0x2 + _0x343448) * _0x240aef), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e - _0x5aea59 / 0x2 - _0x343448) * _0x240aef), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e - _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] + _0x1d1307 + this['outlineW']) * Math['cos']((0x10e + _0x390cf8) * _0x240aef), (this['rad'] + _0x1d1307 + this['outlineW']) * Math['sin']((0x10e + _0x390cf8) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] - this['outlineW'] + 0x1) * Math['cos']((0x10e + _0x5aea59 / 0x2 + _0x343448) * _0x240aef), (this['rad'] - this['outlineW'] + 0x1) * Math['sin']((0x10e + _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['fill']()), !(_0x3aa021 == _0x243dd0) && ((!this['loadedSkinImg'] || this['flag_tailBitten']) && (_0x4597c4['fillStyle'] = this['flag_tailBitten'] ? _0x514a86 : _0x44383e, _0x4597c4['beginPath'](), _0x4597c4['moveTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x5aea59 / 0x2) * _0x240aef), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e - _0x5aea59 / 0x2) * _0x240aef), (this['rad'] - this['outlineW']) * Math['sin']((0x10e - _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] + _0x1d1307) * Math['cos']((0x10e + _0x390cf8) * _0x240aef), (this['rad'] + _0x1d1307) * Math['sin']((0x10e + _0x390cf8) * _0x240aef)), _0x4597c4['lineTo']((this['rad'] - this['outlineW']) * Math['cos']((0x10e + _0x5aea59 / 0x2) * _0x240aef), (this['rad'] - this['outlineW']) * Math['sin']((0x10e + _0x5aea59 / 0x2) * _0x240aef)), _0x4597c4['fill']()));
            }
        }, _0x5502af['prototype']['drawAnimalUnderSkinCircle'] = function(_0xfb368a) {
            if (!this['flag_isGrabbed']) {
                if (this['playerNumberFor1v1Arena'] == 0x1) _0xfb368a = 'cyan';
                else {
                    if (this['playerNumberFor1v1Arena'] == 0x2) _0xfb368a = 'yellow';
                    else this['flag_eff_isOnSpiderWeb'] && (_0xfb368a = 'white');
                }
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x4096ce(0x0, 0x0, this['rad'], _0xfb368a), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['devMode_num'] = 0x0, _0x5502af['prototype']['hasMultipleSpecies'] = function() {
            return ![];
        }, _0x5502af['prototype']['drawNickName'] = function(_0x2a8eb0) {
            if (_0x2a8eb0 == 0x0) return;
            var _0x4ff007 = _0x2a8eb0;
            this['nickNameA'] += (_0x4ff007 - this['nickNameA']) * 0.1;
            if (this['nickName'] && this['nickTXT'] && !_0x3bd264) {
                _0x4597c4['save']();
                if (this['dead']) _0x4597c4['globalAlpha'] *= 0x1 - this['moveUpdF'];
                else _0x4597c4['globalAlpha'] = 0x1;
                _0x4597c4['globalAlpha'] *= this['nickNameA'], this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x9;
                var _0x85daab = '#FFFFFF';
                if (this['flag_isDevMode']) {
                    if (!this['flag_hideDevPrint']) switch (this['devMode_num']) {
                        case 0x8:
                            if (_0x346e9e != null && _0x346e9e['id'] == this['id']) _0x85daab = 'cyan';
                            else _0x85daab = 'yellow';
                            break;
                        case 0x1:
                            _0x85daab = '#e23ca6';
                            break;
                        case 0x2:
                            _0x85daab = '#a715e6';
                            break;
                        case 0x3:
                            _0x85daab = '#db1b18';
                            break;
                        case 0x4:
                            _0x85daab = '#62b0c8';
                            break;
                        case 0x5:
                            _0x85daab = '#18db38';
                            break;
                        case 0x6:
                            _0x85daab = '#000000';
                            break;
                        default:
                            break;
                    }
                }
                this['isVip'] && (_0x85daab = '#FFD700'), this['nickTXT']['setColor'](_0x85daab), this['nickTXT']['draw'](), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['drawHealthBar'] = function() {
            _0x5502af['superClass']['prototype']['drawHealthBar']['call'](this), this['drawInfectionBar']();
        }, _0x5502af['prototype']['drawInfectionBar'] = function() {
            if (this['flag_underWater']) return;
            var _0x28ee41 = _0x476319 < this['infectionBarTimeoutT'] ? 0x1 : 0x0;
            this['infectionBarA'] += (_0x28ee41 - this['infectionBarA']) * 0.04, this['infectionBarA'] > 0.001 && (this['infectionPer'] += (this['infectionPer_n'] - this['infectionPer']) * 0.1, this['drawBar']('red', this['infectionBarA'], this['infectionPer'], 0x2, 6.5));
        }, _0x5502af['prototype']['drawUnderWater'] = function() {
            (this['flag_usingDiveAbility'] || this['flag_underWater'] || this['flag_usingAbility'] && this['animalType'] == _0xa5c3f5) && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'], this['drawWhenUnderwater'](), _0x4597c4['restore']());
        }, _0x5502af['prototype']['drawUnderSkinImgOutline'] = function() {
            if (this['flag_eff_stunk']) {
                _0x4597c4['save']();
                var _0x414f08 = 0x1,
                    _0x9c0948 = 0.3,
                    _0x33dbda = 0x1,
                    _0x33cd58 = 0.5 * (_0x33dbda - _0x9c0948),
                    _0x43c23f = _0x9c0948 + _0x33cd58 + _0x33cd58 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * ((_0x476319 - this['spawnTime']) / 0x3e8));
                _0x4597c4['globalAlpha'] *= _0x43c23f;
                var _0x3adb95 = 2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * _0x43c23f, 'brown'), _0x4597c4['restore']();
            }
            if (this['flag_iceSliding']) {
                var _0x2a58c9 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x414f08 = 0.75,
                    _0x134da0 = 0x1,
                    _0x30a86a = _0x134da0 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * _0x2a58c9),
                    _0x549e10 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] *= 0.8 - 0.2 * _0x30a86a, _0x4096ce(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.15 * _0x30a86a), '#7BB7BB'), _0x4096ce(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.1 * _0x30a86a), '#7BB7BB'), _0x4597c4['globalAlpha'] = _0x549e10;
            }
            if (this['flag_usingAbility'] && (this['animalType'] == _0x474e8d || this['animalType'] == _0x538056)) {
                var _0x2a58c9 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x414f08 = 1.5,
                    _0x134da0 = 0x1,
                    _0x30a86a = _0x134da0 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * _0x2a58c9),
                    _0x549e10 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] *= 0.8, _0x4096ce(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x30a86a), '#7F582B'), _0x4096ce(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x30a86a), '#7F582B'), _0x4597c4['globalAlpha'] = _0x549e10;
            }
            var _0x39fab7 = this['flag_eff_frozen'] || this['flag_cold'] ? 0x1 : 0x0;
            this['frozenEffA'] += (_0x39fab7 - this['frozenEffA']) * 0.1;
            if (this['frozenEffA'] > 0.01) {
                var _0x549e10 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] *= this['frozenEffA'];
                var _0x3adb95 = 1.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['frozenEffA'], 'white'), _0x4597c4['globalAlpha'] = _0x549e10;
            }
            var _0x39fab7 = this['flag_eff_healing'] ? 0x1 : 0x0;
            this['effA_healing'] += (_0x39fab7 - this['effA_healing']) * 0.1;
            if (this['effA_healing'] > 0.01) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= this['effA_healing'];
                var _0x3adb95 = 2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['effA_healing'], 'purple'), _0x4597c4['restore']();
            }
            this['effect_aloeveraHeal'](!![]), this['effect_sanitized'](!![]);
            var _0x39fab7 = this['flag_eff_hot'] ? 0x1 : 0x0;
            this['effA_hot'] += (_0x39fab7 - this['effA_hot']) * 0.1;
            if (this['effA_hot'] > 0.01) {
                _0x4597c4['save']();
                var _0x414f08 = 1.2,
                    _0x9c0948 = 0.3,
                    _0x33dbda = 0x1,
                    _0x33cd58 = 0.5 * (_0x33dbda - _0x9c0948);
                _0x4597c4['globalAlpha'] *= _0x9c0948 + _0x33cd58 + _0x33cd58 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * ((_0x476319 - this['spawnTime']) / 0x3e8));
                var _0x3adb95 = 2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['effA_hot'], 'rgba(249, 212, 77, 0.5)'), _0x4597c4['restore']();
            }
            var _0x39fab7 = this['flag_eff_poison'] ? 0x1 : 0x0;
            this['effA_poison'] += (_0x39fab7 - this['effA_poison']) * 0.1;
            if (this['effA_poison'] > 0.01) {
                _0x4597c4['save']();
                var _0x414f08 = 1.2,
                    _0x9c0948 = 0.3,
                    _0x33dbda = 0x1,
                    _0x33cd58 = 0.5 * (_0x33dbda - _0x9c0948);
                _0x4597c4['globalAlpha'] *= _0x9c0948 + _0x33cd58 + _0x33cd58 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_poison'];
                var _0x3adb95 = 2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['effA_poison'], '#7FF600'), _0x4597c4['restore']();
            }
            var _0x39fab7 = this['flag_eff_bleeding'] || this['flag_eff_wobbling'] ? 0x1 : 0x0;
            this['effA_bleeding'] += (_0x39fab7 - this['effA_bleeding']) * 0.1;
            if (this['effA_bleeding'] > 0.01) {
                _0x4597c4['save']();
                var _0x414f08 = 1.2,
                    _0x9c0948 = 0.3,
                    _0x33dbda = 0x1,
                    _0x33cd58 = 0.5 * (_0x33dbda - _0x9c0948);
                _0x4597c4['globalAlpha'] *= _0x9c0948 + _0x33cd58 + _0x33cd58 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_bleeding'];
                var _0x3adb95 = 2.6,
                    _0x34b8dd = this['flag_eff_wobbling'] ? 'brown' : 'red';
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['effA_bleeding'], _0x34b8dd), _0x4597c4['restore']();
            }
            var _0x39fab7 = this['flag_eff_slimed'] ? 0x1 : 0x0;
            this['effA_slimed'] += (_0x39fab7 - this['effA_slimed']) * 0.1;
            if (this['effA_slimed'] > 0.01) {
                _0x4597c4['save']();
                var _0x414f08 = 1.2,
                    _0x9c0948 = 0.3,
                    _0x33dbda = 0x1,
                    _0x33cd58 = 0.5 * (_0x33dbda - _0x9c0948);
                _0x4597c4['globalAlpha'] *= _0x9c0948 + _0x33cd58 + _0x33cd58 * Math['sin'](0x2 * Math['PI'] / _0x414f08 * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_slimed'];
                var _0x3adb95 = 2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x3adb95 * this['effA_slimed'], 'grey'), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['drawUnderSkinImg'] = function() {}, _0x5502af['prototype']['drawUnderwaterBubbles'] = function() {
            _0x4597c4['save']();
            var _0x439571 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0xbd27bc = 1.5,
                _0x4cc2c0 = 0x1,
                _0x33807d = _0x4cc2c0 * Math['sin'](0x2 * Math['PI'] / _0xbd27bc * _0x439571);
            if (this['animalType'] == _0x590076) _0x4597c4['globalAlpha'] *= 0.3;
            var _0x520cd8 = this['flag_inWater'] ? '#4E71C3' : '#7E6A35';
            if (this['animalType'] == _0x48a3f9) _0x520cd8 = '#f9d43b';
            _0x4597c4['fillStyle'] = _0x520cd8;
            var _0xd23b0f = this['rad'] * 0.2;
            _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0xd23b0f + _0x33807d), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0xd23b0f - _0x33807d), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0xd23b0f + _0x33807d), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0xd23b0f - _0x33807d), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
        }, _0x5502af['prototype']['drawUnderwaterCustomization'] = function(_0x4e3b5f, _0x2a880f) {
            _0x4597c4['save']();
            var _0x41c290 = (_0x476319 - this['spawnTime']) / 0x3e8;
            if (this['animalType'] == _0x2e6e95) {
                _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'], _0x4597c4['fillStyle'] = '#73799b', _0x4597c4['beginPath']();
                var _0x419956 = this['rad'],
                    _0x44b4f2 = _0x419956 * 0.25;
                _0x4597c4['moveTo'](_0x419956 * -0.07, _0x44b4f2), _0x4597c4['lineTo'](0x0, _0x44b4f2 - _0x419956 * 0.5), _0x4597c4['lineTo'](_0x419956 * 0.35, _0x44b4f2), _0x4597c4['closePath'](), _0x4597c4['fill']();
            } else {
                if (this['animalType'] == _0x26d386) _0x4096ce(0x0, this['rad'] * 0.2, this['rad'] * 0.12, '#4D4D4D');
                else {
                    if (this['animalType'] == _0x52a058) _0x4096ce(0x0, this['rad'] * 0.45, this['rad'] * 0.08, '#202A65');
                    else {
                        if (this['animalType'] == _0x38e413) {
                            var _0xa419b4 = _0x5b9e97(_0x41c290, 0x1, 0x1, 0x1);
                            _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(0x28)), _0x4597c4['scale'](0x1, 0x2), _0x4597c4['globalAlpha'] = 0.08, _0x4096ce(this['rad'] * 0x1, this['rad'] * 0.2, this['rad'] * 0.1 + this['rad'] * 0.1 * _0xa419b4, '#B32E10'), _0x4597c4['globalAlpha'] = 0.2, _0x4096ce(this['rad'] * 0x1, this['rad'] * 0.2, this['rad'] * 0.15, '#B32E10'), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['rotate'](_0x4c4686(-0x28)), _0x4597c4['scale'](0x1, 0x2), _0x4597c4['globalAlpha'] = 0.08, _0x4096ce(this['rad'] * -0x1, this['rad'] * 0.2, this['rad'] * 0.1 + this['rad'] * 0.1 * -_0xa419b4, '#B32E10'), _0x4597c4['globalAlpha'] = 0.2, _0x4096ce(this['rad'] * -0x1, this['rad'] * 0.2, this['rad'] * 0.15, '#B32E10'), _0x4597c4['restore']();
                        } else {
                            if (this['animalType'] == _0x9038c6) _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'], _0x4096ce(this['rad'] * 0.4, this['rad'] * 0.75, this['rad'] * 0.12, '#598b30'), _0x4096ce(this['rad'] * 0.65, this['rad'] * 0.55, this['rad'] * 0.1, '#64a034'), _0x4096ce(this['rad'] * -0.4, this['rad'] * 0.75, this['rad'] * 0.12, '#64a034'), _0x4096ce(this['rad'] * -0.65, this['rad'] * 0.55, this['rad'] * 0.1, '#598b30');
                            else this['animalType'] == _0x366af5 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['scale'](0x1, 0x2), _0x4096ce(0x0, this['rad'] * 0.24, this['rad'] * 0.08, '#202A65'), _0x4096ce(0x0, this['rad'] * -0.02, this['rad'] * 0.06, '#202A65'), _0x4096ce(0x0, this['rad'] * -0.28, this['rad'] * 0.05, '#202A65'), _0x4096ce(0x0, this['rad'] * -0.54, this['rad'] * 0.04, '#202A65'), _0x4597c4['restore']());
                        }
                    }
                }
            }
            _0x4597c4['restore']();
        }, _0x5502af['prototype']['drawWhenUnderwater'] = function() {
            this['drawUnderwaterCustomization'](0x1, 0x1), this['drawUnderwaterBubbles']();
        }, _0x5502af['prototype']['shiveringStartT'] = 0x0, _0x5502af['prototype']['flag_eff_shivering'] = ![], _0x5502af['prototype']['flag_inHidingHole'] = ![], _0x5502af['prototype']['effect_shivering'] = function() {
            if (this['shiveringStartT'] == 0x0 && this['flag_eff_shivering']) this['shiveringStartT'] = +new Date();
            else {
                if (!this['flag_eff_shivering']) this['shiveringStartT'] = 0x0;
            }
            if (this['flag_eff_shivering']) {
                var _0x29abda = (+new Date() - this['shiveringStartT']) * 0xa;
                _0x29abda % 0xa == 0x0 && (this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa), this['eff_shiver_shakeX'] = Math['round'](Math['random']() * 0xa));
            }
        };
        if (this['effA_healing'] > 0.01) {
            _0x4597c4['save']();
            var _0x4aafa7 = 0.3;
            _0x4597c4['globalAlpha'] *= _0x4aafa7 * this['effA_healing'], _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x4597c4['restore']();
        }
        _0x5502af['prototype']['effect_sanitized'] = function(_0x195a5c) {
            var _0x4a2ed9 = this['flag_eff_sanitized'] ? 0.9 : 0x0;
            if (this['effA__sanitized'] == undefined) this['effA__sanitized'] = 0x0;
            this['effA__sanitized'] += (_0x4a2ed9 - this['effA__sanitized']) * 0.1;
            if (this['effA__sanitized'] > 0.01) {
                var _0x5538c1 = 0.3,
                    _0x1dfd39 = 0.8,
                    _0x360e14 = 0.2,
                    _0x5894c6 = 0.4,
                    _0x3aa319 = 0.5 * (_0x5894c6 - _0x360e14),
                    _0x47d6ef = _0x360e14 + _0x3aa319 + _0x3aa319 * Math['sin'](0x2 * Math['PI'] / _0x1dfd39 * ((_0x476319 - this['spawnTime']) / 0x3e8));
                if (_0x195a5c) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x47d6ef;
                    var _0x46e84b = 2.6;
                    _0x4096ce(0x0, 0x0, this['rad'] + _0x46e84b * this['effA__sanitized'], 'white'), _0x4597c4['restore']();
                } else _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x47d6ef, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['effect_aloeveraHeal'] = function(_0x5f52db) {
            var _0x3ec060 = this['flag_eff_aloeveraHealing'] ? 0.9 : 0x0;
            if (this['effA_aloeveraHealing'] == undefined) this['effA_aloeveraHealing'] = 0x0;
            this['effA_aloeveraHealing'] += (_0x3ec060 - this['effA_aloeveraHealing']) * 0.1;
            if (this['effA_aloeveraHealing'] > 0.01) {
                var _0xd147b9 = 0.3,
                    _0x4a9f1d = 0.8,
                    _0xd48de7 = 0.2,
                    _0x548d4e = 0.4,
                    _0x361b1d = 0.5 * (_0x548d4e - _0xd48de7),
                    _0x545c0c = _0xd48de7 + _0x361b1d + _0x361b1d * Math['sin'](0x2 * Math['PI'] / _0x4a9f1d * ((_0x476319 - this['spawnTime']) / 0x3e8));
                if (_0x5f52db) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x545c0c;
                    var _0x2812ef = 2.6;
                    _0x4096ce(0x0, 0x0, this['rad'] + _0x2812ef * this['effA_aloeveraHealing'], '#bbc94d'), _0x4597c4['restore']();
                } else _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x545c0c, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad']), '#bbc94d'), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['effect_sweatPoisoned'] = function() {
            var _0x3f7990 = this['flag_eff_sweatPoisoned'] ? 0x1 : 0x0;
            if (this['effA_sweatPoisoned'] == undefined) this['effA_sweatPoisoned'] = 0x0;
            this['effA_sweatPoisoned'] += (_0x3f7990 - this['effA_sweatPoisoned']) * 0.1;
            if (this['effA_sweatPoisoned'] > 0.01) {
                _0x4597c4['save']();
                var _0x495419 = 0.3,
                    _0x106cc6 = 1.2,
                    _0xf1fce9 = 0.3,
                    _0x4e8d91 = 0x1,
                    _0x414ffb = 0.5 * (_0x4e8d91 - _0xf1fce9);
                _0x4597c4['globalAlpha'] *= _0xf1fce9 + _0x414ffb + _0x414ffb * Math['sin'](0x2 * Math['PI'] / _0x106cc6 * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), _0xf87e27), _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['skinRad'] = 0x0, _0x5502af['prototype']['skinScale'] = 0x0, _0x5502af['prototype']['setSkinScale'] = function() {
            var _0x58ceab = 0x1f4 / 0x154,
                _0x4a7636 = this['rad'] - this['outlineW'];
            this['skinRad'] = _0x4a7636, this['skinScale'] = _0x58ceab;
        }, _0x5502af['prototype']['getAniRadius'] = function(_0x5d44ff) {
            return _0x5d44ff;
        }, _0x5502af['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x4458a6 = this['skinScale'],
                _0x168751 = this['getAniRadius'](this['skinRad']);
            this['loadedSkinImg'] ? _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x168751 * _0x4458a6, -_0x168751 * _0x4458a6, 0x2 * _0x168751 * _0x4458a6, 0x2 * _0x168751 * _0x4458a6) : (_0x4597c4['fillStyle'] = this['skinNotLoadedColor'], _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']());
        }, _0x5502af['prototype']['preLoad'] = function() {}, _0x5502af['prototype']['shiverF'] = 0.02, _0x5502af['prototype']['drawSkinImg'] = function() {
            this['basicDrawSkinImg'](), this['drawSkinCustomization']();
        }, _0x5502af['prototype']['drawSkinCustomization'] = function() {}, _0x5502af['prototype']['drawOnTopOfSkinImg'] = function() {
            if (!this['loadedSkinImg']) {
                _0x4597c4['save']();
                var _0x2f6243 = Math['max'](0x1, this['rad'] / 0x19);
                _0x4597c4['scale'](_0x2f6243, _0x2f6243), this['drawEyeAtPos'](0x6, this['rad'] * 0.32), this['drawEyeAtPos'](-0x6, this['rad'] * 0.32), _0x4597c4['restore']();
            }
            if (this['animalType'] == _0x3f35f1) {
                _0x4597c4['fillStyle'] = '#E5CF79', _0x4597c4['beginPath']();
                var _0x3aa937 = this['rad'] - this['outlineW'],
                    _0x3150b8 = _0x3aa937 * 0x1;
                _0x4597c4['moveTo'](_0x3aa937 * -0.16, _0x3150b8), _0x4597c4['lineTo'](0x0, _0x3aa937 * (this['flag_usingAbility'] ? 1.41 : 0.7)), _0x4597c4['lineTo'](_0x3aa937 * 0.153, _0x3150b8), _0x4597c4['closePath'](), _0x4597c4['fill']();
            }
            if (this['flag_usingAbility'] && this['animalType'] == _0x36fcdc) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'];
                var _0x19d187 = this['getSkinImageObj']('img/snowball.png');
                if (_0x19d187) {
                    var _0x3aa937 = this['rad'];
                    _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x19d187, -_0x3aa937, -_0x3aa937, 0x2 * _0x3aa937, 0x2 * _0x3aa937);
                } else this['drawOutlinedCircle']('', 'white');
                _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['drawUnderEffects'] = function() {
            if (this['flag_eff_dirty']) {
                if (this['effA_dirtStuck'] > 0.01) {
                    _0x4597c4['save']();
                    var _0x23562b = 0.9;
                    _0x4597c4['globalAlpha'] *= _0x23562b * this['effA_dirtStuck'];
                    var _0x330490 = this['getImageObjForPath']('img/dirt/dirt_below.png');
                    if (_0x330490) {
                        var _0x1c85bb = this['skinScale'],
                            _0x24154c = this['skinRad'] - 0x2;
                        _0x4597c4['drawImage'](_0x330490, -_0x24154c * _0x1c85bb, -_0x24154c * _0x1c85bb, 0x2 * _0x24154c * _0x1c85bb, 0x2 * _0x24154c * _0x1c85bb);
                    }
                    _0x4597c4['restore']();
                }
            }
        };
        var _0x44c72f = 0x1,
            _0xa3465c = 0.5;
        _0x5502af['prototype']['maskStartT'] = 0x0, _0x5502af['prototype']['wasWearingMask'] = ![], _0x5502af['prototype']['drawProtectiveMask'] = function() {
            if (!this['flag_eff_wearingMask']) {
                this['wasWearingMask'] = ![];
                return;
            }!this['wasWearingMask'] && (this['wasWearingMask'] = !![], this['maskStartT'] = _0x476319);
            _0x4597c4['save']();
            var _0x529ad4 = this['getSkinImageObj']('img/viralpandemic/mask.png'),
                _0x4ac4c6 = this['getSkinImageObj']('img/viralpandemic/mask-outline.png');
            if (_0x529ad4 && _0x4ac4c6) {
                var _0x776986 = this['rad'] * 0.7 + this['rPer'],
                    _0x239106 = _0x776986 * 0.1;
                if (this['animalType'] == _0x19d925) _0x239106 = _0x776986 * 0.2;
                else {
                    if (this['animalType'] == _0x366af5) _0x776986 = this['rad'] * 0.6, _0x239106 = _0x776986 * 0x1;
                    else {
                        if (this['animalType'] == _0x9038c6 || this['animalType'] == _0x38e413 || this['animalType'] == _0x36fcdc || this['animalType'] == _0x283bbc) _0x239106 = _0x776986 * -0.05;
                        else {
                            if (this['animalType'] == _0x471528) _0x239106 = _0x776986 * -0.2;
                            else {
                                if (this['animalType'] == _0x4bbe45) _0x239106 = _0x776986 * 0x0;
                                else {
                                    if (this['animalType'] == _0x1f079f || this['animalType'] == _0x123d4e || this['animalType'] == _0x59b412 || this['animalType'] == _0x2f4199 || this['animalType'] == _0x466d53) _0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0.4;
                                    else {
                                        if (this['animalType'] == _0x24c6d5) _0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0.6, this['flag_usingAbility'] && (_0x239106 = _0x776986 * 1.3);
                                        else {
                                            if (this['animalType'] == _0x329081) _0x776986 = this['rad'] * 0.55, _0x239106 = _0x776986 * 0.5, this['flag_usingAbility'] && (_0x239106 = _0x776986 * 0x1);
                                            else {
                                                if (this['animalType'] == _0x242003) {
                                                    _0x776986 = this['rad'] * 0.43, _0x239106 = _0x776986 * 0x1;
                                                    if (this['flag_usingAbility']) {
                                                        if (this['specType'] == 0x1) _0x776986 = this['rad'] * 0.45, _0x239106 = _0x776986 * 1.3;
                                                        else this['specType'] == 0x2 && (_0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 1.9);
                                                    }
                                                } else {
                                                    if (this['animalType'] == _0xd787b4) _0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0.55, this['flag_usingAbility'] && (_0x239106 = _0x776986 * 0.8);
                                                    else {
                                                        if (this['animalType'] == _0x4927bb) _0x776986 = this['rad'] * 0.55, _0x239106 = _0x776986 * 0x0, this['flag_usingAbility'] && (_0x239106 = _0x776986 * 0.5);
                                                        else {
                                                            if (this['animalType'] == _0x4657a6) _0x776986 = this['rad'] * 0.4, _0x239106 = _0x776986 * 1.1, this['flag_usingAbility'] && (_0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * _0x44c72f);
                                                            else {
                                                                if (this['animalType'] == _0x57f2d9) _0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0.5, this['flag_usingAbility'] && (_0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0x1);
                                                                else {
                                                                    if (this['animalType'] == _0x5bec16) _0x776986 = this['rad'] * 0.4, _0x239106 = _0x776986 * 0x1, this['flag_usingAbility'] && (_0x776986 = this['rad'] * 0.5, _0x239106 = _0x776986 * 0x1);
                                                                    else {
                                                                        if (this['animalType'] == _0x108e2d) {
                                                                            _0x776986 = this['rad'] * 0.4, _0x239106 = _0x776986 * 0x1;
                                                                            if (this['flag_usingAbility']) {
                                                                                _0x4597c4['restore']();
                                                                                return;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                var _0x444ced = 0x1,
                    _0x104dfe = (_0x476319 - this['maskStartT']) / 0x3e8;
                if (_0x104dfe > 0x50) var _0x2d9694 = 0x1,
                    _0x5c62c5 = 0.3,
                    _0x483aee = 0.5,
                    _0xa510e0 = 0.5 * (_0x483aee - _0x5c62c5),
                    _0x444ced = _0x5c62c5 + _0xa510e0 + _0xa510e0 * Math['sin'](0x2 * Math['PI'] / _0x2d9694 * (_0x476319 / 0x3e8));
                var _0x3196e2 = 0.8;
                if (this['flag_inHidingHole']) _0x3196e2 = 0.6;
                else {
                    if (this['flag_underWater']) _0x3196e2 = this['idealOp'];
                }
                _0x4597c4['globalAlpha'] = _0x3196e2 * _0x444ced, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x529ad4, -_0x776986, _0x239106, 0x2 * _0x776986, 0x2 * _0x776986), _0x4597c4['drawImage'](_0x4ac4c6, -_0x776986, _0x239106, 0x2 * _0x776986, 0x2 * _0x776986);
            }
            _0x4597c4['restore']();
        }, _0x5502af['prototype']['drawTopEffects'] = function() {
            this['effect_aloeveraHeal']();
            var _0x177843 = this['flag_eff_stunned'] ? 0x1 : 0x0;
            this['stunA'] += (_0x177843 - this['stunA']) * 0.1;
            if (this['stunA'] > 0.01) {
                _0x4597c4['save']();
                var _0x1e22f0 = 2.5,
                    _0x1a21f1 = _0x476319 % (_0x1e22f0 * 0x3e8) / (_0x1e22f0 * 0x3e8);
                _0x4597c4['rotate'](_0x1a21f1 * (0x2 * Math['PI'])), _0x4597c4['globalAlpha'] *= this['stunA'];
                var _0xf86eea = this['rad'] * 0.2,
                    _0x326fbe = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x2bb2dd = 0x1,
                    _0x1fc15a = 0.5 + _0xf86eea * 0.07,
                    _0x4b1f5b = _0x1fc15a * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * _0x326fbe);
                _0x4597c4['fillStyle'] = '#F3D444', _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.22, this['rad'] * -0.22, Math['max'](0x0, _0xf86eea + _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.22, this['rad'] * -0.22, Math['max'](0x0, _0xf86eea - _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.22, this['rad'] * 0.22, Math['max'](0x0, _0xf86eea + _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.22, this['rad'] * 0.22, Math['max'](0x0, _0xf86eea - _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
            var _0x177843 = this['flag_eff_onFire'] ? 0x1 : 0x0;
            this['onFireEffA'] += (_0x177843 - this['onFireEffA']) * 0.1;
            if (this['onFireEffA'] > 0.01) {
                var _0x2bb2dd = 0x1,
                    _0x3ad83c = 0.15,
                    _0x5c2ed8 = 0.4,
                    _0x4df12f = 0.5 * (_0x5c2ed8 - _0x3ad83c),
                    _0x421e29 = _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * (_0x476319 / 0x3e8));
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= _0x421e29 * this['onFireEffA'], _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad']), 'orange'), _0x4597c4['restore']();
                var _0xd72f3 = 0x1;
                if (!(_0x3aa021 == _0x243dd0)) {
                    var _0x2bb2dd = 0x1,
                        _0x3ad83c = 0.5,
                        _0x5c2ed8 = 0x1,
                        _0x4df12f = 0.5 * (_0x5c2ed8 - _0x3ad83c),
                        _0x4b1f5b = _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * (_0x476319 / 0x3e8)),
                        _0x23d821 = Math['trunc'](_0x476319 / 0x64) % 0x5,
                        _0x240c8b = Math['trunc'](_0x476319 / 0x96) % 0x5,
                        _0x53807a = this['getImageObjForPath']('gameobj/70/0/' + _0x23d821 + '.png', _0xd72f3),
                        _0xb72b4f = this['getImageObjForPath']('gameobj/70/0/' + _0x240c8b + '.png', _0xd72f3);
                    if (_0x53807a || _0xb72b4f) {
                        var _0x3f2a0f = 0x0 - this['rad'] * 0.3,
                            _0x5aa2b3 = this['rad'] * 0.2 - this['rad'] * 0.3,
                            _0x59cf16 = this['rad'] * 0x1 * (0x2 + _0x4b1f5b * 0x2) / 0x3,
                            _0x51654d = this['rad'] * 0x1 * _0x4b1f5b,
                            _0x93c7f5 = 0.5,
                            _0x16f07f = 0.95;
                        _0x4597c4['save'](), _0x53807a && (_0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x4b1f5b, _0x4597c4['drawImage'](_0x53807a, _0x3f2a0f + _0x59cf16 * -_0x93c7f5, _0x5aa2b3 + _0x51654d * -_0x16f07f, _0x59cf16, _0x51654d)), _0xb72b4f && (_0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x4b1f5b, _0x4597c4['drawImage'](_0xb72b4f, _0x3f2a0f + this['rad'] * 0.5 + _0x59cf16 * -_0x93c7f5, _0x5aa2b3 + this['rad'] * 0.5 + _0x51654d * -_0x16f07f, _0x59cf16, _0x51654d)), _0x4597c4['restore']();
                    }
                } else {
                    var _0x2bb2dd = 0x1,
                        _0x3ad83c = 0.5,
                        _0x5c2ed8 = 0x1,
                        _0x4df12f = 0.5 * (_0x5c2ed8 - _0x3ad83c),
                        _0x4b1f5b = _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * (_0x476319 / 0x3e8)),
                        _0x53807a = this['getImageObjForPath']('gameobj/70/0.png', _0xd72f3);
                    if (_0x53807a) {
                        var _0x3f2a0f = 0x0 - this['rad'] * 0.3,
                            _0x5aa2b3 = this['rad'] * 0.2 - this['rad'] * 0.3,
                            _0x59cf16 = this['rad'] * 0x1 * (0x2 + _0x4b1f5b * 0x2) / 0x3,
                            _0x51654d = this['rad'] * 0x1 * _0x4b1f5b,
                            _0x93c7f5 = 0.5,
                            _0x16f07f = 0.95;
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x4b1f5b, _0x4597c4['drawImage'](_0x53807a, _0x3f2a0f + _0x59cf16 * -_0x93c7f5, _0x5aa2b3 + _0x51654d * -_0x16f07f, _0x59cf16, _0x51654d), _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x4b1f5b, _0x4597c4['drawImage'](_0x53807a, _0x3f2a0f + this['rad'] * 0.5 + _0x59cf16 * -_0x93c7f5, _0x5aa2b3 + this['rad'] * 0.5 + _0x51654d * -_0x16f07f, _0x59cf16, _0x51654d), _0x4597c4['restore']();
                    }
                }
            }
            if (this['frozenEffA'] > 0.01 && this['flag_eff_frozen']) {
                _0x4597c4['save']();
                var _0x1e22f0 = 0x7,
                    _0x1a21f1 = _0x476319 % (_0x1e22f0 * 0x3e8) / (_0x1e22f0 * 0x3e8);
                _0x4597c4['rotate'](_0x1a21f1 * (0x2 * Math['PI'])), _0x4597c4['globalAlpha'] *= this['frozenEffA'];
                var _0xf86eea = this['rad'] * 0.2,
                    _0x326fbe = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x2bb2dd = 0x1,
                    _0x1fc15a = 0.5 + _0xf86eea * 0.07,
                    _0x4b1f5b = _0x1fc15a * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * _0x326fbe);
                _0x4597c4['fillStyle'] = 'white';
                var _0x38b9e7 = this['rad'] * 0.27;
                _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x38b9e7, -_0x38b9e7, Math['max'](0x0, _0xf86eea + _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x38b9e7, -_0x38b9e7, Math['max'](0x0, _0xf86eea - _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x38b9e7, _0x38b9e7, Math['max'](0x0, _0xf86eea + _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x38b9e7, _0x38b9e7, Math['max'](0x0, _0xf86eea - _0x4b1f5b), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
            if (this['frozenEffA'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.3;
                _0x4597c4['globalAlpha'] *= _0x18d6b4 * this['frozenEffA'], _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'white'), _0x4597c4['restore']();
            }
            if (this['effA_healing'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.3;
                _0x4597c4['globalAlpha'] *= _0x18d6b4 * this['effA_healing'], _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#ef24ed'), _0x4597c4['restore']();
            }
            this['effect_sweatPoisoned']();
            if (this['effA_hot'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.3,
                    _0x2bb2dd = 1.2,
                    _0x3ad83c = 0.3,
                    _0x5c2ed8 = 0x1,
                    _0x4df12f = 0.5 * (_0x5c2ed8 - _0x3ad83c);
                _0x4597c4['globalAlpha'] *= _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 'rgba(249, 212, 77, 0.3)'), _0x4597c4['restore']();
            }
            if (this['effA_poison'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.3;
                _0x4597c4['globalAlpha'] *= _0x18d6b4 * this['effA_poison'];
                var _0x2bb2dd = 1.2,
                    _0x3ad83c = 0.3,
                    _0x5c2ed8 = 0x1,
                    _0x4df12f = 0.5 * (_0x5c2ed8 - _0x3ad83c);
                _0x4597c4['globalAlpha'] *= _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), '#9FDA00'), _0x4597c4['restore']();
            }
            var _0x177843 = this['flag_eff_bleeding'] ? 0.8 : 0x0;
            this['effA_bleeding'] += (_0x177843 - this['effA_bleeding']) * 0.1;
            if (this['effA_bleeding'] > 0.01) {
                _0x4597c4['save']();
                var _0x2bb2dd = 1.2,
                    _0x3ad83c = 0.3,
                    _0x5c2ed8 = 0x1,
                    _0x4df12f = 0.3 * (_0x5c2ed8 - _0x3ad83c);
                _0x4597c4['globalAlpha'] *= _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_bleeding'];
                var _0x29804d = -2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x29804d * this['effA_bleeding'], 'red'), _0x4597c4['restore']();
            }
            var _0x177843 = this['flag_eff_slimed'] ? 0.8 : 0x0;
            this['effA_slimed'] += (_0x177843 - this['effA_slimed']) * 0.1;
            if (this['effA_slimed'] > 0.01) {
                _0x4597c4['save']();
                var _0x2bb2dd = 1.2,
                    _0x3ad83c = 0.3,
                    _0x5c2ed8 = 0x1,
                    _0x4df12f = 0.3 * (_0x5c2ed8 - _0x3ad83c);
                _0x4597c4['globalAlpha'] *= _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_slimed'];
                var _0x29804d = -2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x29804d * this['effA_slimed'], 'grey'), _0x4597c4['restore']();
            }
            var _0x177843 = this['flag_eff_stunk'] ? 0.8 : 0x0;
            this['effA_stunk'] += (_0x177843 - this['effA_stunk']) * 0.1;
            if (this['effA_stunk'] > 0.01) {
                _0x4597c4['save']();
                var _0x2bb2dd = 1.2,
                    _0x3ad83c = 0.3,
                    _0x5c2ed8 = 0x1,
                    _0x4df12f = 0.3 * (_0x5c2ed8 - _0x3ad83c);
                _0x4597c4['globalAlpha'] *= _0x3ad83c + _0x4df12f + _0x4df12f * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * ((_0x476319 - this['spawnTime']) / 0x3e8)), _0x4597c4['globalAlpha'] *= this['effA_stunk'];
                var _0x29804d = -2.6;
                _0x4096ce(0x0, 0x0, this['rad'] + _0x29804d * this['effA_stunk'], 'brown'), _0x4597c4['restore']();
            }
            if (this['animalType'] == _0x471528 && this['flag_usingAbility']) {
                var _0x2bb2dd = 0.75,
                    _0x1fc15a = 0x1,
                    _0x4b1f5b = _0x1fc15a * Math['sin'](0x2 * Math['PI'] / _0x2bb2dd * _0x326fbe),
                    _0x46aa44 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] *= 0.8 - 0.2 * _0x4b1f5b, _0x4096ce(this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 + 0.05 * _0x4b1f5b), '#efefef'), _0x4096ce(-this['rad'] * 0.15, -this['rad'] * 1.27, this['rad'] * (0.1 - 0.05 * _0x4b1f5b), '#efefef'), _0x4597c4['globalAlpha'] = _0x46aa44;
            }
            var _0x177843 = this['flag_webStuck'] ? 0x1 : 0x0;
            this['effA_webStuck'] += (_0x177843 - this['effA_webStuck']) * 0.02;
            if (this['effA_webStuck'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.9;
                _0x4597c4['globalAlpha'] *= _0x18d6b4 * this['effA_webStuck'];
                var _0x53807a = this['getImageObjForPath']('img/web/' + this['eff_webStuckType'] + '/spiderWeb_stuck.png', 0x1);
                if (_0x53807a) {
                    var _0x57cadb = this['rad'] * 1.3;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x53807a, -_0x57cadb, -_0x57cadb, 0x2 * _0x57cadb, 0x2 * _0x57cadb);
                }
                _0x4597c4['restore']();
            }
            this['effectDirt']();
            var _0x177843 = this['flag_constricted'] ? 0x1 : 0x0;
            this['effA_constricted'] += (_0x177843 - this['effA_constricted']) * 0.04;
            if (this['effA_constricted'] > 0.01) {
                _0x4597c4['save']();
                var _0x18d6b4 = 0.9;
                _0x4597c4['globalAlpha'] *= _0x18d6b4 * this['effA_constricted'];
                var _0xa277b9 = 'skins/land/boaconstrictor/' + this['eff_constrictedSpecies'];
                if (this['eff_constrictedSubSpecies'] !== undefined && this['eff_constrictedSubSpecies'] > 0x0) _0xa277b9 += '/' + this['eff_constrictedSubSpecies'];
                var _0x1f9eb7 = this['eff_constrictedSpecies'] === 0x1 || this['eff_constrictedSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
                console['log']('constrict img: ' + _0xa277b9);
                var _0x53807a = this['getSkinImageObjForSeason'](_0xa277b9 + '/constrict.png', _0x1f9eb7);
                if (_0x53807a) {
                    var _0x57cadb = this['rad'] * 1.3;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x53807a, -_0x57cadb, -_0x57cadb, 0x2 * _0x57cadb, 0x2 * _0x57cadb);
                }
                _0x4597c4['restore']();
            }
            this['drawProtectiveMask'](), this['drawElectroStunEffect']();
        }, _0x5502af['prototype']['effectDirt'] = function() {
            if (this['eff_dirtType'] == 0x0 || this['eff_dirtType'] == undefined) return;
            if (this['effA_dirtStuck'] == undefined) this['effA_dirtStuck'] = 0x0;
            var _0x2e7a38 = this['flag_eff_dirty'] ? 0x1 : 0x0;
            this['effA_dirtStuck'] += (_0x2e7a38 - this['effA_dirtStuck']) * 0.02;
            if (this['effA_dirtStuck'] > 0.01) {
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']);
                var _0x3749dd = 0.9;
                _0x4597c4['globalAlpha'] *= _0x3749dd * this['effA_dirtStuck'];
                var _0x21930d = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/0.png');
                if (_0x21930d) {
                    var _0x6322ea = this['skinScale'],
                        _0x2f651d = this['skinRad'];
                    _0x4597c4['drawImage'](_0x21930d, -_0x2f651d * _0x6322ea, -_0x2f651d * _0x6322ea, 0x2 * _0x2f651d * _0x6322ea, 0x2 * _0x2f651d * _0x6322ea);
                }
                var _0x21930d = this['getImageObjForPath']('img/dirt/' + this['eff_dirtType'] + '/1.png');
                if (_0x21930d) {
                    var _0x6322ea = this['skinScale'],
                        _0x2f651d = this['skinRad'];
                    _0x4597c4['drawImage'](_0x21930d, -_0x2f651d * _0x6322ea, -_0x2f651d * _0x6322ea, 0x2 * _0x2f651d * _0x6322ea, 0x2 * _0x2f651d * _0x6322ea);
                }
                _0x4597c4['restore']();
            }
        }, _0x5502af['prototype']['getSpeciesPath'] = function(_0x1f032b) {
            return _0x1f032b + '/' + this['animalSpecies'];
        }, _0x5502af['prototype']['getWing'] = function(_0x1c6cc2, _0x7a687f, _0x334b90) {
            var _0x4acdd3 = 'skins/' + (_0x334b90 ? this['getSpeciesPath'](_0x1c6cc2) + '/' : _0x1c6cc2 + '/');
            return _0x4acdd3 += _0x1c6cc2 + '_wing' + _0x7a687f + '.png', _0x4acdd3;
        }, _0x5502af['prototype']['getHead'] = function(_0x3748a2, _0x379b69) {
            var _0xcfe94a = 'skins/' + (_0x379b69 ? this['getSpeciesPath'](_0x3748a2) + '/' : _0x3748a2 + '/');
            return _0xcfe94a += _0x3748a2 + '_head.png', _0xcfe94a;
        }, _0x5502af['prototype']['getSkinName'] = function() {
            var _0x4653ed = this['skinImgName'];
            switch (this['animalType']) {
                case _0x1dbdcd:
                case _0x33ea21:
                case _0x9918f2:
                case _0x23c342:
                case _0x3fb2b0:
                case _0x45a408:
                case _0x2982a0:
                case _0x40e6df:
                    var _0x12a7ac = '';
                    if (this['flag_usingAbility']) _0x4653ed = _0x12a7ac + _0x4653ed + '2';
                    break;
                case _0x149505:
                    this['z'] = this['z'] * 0x2;
                    if (this['flag_usingAbility'] && this['specType'] == 0x4) _0x4653ed = _0x4653ed + '2';
                    break;
            }
            return this['getPremiumSkin'](_0x4653ed);
        }, _0x5502af['prototype']['getPremiumSkinFolder'] = function() {
            switch (this['animalPremiumSkin']) {
                case 0x1:
                    return 'premium/golden/';
                case 0x2:
                    return 'premium/locked/';
            }
            return '';
        }, _0x5502af['prototype']['getPremiumSkin'] = function(_0x58b1fd) {
            return this['getPremiumSkinFolder']() + _0x58b1fd;
        }, _0x5502af['prototype']['onAnimalSpeciesSet'] = function() {}, _0x5502af['prototype']['setObjTypes'] = function(_0x23a02b, _0x3228eb) {
            this['oType'] = _0x23a02b, this['animalType'] = _0x3228eb;
        }, _0x5502af['prototype']['readCustomData_onNewlyVisible'] = function(_0x411fca) {
            _0x5502af['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x411fca);
            var _0xb772d6 = _0x411fca['readString']();
            this['nickName'] = _0xb772d6 && _0xb772d6['length'] > 0x0 ? _0xb772d6 : 'mope.io', this['animalSpecies'] = _0x411fca['readUInt16'](), this['animalSubSpecies'] = _0x411fca['readUInt16'](), this['animalPremiumSkin'] = _0x411fca['readUInt8'](), this['skinThemeID'] = _0x411fca['readUInt8'](), this['mopeSeasonID'] = _0x411fca['readUInt8'](), this['isVip'] = _0x411fca['readUInt8'](), this['onAnimalSpeciesSet']();
            this['animalPremiumSkin'] > 0x0 && this['setSparkleInterval'](_0x4ec95c(0x5, 0xa), _0x4ec95c(0x2, 0x3));
            this['setNick'](this['nickName']);
            var _0x79aacc = _0x411fca['readBitGroup']();
            this['readUpdatedFlags'](_0x79aacc), this['flag_webStuck'] && this['readUpdatedProperty'](_0x3c02e2, _0x411fca), this['flag_isInArena'] && this['readUpdatedProperty'](_0x5cebac, _0x411fca), this['flag_isDevMode'] && this['readUpdatedProperty'](_0x469ad8, _0x411fca), this['readUpdatedProperty'](_0x150e70, _0x411fca), this['readUpdatedProperty'](_0x275b86, _0x411fca);
        }, _0x5502af['prototype']['custom_canvas'] = null, _0x5502af['prototype']['drawCanvas'] = function() {
            if (!this['custom_canvas']) {
                this['custom_canvas'] = document['createElement']('canvas');
                var _0x3b775b = this['rad'] * 0x14,
                    _0x495855 = this['rad'] * 0x14;
                this['custom_canvas']['width'] = _0x3b775b, this['custom_canvas']['height'] = _0x495855;
                var _0x2fc89b = this['custom_canvas']['getContext']('2d');
                _0x2fc89b['save'](), _0x2fc89b['filter'] = 'blur(4px)', _0x2fc89b['globalAlpha'] = 0x1, _0x2fc89b['fillStyle'] = 'black', _0x2fc89b['fillRect'](0x0, 0x0, this['custom_canvas']['width'] * 0x2, this['custom_canvas']['height'] * 0x2), _0x2fc89b['globalCompositeOperation'] = 'xor', _0x2fc89b['beginPath'](), _0x2fc89b['arc'](_0x3b775b / 0x2, _0x3b775b / 0x2, this['rad'] + 0x5, 0x0, 0x2 * Math['PI']), _0x2fc89b['fillStyle'] = 'red', _0x2fc89b['fill'](), _0x2fc89b['restore']();
            }
            this['custom_canvas'] != null && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x4597c4['restore']());
        }, _0x5502af['prototype']['updateAngle'] = function(_0x2cc325) {
            var _0x2eef96 = _0x4c4686(_0x2cc325 - 0x5a);
            this['oAngle'] = this['angle'], this['nAngle'] = _0x2eef96, this['firstPosUpd'] && (this['oAngle'] = this['angle'] = this['nAngle'] = _0x2eef96);
        }, _0x5502af['prototype']['readUpdatedFlags'] = function(_0x5152a9) {
            _0x5502af['superClass']['prototype']['readUpdatedFlags']['call'](this, _0x5152a9), this['flag_lowWat'] = _0x5152a9['getBool'](), this['flag_underWater'] = _0x5152a9['getBool'](), this['flag_usingDiveAbility'] = _0x5152a9['getBool'](), this['flag_eff_invincible'] = _0x5152a9['getBool'](), this['flag_usingAbility'] = _0x5152a9['getBool'](), this['flag_tailBitten'] = _0x5152a9['getBool'](), this['flag_eff_stunned'] = _0x5152a9['getBool'](), this['flag_iceSliding'] = _0x5152a9['getBool'](), this['flag_eff_frozen'] = _0x5152a9['getBool'](), this['flag_eff_onFire'] = _0x5152a9['getBool'](), this['flag_eff_healing'] = _0x5152a9['getBool'](), this['flag_eff_poison'] = _0x5152a9['getBool'](), this['flag_constricted'] = _0x5152a9['getBool'](), this['flag_webStuck'] = _0x5152a9['getBool'](), this['flag_stealth'] = _0x5152a9['getBool'](), this['flag_eff_bleeding'] = _0x5152a9['getBool'](), this['flag_flying'] = _0x5152a9['getBool'](), this['flag_isGrabbed'] = _0x5152a9['getBool'](), this['flag_eff_aniInClaws'] = _0x5152a9['getBool'](), this['flag_eff_stunk'] = _0x5152a9['getBool'](), this['flag_cold'] = _0x5152a9['getBool'](), this['flag_inWater'] = _0x5152a9['getBool'](), this['flag_inLava'] = _0x5152a9['getBool'](), this['flag_canClimbHill'] = _0x5152a9['getBool'](), this['flag_isClimbingHill'] = _0x5152a9['getBool'](), this['flag_isDevMode'] = _0x5152a9['getBool'](), this['flag_eff_slimed'] = _0x5152a9['getBool'](), this['flag_eff_wobbling'] = _0x5152a9['getBool'](), this['flag_eff_hot'] = _0x5152a9['getBool'](), this['flag_eff_sweatPoisoned'] = _0x5152a9['getBool'](), this['flag_eff_shivering'] = _0x5152a9['getBool'](), this['flag_inHidingHole'] = _0x5152a9['getBool'](), this['flag_eff_grabbedByFlytrap'] = _0x5152a9['getBool'](), this['flag_eff_aloeveraHealing'] = _0x5152a9['getBool'](), this['flag_eff_tossedInAir'] = _0x5152a9['getBool'](), this['flag_eff_isOnSpiderWeb'] = _0x5152a9['getBool'](), this['flag_fliesLikeDragon'] = _0x5152a9['getBool'](), this['flag_eff_isInMud'] = _0x5152a9['getBool'](), this['flag_eff_statue'] = _0x5152a9['getBool'](), this['flag_eff_isOnTree'] = _0x5152a9['getBool'](), this['flag_eff_isUnderTree'] = _0x5152a9['getBool'](), this['flag_speared'] = _0x5152a9['getBool'](), this['flag_eff_dirty'] = _0x5152a9['getBool'](), this['flag_eff_virusInfection'] = _0x5152a9['getBool'](), this['flag_eff_wearingMask'] = _0x5152a9['getBool'](), this['flag_eff_sanitized'] = _0x5152a9['getBool'](), this['flag_viewing1v1Invite'] = _0x5152a9['getBool'](), this['flag_can1v1'] = _0x5152a9['getBool'](), this['flag_isInArena'] = _0x5152a9['getBool']();
            if (this['flag_isDevMode']) this['flag_hideDevPrint'] = _0x5152a9['getBool']();
            this['flag_eff_electroStun'] = _0x5152a9['getBool']();
        }, _0x5502af['prototype']['eff_webStuckType'] = 0x0, _0x5502af['prototype']['readUpdatedProperty'] = function(_0x34e3e6, _0x1bdd62) {
            if (_0x34e3e6 == _0x150e70) this['wins1v1'] = _0x1bdd62['readUInt16']();
            else {
                if (_0x34e3e6 == _0x469ad8) this['devMode_num'] = _0x1bdd62['readUInt8']();
                else {
                    if (_0x34e3e6 == _0x5cebac) this['playerNumberFor1v1Arena'] = _0x1bdd62['readUInt8']();
                    else {
                        if (_0x34e3e6 == _0x32b8a1) this['diveType'] = _0x1bdd62['readUInt8']();
                        else {
                            if (_0x34e3e6 == _0x5a4e79) this['eff_statueType'] = _0x1bdd62['readUInt8']();
                            else {
                                if (_0x34e3e6 == _0x1050c2) this['eff_constrictedSpecies'] = _0x1bdd62['readUInt16']();
                                else {
                                    if (_0x34e3e6 == _0x90391e) this['eff_constrictedSubSpecies'] = _0x1bdd62['readUInt16']();
                                    else {
                                        if (_0x34e3e6 == _0x3c02e2) this['eff_webStuckType'] = _0x1bdd62['readUInt8']();
                                        else {
                                            if (_0x34e3e6 == _0x5be628) this['eff_dirtType'] = _0x1bdd62['readUInt8']();
                                            else {
                                                if (_0x34e3e6 == _0x93b243) {
                                                    let _0x46bc60 = _0x1bdd62['readUInt8']();
                                                    this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x46bc60), this['infectionPer_n'] = _0x46bc60, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                                } else {
                                                    if (_0x34e3e6 == _0x325f2b) this['lastHidingHoleID'] = _0x1bdd62['readUInt32'](), this['hidingHoleVisibilityRad'] = _0x1bdd62['readUInt16']() / 0x4;
                                                    else {
                                                        if (_0x34e3e6 == _0x33b6d8) {
                                                            let _0x1f1fe8 = _0x1bdd62['readUInt8']();
                                                            this['infectionBarA'] < 0.001 && (this['infectionPer'] = _0x1f1fe8), this['infectionPer_n'] = _0x1f1fe8, this['infectionBarTimeoutT'] = +new Date() + 0xbb8;
                                                        } else {
                                                            if (_0x34e3e6 == _0x4555ce) this['lava'] = _0x1bdd62['readUInt8']();
                                                            else {
                                                                if (_0x34e3e6 == _0x2d50ca) {
                                                                    let _0x49e965 = _0x1bdd62['readUInt16']() / 0x4,
                                                                        _0x3ecfe9 = _0x1bdd62['readUInt16']() / 0x4;
                                                                    _0x49e965 > 0x0 && _0x3ecfe9 > 0x0 ? (this['hasDevTarget'] = _0x59b0bc == this['id'], this['target_ox'] = this['devTargetX'], this['target_oy'] = this['devTargetY'], this['target_nx'] = _0x49e965, this['target_ny'] = _0x3ecfe9) : this['hasDevTarget'] = ![];
                                                                } else _0x34e3e6 == _0x275b86 ? this['teamID'] = _0x1bdd62['readUInt8']() : this['customUpdatedProperty'](_0x34e3e6, _0x1bdd62);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }, _0x5502af['prototype']['devTargetX'] = 0x0, _0x5502af['prototype']['devTargetY'] = 0x0, _0x5502af['prototype']['target_ox'] = 0x0, _0x5502af['prototype']['target_oy'] = 0x0, _0x5502af['prototype']['target_nx'] = 0x0, _0x5502af['prototype']['target_ny'] = 0x0, _0x5502af['prototype']['hasDevTarget'] = ![], _0x5502af['prototype']['onLerpUpdate'] = function(_0x2b0fd1) {
            this['hasDevTarget'] && (this['devTargetX'] = _0x2b0fd1 * (this['target_nx'] - this['target_ox']) + this['target_ox'], this['devTargetY'] = _0x2b0fd1 * (this['target_ny'] - this['target_oy']) + this['target_oy']);
        }, _0x5502af['prototype']['beforeCustomDraw'] = function(_0x2ca737) {
            this['hasDevTarget'] && (console['log'](this['devTargetX'] + ':' + this['devTargetY']), _0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'yellow', _0x4597c4['lineWidth'] = 0x2, _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['devTargetX'], this['devTargetY']), _0x4597c4['stroke'](), _0x4597c4['restore']());
        }, _0x5502af['prototype']['customUpdatedProperty'] = function(_0x39fc28, _0x121b72) {}, _0x5502af['prototype']['diveType'] = 0x0, _0x5502af['prototype']['lastHidingHoleID'] = 0x0, _0x5502af['prototype']['hidingHoleVisibilityRad'] = 0x0, _0x5502af['prototype']['winsAddedInNick'] = ![];

        function _0x5502af(_0x17b036, _0x4b0def) {
            _0x5502af['superClass']['call'](this, _0x269668), this['animalType'] = _0x4b0def;
        }
        _0x5502af['prototype']['getAbilityInfo'] = function(_0x405e86) {
            if (this['animalType'] == _0x2f4199) {
                var _0x33865b = {};
                return _0x33865b['abilName'] = 'Claw Slash!', _0x33865b['abilImg'] = 'skins/arctic/bear/' + this['animalSpecies'] + '/clawslash.png', _0x33865b['skinThemeID'] = this['skinThemeID'], _0x33865b['mopeSeasonID'] = this['mopeSeasonID'], _0x33865b;
            } else return _0x51da37(_0x405e86);
        }, _0x5502af['prototype']['calculateZIndex'] = function() {
            this['updateZ']();
            if (_0x9ffe4d && _0x59b0bc == this['id']) this['z'] = 0x7d0 + this['rad'];
            else {
                if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else {
                        if (this['flag_flying']) {
                            this['z'] = 0x186a0;
                            if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                            else this['z'] += this['rad'];
                            this['flag_eff_aniInClaws'] && (this['z'] += 0x3e8), this['specType2'] == 0x64 && (this['z'] = 0x3f6);
                        } else {
                            if (this['flag_underWater'] || this['flag_usingAbility'] && this['animalType'] == _0xa5c3f5) this['z'] = -0x97;
                            else {
                                if (this['flag_usingAbility'] && (this['animalType'] == _0x329081 || this['animalType'] == _0xd787b4 || this['animalType'] == _0x355b29)) this['z'] = 0x2711 + this['rad'];
                                else {
                                    if (this['flag_canClimbHill'] && this['animalType'] != _0x355b29 || this['animalType'] == _0x59b412 || this['animalType'] == _0x3f35f1 || this['animalType'] == _0x248ce4 || this['animalType'] == _0x2f4199 || this['animalType'] == _0x172231 || this['animalType'] == _0x23c342 || this['animalType'] == _0x51d33b || this['animalType'] == _0x44a111 || this['animalType'] == _0x36fcdc || this['animalType'] == _0x3ccf08 || this['animalType'] == _0x2982a0 || this['animalType'] == _0x471528) this['z'] = 0x3e8 + this['rad'];
                                    else {
                                        if (this['animalType'] == _0x1de825) this['z'] = 0x3f1 + this['rad'];
                                        else {
                                            if (this['animalType'] == _0x366af5) this['z'] = 0x3f0 + (this['flag_usingAbility'] ? 0x1 : 0x0) + this['rad'];
                                            else this['z'] = this['rad'] * 1.5;
                                        }
                                    }
                                }
                                if (this['flag_fliesLikeDragon'] || this['flag_isInArena']) this['z'] += 0x7d0;
                            }
                        }
                    }
                }
            }
            this['updateZ_onTree'](this['z']);
        }, _0x5502af['prototype']['canDrawDark'] = function() {
            if (this['flag_inHidingHole']) return !![];
            return ![];
        };
        var _0x102122 = null;
        _0x5502af['prototype']['drawDark'] = function() {
            if (!this['canDrawDark']()) {
                console['log']('cant draw darkness!');
                return;
            }
            if (_0x102122 == null) {
                _0x102122 = document['createElement']('canvas');
                var _0x4642f9 = this['rad'] * 0xa,
                    _0xfd9d6d = this['rad'] * 0xa;
                _0x102122['width'] = _0x4642f9, _0x102122['height'] = _0xfd9d6d;
                var _0x34f724 = _0x102122['getContext']('2d');
                _0x34f724['save'](), _0x34f724['filter'] = 'blur(2px)', _0x34f724['globalAlpha'] = 0x1, _0x34f724['fillStyle'] = 'black', _0x34f724['fillRect'](0x0, 0x0, _0x102122['width'], _0x102122['height']), _0x34f724['globalCompositeOperation'] = 'xor', _0x34f724['beginPath'](), _0x34f724['arc'](_0x4642f9 / 0x2, _0x4642f9 / 0x2, this['rad'] - 0x3, 0x0, 0x2 * Math['PI']), _0x34f724['fillStyle'] = 'blue', _0x34f724['fill'](), _0x34f724['restore']();
            }
            _0x102122 != null && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](_0x102122, -_0x102122['width'] / 0x2, -_0x102122['height'] / 0x2, _0x102122['width'], _0x102122['height']), _0x4597c4['restore']());
        }, _0x5502af['prototype']['skinThemeID'] = 0x0, _0x5502af['prototype']['getSkinImagePath'] = function(_0xd29fe7) {
            var _0x4a6632 = '';
            if (this['skinThemeID'] != 0x0 && (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0x1 && this['animalType'] == _0x2a0d7d)) _0x4a6632 = './assets/t/' + this['skinThemeID'] + '/' + _0xd29fe7;
            else {
                var _0x382288 = _0xd29fe7['includes']('_dive') ? 0x2 : this['mopeSeasonID'];
                _0x4a6632 = './assets/s/' + _0x382288 + '/' + _0xd29fe7;
            }
            return _0x4a6632;
        }, _0x5502af['prototype']['getSkinImagePathForShop'] = function(_0x67ac63) {
            var _0x3c3c95 = '';
            if (this['skinThemeID'] != 0x0 && this['animalSpecies'] == 0x0) _0x3c3c95 = './assets/t/' + this['skinThemeID'] + '/skins/' + _0x67ac63;
            else _0x3c3c95 = './assets/s/' + this['mopeSeasonID'] + '/skins/' + _0x67ac63;
            return _0x3c3c95;
        }, _0x5502af['prototype']['getSkinImageObj'] = function(_0x6b2f4d) {
            if (_0x1b2a4b) return;
            var _0x16e4d9 = this['getSkinImagePath'](_0x6b2f4d);
            return _0x5e7a48(_0x16e4d9, function(_0x5a52d0) {
                console['log'](_0x5a52d0['src']);
            });
        }, _0x5502af['prototype']['getSkinImageObjAsync'] = async function(_0x3ac0ea) {
            var _0x13ecd8 = this['getSkinImagePath'](_0x3ac0ea);
            return _0x5ea6fe(_0x13ecd8);
        }, _0x5502af['prototype']['getImagePath'] = function(_0x5cb885, _0x1b179f) {
            const _0x3a1ca2 = _0x1b179f === undefined ? this['mopeSeasonID'] : _0x1b179f;
            var _0x1bbd47 = '';
            return _0x1bbd47 = './assets/s/' + _0x3a1ca2 + '/' + _0x5cb885, _0x1bbd47;
        }, _0x5502af['prototype']['getImageObjForPath'] = function(_0x2f93e7, _0x33dd5b) {
            var _0x18502e = this['getImagePath'](_0x2f93e7, _0x33dd5b);
            return _0x5e7a48(_0x18502e, function(_0x28c646) {
                console['log'](_0x28c646['src']);
            });
        }, _0x5502af['prototype']['setRadius'] = function(_0x4b3612) {
            this['rad'] = _0x4b3612;
        }, _0x5ddf8d['setCustomClassForGameObjType'](_0x5502af, _0x269668);
        var _0x498438 = _0x4d5a6a,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x4d5a6a['prototype']['animalType'] = _0x19eca4, _0x4d5a6a['prototype']['animalSpecies'] = 0x0, _0x4d5a6a['prototype']['animalSubSpecies'] = 0x0, _0x4d5a6a['prototype']['segmentNum'] = 0x0, _0x4d5a6a['prototype']['updateZ'] = function() {
            this['z'] = 0x1e - this['segmentNum'];
        }, _0x4d5a6a['prototype']['customDraw'] = function(_0xa437c5) {
            _0x4597c4['save']();
            var _0xc289ae = this['segmentNum'],
                _0x50573a = this['getSkinImageObj']('skins/deathworm/segment_' + _0xc289ae + '.png');
            if (_0x50573a) {
                var _0x21bcb7 = this['rad'] * 0x2;
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x50573a, -_0x21bcb7, -_0x21bcb7, 0x2 * _0x21bcb7, 0x2 * _0x21bcb7);
            }
            _0x4597c4['restore']();
        }, _0x4d5a6a['prototype']['readCustomData_onNewlyVisible'] = function(_0x601fe4) {
            _0x4d5a6a['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x601fe4), this['segmentNum'] = _0x601fe4['readUInt8'](), this['animalSpecies'] = _0x601fe4['readUInt8'](), this['animalSubSpecies'] = _0x601fe4['readUInt8'](), this['animalPremiumSkin'] = _0x601fe4['readUInt8'](), console['log']('segment num: ' + this['segmentNum']);
        };

        function _0x4d5a6a(_0xa3c48c, _0x3faf2e) {
            _0x4d5a6a['superClass']['call'](this, _0x516d90), this['animalType'] = _0x3faf2e;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4d5a6a, _0x516d90);
        var _0x4d8447 = _0x5d11ac;
        _0x1e8981['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1e8981['prototype']['constructor'] = _0x1e8981, _0x1e8981['superClass'] = _0x4d8447, _0x1e8981['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea;
        }, _0x1e8981['prototype']['readUpdatedProperty'] = function(_0x1b37d1, _0x41a09f) {
            _0x1b37d1 == _0x3ed126 && (this['webTransparency'] = _0x41a09f['readUInt8']());
        }, _0x1e8981['prototype']['readCustomData_onNewlyVisible'] = function(_0x1bf226) {
            this['webTransparency'] = _0x1bf226['readUInt8'](), this['webType'] = _0x1bf226['readUInt8']();
        }, _0x1e8981['prototype']['customDraw'] = function(_0x40275f) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= this['webTransparency'] / 0x64 * 0.9;
            var _0x1ecb7b = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png');
            if (_0x1ecb7b) {
                var _0x5892e5 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x1ecb7b, -_0x5892e5, -_0x5892e5, 0x2 * _0x5892e5, 0x2 * _0x5892e5);
            }
            _0x4597c4['restore']();
        };

        function _0x1e8981() {
            _0x1e8981['superClass']['call'](this, _0x3b5e93), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1e8981, _0x3b5e93);
        var _0x4d8447 = _0x5502af;
        _0x40d089['prototype'] = Object['create'](_0x4d8447['prototype']), _0x40d089['prototype']['constructor'] = _0x40d089, _0x40d089['superClass'] = _0x4d8447, _0x40d089['prototype']['animalInfo'] = function() {
            var _0x3fe65a = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x3fe65a['aniName'] = 'Octopus';
                    break;
                case 0x6f:
                    _0x3fe65a['aniName'] = 'Classic Octopus';
                    break;
                case 0x70:
                    _0x3fe65a['aniName'] = 'Gold-trim Octopus';
                    break;
                case 0xc8:
                    _0x3fe65a['aniName'] = 'Vampire Squid';
                    break;
                case 0xc9:
                    _0x3fe65a['aniName'] = 'Fuchsia Tiger';
                    break;
                case 0xca:
                    _0x3fe65a['aniName'] = 'Na Kika';
                    break;
            }
            return _0x3fe65a['skinName'] = this['getSkinName'](), _0x3fe65a['aniDesc'] = '', _0x3fe65a['upgradeText'] = 'UPGRADED to ' + _0x3fe65a['aniName'] + '!\x0aPress W to use your \'Disguise\' ability!\x0a(Hint: wait for prey to bite you- they get stunned!)', _0x3fe65a['aniCol'] = '#ff8340', _0x3fe65a;
        }, _0x40d089['prototype']['getSkinName'] = function() {
            let _0x487b43 = this['getSpeciesPath']() + '/octopus';
            return _0x487b43 += this['specType'] == 0x0 ? '' : 0x1, _0x487b43;
        }, _0x40d089['prototype']['getSpeciesPath'] = function() {
            return 'ocean/octopus/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x40d089['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x40d089['prototype']['getAbilityInfo'] = function(_0x320cdb) {
            var _0x33ddcb = {};
            return _0x33ddcb['abilName'] = 'Disguise', _0x33ddcb['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0x33ddcb['skinThemeID'] = this['skinThemeID'], _0x33ddcb['mopeSeasonID'] = this['mopeSeasonID'], _0x33ddcb;
        }, _0x40d089['prototype']['drawUnderSkinImg'] = function() {
            if (this['animalSpecies'] == 0xc8) return;
            var _0x34461c = 0x1f4 / 0x154,
                _0x4050be = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
            if (_0x4050be) {
                _0x4597c4['save']();
                var _0x39d6a5 = 1.1,
                    _0x3d8c2b = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x4050be, -_0x3d8c2b * _0x34461c, -_0x3d8c2b * _0x39d6a5 * _0x34461c, 0x2 * _0x3d8c2b * _0x34461c, 0x2 * _0x3d8c2b * _0x34461c), _0x4597c4['restore']();
            }
        }, _0x40d089['prototype']['readCustomData_onNewlyVisible'] = function(_0x27bceb) {
            _0x40d089['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x27bceb);
            var _0x221749 = _0x27bceb['readUInt8']() > 0x0;
            if (_0x221749) {
                var _0x4f1278 = _0x27bceb['readUInt8']() > 0x0,
                    _0x1d47c1 = _0x27bceb['readUInt16']();
                this['createDisguiseAniObj'](_0x4f1278, _0x1d47c1);
            }
        }, _0x40d089['prototype']['customUpdatedProperty'] = function(_0x56556a, _0x57889c) {
            if (_0x56556a == _0x1a2989) {
                var _0x2ddb90 = _0x57889c['readUInt8']() > 0x0;
                if (_0x2ddb90) {
                    var _0x2d2156 = _0x57889c['readUInt8']() > 0x0,
                        _0x27b7ed = _0x57889c['readUInt16']();
                    this['octoDisguiseObjT'] = !_0x2d2156 ? _0x27b7ed : 0x0, this['createDisguiseAniObj'](_0x2d2156, _0x27b7ed);
                } else this['octoDrawObj'] = null;
            }
        }, _0x40d089['prototype']['createDisguiseAniObj'] = function(_0x201f8a, _0x43d7d3) {
            if (this['octoDrawObj'] == null) {
                var _0x294c2a = _0x201f8a ? _0x269668 : _0x43d7d3,
                    _0xca3901 = _0x201f8a ? _0x43d7d3 : null,
                    _0x123814 = _0x5ddf8d['createGameObjOfOType'](_0x294c2a, _0xca3901);
                if (_0x201f8a) _0x123814['animalType'] = _0xca3901;
                _0x123814['oRad'] = this['oRad'], _0x123814['nRad'] = this['nRad'], _0x123814['curBiome'] = this['curBiome'], this['octoDrawObj'] = _0x123814;
            }
        }, _0x40d089['prototype']['drawUnderSkinImgOutline'] = function() {
            _0x40d089['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
        }, _0x40d089['prototype']['drawOnTopOfSkinImg'] = function() {
            _0x40d089['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
            if (this['flag_usingAbility'] && this['octoDrawObj'] != null) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'];
                if (this['octoDisguiseObjT'] == _0x8015d) this['octoDrawObj']['nRad'] = 0x19;
                else {
                    if (this['octoDisguiseObjT'] == _0x2d652f) this['octoDrawObj']['nRad'] = 0x11;
                    else {
                        if (this['octoDisguiseObjT'] == _0x1f50b5) this['octoDrawObj']['nRad'] = 0xf;
                        else {
                            if (this['octoDisguiseObjT'] == _0x38ce4f) this['octoDrawObj']['nRad'] = 0xf, this['octoDrawObj']['innerRad'] = 0x23;
                            else this['octoDrawObj']['nRad'] = this['rad'];
                        }
                    }
                }
                this['octoDrawObj']['mopeSeasonID'] = 0x1, this['octoDrawObj']['draw'](), _0x4597c4['restore']();
            }
        }, _0x40d089['prototype']['drawWhenUnderwater'] = function() {
            _0x40d089['superClass']['prototype']['drawWhenUnderwater']['call'](this);
        }, _0x40d089['prototype']['octoDisguiseObjT'] = 0x0, _0x40d089['prototype']['octoIsAnimal'] = ![], _0x40d089['prototype']['drawHealthBar'] = function() {
            if (this['flag_usingAbility'] && this['octoDrawObj'] != null) {
                if (this['octoIsAnimal']) _0x40d089['superClass']['prototype']['drawNickName']['call'](this, 0x1), this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x2, this['hpPer'] = 0x19, this['hpBarA'] = 0x1;
                else return;
            }
            _0x4597c4['save']();
            var _0x38a8ba = _0x476319 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
            this['hpBarA'] += (_0x38a8ba - this['hpBarA']) * 0.04;
            if (this['hpBarA'] > 0.001) {
                this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
                var _0x4fac7a = Math['max'](0x1, this['rad'] / 0x19),
                    _0x4b0f28 = 0x14 * _0x4fac7a,
                    _0x1e7db9 = 0x5 * _0x4fac7a,
                    _0x5f587b = 0x0,
                    _0x25f687 = -this['rad'] - 0xa * _0x4fac7a;
                _0x4597c4['globalAlpha'] *= this['hpBarA'], _0x4597c4['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4597c4['fillRect'](_0x5f587b - _0x4b0f28 / 0x2, _0x25f687 - _0x1e7db9 / 0x2, _0x4b0f28, _0x1e7db9), _0x4597c4['fillStyle'] = '#16D729';
                var _0x572d45 = _0x4b0f28 * (this['hpPer'] / 0x64);
                if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x572d45 = _0x4b0f28 * (0x19 / 0x64);
                _0x4597c4['fillRect'](_0x5f587b - _0x4b0f28 / 0x2, _0x25f687 - _0x1e7db9 / 0x2, _0x572d45, _0x1e7db9);
            }
            _0x4597c4['restore']();
        };

        function _0x40d089() {
            _0x40d089['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x40d089, _0x269668, _0x283bbc);
        var _0x4d8447 = _0x5502af;
        _0x5c0dae['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5c0dae['prototype']['constructor'] = _0x5c0dae, _0x5c0dae['superClass'] = _0x4d8447, _0x5c0dae['prototype']['animalData'] = {}, _0x5c0dae['prototype']['animalInfo'] = function() {
            if (this['animalData'][this['animalSpecies']] == undefined) {
                const _0x8cc0a8 = this['animalSpecies'] === 0x0 ? 'Bald Eagle' : this['animalSpecies'] === 0x1 ? 'Golden Eagle' : this['animalSpecies'] === 0x2 ? 'Harpy Eagle!' : this['animalSpecies'] === 0x3 ? 'Greater Spotted Eagle!' : this['animalSpecies'] == 0x6f ? 'Classic Eagle' : 'Gold-trim Eagle';
                this['animalData'][this['animalSpecies']] = {
                    'info': {
                        'aniName': _0x8cc0a8,
                        'aniCol': '#5b400d',
                        'upgradeText': 'UPGRADED to ' + _0x8cc0a8 + '!\x0aEagles can fly up other animals in the air!\x0a' + (this['animalSpecies'] === 0x1 ? '(Can even pick monsters!)' : this['animalSpecies'] === 0x2 ? '(picks anything including Black Dragon)' : this['animalSpecies'] === 0x3 ? '(picks everything!)' : '')
                    },
                    'ability': {
                        'abilName': 'Fly with prey',
                        'abilImg': 'skins/land/eagle/' + this['animalSpecies'] + '/eagle.png',
                        'speciesType': this['animalSpecies'],
                        'skinThemeID': this['skinThemeID'],
                        'mopeSeasonID': this['mopeSeasonID']
                    },
                    'skin': ((() => {
                        const _0xf3e16b = this['mopeSeasonID'] === 0x2 && this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0 ? '/' + this['animalSubSpecies'] : '',
                            _0x574aa2 = 'land/eagle/' + this['animalSpecies'] + _0xf3e16b + '/eagle';
                        return {
                            'path': ['' + _0x574aa2, _0x574aa2 + '1', _0x574aa2 + '2', _0x574aa2 + '3'],
                            'wing1': 'skins/' + _0x574aa2 + '_wing1.png',
                            'wing2': 'skins/' + _0x574aa2 + '_wing2.png',
                            'head': 'skins/' + _0x574aa2 + '_head.png',
                            'head1': 'skins/' + _0x574aa2 + '_head1.png',
                            'head2': 'skins/' + _0x574aa2 + '_head2.png'
                        };
                    })())
                };
            }
            return this['animalData'][this['animalSpecies']]['info']['skinName'] = this['getSkinName'](), this['animalData'][this['animalSpecies']]['info'];
        }, _0x5c0dae['prototype']['getSkinName'] = function() {
            return this['animalData'][this['animalSpecies']]['skin']['path'][this['specType']];
        }, _0x5c0dae['prototype']['getWing'] = function(_0x42c19a) {
            if (_0x42c19a == 0x1) return this['animalData'][this['animalSpecies']]['skin']['wing1'];
            else return this['animalData'][this['animalSpecies']]['skin']['wing2'];
        }, _0x5c0dae['prototype']['getHead'] = function() {
            if (this['specType'] == 0x1) return this['animalData'][this['animalSpecies']]['skin']['head2'];
            else return this['animalData'][this['animalSpecies']]['skin']['head'];
        }, _0x5c0dae['prototype']['getAbilityInfo'] = function(_0x13071c) {
            return this['animalData'][this['animalSpecies']]['ability'];
        }, _0x5c0dae['prototype']['ANIMATION_NAME'] = 'eagle', _0x5c0dae['prototype']['drawUnderSkinImg'] = function() {
            if (this['mopeSeasonID'] !== 0x0) return;
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x4597c4['save']();
                var _0x399e11 = _0x38f4be(this['ANIMATION_NAME'], this['spawnTime']);
                _0x399e11 !== undefined && _0x399e11 != null && (this['theFrame'] = _0x399e11);
                var _0x3b4bca = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                    _0xb929cd = this['getSkinImageObj'](this['getWing'](0x1));
                if (_0xb929cd) {
                    _0x4597c4['save']();
                    var _0x8db788 = -(-0.2 + _0x3b4bca) * _0x197fc1,
                        _0x2b4f0f = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x8db788);
                    var _0x4c8abc = 0x0,
                        _0x15acfe = this['rad'],
                        _0x1aa4da = _0x2b4f0f * 0x2 * 0.7,
                        _0x2aa0ea = _0x2b4f0f * 0x2,
                        _0x3fc682 = -0.2,
                        _0x8a1cb7 = 1.2;
                    _0x4597c4['drawImage'](_0xb929cd, _0x4c8abc + _0x1aa4da * -_0x3fc682, _0x15acfe + _0x2aa0ea * -_0x8a1cb7, _0x1aa4da, _0x2aa0ea), _0x4597c4['restore']();
                }
                var _0xb929cd = this['getSkinImageObj'](this['getWing'](0x2));
                if (_0xb929cd) {
                    _0x4597c4['save']();
                    var _0x8db788 = -(-0.2 + _0x3b4bca) * _0x4c4686(-0x5a),
                        _0x2b4f0f = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x8db788);
                    var _0x4c8abc = 0x0,
                        _0x15acfe = this['rad'],
                        _0x1aa4da = _0x2b4f0f * 0x2 * 0.7,
                        _0x2aa0ea = _0x2b4f0f * 0x2,
                        _0x3fc682 = 1.2,
                        _0x8a1cb7 = 1.2;
                    _0x4597c4['drawImage'](_0xb929cd, _0x4c8abc + _0x1aa4da * -_0x3fc682, _0x15acfe + _0x2aa0ea * -_0x8a1cb7, _0x1aa4da, _0x2aa0ea), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            }
        }, _0x5c0dae['prototype']['drawSkinCustomization'] = function() {
            if (this['mopeSeasonID'] == 0x0) return;
            if (!this['flag_usingAbility']) return;
            var _0x2562ed = 0x1f4 / 0x154;
            {
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    var _0x1b38e8 = _0x38f4be(this['ANIMATION_NAME'], this['spawnTime']);
                    _0x1b38e8 !== undefined && _0x1b38e8 != null && (this['theFrame'] = _0x1b38e8);
                    var _0x687d18 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x4a92c4 = this['getSkinImageObj'](this['getWing'](0x1));
                    if (_0x4a92c4) {
                        _0x4597c4['save']();
                        var _0xcfd94b = -(-0.2 + _0x687d18) * _0x197fc1,
                            _0x1d6e36 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(0x2d) + _0xcfd94b);
                        var _0x42cc1c = 0x0,
                            _0x2734ad = this['rad'],
                            _0x525966 = _0x1d6e36 * 0x2 * 0.62,
                            _0x30155f = _0x1d6e36 * 2.5,
                            _0x7b82a2 = 0.2,
                            _0x3c62da = 1.7;
                        _0x4597c4['drawImage'](_0x4a92c4, _0x42cc1c + _0x525966 * -_0x7b82a2, _0x2734ad + _0x30155f * -_0x3c62da, _0x525966, _0x30155f), _0x4597c4['restore']();
                    }
                    var _0x4a92c4 = this['getSkinImageObj'](this['getWing'](0x2));
                    if (_0x4a92c4) {
                        _0x4597c4['save']();
                        var _0xcfd94b = -(-0.2 + _0x687d18) * _0x4c4686(-0x5a),
                            _0x1d6e36 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0xcfd94b);
                        var _0x42cc1c = 0x0,
                            _0x2734ad = this['rad'],
                            _0x525966 = _0x1d6e36 * 0x2 * 0.62,
                            _0x30155f = _0x1d6e36 * 2.5,
                            _0x7b82a2 = 0.8,
                            _0x3c62da = 1.7;
                        _0x4597c4['drawImage'](_0x4a92c4, _0x42cc1c + _0x525966 * -_0x7b82a2, _0x2734ad + _0x30155f * -_0x3c62da, _0x525966, _0x30155f), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                } else {
                    if (this['specType'] == 0x1 && this['mopeSeasonID'] != 0x0) {
                        _0x4597c4['save']();
                        var _0x501385 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x687d18 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x501385, 0.7, 0.3, 0x2) : 0x0,
                            _0x4a92c4 = this['getSkinImageObj'](this['getWing'](0x1));
                        if (_0x4a92c4) {
                            _0x4597c4['save']();
                            var _0xcfd94b = -(-0.2 + _0x687d18) * _0x4c4686(0x2d),
                                _0x1d6e36 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(0xf) + _0xcfd94b);
                            var _0x42cc1c = 0x0,
                                _0x2734ad = this['rad'],
                                _0x525966 = _0x1d6e36 * 0x2 * 0.8,
                                _0x30155f = _0x1d6e36 * 2.2,
                                _0x7b82a2 = 0x0,
                                _0x3c62da = 1.5;
                            _0x4597c4['drawImage'](_0x4a92c4, _0x42cc1c + _0x525966 * -_0x7b82a2, _0x2734ad + _0x30155f * -_0x3c62da, _0x525966, _0x30155f), _0x4597c4['restore']();
                        }
                        var _0x4a92c4 = this['getSkinImageObj'](this['getWing'](0x2));
                        if (_0x4a92c4) {
                            _0x4597c4['save']();
                            var _0xcfd94b = -(-0.2 + _0x687d18) * _0x4c4686(-0x2d),
                                _0x1d6e36 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(-0xf) + _0xcfd94b);
                            var _0x42cc1c = 0x0,
                                _0x2734ad = this['rad'],
                                _0x525966 = _0x1d6e36 * 0x2 * 0.8,
                                _0x30155f = _0x1d6e36 * 2.2,
                                _0x7b82a2 = 0x1,
                                _0x3c62da = 1.5;
                            _0x4597c4['drawImage'](_0x4a92c4, _0x42cc1c + _0x525966 * -_0x7b82a2, _0x2734ad + _0x30155f * -_0x3c62da, _0x525966, _0x30155f), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x4e2921 = -0.05;
                    this['flag_flying'] ? _0x4e2921 = 0.1 : this['animalSpecies'] == 0x2 && (_0x4e2921 = -0.075);
                    var _0x37133d = this['getSkinImageObj'](this['getHead']());
                    if (_0x37133d) {
                        _0x4597c4['save']();
                        var _0x1d6e36 = this['rad'];
                        _0x4597c4['drawImage'](_0x37133d, -_0x1d6e36 * _0x2562ed, (-_0x1d6e36 + _0x1d6e36 * _0x4e2921) * _0x2562ed, 0x2 * _0x1d6e36 * _0x2562ed, 0x2 * _0x1d6e36 * _0x2562ed), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x5c0dae() {
            _0x5c0dae['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5c0dae, _0x269668, _0x329081);
        var _0x4d8447 = _0x5502af;
        _0x230f52['prototype'] = Object['create'](_0x4d8447['prototype']), _0x230f52['prototype']['constructor'] = _0x230f52, _0x230f52['superClass'] = _0x4d8447, _0x230f52['prototype']['getSkinName'] = function() {
            return 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich';
        }, _0x230f52['prototype']['getSubSpecies'] = function() {
            return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
        }, _0x230f52['prototype']['animalInfo'] = function() {
            var _0x4f93d9 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4f93d9['aniName'] = 'Ostrich!';
                    break;
                case 0x1:
                    _0x4f93d9['aniName'] = 'Golden Ostrich!';
                    break;
                case 0x2:
                    _0x4f93d9['aniName'] = 'Ruffled Ostrich!';
                    break;
                case 0x6f:
                    _0x4f93d9['aniName'] = 'Classic Ostrich';
                    break;
                case 0xca:
                    _0x4f93d9['aniName'] = 'Sunset Ostrich';
                    break;
                case 0xcc:
                    _0x4f93d9['aniName'] = 'Necromancer Ostrich!';
                    break;
            }
            return _0x4f93d9['skinName'] = 'land/ostrich/' + this['animalSpecies'] + this['getSubSpecies']() + '/ostrich', _0x4f93d9['aniDesc'] = '', _0x4f93d9['upgradeText'] = 'UPGRADED to ' + _0x4f93d9['aniName'] + '! Lay eggs to hatch babies! \x0aCommand babies by placing your crosshair (right-click/W)-\x0a They can attack prey!', _0x4f93d9['aniCol'] = '#FF9000', _0x4f93d9;
        }, _0x230f52['prototype']['getAbilityInfo'] = function(_0x34b9b9) {
            var _0x246d9b = {};
            return _0x246d9b['abilName'] = 'Command Babies!', _0x246d9b['abilImg'] = 'skins/land/ostrich/' + this['animalSpecies'] + '/ostrich-baby.png', _0x246d9b['skinThemeID'] = this['skinThemeID'], _0x246d9b['mopeSeasonID'] = this['mopeSeasonID'], _0x246d9b;
        }, _0x230f52['prototype']['getSkinImageObj'] = function(_0x5787ef) {
            var _0x596e05 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x5787ef, _0x596e05);
        };

        function _0x230f52() {
            _0x230f52['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x230f52, _0x269668, _0x123d4e);
        var _0x4d8447 = _0x5502af;
        _0x20b6fd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x20b6fd['prototype']['constructor'] = _0x20b6fd, _0x20b6fd['superClass'] = _0x4d8447, _0x20b6fd['prototype']['getSkinName'] = function() {
            return 'land/ostrich/' + this['animalSpecies'] + '/ostrich-baby';
        }, _0x20b6fd['prototype']['isEdibleOutlined'] = function() {
            if (this['mommyID'] == _0x59b0bc) return ![];
            var _0x16de5e = _0x4b4e0c[_0x59b0bc];
            if (_0x16de5e) {
                var _0x107469 = _0x16de5e['animalType'];
                if (_0x107469 == _0x1b196d || _0x107469 == _0x2982a0 || _0x107469 == _0x26d386) return ![];
            }
            return _0x20b6fd['superClass']['prototype']['isEdibleOutlined']['call'](this);;
        }, _0x20b6fd['prototype']['getSkinImageObj'] = function(_0x361617) {
            var _0x5bc2ff = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x361617, _0x5bc2ff);
        }, _0x20b6fd['prototype']['readCustomData_onNewlyVisible'] = function(_0x180123) {
            _0x20b6fd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x180123), this['mommyID'] = _0x180123['readUInt32']();
        };

        function _0x20b6fd() {
            _0x20b6fd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x20b6fd, _0x269668, _0x4d08a1);
        var _0x4d8447 = _0x5502af;
        _0x195a18['prototype'] = Object['create'](_0x4d8447['prototype']), _0x195a18['prototype']['constructor'] = _0x195a18, _0x195a18['superClass'] = _0x4d8447, _0x195a18['prototype']['getSkinName'] = function() {
            var _0x4f1ed3 = this['getSpeciesPath']('land/falcon') + '/falcon';
            return _0x4f1ed3 += this['specType'] == 0x0 ? '' : this['specType'], _0x4f1ed3;
        }, _0x195a18['prototype']['animalInfo'] = function() {
            var _0x49675a = {},
                _0x27bd44 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x49675a['aniName'] = 'Falcon';
                    break;
                case 0x1:
                    _0x49675a['aniName'] = 'Predator';
                    break;
                case 0x2:
                    _0x49675a['aniName'] = 'Shaheen', _0x27bd44 = '\x0a(Shaheen flies longer and swoop everything!)';
                    break;
                case 0x6f:
                    _0x49675a['aniName'] = 'Classic Falcon';
                    break;
                case 0x70:
                    _0x49675a['aniName'] = 'Gold-trim Falcon';
                    break;
                case 0xca:
                    _0x49675a['aniName'] = 'Meteor Falcon';
                    break;
            }
            return _0x49675a['upgradeText'] = 'UPGRADED to ' + _0x49675a['aniName'] + '! \x0aFly, and do a powerful dive attack! Aim it well.' + _0x27bd44, _0x49675a['aniCol'] = '#FF9000', _0x49675a['skinName'] = 'land/falcon/' + this['animalSpecies'] + '/falcon' + (this['specType'] == 0x0 ? '' : this['specType']), _0x49675a;
        }, _0x195a18['prototype']['getWing'] = function(_0xd4c91b, _0x3f0153, _0x1e5ddd) {
            _0x1e5ddd = !![];
            var _0x45a48a = 'skins/land/' + (_0x1e5ddd ? this['getSpeciesPath'](_0xd4c91b) + '/' : _0xd4c91b + '/');
            return _0x45a48a += _0xd4c91b + '_wing' + _0x3f0153 + '.png', _0x45a48a;
        }, _0x195a18['prototype']['getHead'] = function(_0x5560fb, _0x35654d, _0x90accc) {
            _0x90accc = !![];
            var _0x9b3e07 = 'skins/land/' + (_0x90accc ? this['getSpeciesPath'](_0x5560fb) + '/' : _0x5560fb + '/');
            return _0x9b3e07 += _0x5560fb + '_head.png', _0x9b3e07;
        }, _0x195a18['prototype']['getAbilityInfo'] = function(_0x127855) {
            var _0x552217 = {};
            return _0x552217['abilName'] = 'Sky dive', _0x552217['abilImg'] = 'skins/land/falcon/' + this['animalSpecies'] + '/falcon_ability.png', _0x552217['speciesType'] = this['animalSpecies'], _0x552217['skinThemeID'] = this['skinThemeID'], _0x552217['mopeSeasonID'] = this['mopeSeasonID'], _0x552217;
        }, _0x195a18['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x27cd1d = 'skins',
                _0x30e90f = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
                _0x4597c4['save']();
                var _0x1f5e30 = _0x38f4be('bird', this['spawnTime']);
                _0x1f5e30 !== undefined && _0x1f5e30 != null && (this['theFrame'] = _0x1f5e30);
                var _0x1d5e44 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                    _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
                if (_0x3ad052) {
                    _0x4597c4['save']();
                    var _0x3f94a1 = -(-0.2 + _0x1d5e44) * _0x4c4686(0x50),
                        _0x2fa025 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(0x19) + _0x3f94a1);
                    var _0x85394a = 0x0,
                        _0x4baf80 = this['rad'],
                        _0x327a92 = _0x2fa025 * 0x2 * 0.65,
                        _0x327c1f = _0x2fa025 * 2.5,
                        _0x2548ac = 0x0,
                        _0x7ab40b = 1.5;
                    _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                }
                var _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
                if (_0x3ad052) {
                    _0x4597c4['save']();
                    var _0x3f94a1 = -(-0.2 + _0x1d5e44) * _0x4c4686(-0x50),
                        _0x2fa025 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-0x19) + _0x3f94a1);
                    var _0x85394a = 0x0,
                        _0x4baf80 = this['rad'],
                        _0x327a92 = _0x2fa025 * 0x2 * 0.65,
                        _0x327c1f = _0x2fa025 * 2.5,
                        _0x2548ac = 0x1,
                        _0x7ab40b = 1.5;
                    _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            } else {
                if (this['flag_flying'] && this['specType'] == 0x2) {
                    _0x4597c4['save']();
                    var _0x165a4f = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x1d5e44 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x165a4f, 0.7, 0.3, 0x2) : 0x0,
                        _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, ![]));
                    if (_0x3ad052) {
                        _0x4597c4['save']();
                        var _0x3f94a1 = -(-0.2 + 0x0) * _0x4c4686(0x19),
                            _0x2fa025 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x3f94a1);
                        var _0x85394a = 0x0,
                            _0x4baf80 = this['rad'],
                            _0x327a92 = _0x2fa025 * 0x2 * 0.7,
                            _0x327c1f = _0x2fa025 * 2.2,
                            _0x2548ac = 0x0,
                            _0x7ab40b = 1.5;
                        _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                    }
                    var _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, ![]));
                    if (_0x3ad052) {
                        _0x4597c4['save']();
                        var _0x3f94a1 = -(-0.2 + 0x0) * _0x4c4686(-0x19),
                            _0x2fa025 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x3f94a1);
                        var _0x85394a = 0x0,
                            _0x4baf80 = this['rad'],
                            _0x327a92 = _0x2fa025 * 0x2 * 0.7,
                            _0x327c1f = _0x2fa025 * 2.2,
                            _0x2548ac = 0x1,
                            _0x7ab40b = 1.5;
                        _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                } else {
                    if (this['flag_flying'] && this['specType'] == 0x3) {
                        _0x4597c4['save']();
                        var _0x165a4f = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x1d5e44 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x165a4f, 0.5, 0.4, 0x2) : 0x0,
                            _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x1, !![]));
                        if (_0x3ad052) {
                            _0x4597c4['save']();
                            var _0x3f94a1 = -(-0.2 + _0x1d5e44) * _0x4c4686(0x2d),
                                _0x2fa025 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(0xf) + _0x3f94a1);
                            var _0x85394a = 0x0,
                                _0x4baf80 = this['rad'],
                                _0x327a92 = _0x2fa025 * 0x2 * 0x1,
                                _0x327c1f = _0x2fa025 * 2.2,
                                _0x2548ac = 0x0,
                                _0x7ab40b = 1.5;
                            _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                        }
                        var _0x3ad052 = this['getSkinImageObj'](this['getWing']('falcon', 0x2, !![]));
                        if (_0x3ad052) {
                            _0x4597c4['save']();
                            var _0x3f94a1 = -(-0.2 + _0x1d5e44) * _0x4c4686(-0x2d),
                                _0x2fa025 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(-0xf) + _0x3f94a1);
                            var _0x85394a = 0x0,
                                _0x4baf80 = this['rad'],
                                _0x327a92 = _0x2fa025 * 0x2 * 0x1,
                                _0x327c1f = _0x2fa025 * 2.2,
                                _0x2548ac = 0x1,
                                _0x7ab40b = 1.5;
                            _0x4597c4['drawImage'](_0x3ad052, _0x85394a + _0x327a92 * -_0x2548ac, _0x4baf80 + _0x327c1f * -_0x7ab40b, _0x327a92, _0x327c1f), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                }
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x32fb4d = this['getSkinImageObj'](this['getHead']('/falcon', !![]));
                if (_0x32fb4d) {
                    _0x4597c4['save']();
                    var _0x2fa025 = this['rad'] * (this['specType'] == 0x3 ? 1.2 : 0x1),
                        _0x4f152c = _0x2fa025 * 0.2;
                    if (this['specType'] == 0x3) _0x4f152c = _0x2fa025 * -0.15;
                    _0x4597c4['drawImage'](_0x32fb4d, -_0x2fa025 * _0x30e90f, (-_0x2fa025 + _0x4f152c) * _0x30e90f, 0x2 * _0x2fa025 * _0x30e90f, 0x2 * _0x2fa025 * _0x30e90f), _0x4597c4['restore']();
                }
            }
        };

        function _0x195a18() {
            _0x195a18['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x195a18, _0x269668, _0x24c6d5);
        var _0x4d8447 = _0x5502af;
        _0x131f2d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x131f2d['prototype']['constructor'] = _0x131f2d, _0x131f2d['superClass'] = _0x4d8447, _0x131f2d['prototype']['animalInfo'] = function() {
            var _0x6bc8d3 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x6bc8d3['aniName'] = 'Snowy Owl';
                    break;
                case 0x6f:
                    _0x6bc8d3['aniName'] = 'Classic Snowy Owl!';
                    break;
                case 0x70:
                    _0x6bc8d3['aniName'] = 'Gold-trim Snowy Owl';
                    break;
                case 0xc9:
                    _0x6bc8d3['aniName'] = 'Owlrigami';
                    break;
            }
            return _0x6bc8d3['skinName'] = this['getSkinName'](), _0x6bc8d3['aniDesc'] = '', _0x6bc8d3['upgradeText'] = 'UPGRADED to ' + _0x6bc8d3['aniName'] + '!\x0aAim the crosshair\x0aright-click / press W when its on top of prey to attack', _0x6bc8d3['aniCol'] = '#633838', _0x6bc8d3;
        }, _0x131f2d['prototype']['getSkinName'] = function() {
            let _0x3d7fb8 = this['getSpeciesPath']() + '/snowyowl';
            return _0x3d7fb8 += this['specType'] == 0x0 ? '' : this['specType'], _0x3d7fb8;
        }, _0x131f2d['prototype']['getSpeciesPath'] = function() {
            return 'arctic/snowyowl/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x131f2d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x131f2d['prototype']['getWing'] = function(_0x98830a) {
            var _0x32deef = 'skins/' + this['getSpeciesPath']();
            return _0x32deef += '/snowyowl_wing' + _0x98830a + '.png', _0x32deef;
        }, _0x131f2d['prototype']['getHead'] = function() {
            var _0x5c6b58 = 'skins/' + this['getSpeciesPath']();
            return _0x5c6b58 += '/snowyowl_head.png', _0x5c6b58;
        }, _0x131f2d['prototype']['getAbilityInfo'] = function(_0x3d1136) {
            var _0x2be97b = {};
            return _0x2be97b['abilName'] = 'Target Prey!', _0x2be97b['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/snowyowl.png', _0x2be97b['skinThemeID'] = this['skinThemeID'], _0x2be97b['mopeSeasonID'] = this['mopeSeasonID'], _0x2be97b;
        }, _0x131f2d['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x344236 = 'skins',
                _0xc45ed4 = 0x1f4 / 0x154;
            if (this['flag_flying'] && !this['flag_isGrabbed'] && this['specType'] == 0x1) {
                _0x4597c4['save']();
                var _0x2dfadd = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x515a4a = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x2dfadd, 0.7, 0.4, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x41d767 = this['getSkinImageObj'](this['getWing'](0x1));
                if (_0x41d767) {
                    _0x4597c4['save']();
                    var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(0x50),
                        _0x517b21 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(0x19) + _0x462084);
                    var _0x457f76 = 0x0,
                        _0x421952 = this['rad'],
                        _0x29a0f8 = _0x517b21 * 0x2 * 0.65,
                        _0x48b552 = _0x517b21 * 2.5,
                        _0x426e82 = 0x0,
                        _0x23f54e = 1.5;
                    _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                }
                var _0x41d767 = this['getSkinImageObj'](this['getWing'](0x2));
                if (_0x41d767) {
                    _0x4597c4['save']();
                    var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(-0x50),
                        _0x517b21 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-0x19) + _0x462084);
                    var _0x457f76 = 0x0,
                        _0x421952 = this['rad'],
                        _0x29a0f8 = _0x517b21 * 0x2 * 0.65,
                        _0x48b552 = _0x517b21 * 2.5,
                        _0x426e82 = 0x1,
                        _0x23f54e = 1.5;
                    _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            } else {
                if (this['flag_flying'] && this['specType'] == 0x2) {
                    _0x4597c4['save']();
                    var _0x2dfadd = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x515a4a = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x2dfadd, 0.7, 0.3, 0x2) : 0x0,
                        _0x41d767 = this['getSkinImageObj'](this['getWing'](0x1));
                    if (_0x41d767) {
                        _0x4597c4['save']();
                        var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(0x2d),
                            _0x517b21 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(0xf) + _0x462084);
                        var _0x457f76 = 0x0,
                            _0x421952 = this['rad'],
                            _0x29a0f8 = _0x517b21 * 0x2 * 0.7,
                            _0x48b552 = _0x517b21 * 2.2,
                            _0x426e82 = 0x0,
                            _0x23f54e = 1.5;
                        _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                    }
                    var _0x41d767 = this['getSkinImageObj'](this['getWing'](0x2));
                    if (_0x41d767) {
                        _0x4597c4['save']();
                        var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(-0x2d),
                            _0x517b21 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0xf) + _0x462084);
                        var _0x457f76 = 0x0,
                            _0x421952 = this['rad'],
                            _0x29a0f8 = _0x517b21 * 0x2 * 0.7,
                            _0x48b552 = _0x517b21 * 2.2,
                            _0x426e82 = 0x1,
                            _0x23f54e = 1.5;
                        _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                } else {
                    if (this['flag_flying'] && this['specType'] == 0x3) {
                        _0x4597c4['save']();
                        var _0x2dfadd = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x515a4a = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x2dfadd, 0.5, 0.5, 0x2) : 0x0,
                            _0x41d767 = this['getSkinImageObj'](this['getWing'](0x1));
                        if (_0x41d767) {
                            _0x4597c4['save']();
                            var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(0x2d),
                                _0x517b21 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(0x19) + _0x462084);
                            var _0x457f76 = 0x0,
                                _0x421952 = this['rad'],
                                _0x29a0f8 = _0x517b21 * 0x2 * 0.7,
                                _0x48b552 = _0x517b21 * 2.2,
                                _0x426e82 = 0x0,
                                _0x23f54e = 1.5;
                            _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                        }
                        var _0x41d767 = this['getSkinImageObj'](this['getWing'](0x2));
                        if (_0x41d767) {
                            _0x4597c4['save']();
                            var _0x462084 = -(-0.2 + _0x515a4a) * _0x4c4686(-0x2d),
                                _0x517b21 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(-0x19) + _0x462084);
                            var _0x457f76 = 0x0,
                                _0x421952 = this['rad'],
                                _0x29a0f8 = _0x517b21 * 0x2 * 0.7,
                                _0x48b552 = _0x517b21 * 2.2,
                                _0x426e82 = 0x1,
                                _0x23f54e = 1.5;
                            _0x4597c4['drawImage'](_0x41d767, _0x457f76 + _0x29a0f8 * -_0x426e82, _0x421952 + _0x48b552 * -_0x23f54e, _0x29a0f8, _0x48b552), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                }
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x10b8b8 = this['getSkinImageObj'](this['getHead']());
                if (_0x10b8b8) {
                    _0x4597c4['save']();
                    var _0x517b21 = this['rad'];
                    _0x4597c4['drawImage'](_0x10b8b8, -_0x517b21 * _0xc45ed4, (-_0x517b21 + _0x517b21 * 0.1) * _0xc45ed4, 0x2 * _0x517b21 * _0xc45ed4, 0x2 * _0x517b21 * _0xc45ed4), _0x4597c4['restore']();
                }
            }
        };

        function _0x131f2d() {
            _0x131f2d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x131f2d, _0x269668, _0x4657a6);
        var _0x4d8447 = _0x5502af;
        _0xba45['prototype'] = Object['create'](_0x4d8447['prototype']), _0xba45['prototype']['constructor'] = _0xba45, _0xba45['superClass'] = _0x4d8447, _0xba45['prototype']['animalInfo'] = function() {
            const _0xe862ba = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xe862ba['aniName'] = 'Pelican';
                    break;
                case 0x6f:
                    _0xe862ba['aniName'] = 'Classic Pelican';
                    break;
                case 0x70:
                    _0xe862ba['aniName'] = 'Gold-trim Pelican';
                    break;
            }
            return _0xe862ba['upgradeText'] = 'UPGRADED to ' + _0xe862ba['aniName'] + '! \x0aPick up water (and prey!) in your mouth,\x0afly, and drop water on prey! (press W again)', _0xe862ba['skinName'] = this['getSkinName'](), _0xe862ba;
        }, _0xba45['prototype']['getSpeciesPath'] = function(_0x22501b) {
            return 'pelican/' + this['animalSpecies'];
        }, _0xba45['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']('pelican') + '/pelican' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0xba45['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x5273af = 0x1f4 / 0x154,
                _0x43deda = this['rad'] - this['outlineW'],
                _0x3328ae = 'skins';
            if (this['flag_flying']) {
                var _0x15398b = '';
                _0x15398b = 'pelican', _0x4597c4['save']();
                var _0x4ae467 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x50c57a = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x4ae467, 0.9, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x1f1b4a = this['getSkinImageObj'](this['getWing']('pelican', 0x1, !![]));
                if (_0x1f1b4a) {
                    _0x4597c4['save']();
                    var _0x263528 = -(-0.2 + _0x50c57a) * _0x197fc1,
                        _0x43deda = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x263528);
                    var _0x5416fb = 0x0,
                        _0x45be1c = this['rad'],
                        _0x350d43 = _0x43deda * 0x2 * 0.6,
                        _0x47bc5d = _0x43deda * 2.3,
                        _0x4820c8 = 0x0,
                        _0x4e598c = 1.7;
                    _0x4597c4['drawImage'](_0x1f1b4a, _0x5416fb + _0x350d43 * -_0x4820c8, _0x45be1c + _0x47bc5d * -_0x4e598c, _0x350d43, _0x47bc5d), _0x4597c4['restore']();
                }
                var _0x1f1b4a = this['getSkinImageObj'](this['getWing']('pelican', 0x2, !![]));
                if (_0x1f1b4a) {
                    _0x4597c4['save']();
                    var _0x263528 = -(-0.2 + _0x50c57a) * _0x4c4686(-0x5a),
                        _0x43deda = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x263528);
                    var _0x5416fb = 0x0,
                        _0x45be1c = this['rad'],
                        _0x350d43 = _0x43deda * 0x2 * 0.6,
                        _0x47bc5d = _0x43deda * 2.3,
                        _0x4820c8 = 0x1,
                        _0x4e598c = 1.7;
                    _0x4597c4['drawImage'](_0x1f1b4a, _0x5416fb + _0x350d43 * -_0x4820c8, _0x45be1c + _0x47bc5d * -_0x4e598c, _0x350d43, _0x47bc5d), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            } else {
                if (this['specType'] == 0x1) {
                    var _0x15398b = '';
                    _0x15398b = 'pelican', _0x4597c4['save']();
                    var _0x4ae467 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x50c57a = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x4ae467, 0.9, 0.3, 0x2) : 0x0,
                        _0x1f1b4a = this['getSkinImageObj'](this['getWing']('pelican', 0xb, !![]));
                    if (_0x1f1b4a) {
                        _0x4597c4['save']();
                        var _0x263528 = -(-0.2 + _0x50c57a) * _0x4c4686(0x2d),
                            _0x43deda = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x263528);
                        var _0x5416fb = 0x0,
                            _0x45be1c = this['rad'],
                            _0x350d43 = _0x43deda * 0x2 * 0.7,
                            _0x47bc5d = _0x43deda * 2.2,
                            _0x4820c8 = 0x0,
                            _0x4e598c = 1.7;
                        _0x4597c4['drawImage'](_0x1f1b4a, _0x5416fb + _0x350d43 * -_0x4820c8, _0x45be1c + _0x47bc5d * -_0x4e598c, _0x350d43, _0x47bc5d), _0x4597c4['restore']();
                    }
                    var _0x1f1b4a = this['getSkinImageObj'](this['getWing']('pelican', 0x15, !![]));
                    if (_0x1f1b4a) {
                        _0x4597c4['save']();
                        var _0x263528 = -(-0.2 + _0x50c57a) * _0x4c4686(-0x2d),
                            _0x43deda = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x263528);
                        var _0x5416fb = 0x0,
                            _0x45be1c = this['rad'],
                            _0x350d43 = _0x43deda * 0x2 * 0.7,
                            _0x47bc5d = _0x43deda * 2.2,
                            _0x4820c8 = 0x1,
                            _0x4e598c = 1.7;
                        _0x4597c4['drawImage'](_0x1f1b4a, _0x5416fb + _0x350d43 * -_0x4820c8, _0x45be1c + _0x47bc5d * -_0x4e598c, _0x350d43, _0x47bc5d), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
            }
            if (this['specType'] != 0x0 && !this['flag_isGrabbed']) {
                if (this['specType'] == 0x2) {
                    var _0x14affa = _0x3328ae + '/' + this['getSpeciesPath']('pelican') + '/ability_pelican.png',
                        _0x15022c = this['getSkinImageObj'](_0x14affa);
                    if (_0x15022c) {
                        _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(0xb4));
                        var _0x43deda = this['rad'] * 0.3,
                            _0x54c9b1 = this['rad'] * 0x1;
                        _0x4597c4['drawImage'](_0x15022c, -_0x43deda * _0x5273af, -_0x43deda - _0x54c9b1 * _0x5273af, 0x2 * _0x43deda * _0x5273af, 0x2 * _0x43deda * _0x5273af), _0x4597c4['restore']();
                    }
                }
                var _0x576281 = this['getSkinImageObj'](this['getHead']('pelican', !![]));
                if (_0x576281) {
                    _0x4597c4['save']();
                    var _0x43deda = this['rad'] * 0x1,
                        _0x54c9b1 = -this['rad'] * 0.3;
                    _0x4597c4['drawImage'](_0x576281, -_0x43deda * _0x5273af, -_0x43deda + _0x54c9b1 * _0x5273af, 0x2 * _0x43deda * _0x5273af, 0x2 * _0x43deda * _0x5273af), _0x4597c4['restore']();
                }
            }
        };

        function _0xba45() {
            _0xba45['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xba45, _0x269668, _0xd787b4);
        var _0x4d8447 = _0x5502af;
        _0x4ea629['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4ea629['prototype']['constructor'] = _0x4ea629, _0x4ea629['superClass'] = _0x4d8447, _0x4ea629['prototype']['updateZ'] = function() {
            this['z'] = 0x3eb + this['rad'];
        }, _0x4ea629['prototype']['getSkinName'] = function() {
            var _0x4dd5a3 = '';
            if (this['flag_usingAbility'] && !this['flag_underWater']) _0x4dd5a3 = '2';
            return 'frog/frog' + _0x4dd5a3;
        }, _0x4ea629['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility'] && !this['flag_underWater']) {
                var _0xb83e16 = this['rad'] - this['outlineW'],
                    _0x589313 = 0x1f4 / 0x154,
                    _0x2debd7 = this['getSkinImageObj']('./skins/frog/frogLegs.png');
                if (_0x2debd7) _0x4597c4['drawImage'](_0x2debd7, -_0xb83e16 * _0x589313, (-_0xb83e16 - _0xb83e16) * _0x589313, 0x2 * _0xb83e16 * _0x589313, 0x2 * _0xb83e16 * _0x589313);
            }
        }, _0x4ea629['prototype']['canDrawAnimalSkin'] = function() {
            return !this['flag_underWater'];
        }, _0x4ea629['prototype']['drawUnderWater'] = function() {
            this['flag_underWater'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['scale'](0x1, 1.5), _0x4096ce(0x0, 0x0, this['rad'] * 0.5, '#598b30'), _0x4096ce(0x0, this['rad'] * -0.6, this['rad'] * 0.3, '#64a034'), _0x4597c4['restore']());
        };

        function _0x4ea629() {
            _0x4ea629['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4ea629, _0x269668, _0x25446a);
        var _0x498438 = _0x48453e,
            _0x4d8447 = _0x5502af;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x48453e['prototype']['isAttacking'] = ![], _0x48453e['prototype']['objSkinPath'] = {}, _0x48453e['prototype']['getSkinName'] = function() {
            return this['objSkinPath'][this['getSkinIndex']()]['skin'];
        }, _0x48453e['prototype']['getSkinIndex'] = function() {
            if (this['animalSpecies'] == 0x2 && (this['isAttacking'] || this['flag_usingAbility'])) return 0x3;
            return this['animalSpecies'];
        }, _0x48453e['prototype']['setSkinPath'] = function() {}, _0x48453e['prototype']['onAnimalSpeciesSet'] = function() {
            let _0x161c3a = this['animalSpecies'],
                _0x213e83 = '',
                {
                    skin: _0x247154,
                    wing1: _0x499fe7,
                    wing2: _0x1ebd7b,
                    head: _0x52140d
                } = {
                    'skin': 'duck/' + _0x161c3a + '/duck' + _0x213e83,
                    'wing1': 'skins/duck/' + _0x161c3a + '/duck_wing1.png',
                    'wing2': 'skins/duck/' + _0x161c3a + '/duck_wing2.png',
                    'head': 'skins/duck/' + _0x161c3a + '/duck_head.png'
                };
            this['objSkinPath'][_0x161c3a] = {
                'skin': _0x247154,
                'wing1': _0x499fe7,
                'wing2': _0x1ebd7b,
                'head': _0x52140d
            }, _0x161c3a === 0x2 && (_0x213e83 = 0x1, {
                skin: _0x247154,
                wing1: _0x499fe7,
                wing2: _0x1ebd7b,
                head: _0x52140d
            } = {
                'skin': 'duck/' + _0x161c3a + '/duck' + _0x213e83,
                'wing1': 'skins/duck/' + _0x161c3a + '/duck_wing1.png',
                'wing2': 'skins/duck/' + _0x161c3a + '/duck_wing2.png',
                'head': 'skins/duck/' + _0x161c3a + '/duck_head.png'
            }, this['objSkinPath'][0x3] = {
                'skin': _0x247154,
                'wing1': _0x499fe7,
                'wing2': _0x1ebd7b,
                'head': _0x52140d
            });
        }, _0x498438['prototype']['drawSkinCustomization'] = function() {
            this['isAttacking'] && this['animalSpecies'] == 0x2 && this['angryGooseAnimation'](), this['flag_usingAbility'] && this['animalSpecies'] == 0x2 && this['flyingAnimation']();
        }, _0x48453e['prototype']['angryGooseAnimation'] = function() {
            var _0x4ead26 = this['skinScale'];
            _0x4597c4['save']();
            var _0x3fe184 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x9c4247 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x3fe184, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                _0x5ac51e = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
            if (_0x5ac51e) {
                _0x4597c4['save']();
                var _0x368777 = -(-0.2 + _0x9c4247) * _0x4c4686(0xf),
                    _0x447f81 = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(0xf) + _0x368777);
                var _0x31143f = 0x0,
                    _0x28c2d4 = this['rad'],
                    _0x2a632f = _0x447f81 * 0x2 * 0.7,
                    _0x42ede3 = _0x447f81 * 2.2,
                    _0x585b0f = 0x0,
                    _0x47e24f = 1.5;
                _0x4597c4['drawImage'](_0x5ac51e, _0x31143f + _0x2a632f * -_0x585b0f, _0x28c2d4 + _0x42ede3 * -_0x47e24f, _0x2a632f, _0x42ede3), _0x4597c4['restore']();
            }
            var _0x5ac51e = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
            if (_0x5ac51e) {
                _0x4597c4['save']();
                var _0x368777 = -(-0.2 + _0x9c4247) * _0x4c4686(-0xf),
                    _0x447f81 = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(-0xf) + _0x368777);
                var _0x31143f = 0x0,
                    _0x28c2d4 = this['rad'],
                    _0x2a632f = _0x447f81 * 0x2 * 0.7,
                    _0x42ede3 = _0x447f81 * 2.2,
                    _0x585b0f = 0x1,
                    _0x47e24f = 1.5;
                _0x4597c4['drawImage'](_0x5ac51e, _0x31143f + _0x2a632f * -_0x585b0f, _0x28c2d4 + _0x42ede3 * -_0x47e24f, _0x2a632f, _0x42ede3), _0x4597c4['restore']();
            }
            var _0x196614 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
            if (_0x196614) {
                _0x4597c4['save']();
                var _0x447f81 = this['rad'] * 0x1,
                    _0x51b5b0 = -this['rad'] * 0.1;
                _0x4597c4['drawImage'](_0x196614, -_0x447f81 * _0x4ead26, -_0x447f81 + _0x51b5b0 * _0x4ead26, 0x2 * _0x447f81 * _0x4ead26, 0x2 * _0x447f81 * _0x4ead26), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x48453e['prototype']['skinScale'] = 0x1f4 / 0x154, _0x48453e['prototype']['flyingAnimation'] = function() {
            var _0x515df4 = this['skinScale'];
            if (this['flag_flying'] && !this['flag_isGrabbed']) {
                _0x4597c4['save']();
                var _0x589227 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x3d8194 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x589227, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x39ec81 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing1']);
                if (_0x39ec81) {
                    _0x4597c4['save']();
                    var _0x290ae6 = -(-0.2 + _0x3d8194) * _0x197fc1,
                        _0xf718fa = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x290ae6);
                    var _0x5c5084 = 0x0,
                        _0x431f87 = this['rad'],
                        _0x514258 = _0xf718fa * 0x2 * 0.62,
                        _0x4fcb42 = _0xf718fa * 2.5,
                        _0x358a8f = 0.2,
                        _0x1b97ee = 1.7;
                    _0x4597c4['drawImage'](_0x39ec81, _0x5c5084 + _0x514258 * -_0x358a8f, _0x431f87 + _0x4fcb42 * -_0x1b97ee, _0x514258, _0x4fcb42), _0x4597c4['restore']();
                }
                var _0x39ec81 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['wing2']);
                if (_0x39ec81) {
                    _0x4597c4['save']();
                    var _0x290ae6 = -(-0.2 + _0x3d8194) * _0x4c4686(-0x5a),
                        _0xf718fa = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x290ae6);
                    var _0x5c5084 = 0x0,
                        _0x431f87 = this['rad'],
                        _0x514258 = _0xf718fa * 0x2 * 0.62,
                        _0x4fcb42 = _0xf718fa * 2.5,
                        _0x358a8f = 0.8,
                        _0x1b97ee = 1.7;
                    _0x4597c4['drawImage'](_0x39ec81, _0x5c5084 + _0x514258 * -_0x358a8f, _0x431f87 + _0x4fcb42 * -_0x1b97ee, _0x514258, _0x4fcb42), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x4f7189 = this['getSkinImageObj'](this['objSkinPath'][this['getSkinIndex']()]['head']);
                if (_0x4f7189) {
                    _0x4597c4['save']();
                    var _0xf718fa = this['rad'];
                    _0x4597c4['drawImage'](_0x4f7189, -_0xf718fa * _0x515df4, (-_0xf718fa + _0xf718fa * 0.1) * _0x515df4, 0x2 * _0xf718fa * _0x515df4, 0x2 * _0xf718fa * _0x515df4), _0x4597c4['restore']();
                }
            }
        }, _0x48453e['prototype']['readCustomData_onNewlyVisible'] = function(_0x4181d2) {
            _0x48453e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4181d2), this['isAttacking'] = _0x4181d2['readUInt8']();
        }, _0x48453e['prototype']['readCustomData_onUpdate'] = function(_0x276d17) {
            _0x48453e['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x276d17), this['isAttacking'] = _0x276d17['readUInt8']();
        };

        function _0x48453e() {
            _0x4d8447['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x48453e, _0x269668, _0x52bb25);
        var _0x4d8447 = _0x5502af;
        _0x83ca7d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x83ca7d['prototype']['constructor'] = _0x83ca7d, _0x83ca7d['superClass'] = _0x4d8447, _0x83ca7d['prototype']['setSkinPath'] = function() {
            this['objSkinPath'] = 'duck/duckling';
        }, _0x83ca7d['prototype']['getSkinName'] = function() {
            return this['objSkinPath'];
        };

        function _0x83ca7d() {
            _0x83ca7d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x83ca7d, _0x269668, _0x3399b3);
        var _0x4d8447 = _0x5502af;
        _0x2446ff['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2446ff['prototype']['constructor'] = _0x2446ff, _0x2446ff['superClass'] = _0x4d8447, _0x2446ff['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 + this['rad'];
        }, _0x2446ff['prototype']['canUseTailslap'] = ![], _0x2446ff['prototype']['tailState'] = 0x0, _0x2446ff['prototype']['getSkinName'] = function() {
            return 'volcano/blackdragon/' + this['animalSpecies'] + '/blackdragon';
        }, _0x2446ff['prototype']['leftWingAnim'] = null, _0x2446ff['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_underWater']) return;
            var _0x575d24 = 0x1f4 / 0x154,
                _0xc98b35 = this['lava'],
                _0x1f4e0e = 0x32;
            if (_0xc98b35 < _0x1f4e0e) {
                var _0x44dbb5 = _0xc98b35 / _0x1f4e0e,
                    _0x1c24fb = this['getSkinImageObj']('skins/volcano/blackdragon/' + this['animalSpecies'] + '/wings.png');
                if (_0x1c24fb) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - _0x44dbb5;
                    var _0x1b0b88 = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x1c24fb, -_0x1b0b88 * _0x575d24, -_0x1b0b88 * _0x575d24, 0x2 * _0x1b0b88 * _0x575d24, 0x2 * _0x1b0b88 * _0x575d24), _0x4597c4['restore']();
                }
            }
        }, _0x2446ff['prototype']['animalInfo'] = function() {
            var _0x36a810 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x36a810['aniName'] = 'Black Dragon';
                    break;
                case 0x1:
                    _0x36a810['aniName'] = 'Golden Black Dragon';
                    break;
                case 0x2:
                    _0x36a810['aniName'] = 'Azure Bringer';
                    break;
                case 0x6f:
                    _0x36a810['aniName'] = 'Classic Black Dragon';
                    break;
                case 0xcc:
                    _0x36a810['aniName'] = 'Violet Dusk Black Dragon';
                    break;
                default:
                    break;
            }
            return _0x36a810['aniCol'] = '#FF9000', _0x36a810['skinName'] = this['getSkinName'](), _0x36a810['upgradeText'] = 'UPGRADED to ' + _0x36a810['aniName'], _0x36a810['upgradeText'] += '!\x0a Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!', _0x36a810['aniCol'] = 'black', _0x36a810;
        }, _0x2446ff['prototype']['getAbilityInfo'] = function(_0x31c697) {
            var _0x12f861 = {};
            _0x12f861['abilName'] = 'Multi Fireballs';
            var _0x505625 = 0x0;
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x505625 = 0x1;
                    break;
                case 0x1:
                    _0x505625 = 0x2;
                    break;
                case 0x2:
                    _0x505625 = 0x7;
                    break;
            }
            return _0x12f861['speciesType'] = _0x505625, _0x12f861['abilImg'] = 'img/fire/' + _0x505625 + '/0.png', _0x12f861['skinThemeID'] = this['skinThemeID'], _0x12f861['mopeSeasonID'] = this['mopeSeasonID'], _0x12f861;
        };

        function _0x2446ff() {
            this['lava'] = 0x64, _0x2446ff['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2446ff, _0x269668, _0x1de825);
        var _0x4d8447 = _0x5502af;
        _0x402f8f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x402f8f['prototype']['constructor'] = _0x402f8f, _0x402f8f['superClass'] = _0x4d8447, _0x402f8f['prototype']['getSkinName'] = function() {
            return '/honeybee/0/' + this['animalSubSpecies'] + '/honeybee' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
        }, _0x402f8f['prototype']['drawSkinCustomization'] = function() {
            _0x4597c4['save']();
            var _0xb1cdcd = _0x476319 - this['spawnTime'];
            let _0x299c22 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d || _0x354bfb),
                _0x2178e9 = _0x299c22 ? _0x3d5dd9['honeybee'][_0xb1cdcd % _0x3d5dd9['honeybee']['length']] : 0x0;
            var _0x55105b = frame2 = _0x2178e9,
                _0x165619 = this['rad'] * 0.6,
                _0xb1ce87 = 0x1e,
                _0x3c3994 = 0x2,
                _0x3f16b4 = 0x14,
                _0x538f0a = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
            if (_0x538f0a) {
                _0x4597c4['save']();
                var _0x4a8025 = -(-_0x3c3994 + frame2) * _0x4c4686(-(_0xb1ce87 - 0x5));
                _0x4597c4['globalAlpha'] = 0.6, _0x4597c4['rotate'](_0x4c4686(-_0x3f16b4 + 0xa) + _0x4a8025);
                var _0x3ca69c = 0x0,
                    _0x3fd88e = this['rad'],
                    _0x1eb249 = _0x165619 * 0x2 * 0.7,
                    _0x38452a = _0x165619 * 2.3,
                    _0x5a01d9 = 0.5,
                    _0x246632 = 1.6;
                _0x4597c4['drawImage'](_0x538f0a, _0x3ca69c + _0x1eb249 * -_0x5a01d9, _0x3fd88e + _0x38452a * -_0x246632, _0x1eb249, _0x38452a), _0x4597c4['restore']();
            }
            var _0x538f0a = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
            if (_0x538f0a) {
                _0x4597c4['save']();
                var _0x4a8025 = -(-_0x3c3994 + frame2) * _0x4c4686(_0xb1ce87 - 0x5);
                _0x4597c4['globalAlpha'] = 0.6, _0x4597c4['rotate'](_0x4c4686(_0x3f16b4 - 0xa) + _0x4a8025);
                var _0x3ca69c = 0x0,
                    _0x3fd88e = this['rad'],
                    _0x1eb249 = _0x165619 * 2.3 * 0.7,
                    _0x38452a = _0x165619 * 2.3,
                    _0x5a01d9 = 0.5,
                    _0x246632 = 1.6;
                _0x4597c4['drawImage'](_0x538f0a, _0x3ca69c + _0x1eb249 * -_0x5a01d9, _0x3fd88e + _0x38452a * -_0x246632, _0x1eb249, _0x38452a), _0x4597c4['restore']();
            }
            var _0x538f0a = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing1.png');
            if (_0x538f0a) {
                _0x4597c4['save']();
                var _0x4a8025 = -(-_0x3c3994 + _0x55105b) * _0x4c4686(_0xb1ce87);
                _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['rotate'](_0x4c4686(_0x3f16b4) + _0x4a8025);
                var _0x3ca69c = 0x0,
                    _0x3fd88e = this['rad'],
                    _0x1eb249 = _0x165619 * 0x2 * 0.7,
                    _0x38452a = _0x165619 * 2.3,
                    _0x5a01d9 = 0.5,
                    _0x246632 = 1.7;
                _0x4597c4['drawImage'](_0x538f0a, _0x3ca69c + _0x1eb249 * -_0x5a01d9, _0x3fd88e + _0x38452a * -_0x246632, _0x1eb249, _0x38452a), _0x4597c4['restore']();
            }
            var _0x538f0a = this['getSkinImageObj']('skins/honeybee/0/' + this['animalSubSpecies'] + '/honeybee_wing2.png');
            if (_0x538f0a) {
                _0x4597c4['save']();
                var _0x4a8025 = -(-_0x3c3994 + _0x55105b) * _0x4c4686(-_0xb1ce87);
                _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['rotate'](_0x4c4686(-_0x3f16b4) + _0x4a8025);
                var _0x3ca69c = 0x0,
                    _0x3fd88e = this['rad'],
                    _0x1eb249 = _0x165619 * 0x2 * 0.7,
                    _0x38452a = _0x165619 * 2.3,
                    _0x5a01d9 = 0.5,
                    _0x246632 = 1.7;
                _0x4597c4['drawImage'](_0x538f0a, _0x3ca69c + _0x1eb249 * -_0x5a01d9, _0x3fd88e + _0x38452a * -_0x246632, _0x1eb249, _0x38452a), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        };

        function _0x402f8f() {
            _0x402f8f['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x402f8f, _0x269668, _0x2d7197);
        var _0x4d8447 = _0x5502af;
        _0xac079f['prototype'] = Object['create'](_0x4d8447['prototype']), _0xac079f['prototype']['constructor'] = _0xac079f, _0xac079f['superClass'] = _0x4d8447, _0xac079f['prototype']['animalInfo'] = function() {
            var _0x4320ad = {},
                _0x4ce24e = this['animalSpecies'];
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4320ad['aniName'] = 'The Phoenix';
                    break;
                case 0x1:
                    _0x4320ad['aniName'] = 'Golden Phoenix';
                    break;
                case 0x2:
                    _0x4320ad['aniName'] = 'Alpha Phoenix';
                    break;
                case 0x3:
                    _0x4320ad['aniName'] = 'Copper Phoenix';
                    break;
                case 0x6f:
                    _0x4320ad['aniName'] = 'Classic Phoenix';
                    break;
                case 0xc8:
                    _0x4ce24e = '/' + this['animalSubSpecies'];
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x4320ad['aniName'] = 'Aqua Phoenix';
                            break;
                        case 0x1:
                            _0x4320ad['aniName'] = 'Ice Phoenix';
                            break;
                        case 0x2:
                            _0x4320ad['aniName'] = 'Ash Phoenix';
                            break;
                        case 0x3:
                            _0x4320ad['aniName'] = 'Red Giant Phoenix';
                            break;
                        case 0x4:
                            _0x4320ad['aniName'] = 'Astral Phoenix';
                            break;
                    }
                    break;
            }
            return _0x4320ad['aniCol'] = '#FF9000', _0x4320ad['skinName'] = this['getSkinName'](), _0x4320ad['upgradeText'] = 'UPGRADED to ' + _0x4320ad['aniName'] + '!\x0aPhoenix shoot Firetornados to burn their prey alive!', _0x4320ad;
        }, _0xac079f['prototype']['getSkinImageObj'] = function(_0x18aa3f) {
            if (_0x1b2a4b) return;
            var _0x2d5318 = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0xc8 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x18aa3f, _0x2d5318);
        }, _0xac079f['prototype']['getAbilityInfo'] = function(_0x4ee6d8) {
            var _0x2f988b = {},
                _0x3da9aa = this['animalSpecies'];
            return this['animalSpecies'] == 0xc8 && (_0x3da9aa += '/' + this['animalSubSpecies']), _0x2f988b['abilName'] = 'Fire Tornado!', _0x2f988b['abilImg'] = 'skins/volcano/phoenix/' + _0x3da9aa + '/firetornado.png', _0x2f988b['skinThemeID'] = this['skinThemeID'], _0x2f988b['mopeSeasonID'] = this['mopeSeasonID'], _0x2f988b;
        }, _0xac079f['prototype']['getSkinName'] = function() {
            var _0x497b81 = this['animalSpecies'];
            return this['animalSpecies'] == 0xc8 && (_0x497b81 += '/' + this['animalSubSpecies']), '/volcano/phoenix/' + _0x497b81 + '/phoenix' + (this['specType'] == 0x0 || this['specType'] == undefined ? '' : this['specType']);
        }, _0xac079f['prototype']['getSkinPart'] = function(_0x462c9d) {
            var _0x55884c = this['animalSpecies'];
            return this['animalSpecies'] == 0xc8 && (_0x55884c += '/' + this['animalSubSpecies']), this['getSkinImageObj']('skins/volcano/phoenix/' + _0x55884c + '/' + _0x462c9d + '.png');
        }, _0xac079f['prototype']['drawSkinImg'] = function() {
            if (!(_0x3aa021 == _0x243dd0 || _0x9ffe4d || _0xce4eab || this['animalSpecies'] == 0xc8)) {
                var _0x229ca4 = 0x1f4 / 0x154,
                    _0x31f199 = this['rad'] - this['outlineW'],
                    _0x5b9d3b = this['getSkinPart']('phoenix_body'),
                    _0x33b063 = this['getSkinPart']('phoenix_head'),
                    _0x2b0b02 = Math['trunc'](_0x476319 / 0xa6) % 0x6,
                    _0x4a6266 = this['getSkinPart']('/tail_mid/tail_mid_' + _0x2b0b02);
                if (_0x4a6266) _0x4597c4['drawImage'](_0x4a6266, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                var _0x2b0b02 = Math['trunc'](_0x476319 / 0xa6) % 0x6,
                    _0x1003eb = Math['trunc'](_0x476319 / 0xfa) % 0x6,
                    _0x332657 = this['getSkinPart']('/tail/tail_' + _0x2b0b02),
                    _0x3dfd20 = this['getSkinPart']('tail_flipped/tail_' + _0x1003eb);
                if (_0x332657) _0x4597c4['drawImage'](_0x332657, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                if (_0x3dfd20) _0x4597c4['drawImage'](_0x3dfd20, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                if (_0x5b9d3b) _0x4597c4['drawImage'](_0x5b9d3b, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                var _0x3db358 = Math['trunc'](_0x476319 / 0x7d) % 0x8,
                    _0x1a615d = Math['trunc'](_0x476319 / 0x96) % 0x8,
                    _0x584f7a = this['getSkinPart']('wing_flame_orange/wing_flame_orange_' + _0x3db358),
                    _0x1f9c1a = this['getSkinPart']('wing_flame_yellow/wing_flame_yellow_' + _0x1a615d);
                if (_0x584f7a) _0x4597c4['drawImage'](_0x584f7a, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                if (_0x1f9c1a) _0x4597c4['drawImage'](_0x1f9c1a, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                var _0x29c2d5 = this['getSkinPart']('wing_flame_orange_flipped/wing_flame_orange_' + _0x3db358),
                    _0x4332ca = this['getSkinPart']('wing_flame_yellow_flipped/wing_flame_yellow_' + _0x1a615d);
                if (_0x29c2d5) _0x4597c4['drawImage'](_0x29c2d5, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                if (_0x4332ca) _0x4597c4['drawImage'](_0x4332ca, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                if (_0x33b063) _0x4597c4['drawImage'](_0x33b063, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
            } else _0xac079f['superClass']['prototype']['drawSkinImg']['call'](this);
            if (this['animalSubSpecies'] === 0x4) {
                const _0x4cf722 = this['getSkinPart']('glow');
                if (_0x4cf722) {
                    _0x4597c4['globalAlpha'] = Math['sin'](_0x476319 / 0x3e8) * 0.5 + 0.5;
                    var _0x229ca4 = this['skinScale'],
                        _0x31f199 = this['getAniRadius'](this['skinRad']);
                    _0x4597c4['drawImage'](_0x4cf722, -_0x31f199 * _0x229ca4, -_0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4, 0x2 * _0x31f199 * _0x229ca4);
                }
            }
        }, _0xac079f['prototype']['drawWhenUnderwater'] = function() {
            var _0x58ac1c = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x6d7fb8 = 1.5,
                _0x241cc0 = 0x1,
                _0x533e58 = _0x241cc0 * Math['sin'](0x2 * Math['PI'] / _0x6d7fb8 * _0x58ac1c),
                _0x15ae63 = '#f9d43b';
            _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['fillStyle'] = _0x15ae63;
            var _0x152937 = this['flag_underWater'] ? this['rad'] * 0.15 : this['rad'] * 0.1;
            _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x152937 + _0x533e58), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x152937 - _0x533e58), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x152937 + _0x533e58), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x152937 - _0x533e58), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
        };

        function _0xac079f() {
            _0xac079f['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xac079f, _0x269668, _0x48a3f9);
        var _0x4d8447 = _0x5502af;
        _0x144065['prototype'] = Object['create'](_0x4d8447['prototype']), _0x144065['prototype']['constructor'] = _0x144065, _0x144065['superClass'] = _0x4d8447, _0x144065['prototype']['animalInfo'] = function() {
            var _0x333373 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x333373['aniName'] = 'Pigeon';
                    break;
                case 0x1:
                    _0x333373['aniName'] = 'Rare White Dove', _0x333373['upgradeText'] += '\x0a(Doves fly faster!)';
                    break;
                case 0x6f:
                    _0x333373['aniName'] = 'Classic Pigeon';
                    break;
                case 0x70:
                    _0x333373['aniName'] = 'Gold-trim Pigeon';
                    break;
                case 0xca:
                    _0x333373['aniName'] = 'Thug Pigeon';
                    break;
            }
            return _0x333373['aniCol'] = '#FF9000', _0x333373['skinName'] = this['getSkinName'](), _0x333373['upgradeText'] = 'UPGRADED to ' + _0x333373['aniName'] + '!\x0aHold W to fly around. ', _0x333373;
        }, _0x144065['prototype']['getSkinName'] = function() {
            let _0x3f9a78 = this['getSpeciesPath']() + '/pigeon';
            return _0x3f9a78 += this['specType'] == 0x0 ? '' : this['specType'], _0x3f9a78;
        }, _0x144065['prototype']['getSpeciesPath'] = function() {
            return 'land/pigeon/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x144065['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x144065['prototype']['getWing'] = function(_0x4363a6) {
            var _0x319d6e = 'skins/' + this['getSpeciesPath']();
            return _0x319d6e += '/pigeon_wing' + _0x4363a6 + '.png', _0x319d6e;
        }, _0x144065['prototype']['getHead'] = function() {
            var _0x2d9975 = 'skins/' + this['getSpeciesPath']();
            return _0x2d9975 += '/pigeon_head.png', _0x2d9975;
        }, _0x144065['prototype']['theFrame'] = 0x0, _0x144065['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x2e7e69 = 'skins';
            {
                var _0x230bc8 = 0x1f4 / 0x154;
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    var _0x3be311 = _0x38f4be('bird', this['spawnTime']);
                    _0x3be311 !== undefined && _0x3be311 != null && (this['theFrame'] = _0x3be311);
                    var _0x515c55 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x4cedb1 = this['getSkinImageObj'](this['getWing'](0x1));
                    if (_0x4cedb1) {
                        _0x4597c4['save']();
                        var _0x5b0deb = -(-0.2 + _0x515c55) * _0x197fc1,
                            _0xc8f4c8 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x31cf4b + _0x5b0deb);
                        var _0x432d30 = 0x0,
                            _0x11d9f1 = this['rad'],
                            _0x4f8d69 = _0xc8f4c8 * 0x2 * 0.62,
                            _0x3bc325 = _0xc8f4c8 * 2.5,
                            _0xc3f7bf = 0.2,
                            _0x104047 = 1.7;
                        _0x4597c4['drawImage'](_0x4cedb1, _0x432d30 + _0x4f8d69 * -_0xc3f7bf, _0x11d9f1 + _0x3bc325 * -_0x104047, _0x4f8d69, _0x3bc325), _0x4597c4['restore']();
                    }
                    var _0x4cedb1 = this['getSkinImageObj'](this['getWing'](0x2));
                    if (_0x4cedb1) {
                        _0x4597c4['save']();
                        var _0x5b0deb = -(-0.2 + _0x515c55) * _0x4c4686(-0x5a),
                            _0xc8f4c8 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x5b0deb);
                        var _0x432d30 = 0x0,
                            _0x11d9f1 = this['rad'],
                            _0x4f8d69 = _0xc8f4c8 * 0x2 * 0.62,
                            _0x3bc325 = _0xc8f4c8 * 2.5,
                            _0xc3f7bf = 0.8,
                            _0x104047 = 1.7;
                        _0x4597c4['drawImage'](_0x4cedb1, _0x432d30 + _0x4f8d69 * -_0xc3f7bf, _0x11d9f1 + _0x3bc325 * -_0x104047, _0x4f8d69, _0x3bc325), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x10069a = this['getSkinImageObj'](this['getHead']());
                    if (_0x10069a) {
                        _0x4597c4['save']();
                        var _0xc8f4c8 = this['rad'];
                        _0x4597c4['drawImage'](_0x10069a, -_0xc8f4c8 * _0x230bc8, (-_0xc8f4c8 + _0xc8f4c8 * 0.1) * _0x230bc8, 0x2 * _0xc8f4c8 * _0x230bc8, 0x2 * _0xc8f4c8 * _0x230bc8), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x144065() {
            _0x144065['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x144065, _0x269668, _0x1f01ec);
        var _0x4d8447 = _0x5502af;
        _0x15f7f2['prototype'] = Object['create'](_0x4d8447['prototype']), _0x15f7f2['prototype']['constructor'] = _0x15f7f2, _0x15f7f2['superClass'] = _0x4d8447, _0x15f7f2['prototype']['getSpeciesPath'] = function(_0x4c4c73) {
            var _0x472a73 = '/land/' + _0x4c4c73 + '/' + this['animalSpecies'] + (this['animalSpecies'] == 0x4 ? '/' + this['animalSubSpecies'] : '');
            return _0x472a73;
        }, _0x15f7f2['prototype']['getWing'] = function(_0x507376, _0x1f5308, _0x5b2d7c) {
            var _0x1ccce0 = 'skins/';
            switch (this['animalSpecies']) {
                case 0x5:
                case 0x6:
                case 0xc8:
                case 0xdc:
                    _0x1ccce0 += this['getSpeciesPath'](_0x507376);
                    break;
                default:
                    _0x1ccce0 += 'land/' + _0x507376;
            }
            switch (_0x1f5308) {
                case 0x1:
                    _0x1ccce0 += '/' + _0x507376 + '_wing1.png';
                    break;
                case 0x2:
                    _0x1ccce0 += '/' + _0x507376 + '_wing2.png';
                    break;
            }
            return _0x1ccce0;
        }, _0x15f7f2['prototype']['animalInfo'] = function() {
            var _0x5f24b1 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5f24b1['aniName'] = 'Toco Toucan';
                    break;
                case 0x1:
                    _0x5f24b1['aniName'] = 'Choco Toucan';
                    break;
                case 0x2:
                    _0x5f24b1['aniName'] = 'Keel-Billed Toucan';
                    break;
                case 0x3:
                    _0x5f24b1['aniName'] = 'Fiery Toucan';
                    break;
                case 0x4:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x5f24b1['aniName'] = 'Lava Toucan';
                            break;
                        case 0x1:
                            _0x5f24b1['aniName'] = 'Ice Toucan';
                            break;
                        case 0x2:
                            _0x5f24b1['aniName'] = 'Aqua Toucan';
                            break;
                    }
                    break;
                case 0x5:
                    _0x5f24b1['aniName'] = 'Helmeted Hornbill';
                    break;
                case 0x6:
                    _0x5f24b1['aniName'] = 'Prisma Toucan';
                    break;
                case 0x64:
                    _0x5f24b1['aniName'] = 'The Dapper';
                    break;
                case 0x6f:
                    _0x5f24b1['aniName'] = 'Classic Toucan';
                    break;
                case 0xc8:
                    _0x5f24b1['aniName'] = 'Ice Toucan';
                    break;
                case 0x70:
                    _0x5f24b1['aniName'] = 'Gold-trim Toucan';
                    break;
                case 0xca:
                    _0x5f24b1['aniName'] = 'Corpse Flower Toucan';
                    break;
                case 0xdc:
                    _0x5f24b1['aniName'] = 'Molten Toucan';
                    break;
            }
            return _0x5f24b1['upgradeText'] = 'UPGRADED to ' + _0x5f24b1['aniName'] + '!\x0aHold right click (or W) to fly!\x0a(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)', _0x5f24b1['aniCol'] = '#FF9000', _0x5f24b1['skinName'] = this['getSpeciesPath']('toucan') + '/toucan', _0x5f24b1;
        }, _0x15f7f2['prototype']['getSkinName'] = function() {
            var _0x525f03 = this['getSpeciesPath']('toucan') + '/toucan' + (this['specType'] == 0x0 ? '' : this['specType']);
            return _0x525f03;
        }, _0x15f7f2['prototype']['drawSkinCustomization'] = function() {
            var _0x975fd6 = 0x1f4 / 0x154;
            if (!this['flag_usingAbility']) {
                this['drawBeak']();
                return;
            } {
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    var _0x8422f1 = _0x38f4be('bird', this['spawnTime']);
                    _0x8422f1 !== undefined && _0x8422f1 != null && (this['theFrame'] = _0x8422f1);
                    var _0x1e453e = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x2a8b68 = this['getSkinImageObj'](this['getWing']('toucan', 0x1, !![]));
                    if (_0x2a8b68) {
                        _0x4597c4['save']();
                        var _0x52b7c8 = -(-0.2 + _0x1e453e) * _0x197fc1,
                            _0x25a62c = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x52b7c8);
                        var _0x57ab4e = 0x0,
                            _0x12d1f6 = this['rad'],
                            _0x221068 = _0x25a62c * 0x2 * 0.62,
                            _0x3f7960 = _0x25a62c * 2.5,
                            _0x196c03 = 0.2,
                            _0x3e4d64 = 1.7;
                        _0x4597c4['drawImage'](_0x2a8b68, _0x57ab4e + _0x221068 * -_0x196c03, _0x12d1f6 + _0x3f7960 * -_0x3e4d64, _0x221068, _0x3f7960), _0x4597c4['restore']();
                    }
                    var _0x2a8b68 = this['getSkinImageObj'](this['getWing']('toucan', 0x2, !![]));
                    if (_0x2a8b68) {
                        _0x4597c4['save']();
                        var _0x52b7c8 = -(-0.2 + _0x1e453e) * _0x4c4686(-0x5a),
                            _0x25a62c = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x52b7c8);
                        var _0x57ab4e = 0x0,
                            _0x12d1f6 = this['rad'],
                            _0x221068 = _0x25a62c * 0x2 * 0.62,
                            _0x3f7960 = _0x25a62c * 2.5,
                            _0x196c03 = 0.8,
                            _0x3e4d64 = 1.7;
                        _0x4597c4['drawImage'](_0x2a8b68, _0x57ab4e + _0x221068 * -_0x196c03, _0x12d1f6 + _0x3f7960 * -_0x3e4d64, _0x221068, _0x3f7960), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0xcf5de0 = this['getSkinImageObj'](this['getHead']('toucan', !![]));
                    if (_0xcf5de0) {
                        _0x4597c4['save']();
                        var _0x25a62c = this['rad'];
                        _0x4597c4['drawImage'](_0xcf5de0, -_0x25a62c * _0x975fd6, (-_0x25a62c + _0x25a62c * 0.1) * _0x975fd6, 0x2 * _0x25a62c * _0x975fd6, 0x2 * _0x25a62c * _0x975fd6), _0x4597c4['restore']();
                    }
                    this['drawBeak']();
                }
            }
        }, _0x15f7f2['prototype']['drawBeak'] = function() {
            if (this['mopeSeasonID'] != 0x2) return;
            var _0x347277 = 0x1f4 / 0x154,
                _0x3442d7 = this['flag_flying'] && !this['flag_isGrabbed'] ? 0.25 : 0.1,
                _0x2034d3 = 'skins/' + this['getSpeciesPath']('toucan') + '/toucan_beak.png',
                _0x3476e3 = this['getSkinImageObj'](_0x2034d3);
            if (_0x3476e3) {
                _0x4597c4['save']();
                var _0x5b07a4 = this['rad'];
                _0x4597c4['drawImage'](_0x3476e3, -_0x5b07a4 * _0x347277, (-_0x5b07a4 + _0x5b07a4 * _0x3442d7) * _0x347277, 0x2 * _0x5b07a4 * _0x347277, 0x2 * _0x5b07a4 * _0x347277), _0x4597c4['restore']();
            }
        };

        function _0x15f7f2() {
            _0x15f7f2['superClass']['call'](this, _0x269668), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x15f7f2, _0x269668, _0x4927bb);
        var _0x4d8447 = _0x5502af;
        _0x477343['prototype'] = Object['create'](_0x4d8447['prototype']), _0x477343['prototype']['constructor'] = _0x477343, _0x477343['superClass'] = _0x4d8447, _0x477343['prototype']['animalInfo'] = function() {
            var _0x1c4382 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1c4382['aniName'] = 'Tiger';
                    break;
                case 0x1:
                    _0x1c4382['aniName'] = 'Rare White Tiger';
                    break;
                case 0x6f:
                    _0x1c4382['aniName'] = 'Classic Tiger';
                    break;
                case 0x70:
                    _0x1c4382['aniName'] = 'Gold-trim Tiger';
                    break;
                case 0xcc:
                    _0x1c4382['aniName'] = 'Chimera Tiger';
                    break;
            }
            return _0x1c4382['aniDesc'] = '', _0x1c4382['upgradeText'] = 'UPGRADED to ' + _0x1c4382['aniName'] + '!\x0a Tigers can launch an ambush attack (HOLD W to grow a bush)!', _0x1c4382['aniCol'] = '#FF9000', _0x1c4382['skinName'] = this['getSkinName'](), _0x1c4382;
        }, _0x477343['prototype']['getSkinName'] = function() {
            let _0xfecf66 = this['getSpeciesPath']() + '/tiger';
            return _0xfecf66 += this['specType'] == 0x0 ? '' : this['specType'], _0xfecf66;
        }, _0x477343['prototype']['getSpeciesPath'] = function() {
            return 'land/tiger/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x477343['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x477343['prototype']['getSkinImageObj'] = function(_0x106b39) {
            var _0x36395a = this['animalSpecies'] === 0xcc ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x106b39, _0x36395a);
        };

        function _0x477343() {
            _0x477343['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x477343, _0x269668, _0x149505);
        var _0x4d8447 = _0x5502af;
        _0x4a3db9['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4a3db9['prototype']['constructor'] = _0x4a3db9, _0x4a3db9['superClass'] = _0x4d8447, _0x4a3db9['prototype']['animalInfo'] = function() {
            var _0x5bef58 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5bef58['aniName'] = 'Cobra';
                    break;
                case 0x64:
                    _0x5bef58['aniName'] = 'Wyrmous';
                    break;
                case 0x6f:
                    _0x5bef58['aniName'] = 'Classic Cobra';
                    break;
                case 0x70:
                    _0x5bef58['aniName'] = 'Gold-trim Cobra';
                    break;
                case 0xc8:
                    _0x5bef58['aniName'] = 'Celestial Cobra';
                    break;
            }
            return _0x5bef58['skinName'] = this['getSkinName'](), _0x5bef58['aniDesc'] = '', _0x5bef58['upgradeText'] = 'UPGRADED to ' + _0x5bef58['aniName'] + '!\x0a Hold W to Spit venom, and poison animals with your bite!', _0x5bef58['aniCol'] = 'black', _0x5bef58;
        }, _0x4a3db9['prototype']['getAbilityInfo'] = function(_0x33da4b) {
            var _0x5cfeb0 = {};
            return _0x5cfeb0['abilName'] = 'Venom Spit', _0x5cfeb0['abilImg'] = 'skins/land/cobra/' + this['animalSpecies'] + '/cobra2.png', _0x5cfeb0['skinThemeID'] = this['skinThemeID'], _0x5cfeb0['mopeSeasonID'] = this['mopeSeasonID'], _0x5cfeb0;
        }, _0x4a3db9['prototype']['getSkinName'] = function() {
            let _0x460dc9 = this['getSpeciesPath']() + '/cobra';
            return _0x460dc9 += this['flag_usingAbility'] ? '2' : '', _0x460dc9;
        }, _0x4a3db9['prototype']['getSpeciesPath'] = function() {
            return 'land/cobra/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x4a3db9['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x4a3db9['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility']) return;
            var _0x51f503 = this['rad'] - this['outlineW'],
                _0x41c8d9 = 0x1f4 / 0x154,
                _0x58c810 = 'skins/' + this['getSpeciesPath']() + '/tongue.png',
                _0x5d3dd4 = this['getSkinImageObj'](_0x58c810),
                _0x58c41b = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x47f881 = _0x3aa021 == _0x243dd0 ? 0x0 : _0x5b9e97(_0x58c41b, 0.5, 0x5, 0.5),
                _0x5c00b5 = _0x3aa021 == _0x243dd0 ? 0x0 : 0x5;
            _0x5d3dd4 && _0x4597c4['drawImage'](_0x5d3dd4, -_0x51f503 * _0x41c8d9, -(_0x51f503 + _0x5c00b5 + _0x47f881) * _0x41c8d9, 0x2 * _0x51f503 * _0x41c8d9, 0x2 * _0x51f503 * _0x41c8d9);
        };

        function _0x4a3db9() {
            _0x4a3db9['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4a3db9, _0x269668, _0x45a408);
        var _0x4d8447 = _0x5d11ac;
        _0x4192a1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4192a1['prototype']['constructor'] = _0x4192a1, _0x4192a1['superClass'] = _0x4d8447, _0x4192a1['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0x4192a1['prototype']['customDraw'] = function(_0x3aac37) {
            if (!(_0x3aa021 == _0x243dd0) && !_0x9ffe4d) {
                var _0x3240a1 = Math['trunc'](_0x476319 / 0x78) % 0x5;
                let _0x4b72cc = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0x3240a1 + '.png';
                var _0x547896 = this['getSkinImageObj'](_0x4b72cc);
                if (_0x547896) {
                    var _0x55a50b = 0x0,
                        _0x43c1ce = this['rad'] * 0.4,
                        _0x24d55d = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
                        _0x383719 = this['rad'] * 0x2,
                        _0x3bf38b = 0.5,
                        _0x16e0da = 0.95;
                    _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(0x0)), _0x4597c4['drawImage'](_0x547896, _0x55a50b + _0x24d55d * -_0x3bf38b, _0x43c1ce + _0x383719 * -_0x16e0da, _0x24d55d, _0x383719), _0x4597c4['restore']();
                }
            } else {
                let _0x38cd87 = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/0.png';
                var _0x547896 = this['getSkinImageObj'](_0x38cd87);
                if (_0x547896) {
                    var _0x55a50b = 0x0,
                        _0x43c1ce = this['rad'] * 0.4,
                        _0x24d55d = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
                        _0x383719 = this['rad'] * 0x2,
                        _0x3bf38b = 0.5,
                        _0x16e0da = 0.95;
                    _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(0x0)), _0x4597c4['drawImage'](_0x547896, _0x55a50b + _0x24d55d * -_0x3bf38b, _0x43c1ce + _0x383719 * -_0x16e0da, _0x24d55d, _0x383719), _0x4597c4['restore']();
                }
            }
        }, _0x4192a1['prototype']['readCustomData_onNewlyVisible'] = function(_0xd6a100) {
            _0x4192a1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xd6a100), this['speciesType'] = _0xd6a100['readUInt16'](), this['speciesSubType'] = _0xd6a100['readUInt16']();
        };

        function _0x4192a1() {
            _0x4192a1['superClass']['call'](this, _0x4f039e), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4192a1, _0x4f039e);
        var _0x4d8447 = _0x5d11ac;
        _0x1badc1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1badc1['prototype']['constructor'] = _0x1badc1, _0x1badc1['superClass'] = _0x4d8447, _0x1badc1['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0x1badc1['prototype']['ANIMATION_NAME'] = 'fireball', _0x1badc1['prototype']['customDraw'] = function(_0x138ed5) {
            if (!(_0x3aa021 == _0x243dd0) && !_0x9ffe4d) {
                let _0x1098d9 = _0x38f4be(this['ANIMATION_NAME'], this['spawnTime']);
                if (_0x1098d9 == null || _0x1098d9 == NaN) _0x1098d9 = 0x0;
                var _0x39cfe8 = Math['trunc'](_0x476319 / 0x78) % 0x5;
                let _0x4eca03 = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/' + _0x39cfe8 + '.png';
                var _0x92a0a7 = this['getSkinImageObj'](_0x4eca03);
                if (_0x92a0a7) {
                    var _0x1cc351 = 0x0,
                        _0x3720b0 = this['rad'] * 0.4,
                        _0x4c4093 = this['rad'] * 0x2 * (0x2 + _0x1098d9 * 0x2) / 0x3,
                        _0x161f5d = this['rad'] * 3.5 * _0x1098d9,
                        _0x5cdd7d = 0.5,
                        _0x2386e3 = 0.95;
                    _0x4597c4['save']();
                    {
                        _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x1098d9, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x92a0a7, _0x1cc351 + _0x4c4093 * -_0x5cdd7d, _0x3720b0 + _0x161f5d * -_0x2386e3, _0x4c4093, _0x161f5d);
                    }
                    _0x4597c4['restore']();
                }
            } else {
                let _0x236b0a = 'gameobj/' + this['oType'] + '/' + this['speciesType'] + '/0.png';
                var _0x92a0a7 = this['getSkinImageObj'](_0x236b0a);
                if (_0x92a0a7) {
                    var _0x1cc351 = 0x0,
                        _0x3720b0 = this['rad'] * 0.4,
                        _0x4c4093 = this['rad'] * 0x2 * (0x2 + 0x2) / 0x3,
                        _0x161f5d = this['rad'] * 3.5,
                        _0x5cdd7d = 0.5,
                        _0x2386e3 = 0.95;
                    _0x4597c4['save']();
                    {
                        _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x92a0a7, _0x1cc351 + _0x4c4093 * -_0x5cdd7d, _0x3720b0 + _0x161f5d * -_0x2386e3, _0x4c4093, _0x161f5d);
                    }
                    _0x4597c4['restore']();
                }
            }
        }, _0x1badc1['prototype']['readCustomData_onNewlyVisible'] = function(_0x132d10) {
            _0x1badc1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x132d10), this['speciesType'] = _0x132d10['readUInt16'](), this['speciesSubType'] = _0x132d10['readUInt16']();
        };

        function _0x1badc1() {
            _0x1badc1['superClass']['call'](this, _0x5651b8);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1badc1, _0x5651b8);
        var _0x4d8447 = _0x5d11ac;
        _0x17384e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x17384e['prototype']['constructor'] = _0x17384e, _0x17384e['superClass'] = _0x4d8447, _0x17384e['prototype']['nickName'] = 'mope.io', _0x17384e['prototype']['fadeAway'] = ![], _0x17384e['prototype']['webTransparency'] = 0x64, _0x17384e['prototype']['carcassType'] = 0x0, _0x17384e['prototype']['updateZ'] = function() {
            if (this['flag_flying']) this['z'] = 0x186a0 + this['rad'] / 0xa;
            else this['z'] = -0x64;
        }, _0x17384e['prototype']['getNameSize'] = function() {
            return 0x6;
        }, _0x17384e['prototype']['setNick'] = function(_0x1a5e07) {
            _0x1a5e07 = _0x1230b6(_0x1a5e07), this['nickName'] = _0x1a5e07, null == this['nickTXT'] ? (this['nickTXT'] = new _0x16040f(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
        }, _0x17384e['prototype']['customDraw'] = function(_0x28b322) {
            _0x4597c4['save']();
            var _0x5d39db = 0.3;
            if (this['fadeAway']) {
                var _0x14ec22 = this['webTransparency'] / 0x64;
                _0x4597c4['globalAlpha'] = _0x14ec22, _0x5d39db = Math['min'](_0x5d39db, _0x14ec22);
            } else _0x4597c4['globalAlpha'] = 0.8;
            var _0x41d942 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['carcassType'] + '.png');
            if (_0x41d942) {
                var _0x589a7d = this['rad'];
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x41d942, -_0x589a7d, -_0x589a7d, 0x2 * _0x589a7d, 0x2 * _0x589a7d);
            }
            _0x4597c4['restore'](), this['drawNickName'](_0x5d39db);
        }, _0x17384e['prototype']['drawNickName'] = function(_0x243604) {
            if (!this['spawnedFromDeadAni']) return;
            this['nickName'] && this['nickTXT'] && !_0x3bd264 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x243604, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'], this['nickTXT']['draw'](), _0x4597c4['restore']());
        }, _0x17384e['prototype']['spawnedFromDeadAni'] = ![], _0x17384e['prototype']['readCustomData_onNewlyVisible'] = function(_0x550867) {
            this['spawnedFromDeadAni'] = _0x550867['readUInt8']() == 0x1, this['animalType'] = _0x550867['readUInt16'](), this['animalHomeBiome'] = _0x550867['readUInt8'](), this['carcassType'] = this['lookupCarcassType']();
            var _0xc12877 = _0x550867['readString']();
            this['fadeAway'] = _0x550867['readUInt8']() == 0x1;
            if (this['fadeAway']) this['webTransparency'] = _0x550867['readUInt16']();
            if (this['spawnedFromDeadAni']) this['setNick'](_0xc12877 ? _0xc12877 : 'mope.io');
        };
        const _0x316da6 = 0x0,
            _0xcf7539 = 0x1,
            _0x1dbdc7 = 0x2,
            _0x5aa60e = 0x3,
            _0x3cf912 = 0x4,
            _0x278df4 = 0x5,
            _0x373ad9 = 0x6,
            _0x3e2846 = 0x7,
            _0x25d057 = 0x8,
            _0x52e747 = 0x9,
            _0x12b28c = 0xa,
            _0x32debe = 0xb,
            _0x2a60b3 = 0xc,
            _0x558b8d = 0xd,
            _0xe09776 = 0xe,
            _0x21af75 = 0xf,
            _0x2d9c46 = 0x10,
            _0x384fe3 = 0x11,
            _0x19b8ea = 0x12,
            _0x3bee9f = 0x13,
            _0x5dc384 = 0x14;
        _0x17384e['prototype']['lookupCarcassType'] = function() {
            const _0xe8b419 = {
                [_0x21af75]: [_0x31f937, _0x1fb7c3],
                [_0x3cf912]: [_0x9918f2],
                [_0x278df4]: [_0x38e413],
                [_0x3cf912]: [_0x9918f2],
                [_0x1dbdc7]: [_0x2982a0, _0x45a408],
                [_0x52e747]: [_0x23c342],
                [_0x12b28c]: [_0x33ea21, _0x456e24],
                [_0x19b8ea]: [_0x3f35f1],
                [_0x3bee9f]: [_0x1d892b],
                [_0x5dc384]: [_0x5ed897],
                [_0x384fe3]: [_0x471528],
                [_0x25d057]: [_0x4ef33a],
                [_0x3e2846]: [_0x283bbc, _0x346859, _0x9038c6],
                [_0x2a60b3]: [_0x19fc30],
                [_0xe09776]: [_0x366af5, _0x19d925],
                [_0x558b8d]: [_0x172231],
                [_0x32debe]: [_0x1fff86],
                [_0x2d9c46]: [_0x1de825, _0xf8f210],
                [_0x373ad9]: [_0x26d386, _0x2e6e95, _0x52a058, _0x51d33b],
                [_0xcf7539]: [_0x108e2d, _0x329081, _0x16c634, _0x24c6d5, _0x48a3f9, a_birdMonster, _0xd787b4, _0x1f01ec, _0x4927bb, _0x4657a6, _0x57f2d9, _0x242003, _0x5bec16, _0x49ed0a, _0x3bf4c4, _0x1ecc36, _0x24a30e, _0x123d4e, _0x4d08a1, _0x1f079f, _0x2d9acc, _0x5e24a5]
            };
            if (_0xe8b419 instanceof Array) {
                const _0x2a1f71 = Object['keys'](_0xe8b419);
                for (let _0x1bd876 = 0x0; _0x1bd876 < _0x2a1f71['length']; _0x1bd876++) {
                    const _0x63ba39 = _0x2a1f71[_0x1bd876];
                    if (_0xe8b419[_0x63ba39]['includes'](this['animalType'])) return _0x63ba39;
                }
            }
            if (this['animalHomeBiome'] == _0x1085db) return _0x5aa60e;
            return _0x316da6;
        }, _0x17384e['prototype']['readUpdatedProperty'] = function(_0x48633f, _0x5605ea) {
            if (_0x48633f == _0x14d04c) this['flag_flying'] = _0x5605ea['readUInt8']() == 0x1;
            else _0x48633f == _0x182930 && (this['webTransparency'] = _0x5605ea['readUInt16']());
        };

        function _0x17384e() {
            _0x17384e['superClass']['call'](this, _0x1125d5), this['shrinkedRad'] = 0x0;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x17384e, _0x1125d5);
        var _0x4d8447 = _0x5d11ac;
        _0x1caca5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1caca5['prototype']['constructor'] = _0x1caca5, _0x1caca5['superClass'] = _0x4d8447, _0x1caca5['prototype']['chilliType'] = 0x0, _0x1caca5['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x1caca5['prototype']['setSkinPath'] = function() {
            var _0x846681 = 'chilli';
            _0x846681 += this['isEdibleOutlined']() ? '_e' : '', this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + this['chilliType'] + '/' + _0x846681 + '.png';
        }, _0x1caca5['prototype']['customDraw'] = function(_0x4d1221) {
            _0x4597c4['save']();
            var _0x18fa64 = this['getSkinImageObj'](this['objSkinPath']);
            if (_0x18fa64) {
                var _0x1355a3 = this['rad'];
                if (this['specType2'] == 0x1) {
                    if (this['angle'] == 0x0) this['angle'] = this['rPer'] * Math['PI'] * 0x2;
                    this['angle'] += 0.4, _0x4597c4['rotate'](this['angle']);
                } else {
                    if (this['specType2'] == 0x2) _0x4597c4['rotate'](this['angle']);
                    else _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2);
                }
                _0x4597c4['drawImage'](_0x18fa64, -_0x1355a3, -_0x1355a3, 0x2 * _0x1355a3, 0x2 * _0x1355a3);
            }
            _0x4597c4['restore']();
        }, _0x1caca5['prototype']['readCustomData_onNewlyVisible'] = function(_0x4eaf8b) {
            this['chilliType'] = _0x4eaf8b['readUInt8']();
        };

        function _0x1caca5() {
            _0x1caca5['superClass']['call'](this, _0x505601), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1caca5, _0x505601);
        var _0x4d8447 = _0x5502af;
        _0x2ad8fd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2ad8fd['prototype']['constructor'] = _0x2ad8fd, _0x2ad8fd['superClass'] = _0x4d8447, _0x2ad8fd['prototype']['objSkinSpotsCanvas'] = null, _0x2ad8fd['prototype']['animalInfo'] = function() {
            var _0x35f4fb = {};
            this['animalName'] = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x35f4fb['aniName'] = 'Cheetah', _0x35f4fb['upgradeText'] = 'UPGRADED to Cheetah!\x0a Press W to get a speed boost!', this['animalName'] = 'cheetah';
                    break;
                case 0x1:
                    _0x35f4fb['aniName'] = 'Jaguar', _0x35f4fb['upgradeText'] = 'UPGRADED to JAGUAR!\x0a Press W to get a speed boost!\x0a(Jaguars can climb hills!)', this['animalName'] = 'jaguar';
                    break;
                case 0x2:
                    _0x35f4fb['aniName'] = 'Leopard', _0x35f4fb['upgradeText'] = 'UPGRADED to LEOPARD!\x0a Press W to get a speed boost!\x0a(Leopards can dive longer)', this['animalName'] = 'leopard';
                    break;
                case 0x3:
                    _0x35f4fb['aniName'] = 'Black Panther', _0x35f4fb['upgradeText'] = 'UPGRADED to Black Panther!\x0a Press W to get a speed boost!\x0a(Black Panthers are fast on mud)', this['animalName'] = 'blackpanther';
                    break;
                case 0x64:
                    _0x35f4fb['aniName'] = 'Big Cookie', _0x35f4fb['upgradeText'] = 'UPGRADED to Big Cookie!\x0a Press W to get a speed boost!\x0a(Big Cookies are fast on mud)', this['animalName'] = '100/bigcat';
                    break;
                case 0x6f:
                    _0x35f4fb['aniName'] = 'Classic Cheetah', _0x35f4fb['upgradeText'] = 'UPGRADED to Classic Cheetah!\x0a Press W to get a speed boost!', this['animalName'] = 'cheetah';
                    break;
                case 0x70:
                    _0x35f4fb['aniName'] = 'Gold-trim Cheetah', _0x35f4fb['upgradeText'] = 'UPGRADED to Gold-trim Cheetah!\x0a Press W to get a speed boost!', this['animalName'] = 'cheetah';
                    break;
                case 0xca:
                    _0x35f4fb['aniName'] = 'C.M.Y.K NeoN Cheetak', _0x35f4fb['upgradeText'] = 'UPGRADED to C.M.Y.K NeoN Cheetak!\x0a Press W to get a speed boost!\x0a(C.M.Y.K NeoN Cheetaks are fast on mud)', this['animalName'] = 'cheetah';
                    break;
                case 0xcc:
                    _0x35f4fb['aniName'] = 'Genie Cheetah', _0x35f4fb['upgradeText'] = 'UPGRADED to Genie Cheetah!\x0a Press W to get a speed boost!\x0a(Genie Cheetah are fast on mud)', this['animalName'] = 'genie_cheetah';
                    break;
            }
            return _0x35f4fb['aniCol'] = '#CAC05B', _0x35f4fb['skinName'] = this['getSkinName'](), _0x35f4fb;
        }, _0x2ad8fd['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + '/' + this['animalName'];
        }, _0x2ad8fd['prototype']['getSpeciesPath'] = function() {
            return 'land/bigcat/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x2ad8fd['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x2ad8fd() {
            _0x2ad8fd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2ad8fd, _0x269668, _0x4d45bb);

        function _0x451885(_0x1620c7, _0x4f200a, _0x319cf5, _0x5a54f5, _0x2596e7, _0x50159e, _0x1c76db) {
            var _0x2ed3af = _0x6039c;
            this['x'] = _0x1620c7, this['y'] = _0x4f200a, this['w'] = _0x319cf5, this['h'] = _0x5a54f5, this['label'] = _0x2596e7, this['font'] = Number(_0x50159e) ? Number(_0x50159e) : 0x1e, this['isVisible'] = !![], this['hoverColor'] = '#16932A', this['defaultColor'] = '#0aa633', this['alpha'] = 0x1, this['txtAlpha'] = 0x1, this['ctx'] = _0x1c76db === undefined || _0x1c76db == null ? _0x4597c4 : _0x1c76db, this['labelColor'] = 'white', this['buttonTXT'] = new _0x16040f(0xc, this['labelColor']), this['buttonTXT']['renderScale'] = 1.5, this['drawButtonRect'] = !![], this['isHighLighted'] = ![], this['showLabeleOnHover'] = ![], this['textShadow'] = ![], this['buttonScaleF'] = 0x1, this['strokeWidth'] = 0x4 * _0x2ed3af, this['setLabelColor'] = function(_0xc3025a) {
                this['buttonTXT'] = new _0x16040f(0xc, _0xc3025a), this['buttonTXT']['renderScale'] = 1.5;
            }, this['testPosHitsButton'] = function(_0x123fb3, _0x1b98f5) {
                var _0x918abf = this['x'],
                    _0x2f023c = this['x'] + this['w'],
                    _0xb672e7 = this['y'],
                    _0x32183b = this['y'] + this['h'];
                if (_0x123fb3 < _0x918abf || _0x123fb3 > _0x2f023c) return ![];
                if (_0x1b98f5 < _0xb672e7 || _0x1b98f5 > _0x32183b) return ![];
                else return !![];
            }, this['setPosAndSize'] = function(_0x3ffce8, _0x50102c, _0x9545ef, _0x2601ed, _0x3ff026, _0x9f692e) {
                this['w'] = _0x9545ef, this['h'] = _0x2601ed, this['x'] = _0x3ffce8 + _0x9545ef * (0.5 - _0x3ff026), this['y'] = _0x50102c + _0x2601ed * (0.5 - _0x9f692e);
            }, this['draw'] = function() {
                if (!this['isVisible']) return;
                this['update'](), this['ctx']['save'](), this['ctx']['translate'](this['x'], this['y']), this['ctx']['scale'](this['buttonScaleF'], this['buttonScaleF']);
                var _0x5878fe = this['alpha'];
                this['drawButtonRect'] && (this['ctx']['fillStyle'] = this['defaultColor'], this['ctx']['strokeStyle'] = '#116c17', this['ctx']['lineWidth'] = this['strokeWidth'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], !![]), this['isHighLighted'] && (this['ctx']['fillStyle'] = this['hoverColor'], this['roundRect'](0x0, 0x0, this['w'], this['h'], 0x5, !![], ![])));
                if (!this['showLabeleOnHover']) this['ctx']['globalAlpha'] = this['txtAlpha'], this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
                else this['isHighLighted'] && this['showLabeleOnHover'] && this['drawTextOnHowever']();
                this['ctx']['restore'](), this['onAfterDraw']();
            }, this['drawTextOnHowever'] = function() {
                this['drawText'](this['w'] / 0x2, this['h'] / 0x2);
            }, this['beforeDrawText'] = function() {}, this['drawText'] = function(_0x59e0f6, _0x2d8350) {
                this['buttonTXT']['setText'](this['label']), this['buttonTXT']['strokeW'] = this['isHighLighted'] && !this['textShadow'] ? 0x0 : 0x1, this['buttonTXT']['setFontSize'](this['font']), this['buttonTXT']['setColor'](this['labelColor']), this['buttonTXT']['x'] = _0x59e0f6, this['buttonTXT']['y'] = _0x2d8350, this['beforeDrawText'](), this['buttonTXT']['draw']();
            }, this['roundRect'] = function(_0x4af5ec, _0x323bf8, _0x2eb751, _0x232f21, _0x59af18, _0x4995c7, _0x4565e4) {
                typeof _0x4565e4 == 'undefined' && (_0x4565e4 = !![]);
                typeof _0x59af18 === 'undefined' && (_0x59af18 = 0x5);
                if (typeof _0x59af18 === 'number') _0x59af18 = {
                    'tl': _0x59af18,
                    'tr': _0x59af18,
                    'br': _0x59af18,
                    'bl': _0x59af18
                };
                else {
                    var _0x56f393 = {
                        'tl': 0x0,
                        'tr': 0x0,
                        'br': 0x0,
                        'bl': 0x0
                    };
                    for (var _0x236d85 in _0x56f393) {
                        _0x59af18[_0x236d85] = _0x59af18[_0x236d85] || _0x56f393[_0x236d85];
                    }
                }
                this['ctx']['globalAlpha'] = this['alpha'], this['ctx']['lineWidth'] = 0x2, this['ctx']['beginPath'](), this['ctx']['moveTo'](_0x4af5ec + _0x59af18['tl'], _0x323bf8), this['ctx']['lineTo'](_0x4af5ec + _0x2eb751 - _0x59af18['tr'], _0x323bf8), this['ctx']['quadraticCurveTo'](_0x4af5ec + _0x2eb751, _0x323bf8, _0x4af5ec + _0x2eb751, _0x323bf8 + _0x59af18['tr']), this['ctx']['lineTo'](_0x4af5ec + _0x2eb751, _0x323bf8 + _0x232f21 - _0x59af18['br']), this['ctx']['quadraticCurveTo'](_0x4af5ec + _0x2eb751, _0x323bf8 + _0x232f21, _0x4af5ec + _0x2eb751 - _0x59af18['br'], _0x323bf8 + _0x232f21), this['ctx']['lineTo'](_0x4af5ec + _0x59af18['bl'], _0x323bf8 + _0x232f21), this['ctx']['quadraticCurveTo'](_0x4af5ec, _0x323bf8 + _0x232f21, _0x4af5ec, _0x323bf8 + _0x232f21 - _0x59af18['bl']), this['ctx']['lineTo'](_0x4af5ec, _0x323bf8 + _0x59af18['tl']), this['ctx']['quadraticCurveTo'](_0x4af5ec, _0x323bf8, _0x4af5ec + _0x59af18['tl'], _0x323bf8), this['ctx']['closePath']();
                if (_0x4995c7) this['ctx']['fill']();
                if (_0x4565e4) this['ctx']['stroke']();
            }, this['onClick'] = function() {}, this['onMouseMove'] = function() {}, this['onMouseIn'] = function() {}, this['onMouseOut'] = function() {}, this['isMouseIn'] = ![], this['setMouseRawPos'] = function(_0xb0d259, _0x410f5c) {
                this['rawX'] = _0xb0d259, this['rawY'] = _0x410f5c, this['testPosHitsButton'](this['rawX'], this['rawY']) ? !this['isMouseIn'] && (this['isMouseIn'] = !![], this['onMouseIn']()) : this['isMouseIn'] && (this['isMouseIn'] = ![], this['onMouseOut']());
            }, this['update'] = function() {}, this['onInterfaceReset'] = function() {
                _0x3b0618(this['label'] + '.onInterfaceReset');
            }, this['onAfterDraw'] = function() {};
        }
        _0x533155['prototype'] = {
            'mode': 0x0,
            'state': 0x0,
            'myPlayer': null
        }, _0x533155['prototype']['chatAllowed'] = !![], _0x533155['prototype']['isHalloween'] = ![], _0x533155['prototype']['stamp'] = 0x0, _0x533155['prototype']['interface'] = function() {}, _0x533155['prototype']['drawMap'] = function() {}, _0x533155['prototype']['interfaceReset'] = function() {}, _0x533155['prototype']['main'] = function(_0x2710bb) {}, _0x533155['prototype']['onInit'] = function(_0x2f2be2) {}, _0x533155['prototype']['drawCustomObjs'] = function(_0x5c3a6d) {}, _0x533155['prototype']['worldUpdate'] = function(_0x2ffe33) {}, _0x533155['prototype']['setPlayer'] = function() {
            this['myPlayer'] = _0x4b4e0c[_0x59b0bc];
        };

        function _0x533155() {}
        var _0x4d8447 = _0x533155;
        _0x862895['prototype'] = Object['create'](_0x4d8447['prototype']), _0x862895['prototype']['constructor'] = _0x862895, _0x862895['superClass'] = _0x4d8447, _0x862895['prototype']['safeArea'] = null;

        function _0x862895(_0x35d551) {
            this['mode'] = _0x35d551, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
        }
        _0x862895['prototype']['wastedPopups'] = [], _0x862895['prototype']['playerDisplayNum'] = 0x0, _0x862895['prototype']['setServerPlayerCount'] = function() {
            _0x50f011['setText'](_0x136baa(_0x570a5c) + ' online'), _0x120225 && _0x120225['setPlayersCount'](_0x570a5c), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
        }, _0x862895['prototype']['interface'] = function() {
            if (this['state'] == -0x1 || this['mode'] != _0x524bb8) return;
            if (_0xc7d16a)
                for (var _0x3b9061 = this['wastedPopups']['length'] - 0x1; _0x3b9061 >= 0x0; _0x3b9061--) {
                    var _0x9984fc = this['wastedPopups'][_0x3b9061];
                    _0x9984fc['draw']();
                    if (_0x9984fc['timedOut']) this['wastedPopups']['splice'](_0x3b9061, 0x1);
                }
            if (this['endScreenCanvas'] != null) {
                this['endScreenCanvas']['width'] && _0x4597c4['drawImage'](this['endScreenCanvas'], _0x4921b9 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x52f571, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
                if (!_0xc7d16a || isGhost) _0x2332f9(!![]);
            }
            this['drawInterfaceButtons']();
        }, _0x862895['prototype']['interfaceReset'] = function() {
            this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
            if (this['interfaceButtons'])
                for (var _0x34edee = 0x0; _0x34edee < this['interfaceButtons']['length']; _0x34edee++) {
                    var _0x2f9263 = this['interfaceButtons'][_0x34edee];
                    _0x2f9263['onInterfaceReset']();
                }
            this['interfaceButtons'] = [];
        }, _0x862895['prototype']['onInit'] = function() {}, _0x862895['prototype']['playercount'] = 0x0, _0x862895['prototype']['setPlayerCount'] = function(_0x237a19) {
            this['playercount'] = _0x237a19;
        }, _0x862895['prototype']['showPlayerCount'] = function() {
            _0x4597c4['save']();
            var _0x255819 = _0x4921b9 / 0x2,
                _0xed7245 = 0x32 * _0x6039c,
                _0x537d94 = 0x12c * _0x6039c;
            _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
            var _0x3adf5d = 0x1e * _0x6039c;
            _0x4597c4['fillRect'](_0x255819 - _0x537d94 / 0x2, _0x3adf5d, _0x537d94, _0xed7245), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x1e * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x3adf5d += 0x19 * _0x6039c;
            var _0x7ecc81 = ' player';
            if (this['playercount'] > 0x1) _0x7ecc81 += 's';
            if (this['state'] == battleRoyal_inProgress) _0x7ecc81 += ' alive!';
            else {
                if (this['state'] == _0x5d3f39 || this['state'] == battleRoyal_ready) _0x7ecc81 += ' joined';
            }
            _0x4597c4['fillText'](this['playercount'] + _0x7ecc81, _0x255819, _0x3adf5d), _0x4597c4['restore']();
        }, _0x862895['prototype']['lbCanvas'] = null, _0x862895['prototype']['leaderboard'] = function(_0x12ac03) {
            if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
            if (_0x12ac03) {
                var _0x8117aa = this['lbCanvas']['getContext']('2d'),
                    _0x2b21ea = 0x37,
                    _0x254dc4 = 0x16;
                _0x2b21ea = _0x2b21ea + _0x254dc4 * _0x12ac03['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x2b21ea, _0x8117aa['globalAlpha'] = 0.2, _0x8117aa['fillStyle'] = '#000000', _0x8117aa['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x8117aa['globalAlpha'] = 0x1, _0x8117aa['fillStyle'] = '#FFFFFF';
                var _0x6f17fb = _0x3a357f['name'];
                _0x8117aa['font'] = '24px Arial';
                !(_0x3aa021 == _0x243dd0) && (_0x8117aa['shadowOffsetX'] = 0x1, _0x8117aa['shadowOffsetY'] = 0x1);
                _0x8117aa['shadowColor'] = 'black', _0x8117aa['fillText'](_0x6f17fb, this['lbCanvas']['width'] / 0x2 - _0x8117aa['measureText'](_0x6f17fb)['width'] / 0x2, 0x28);
                var _0x43e70f;
                _0x8117aa['textAlign'] = 'left';
                for (_0x8117aa['font'] = '17px Arial', _0x43e70f = 0x0; _0x43e70f < _0x12ac03['length']; ++_0x43e70f) {
                    _0x6f17fb = _0x3bd264 ? '' : _0x12ac03[_0x43e70f]['name'] || 'mope.io', _0x6f17fb += ' (' + _0x2c8aad(_0x12ac03[_0x43e70f]['xp']) + ')', _0x8117aa['fillStyle'] = '#FFFFFF', _0x8117aa['fillText'](_0x6f17fb, 0xf, 0x41 + _0x254dc4 * _0x43e70f);
                }
            }
        }, _0x862895['prototype']['drawLeaderboard'] = function() {
            if (_0xc7d16a) {
                if (!_0x33301f) _0x31daf7 && (_0x31daf7['width'] && _0x4597c4['drawImage'](_0x31daf7, 0xa * _0x52f571, 0xa * _0x52f571, _0x31daf7['width'] * _0x6039c, _0x31daf7['height'] * _0x6039c));
            }
        }, _0x862895['prototype']['btnPlayAgain'] = null, _0x862895['prototype']['showStats'] = !![], _0x862895['prototype']['interfaceButtons'] = [], _0x862895['prototype']['createInterfaceButtons'] = function() {
            this['interfaceButtons'] = [];
        }, _0x862895['prototype']['drawInterfaceButtons'] = function() {
            if (this['interfaceButtons'])
                for (var _0x7ca59 = 0x0; _0x7ca59 < this['interfaceButtons']['length']; _0x7ca59++) {
                    var _0x2666f5 = this['interfaceButtons'][_0x7ca59];
                    _0x2666f5['isVisible'] && _0x2666f5['draw']();
                }
        }, _0x862895['prototype']['onResize'] = function() {
            this['drawInterfaceButtons']();
        }, _0x862895['prototype']['readPlayerStats'] = function(_0x25df91) {
            var _0x24e6f0 = [];
            return _0x24e6f0['rank'] = _0x25df91['readUInt16'](), _0x24e6f0['timeAlive'] = _0x25df91['readUInt16'](), _0x24e6f0['totalKills'] = _0x25df91['readUInt16'](), _0x24e6f0['topRank'] = _0x25df91['readUInt16'](), _0x24e6f0['maxXP'] = _0x25df91['readUInt32'](), _0x24e6f0['killedBy'] = _0x25df91['readString'](), _0x24e6f0;
        }, _0x862895['prototype']['playerInfo'] = function(_0x601d93) {
            if (isGhost && !_0x5e010f) {
                var _0xac8512 = this['readPlayerStats'](_0x601d93);
                this['buildEndScreenHTML'](_0xac8512);
            } else !isGhost && (this['endScreenCanvas'] = null);
        }, _0x862895['prototype']['playerWorldUpdate'] = function(_0x277930) {}, _0x862895['prototype']['worldUpdate'] = function(_0x51f678) {}, _0x862895['prototype']['drawMap'] = function() {
            if (_0xc7d16a) {
                if (_0x9ffe4d) return;
                if (_0x120225) _0x120225['drawMap']();
                this['drawLeaderboard']();
            }
        }, _0x862895['prototype']['pieChartCanvas'] = null, _0x862895['prototype']['teamColors'] = {
            0x0: 'white',
            0x1: '#B6CF40'
        }, _0x862895['prototype']['endScreenDisplayed'] = ![], _0x862895['prototype']['buildEndScreenHTML'] = function(_0x15e7d6) {
            if (this['endScreenDisplayed']) return;
            this['endScreenDisplayed'] = !![];
            var _0x11e02d = '';
            _0x11e02d += '<div class=\'msg\'>YOU WERE #' + _0x15e7d6['rank'] + '</div>', _0x11e02d += '<div class=\'row\'>', _0x11e02d += '<div class=\'label\'>Killed by:</div>', _0x11e02d += '<div class=\'value2\'>' + _0x15e7d6['killedBy'] + '</div>', _0x11e02d += '</div>', _0x11e02d += '<div class=\'row\'>', _0x11e02d += '<div class=\'col1\'>', _0x11e02d += '<div class=\'label\'>Time alive:</div>', _0x11e02d += '<div class=\'value\'>' + _0x22f380(_0x15e7d6['timeAlive']) + '</div>', _0x11e02d += '</div>', _0x11e02d += '<div class=\'col2\'>', _0x11e02d += '<div class=\'label\'>Total kills:</div>', _0x11e02d += '<div class=\'value\'>' + _0x15e7d6['totalKills'] + '</div>', _0x11e02d += '</div>', _0x11e02d += '</div>', _0x11e02d += '<div class=\'row\'>', _0x11e02d += '<div class=\'col1\'>', _0x11e02d += '<div class=\'label\'>Top rank:</div>', _0x11e02d += '<div class=\'value\'>' + _0x15e7d6['topRank'] + '</div>', _0x11e02d += '</div>', _0x11e02d += '<div class=\'col2\'>', _0x11e02d += '<div class=\'label\'>Max xp:</div>', _0x11e02d += '<div class=\'value\'>' + _0x2c8aad(_0x15e7d6['maxXP']) + '</div>', _0x11e02d += '</div>', _0x11e02d += '</div>', _0x11e02d += '<div style=\'clear:both;\'></div>', _0x11e02d += '<div class=\'btnDiv\'>', _0x11e02d += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x11e02d += '</div>', _0x11e02d += '<div style=\'clear:both;\'></div>';
            var _0x2c814e = document['getElementById']('endScreen');
            _0x2c814e && (_0x2c814e['innerHTML'] = _0x11e02d, _0x2c814e['style']['display'] = 'block'), (!_0xc7d16a || isGhost) && _0x4c69af();
        }, _0x862895['prototype']['endScreenCanvas'] = null, _0x862895['prototype']['buildEndScreen'] = function(_0x345b9a, _0x3769bf) {
            if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
            if (this['endScreenCanvas'] == null) return;
            var _0xfbaa12 = this['endScreenCanvas']['getContext']('2d'),
                _0x144008 = 0x37,
                _0x55efda = 0x28,
                _0x20c4f5 = 0x5,
                _0x489fc2 = 0xf0,
                _0x357372 = 0x1a4;
            _0x144008 = _0x489fc2 + _0x20c4f5 * 0x2, this['endScreenCanvas']['width'] = _0x357372 + _0x20c4f5 * 0x2, this['endScreenCanvas']['height'] = _0x144008, _0xfbaa12['globalAlpha'] = 0.2, _0xfbaa12['fillStyle'] = '#000000', _0xfbaa12['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0xfbaa12['fillStyle'] = '#000000', _0xfbaa12['fillRect'](_0x20c4f5, _0x20c4f5, this['endScreenCanvas']['width'] - _0x20c4f5 * 0x2, this['endScreenCanvas']['height'] - _0x20c4f5 * 0x2);
            var _0x1f948c = _0x20c4f5;
            _0xfbaa12['globalAlpha'] = 0x1, _0xfbaa12['fillStyle'] = '#FFFFFF', _0xfbaa12['font'] = '30px Arial', _0x1f948c += 0x37;
            var _0x2d9dd1 = 'Final Stats';
            _0xfbaa12['font'] = '30px Arial', _0xfbaa12['fillText'](_0x2d9dd1, this['endScreenCanvas']['width'] / 0x2 - _0xfbaa12['measureText'](_0x2d9dd1)['width'] / 0x2, _0x1f948c), _0xfbaa12['font'] = '20px Arial', _0x1f948c += 0x2d, _0x2d9dd1 = 'You were #' + _0x3769bf['rank'], _0xfbaa12['fillText'](_0x2d9dd1, this['endScreenCanvas']['width'] / 0x2 - _0xfbaa12['measureText'](_0x2d9dd1)['width'] / 0x2, _0x1f948c), _0x1f948c += 0x28;
            var _0xd306d2 = _0x22f380(_0x3769bf['timeAlive']),
                _0x21620b = _0x20c4f5 + 0xf;
            _0x17eda1(_0xfbaa12, 'Killed by', _0x3769bf['killedBy'], _0x21620b, _0x1f948c), _0x1f948c += 0x28, _0x17eda1(_0xfbaa12, 'Time Alive', _0x22f380(_0x3769bf['timeAlive']), _0x21620b, _0x1f948c), _0x21620b += 0xd2, _0x17eda1(_0xfbaa12, 'Total Kills', _0x3769bf['totalKills'], _0x21620b, _0x1f948c), _0x1f948c += 0x28, _0x21620b = _0x20c4f5 + 0xf, _0x17eda1(_0xfbaa12, 'Top rank', _0x3769bf['topRank'], _0x21620b, _0x1f948c), _0x21620b += 0xd2, _0x17eda1(_0xfbaa12, 'Max XP', _0x2c8aad(_0x3769bf['maxXP']), _0x21620b, _0x1f948c), _0x1f948c += 0x32;
        }, _0x862895['prototype']['lastWastedPopupT'] = 0x0, _0x862895['prototype']['onPlayerWasted'] = function(_0x59d4e3) {
            if ((_0x476319 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
                this['lastWastedPopupT'] = _0x476319;
                var _0x20426b = new _0x3eb07d(_0x59d4e3 + ' wasted!', 0x28, 'red', 0x5dc);
                this['wastedPopups']['push'](_0x20426b);
            }
        }, _0x862895['prototype']['lastWastedPopupT'] = 0x0, _0x862895['prototype']['msgDisplayPlayersOnMiniMap'] = function(_0x50a919) {
            _0x1432d8 = [];
            var _0x4dc257 = _0x50a919['readUInt16']();
            for (var _0x14a13e = 0x0; _0x14a13e < _0x4dc257; _0x14a13e++) {
                _0x1432d8['push']({
                    'id': _0x50a919['readUInt32'](),
                    'x': _0x50a919['readUInt32']() / 0x64,
                    'y': _0x50a919['readUInt32']() / 0x64,
                    'rad': 0x3
                });
            }
        }, _0x862895['prototype']['msgDisplayPumpkinsOnMiniMap'] = function(_0x5c2349) {
            _0x2d122f = [];
            var _0xb497ba = _0x5c2349['readUInt16']();
            for (var _0x3a9cd6 = 0x0; _0x3a9cd6 < _0xb497ba; _0x3a9cd6++) {
                _0x2d122f['push']({
                    'x': _0x5c2349['readUInt16']() / 0x4,
                    'y': _0x5c2349['readUInt16']() / 0x4,
                    'type': 0x0,
                    'rad': 0x2
                });
            }
        };
        var _0x4d8447 = _0x533155;
        _0x440b92['prototype'] = Object['create'](_0x4d8447['prototype']), _0x440b92['prototype']['constructor'] = _0x440b92, _0x440b92['superClass'] = _0x4d8447, _0x440b92['prototype']['safeArea'] = null;
        var _0x54e7d5 = ![];

        function _0x440b92(_0xc80c79) {
            this['mode'] = _0x5f574f, this['chatAllowed'] = !![], this['createInterfaceButtons'](), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'), console['log']('@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@');
        }
        _0x440b92['prototype']['wastedPopups'] = [], _0x440b92['prototype']['playerDisplayNum'] = 0x0, _0x440b92['prototype']['setServerPlayerCount'] = function() {
            if (this['playerDisplayNum'] == 0x0) _0x50f011['setText'](_0x136baa(_0x570a5c) + ' mopers');
            else _0x50f011['setText'](_0x136baa(_0x3ad23e) + ' on server');
            _0x120225 && _0x120225['setPlayersCount'](_0x570a5c), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
        }, _0x440b92['prototype']['interface'] = function() {
            if (this['state'] == -0x1 || this['mode'] != _0x524bb8) return;
            if (_0xc7d16a)
                for (var _0x2de441 = this['wastedPopups']['length'] - 0x1; _0x2de441 >= 0x0; _0x2de441--) {
                    var _0x59b172 = this['wastedPopups'][_0x2de441];
                    _0x59b172['draw']();
                    if (_0x59b172['timedOut']) this['wastedPopups']['splice'](_0x2de441, 0x1);
                }
            if (this['endScreenCanvas'] != null) {
                this['endScreenCanvas']['width'] && _0x4597c4['drawImage'](this['endScreenCanvas'], _0x4921b9 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x52f571, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
                if (!_0xc7d16a || isGhost) _0x2332f9(!![]);
            }
            this['drawInterfaceButtons']();
        }, _0x440b92['prototype']['interfaceReset'] = function() {
            this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0xd06b62 = null, _0x17abf7 = null;
            if (this['interfaceButtons'])
                for (var _0x2c7c6a = 0x0; _0x2c7c6a < this['interfaceButtons']['length']; _0x2c7c6a++) {
                    var _0x3f3189 = this['interfaceButtons'][_0x2c7c6a];
                    _0x3f3189['onInterfaceReset']();
                }
            this['interfaceButtons'] = [];
        }, _0x440b92['prototype']['onInit'] = function() {}, _0x440b92['prototype']['playercount'] = 0x0, _0x440b92['prototype']['setPlayerCount'] = function(_0x428e08) {
            this['playercount'] = _0x428e08;
        }, _0x440b92['prototype']['showPlayerCount'] = function() {
            _0x4597c4['save']();
            var _0x42405b = _0x4921b9 / 0x2,
                _0x9fd218 = 0x32 * _0x6039c,
                _0x49b96a = 0x12c * _0x6039c;
            _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
            var _0x550a49 = 0x1e * _0x6039c;
            _0x4597c4['fillRect'](_0x42405b - _0x49b96a / 0x2, _0x550a49, _0x49b96a, _0x9fd218), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x1e * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x550a49 += 0x19 * _0x6039c;
            var _0x8d32c0 = ' player';
            if (this['playercount'] > 0x1) _0x8d32c0 += 's';
            if (this['state'] == battleRoyal_inProgress) _0x8d32c0 += ' alive!';
            else {
                if (this['state'] == _0x5d3f39 || this['state'] == battleRoyal_ready) _0x8d32c0 += ' joined';
            }
            _0x4597c4['fillText'](this['playercount'] + _0x8d32c0, _0x42405b, _0x550a49), _0x4597c4['restore']();
        }, _0x440b92['prototype']['lbCanvas'] = null, _0x440b92['prototype']['leaderboard'] = function(_0x1aff7c) {
            if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
            if (_0x1aff7c) {
                var _0x47e945 = this['lbCanvas']['getContext']('2d'),
                    _0x4c20df = 0x37,
                    _0x293f98 = 0x16;
                _0x4c20df = _0x4c20df + _0x293f98 * _0x1aff7c['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x4c20df, _0x47e945['globalAlpha'] = 0.2, _0x47e945['fillStyle'] = '#000000', _0x47e945['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x47e945['globalAlpha'] = 0x1, _0x47e945['fillStyle'] = '#FFFFFF';
                var _0x2c3cd3 = _0x3a357f['name'];
                _0x47e945['font'] = '24px Arial';
                !options_lowGraphics && (_0x47e945['shadowOffsetX'] = 0x1, _0x47e945['shadowOffsetY'] = 0x1);
                _0x47e945['shadowColor'] = 'black', _0x47e945['fillText'](_0x2c3cd3, this['lbCanvas']['width'] / 0x2 - _0x47e945['measureText'](_0x2c3cd3)['width'] / 0x2, 0x28);
                var _0x1e5684;
                _0x47e945['textAlign'] = 'left';
                for (_0x47e945['font'] = '17px Arial', _0x1e5684 = 0x0; _0x1e5684 < _0x1aff7c['length']; ++_0x1e5684) {
                    _0x2c3cd3 = _0x3bd264 ? '' : _0x1aff7c[_0x1e5684]['name'] || 'mope.io', _0x2c3cd3 += ' (' + _0x2c8aad(_0x1aff7c[_0x1e5684]['xp']) + ')', _0x47e945['fillStyle'] = '#FFFFFF', _0x47e945['fillText'](_0x2c3cd3, 0xf, 0x41 + _0x293f98 * _0x1e5684);
                }
            }
        }, _0x440b92['prototype']['drawLeaderboard'] = function() {
            _0xc7d16a && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4597c4['drawImage'](this['pieChartCanvas'], 0x14 * _0x52f571, 0x14 * _0x52f571, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), _0x8309d3();
        }, _0x440b92['prototype']['btnPlayAgain'] = null, _0x440b92['prototype']['showStats'] = !![], _0x440b92['prototype']['interfaceButtons'] = [], _0x440b92['prototype']['createInterfaceButtons'] = function() {
            this['interfaceButtons'] = [];
        }, _0x440b92['prototype']['drawInterfaceButtons'] = function() {
            if (this['interfaceButtons'])
                for (var _0x4f88a5 = 0x0; _0x4f88a5 < this['interfaceButtons']['length']; _0x4f88a5++) {
                    var _0xb24c99 = this['interfaceButtons'][_0x4f88a5];
                    _0xb24c99['isVisible'] && _0xb24c99['draw']();
                }
        }, _0x440b92['prototype']['onResize'] = function() {
            this['drawInterfaceButtons']();
        }, _0x440b92['prototype']['readPlayerStats'] = function(_0x3885f6) {
            var _0x5b4d39 = [];
            return _0x5b4d39['rank'] = _0x3885f6['readUInt16'](), _0x5b4d39['timeAlive'] = _0x3885f6['readUInt16'](), _0x5b4d39['totalKills'] = _0x3885f6['readUInt16'](), _0x5b4d39['topRank'] = _0x3885f6['readUInt16'](), _0x5b4d39['maxXP'] = _0x3885f6['readUInt32'](), _0x5b4d39['killedBy'] = _0x3885f6['readString'](), _0x5b4d39;
        }, _0x440b92['prototype']['playerInfo'] = function(_0x41788c) {
            if (isGhost && !_0x5e010f) {
                var _0x1cf4e0 = this['readPlayerStats'](_0x41788c);
                this['buildEndScreenHTML'](_0x1cf4e0);
            } else !isGhost && (this['endScreenCanvas'] = null);
        }, _0x440b92['prototype']['worldUpdate'] = function(_0x2dee1e) {
            var _0x208258 = minimapW / 0xc8,
                _0x33281a = minimapH / 0xc8,
                _0x208e0a = _0x2dee1e['readUInt32']() * _0x208258,
                _0xb7a55d = _0x2dee1e['readUInt32']() * _0x33281a,
                _0x53a268 = _0x2dee1e['readUInt32']() * 0x5;
            _0xd06b62 = {
                'x': _0x208e0a,
                'y': _0xb7a55d,
                'rad': _0x53a268 * (minimapW / _0x6f4c47)
            }, this['nonZombiePlayersCount'] = _0x2dee1e['readUInt16'](), this['zombieCount'] = _0x2dee1e['readUInt16']();
            if (!_0x54e7d5) {
                this['zombiePlayers'] = [];
                for (i = 0x0; i < this['zombieCount']; i++) {
                    var _0x208e0a = _0x2dee1e['readUInt16']() / 0x4,
                        _0xb7a55d = _0x2dee1e['readUInt16']() / 0x4,
                        _0x797631 = _0x2dee1e['readUInt16']() / 0xa;
                    this['zombiePlayers']['push']({
                        'x': _0x208e0a,
                        'y': _0xb7a55d,
                        'rad': _0x797631
                    });
                }
            }
        };
        var _0x17abf7 = null;

        function _0x8309d3() {
            if (!_0x17abf7) _0x17abf7 = document['createElement']('canvas');
            _0x17abf7['width'] = minimapW, _0x17abf7['height'] = minimapH;
            var _0x461a4e = _0x17abf7['getContext']('2d');
            _0x461a4e['clearRect'](0x0, 0x0, _0x17abf7['width'], _0x17abf7['height']), _0x461a4e['save']();
            var _0x3632e9 = Math['max'](0x3, _0xd06b62['rad']),
                _0x42ba97 = _0xd06b62['x'],
                _0x122e5a = _0xd06b62['y'];
            _0x461a4e['translate'](_0x42ba97, _0x122e5a), _0x461a4e['save'](), _0x461a4e['globalAlpha'] = 0x1, _0x4d4cb6(_0x461a4e, 0x0, 0x0, _0xd06b62['rad'], 0x5, 'white'), _0x461a4e['restore']();
            var _0x234d27 = _0x6039c * minimapW * 1.5,
                _0x29966b = _0x6039c * minimapH * 1.5,
                _0x419b1b = 0x1,
                _0x11a82e = 'red';
            _0x4767a5(_0x461a4e, _0xd06b62['rad'], Math['PI'] * 0x0, _0x11a82e, _0x419b1b, _0x234d27, _0x29966b), _0x4767a5(_0x461a4e, _0xd06b62['rad'], Math['PI'] * 0.5, _0x11a82e, _0x419b1b, _0x234d27, _0x29966b), _0x4767a5(_0x461a4e, _0xd06b62['rad'], Math['PI'] * 0x1, _0x11a82e, _0x419b1b, _0x234d27, _0x29966b), _0x4767a5(_0x461a4e, _0xd06b62['rad'], Math['PI'] * 1.5, _0x11a82e, _0x419b1b, _0x234d27, _0x29966b), _0x461a4e['restore'](), _0x17abf7 && _0x4597c4['drawImage'](_0x17abf7, _0x4921b9 - (0xa * _0x52f571 + _0x5487e0['width'] * _0x6039c), 0xa * _0x52f571, minimapW * _0x6039c, minimapH * _0x6039c);
        }
        _0x440b92['prototype']['drawZombiePlayers'] = function() {
            if (this['zombiePlayers'])
                for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
                    _0x12db5d(this['zombiePlayers'][t], '#adff32', 0x1);
                }
        }, _0x440b92['prototype']['drawMap'] = function() {
            this['buildPieChart']();
            if (!_0x54e7d5) this['drawZombiePlayers']();
        }, _0x440b92['prototype']['pieChartCanvas'] = null, _0x440b92['prototype']['teamColors'] = {
            0x0: 'white',
            0x1: '#B6CF40'
        }, _0x440b92['prototype']['buildPieChart'] = function() {
            if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
            if (this['pieChartCanvas'] == null) return;
            var _0x51d766 = this['pieChartCanvas']['getContext']('2d'),
                _0x3e071a = {
                    0x0: this['nonZombiePlayersCount'],
                    0x1: this['zombieCount']
                };
            _0xf671c1 = _0x54e7d5 ? 0x1 : 0x0;
            var _0x5bc6fb = new _0x50a00d({
                    'pad': 0x1e,
                    'canvas': this['pieChartCanvas'],
                    'data': _0x3e071a,
                    'colors': this['teamColors']
                }),
                _0xe92e4c = 0x37,
                _0x41f772 = 0x28,
                _0x1d9327 = 0x5,
                _0x1f862b = 0xc8,
                _0x3cf6b7 = 0xc8;
            _0xe92e4c = _0x1f862b + _0x1d9327 * 0x2, this['pieChartCanvas']['width'] = _0x3cf6b7 + _0x1d9327 * 0x2, this['pieChartCanvas']['height'] = _0xe92e4c, _0x5bc6fb['draw'](), _0x51d766['globalAlpha'] = 0.2;
            var _0x8b88e4 = _0x1d9327;
            _0x51d766['globalAlpha'] = 0.5, _0x51d766['fillStyle'] = 'white', _0x51d766['font'] = '20px Arial';
            var _0x8b88e4 = 0xc8;
            str = _0x3a357f['name'], _0x51d766['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x51d766['measureText'](str)['width'] / 0x2 - 0xf, _0x8b88e4);
        }, _0x440b92['prototype']['endScreenDisplayed'] = ![], _0x440b92['prototype']['buildEndScreenHTML'] = function(_0x2ae631) {
            if (this['endScreenDisplayed']) return;
            this['endScreenDisplayed'] = !![];
            var _0x14d1ae = '';
            _0x14d1ae += '<div class=\'msg\'>YOU WERE #' + _0x2ae631['rank'] + '</div>', _0x14d1ae += '<div class=\'row\'>', _0x14d1ae += '<div class=\'label\'>Killed by:</div>', _0x14d1ae += '<div class=\'value2\'>' + _0x2ae631['killedBy'] + '</div>', _0x14d1ae += '</div>', _0x14d1ae += '<div class=\'row\'>', _0x14d1ae += '<div class=\'col1\'>', _0x14d1ae += '<div class=\'label\'>Time alive:</div>', _0x14d1ae += '<div class=\'value\'>' + _0x22f380(_0x2ae631['timeAlive']) + '</div>', _0x14d1ae += '</div>', _0x14d1ae += '<div class=\'col2\'>', _0x14d1ae += '<div class=\'label\'>Total kills:</div>', _0x14d1ae += '<div class=\'value\'>' + _0x2ae631['totalKills'] + '</div>', _0x14d1ae += '</div>', _0x14d1ae += '</div>', _0x14d1ae += '<div class=\'row\'>', _0x14d1ae += '<div class=\'col1\'>', _0x14d1ae += '<div class=\'label\'>Top rank:</div>', _0x14d1ae += '<div class=\'value\'>' + _0x2ae631['topRank'] + '</div>', _0x14d1ae += '</div>', _0x14d1ae += '<div class=\'col2\'>', _0x14d1ae += '<div class=\'label\'>Max xp:</div>', _0x14d1ae += '<div class=\'value\'>' + _0x2c8aad(_0x2ae631['maxXP']) + '</div>', _0x14d1ae += '</div>', _0x14d1ae += '</div>', _0x14d1ae += '<div style=\'clear:both;\'></div>', _0x14d1ae += '<div class=\'btnDiv\'>', _0x14d1ae += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x14d1ae += '</div>', _0x14d1ae += '<div style=\'clear:both;\'></div>';
            var _0x2fe4dd = document['getElementById']('endScreen');
            _0x2fe4dd && (_0x2fe4dd['innerHTML'] = _0x14d1ae, _0x2fe4dd['style']['display'] = 'block'), (!_0xc7d16a || isGhost) && _0x4c69af();
        }, _0x440b92['prototype']['endScreenCanvas'] = null, _0x440b92['prototype']['buildEndScreen'] = function(_0x2d5e44, _0x56d87e) {
            if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
            if (this['endScreenCanvas'] == null) return;
            var _0x23b73c = this['endScreenCanvas']['getContext']('2d'),
                _0x4f9d78 = 0x37,
                _0x26682f = 0x28,
                _0x15d176 = 0x5,
                _0x5eece7 = 0xf0,
                _0x178804 = 0x1a4;
            _0x4f9d78 = _0x5eece7 + _0x15d176 * 0x2, this['endScreenCanvas']['width'] = _0x178804 + _0x15d176 * 0x2, this['endScreenCanvas']['height'] = _0x4f9d78, _0x23b73c['globalAlpha'] = 0.2, _0x23b73c['fillStyle'] = '#000000', _0x23b73c['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x23b73c['fillStyle'] = '#000000', _0x23b73c['fillRect'](_0x15d176, _0x15d176, this['endScreenCanvas']['width'] - _0x15d176 * 0x2, this['endScreenCanvas']['height'] - _0x15d176 * 0x2);
            var _0x14d587 = _0x15d176;
            _0x23b73c['globalAlpha'] = 0x1, _0x23b73c['fillStyle'] = '#FFFFFF', _0x23b73c['font'] = '30px Arial', _0x14d587 += 0x37;
            var _0x5aaeb1 = 'Final Stats';
            _0x23b73c['font'] = '30px Arial', _0x23b73c['fillText'](_0x5aaeb1, this['endScreenCanvas']['width'] / 0x2 - _0x23b73c['measureText'](_0x5aaeb1)['width'] / 0x2, _0x14d587), _0x23b73c['font'] = '20px Arial', _0x14d587 += 0x2d, _0x5aaeb1 = 'You were #' + _0x56d87e['rank'], _0x23b73c['fillText'](_0x5aaeb1, this['endScreenCanvas']['width'] / 0x2 - _0x23b73c['measureText'](_0x5aaeb1)['width'] / 0x2, _0x14d587), _0x14d587 += 0x28;
            var _0x21425c = _0x22f380(_0x56d87e['timeAlive']),
                _0x25d8c8 = _0x15d176 + 0xf;
            _0x17eda1(_0x23b73c, 'Killed by', _0x56d87e['killedBy'], _0x25d8c8, _0x14d587), _0x14d587 += 0x28, _0x17eda1(_0x23b73c, 'Time Alive', _0x22f380(_0x56d87e['timeAlive']), _0x25d8c8, _0x14d587), _0x25d8c8 += 0xd2, _0x17eda1(_0x23b73c, 'Total Kills', _0x56d87e['totalKills'], _0x25d8c8, _0x14d587), _0x14d587 += 0x28, _0x25d8c8 = _0x15d176 + 0xf, _0x17eda1(_0x23b73c, 'Top rank', _0x56d87e['topRank'], _0x25d8c8, _0x14d587), _0x25d8c8 += 0xd2, _0x17eda1(_0x23b73c, 'Max XP', _0x2c8aad(_0x56d87e['maxXP']), _0x25d8c8, _0x14d587), _0x14d587 += 0x32;
        };
        var _0x4767a5 = function(_0x38ba09, _0x455d70, _0x47ca22, _0x57af7f, _0x27572e, _0xceaab1, _0x30b8e2) {
            _0x38ba09['save'](), _0x38ba09['globalAlpha'] = _0x27572e, _0x38ba09['fillStyle'] = _0x57af7f, _0x38ba09['rotate'](_0x47ca22), _0x38ba09['save'](), _0x38ba09['strokeStyle'] = 'white', _0x38ba09['beginPath'](), _0x38ba09['arc'](0x0, 0x0, _0x455d70, 0x0, Math['PI'] * 0.5, ![]), _0x38ba09['stroke'](), _0x38ba09['restore'](), _0x38ba09['save'](), _0x38ba09['beginPath'](), _0x38ba09['arc'](0x0, 0x0, _0x455d70, 0x0, Math['PI'] * 0.5, ![]), _0x38ba09['lineTo'](0x0, _0xceaab1), _0x38ba09['lineTo'](_0x30b8e2, _0xceaab1), _0x38ba09['lineTo'](_0x30b8e2, 0x0), _0x38ba09['closePath'](), _0x38ba09['fill'](), _0x38ba09['restore'](), _0x38ba09['restore']();
        };
        _0x440b92['prototype']['lastWastedPopupT'] = 0x0, _0x440b92['prototype']['onPlayerWasted'] = function(_0x3a1374) {
            if ((_0x476319 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
                this['lastWastedPopupT'] = _0x476319;
                var _0x32cd6f = new _0x3eb07d(_0x3a1374 + ' wasted!', 0x28, 'red', 0x5dc);
                this['wastedPopups']['push'](_0x32cd6f);
            }
        };
        var _0x4d8447 = _0x533155;
        _0x5d898e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5d898e['prototype']['constructor'] = _0x5d898e, _0x5d898e['superClass'] = _0x4d8447, _0x5d898e['prototype']['safeArea'] = null;
        var _0x54e7d5 = ![];
        _0x5d898e['prototype']['wastedPopups'] = [], _0x5d898e['prototype']['playerDisplayNum'] = 0x0, _0x5d898e['prototype']['setServerPlayerCount'] = function() {
            if (this['playerDisplayNum'] == 0x0) _0x50f011['setText'](_0x136baa(_0x570a5c) + ' mopers');
            else _0x50f011['setText'](_0x136baa(_0x3ad23e) + ' on server');
            _0x120225 && _0x120225['setPlayersCount'](_0x570a5c), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
        }, _0x5d898e['prototype']['interface'] = function() {
            if (this['state'] == -0x1 || this['mode'] != _0x524bb8) return;
            if (_0xc7d16a)
                for (var _0x40062f = this['wastedPopups']['length'] - 0x1; _0x40062f >= 0x0; _0x40062f--) {
                    var _0x379300 = this['wastedPopups'][_0x40062f];
                    _0x379300['draw']();
                    if (_0x379300['timedOut']) this['wastedPopups']['splice'](_0x40062f, 0x1);
                }
            if (this['endScreenCanvas'] != null) {
                this['endScreenCanvas']['width'] && _0x4597c4['drawImage'](this['endScreenCanvas'], _0x4921b9 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x52f571, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
                if (!_0xc7d16a || isGhost) _0x2332f9(!![]);
            }
            this['drawInterfaceButtons'](), this['gameMode_screenMsg']();
        }, _0x5d898e['prototype']['interfaceReset'] = function() {
            this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null, _0xd06b62 = null, _0x17abf7 = null;
            if (this['interfaceButtons'])
                for (var _0x54024b = 0x0; _0x54024b < this['interfaceButtons']['length']; _0x54024b++) {
                    var _0x1c3b2b = this['interfaceButtons'][_0x54024b];
                    _0x1c3b2b['onInterfaceReset']();
                }
            this['interfaceButtons'] = [];
        }, _0x5d898e['prototype']['onInit'] = function() {}, _0x5d898e['prototype']['playercount'] = 0x0, _0x5d898e['prototype']['setPlayerCount'] = function(_0x35734f) {
            this['playercount'] = _0x35734f;
        }, _0x5d898e['prototype']['showPlayerCount'] = function() {
            _0x4597c4['save']();
            var _0x484f9d = _0x4921b9 / 0x2,
                _0x43a168 = 0x32 * _0x6039c,
                _0x18e346 = 0x12c * _0x6039c;
            _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
            var _0x3d5bdf = 0x1e * _0x6039c;
            _0x4597c4['fillRect'](_0x484f9d - _0x18e346 / 0x2, _0x3d5bdf, _0x18e346, _0x43a168), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x1e * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x3d5bdf += 0x19 * _0x6039c;
            var _0x3264ba = ' player';
            if (this['playercount'] > 0x1) _0x3264ba += 's';
            if (this['state'] == battleRoyal_inProgress) _0x3264ba += ' alive!';
            else {
                if (this['state'] == _0x5d3f39 || this['state'] == battleRoyal_ready) _0x3264ba += ' joined';
            }
            _0x4597c4['fillText'](this['playercount'] + _0x3264ba, _0x484f9d, _0x3d5bdf), _0x4597c4['restore']();
        }, _0x5d898e['prototype']['lbCanvas'] = null, _0x5d898e['prototype']['leaderboard'] = function(_0x10910c) {
            if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
            if (_0x10910c) {
                var _0x36f310 = this['lbCanvas']['getContext']('2d'),
                    _0x277265 = 0x37,
                    _0x1a0ee4 = 0x16;
                _0x277265 = _0x277265 + _0x1a0ee4 * _0x10910c['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x277265, _0x36f310['globalAlpha'] = 0.2, _0x36f310['fillStyle'] = '#000000', _0x36f310['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x36f310['globalAlpha'] = 0x1, _0x36f310['fillStyle'] = '#FFFFFF';
                var _0x1b3591 = _0x3a357f['name'];
                _0x36f310['font'] = '24px Arial';
                !options_lowGraphics && (_0x36f310['shadowOffsetX'] = 0x1, _0x36f310['shadowOffsetY'] = 0x1);
                _0x36f310['shadowColor'] = 'black', _0x36f310['fillText'](_0x1b3591, this['lbCanvas']['width'] / 0x2 - _0x36f310['measureText'](_0x1b3591)['width'] / 0x2, 0x28);
                var _0x4460d6;
                _0x36f310['textAlign'] = 'left';
                for (_0x36f310['font'] = '17px Arial', _0x4460d6 = 0x0; _0x4460d6 < _0x10910c['length']; ++_0x4460d6) {
                    _0x1b3591 = _0x3bd264 ? '' : _0x10910c[_0x4460d6]['name'] || 'mope.io', _0x1b3591 += ' (' + _0x2c8aad(_0x10910c[_0x4460d6]['xp']) + ')', _0x36f310['fillStyle'] = '#FFFFFF', _0x36f310['fillText'](_0x1b3591, 0xf, 0x41 + _0x1a0ee4 * _0x4460d6);
                }
            }
        }, _0x5d898e['prototype']['drawLeaderboard'] = function() {
            _0xc7d16a && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4597c4['drawImage'](this['pieChartCanvas'], 0x14 * _0x52f571, 0x14 * _0x52f571, this['pieChartCanvas']['width'], this['pieChartCanvas']['height'])));
            if (_0xd06b62) _0x8309d3();
        }, _0x5d898e['prototype']['btnPlayAgain'] = null, _0x5d898e['prototype']['showStats'] = !![], _0x5d898e['prototype']['interfaceButtons'] = [], _0x5d898e['prototype']['createInterfaceButtons'] = function() {
            this['interfaceButtons'] = [];
        }, _0x5d898e['prototype']['drawInterfaceButtons'] = function() {
            if (this['interfaceButtons'])
                for (var _0x289434 = 0x0; _0x289434 < this['interfaceButtons']['length']; _0x289434++) {
                    var _0x4c07f6 = this['interfaceButtons'][_0x289434];
                    _0x4c07f6['isVisible'] && _0x4c07f6['draw']();
                }
        }, _0x5d898e['prototype']['onResize'] = function() {
            this['drawInterfaceButtons']();
        }, _0x5d898e['prototype']['readPlayerStats'] = function(_0x2db18f) {
            var _0x586763 = [];
            return _0x586763['rank'] = _0x2db18f['readUInt16'](), _0x586763['timeAlive'] = _0x2db18f['readUInt16'](), _0x586763['totalKills'] = _0x2db18f['readUInt16'](), _0x586763['topRank'] = _0x2db18f['readUInt16'](), _0x586763['maxXP'] = _0x2db18f['readUInt32'](), _0x586763['killedBy'] = _0x2db18f['readString'](), _0x586763;
        }, _0x5d898e['prototype']['playerInfo'] = function(_0xb5d30a) {
            if (isGhost && !_0x5e010f) {
                var _0x3d22b4 = this['readPlayerStats'](_0xb5d30a);
                this['buildEndScreenHTML'](_0x3d22b4);
            } else !isGhost && (this['endScreenCanvas'] = null);
        };
        var _0x5d3f39 = 0x0,
            _0x42f823 = 0x1,
            _0x42f823 = 0x1,
            _0x450baa = 0x2,
            _0x550b0c = 0x4,
            _0x18b2bd = 0x4;
        _0x5d898e['prototype']['worldUpdate'] = function(_0x418389) {
            _0x4c2aa9 = _0x418389['readUInt8']();
            if (_0x4c2aa9 == _0x450baa) {
                var _0x3166f8 = minimapW / 0xc8,
                    _0x20dffc = minimapH / 0xc8,
                    _0x1271fc = _0x418389['readUInt32']() * _0x3166f8,
                    _0x5d3ab4 = _0x418389['readUInt32']() * _0x20dffc,
                    _0x2bdd05 = _0x418389['readUInt32']() * 0x5;
                _0xd06b62 = {
                    'x': _0x1271fc,
                    'y': _0x5d3ab4,
                    'rad': _0x2bdd05 * (minimapW / _0x6f4c47)
                };
            } else _0xd06b62 = null;
        }, _0x5d898e['prototype']['handleMessage'] = function(_0x3fb8c7) {
            var _0x214c91 = _0x3fb8c7['readUInt8']();
            switch (_0x214c91) {
                case _0x56e541: {
                    var _0x6e3a92 = _0x3fb8c7['readString']();
                    this['setStatusBarMessage'](_0x6e3a92, 0xf);
                    break;
                }
                case _0x4317f2: {
                    this['alivePlayers'] = _0x3fb8c7['readUInt16'](), this['playerCountMsg'] = _0x3fb8c7['readString'](), this['setPlayerCountMsg']();
                    break;
                }
                case _0x1e20b8: {
                    this['timeRemain'] = _0x3fb8c7['readUInt16']();
                    break;
                }
                case 0x21: {
                    var _0x5a0afa = _0x3fb8c7['readUInt16']();
                    isGhost = !![], this['showStats'] = !![], _0x33301f = ![], _0x3a1f5a();
                }
                break;
                case 0x22: {
                    _0x3952fc = 'You WON!', respawnXp = 0x0, _0x2ccd5c = 0x50, _0x56aa85 = 'limegreen', _0x44b610 = +new Date() + 0x1388, _0x33301f = ![], _0x3a1f5a();
                }
                break;
                case 0x23: {}
                break;
                case 0x24: {
                    var _0x3cc2c2 = _0x3fb8c7['readUInt8'](),
                        _0x4a1b6d = [];
                    for (_0x59e56e = 0x0; _0x59e56e < _0x3cc2c2; ++_0x59e56e) {
                        _0x4a1b6d['push']({
                            'name': _0x3fb8c7['readString'](),
                            'xp': _0x3fb8c7['readUInt32']()
                        });
                    }
                    this['leaderboard'](_0x4a1b6d);
                }
                break;
                case 0x25: {
                    var _0x1afcbc = _0x3fb8c7['readUInt16'](),
                        _0x4817e0 = _0x22f380(_0x1afcbc);
                    if (this['state'] == 0x4) {
                        var _0x6e3a92 = 'Game restarts in ' + _0x4817e0;
                        if (_0x1afcbc < 0x3) _0x6e3a92 = 'Starting new game';
                        this['setMessage'](_0x6e3a92, 0x1f4);
                    } else {
                        var _0x6e3a92 = 'Battle begins in ' + _0x4817e0;
                        if (_0x1afcbc < 0x3) {
                            if (_0x4817e0 == '') _0x6e3a92 = 'Starting new battle!';
                            else _0x6e3a92 = 'Starting new battle! (' + _0x4817e0 + ')';
                        }
                        this['setMessage'](_0x6e3a92, 0x1f4), _0x1afcbc == 0x0 && _0x56ec0d('SURVIVE!', 0x9c4);
                    }
                }
                break;
                case 0x26: {
                    this['playersJoined'] = _0x3fb8c7['readUInt16']();
                    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
                }
                break;
                case 0x27: {
                    var _0x1afcbc = _0x3fb8c7['readUInt16'](),
                        _0x4817e0 = _0x22f380(_0x1afcbc);
                    if (!isGhost) {
                        var _0x6e3a92 = 'Heatwave expanding in ' + _0x4817e0;
                        if (_0x1afcbc < 0x4) _0x6e3a92 = 'Heatwave expands now!';
                        this['setMessage'](_0x6e3a92, 0x1f4), _0x1afcbc == 0x0 && _0x56ec0d('STAY SAFE!', 0x9c4);
                    }
                }
                break;
                case 0x28: {
                    if (isGhost) this['setMessage']('You have been eliminated!', 0x1f4);
                    else this['setMessage']('Stay in safe area!', 0x1f4);
                }
                break;
                case 0x29: {
                    _0x4c2aa9 = this['state'] = _0x3fb8c7['readUInt8'](), this['playersJoined'] = _0x3fb8c7['readUInt16']();
                    if (this['playersJoined'] > 0x0) this['setPlayerCount'](this['playersJoined']);
                    if (this['state'] == _0x5d3f39) this['setMessage']('Waiting for players', 0x3e8);
                    else this['state'] == battleRoyal_gameReset && _0x32ba70();
                }
                break;
                case 0x2a: {
                    var _0x25c4c3 = _0x3fb8c7['readUInt8']() == 0x1;
                    if (_0x25c4c3) this['setMessage']('You WON!', 0x3a98);
                    else this['setMessage']('You LOST!', 0x3a98);
                }
                break;
                case 0x2b: {
                    _0x515e2d = !![], _0x4aaac3() && _0x43a83d['close']();
                }
                break;
                case 0x2c: {
                    var _0x1e0886 = _0x3fb8c7['readString']();
                    if (_0x1e0886 && _0x1e0886['length'] > 0x0) this['onPlayerWasted'](_0x1e0886);
                }
                break;
                case 0x2d: {
                    console['log']('Msg_battleroyal_endScreen');
                    var _0x556eb1 = null,
                        _0x512ca4 = 0x0;
                    !_0x58c983 ? (_0x556eb1 = this['readPlayerStats'](_0x3fb8c7), _0x512ca4 = _0x556eb1['totalPlayers']) : _0x512ca4 = _0x3fb8c7['readUInt16']();
                    var _0x36f8d7 = [];
                    if (_0x512ca4 > 0x0) {
                        if (_0x512ca4 > 0x5) _0x512ca4 = 0x5;
                        for (var _0x59e56e = 0x0; _0x59e56e < _0x512ca4; ++_0x59e56e) {
                            _0x36f8d7['push']({
                                'playerName': _0x3fb8c7['readString'](),
                                'wins': _0x3fb8c7['readUInt8']()
                            });
                        }
                    }(_0x36f8d7 != null || _0x556eb1 != null) && (this['endScreenDisplayed'] = ![], this['buildEndScreenHTML'](_0x36f8d7, _0x556eb1));
                }
                break;
                case 0x2e: {
                    var _0x1afcbc = _0x3fb8c7['readUInt16']();
                    if (_0x1afcbc == 0x0) this['setMessage']('Battle Ended', 0x1f4);
                    else {
                        var _0x4817e0 = _0x22f380(_0x1afcbc);
                        if (!isGhost) this['setMessage']('Battle Ending in ' + _0x4817e0, 0x1f4);
                    }
                }
                case 0x30: {
                    var _0x556eb1 = this['readPlayerStats'](_0x3fb8c7);
                    this['buildEndScreen'](null, _0x556eb1);
                }
            }
        };
        var _0x17abf7 = null;

        function _0x8309d3() {
            if (!_0x17abf7) _0x17abf7 = document['createElement']('canvas');
            _0x17abf7['width'] = minimapW, _0x17abf7['height'] = minimapH;
            var _0x1b7161 = _0x17abf7['getContext']('2d');
            _0x1b7161['clearRect'](0x0, 0x0, _0x17abf7['width'], _0x17abf7['height']), _0x1b7161['save']();
            var _0xd561bd = Math['max'](0x3, _0xd06b62['rad']),
                _0x17e1a9 = _0xd06b62['x'],
                _0x27af72 = _0xd06b62['y'];
            _0x1b7161['translate'](_0x17e1a9, _0x27af72), _0x1b7161['save'](), _0x1b7161['globalAlpha'] = 0x1, _0x4d4cb6(_0x1b7161, 0x0, 0x0, _0xd06b62['rad'], 0x5, 'white'), _0x1b7161['restore']();
            var _0x1de69b = _0x6039c * minimapW * 1.5,
                _0x50fb0f = _0x6039c * minimapH * 1.5,
                _0x2d5ece = 0x1,
                _0x5ebac0 = 'red';
            _0x4767a5(_0x1b7161, _0xd06b62['rad'], Math['PI'] * 0x0, _0x5ebac0, _0x2d5ece, _0x1de69b, _0x50fb0f), _0x4767a5(_0x1b7161, _0xd06b62['rad'], Math['PI'] * 0.5, _0x5ebac0, _0x2d5ece, _0x1de69b, _0x50fb0f), _0x4767a5(_0x1b7161, _0xd06b62['rad'], Math['PI'] * 0x1, _0x5ebac0, _0x2d5ece, _0x1de69b, _0x50fb0f), _0x4767a5(_0x1b7161, _0xd06b62['rad'], Math['PI'] * 1.5, _0x5ebac0, _0x2d5ece, _0x1de69b, _0x50fb0f), _0x1b7161['restore'](), _0x17abf7 && _0x4597c4['drawImage'](_0x17abf7, _0x4921b9 - (0xa * _0x52f571 + _0x5487e0['width'] * _0x6039c), 0xa * _0x52f571, minimapW * _0x6039c, minimapH * _0x6039c);
        }
        _0x5d898e['prototype']['drawZombiePlayers'] = function() {
            if (this['zombiePlayers'])
                for (t = 0x0; t < this['zombiePlayers']['length']; t++) {
                    _0x12db5d(this['zombiePlayers'][t], '#adff32', 0x1);
                }
        }, _0x5d898e['prototype']['drawMap'] = function() {
            this['buildPieChart']();
            if (!_0x54e7d5) this['drawZombiePlayers']();
        }, _0x5d898e['prototype']['pieChartCanvas'] = null, _0x5d898e['prototype']['teamColors'] = {
            0x0: 'white',
            0x1: '#B6CF40'
        }, _0x5d898e['prototype']['buildPieChart'] = function() {
            if (this['pieChartCanvas'] == null) this['pieChartCanvas'] = document['createElement']('canvas');
            if (this['pieChartCanvas'] == null) return;
            var _0x5d2733 = this['pieChartCanvas']['getContext']('2d'),
                _0x1b3993 = {
                    0x0: this['nonZombiePlayersCount'],
                    0x1: this['zombieCount']
                };
            _0xf671c1 = _0x54e7d5 ? 0x1 : 0x0;
            var _0x4c7e83 = new _0x50a00d({
                    'pad': 0x1e,
                    'canvas': this['pieChartCanvas'],
                    'data': _0x1b3993,
                    'colors': this['teamColors']
                }),
                _0x1c4511 = 0x37,
                _0x37db7f = 0x28,
                _0x34ab58 = 0x5,
                _0x381570 = 0xc8,
                _0x5bd752 = 0xc8;
            _0x1c4511 = _0x381570 + _0x34ab58 * 0x2, this['pieChartCanvas']['width'] = _0x5bd752 + _0x34ab58 * 0x2, this['pieChartCanvas']['height'] = _0x1c4511, _0x4c7e83['draw'](), _0x5d2733['globalAlpha'] = 0.2;
            var _0x36f2e1 = _0x34ab58;
            _0x5d2733['globalAlpha'] = 0.5, _0x5d2733['fillStyle'] = 'white', _0x5d2733['font'] = '20px Arial';
            var _0x36f2e1 = 0xc8;
            str = _0x3a357f['name'], _0x5d2733['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x5d2733['measureText'](str)['width'] / 0x2 - 0xf, _0x36f2e1);
        }, _0x5d898e['prototype']['endScreenDisplayed'] = ![], _0x5d898e['prototype']['buildEndScreenHTML'] = function(_0x5c3a33) {
            if (this['endScreenDisplayed']) return;
            this['endScreenDisplayed'] = !![];
            var _0x44c4e1 = '';
            _0x44c4e1 += '<div class=\'msg\'>YOU WERE #' + _0x5c3a33['rank'] + '</div>', _0x44c4e1 += '<div class=\'row\'>', _0x44c4e1 += '<div class=\'label\'>Killed by:</div>', _0x44c4e1 += '<div class=\'value2\'>' + _0x5c3a33['killedBy'] + '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div class=\'row\'>', _0x44c4e1 += '<div class=\'col1\'>', _0x44c4e1 += '<div class=\'label\'>Time alive:</div>', _0x44c4e1 += '<div class=\'value\'>' + _0x22f380(_0x5c3a33['timeAlive']) + '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div class=\'col2\'>', _0x44c4e1 += '<div class=\'label\'>Total kills:</div>', _0x44c4e1 += '<div class=\'value\'>' + _0x5c3a33['totalKills'] + '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div class=\'row\'>', _0x44c4e1 += '<div class=\'col1\'>', _0x44c4e1 += '<div class=\'label\'>Top rank:</div>', _0x44c4e1 += '<div class=\'value\'>' + _0x5c3a33['topRank'] + '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div class=\'col2\'>', _0x44c4e1 += '<div class=\'label\'>Max xp:</div>', _0x44c4e1 += '<div class=\'value\'>' + _0x2c8aad(_0x5c3a33['maxXP']) + '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div style=\'clear:both;\'></div>', _0x44c4e1 += '<div class=\'btnDiv\'>', _0x44c4e1 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x44c4e1 += '</div>', _0x44c4e1 += '<div style=\'clear:both;\'></div>';
            var _0x63e678 = document['getElementById']('endScreen');
            _0x63e678 && (_0x63e678['innerHTML'] = _0x44c4e1, _0x63e678['style']['display'] = 'block'), (!_0xc7d16a || isGhost) && _0x2332f9(!![]);
        }, _0x5d898e['prototype']['endScreenCanvas'] = null, _0x5d898e['prototype']['buildEndScreen'] = function(_0x5d5d82, _0x1f70b0) {
            if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
            if (this['endScreenCanvas'] == null) return;
            var _0x568694 = this['endScreenCanvas']['getContext']('2d'),
                _0x142a9b = 0x37,
                _0x3a9e67 = 0x28,
                _0x1ee95f = 0x5,
                _0x1cb550 = 0xf0,
                _0x1e49fe = 0x1a4;
            _0x142a9b = _0x1cb550 + _0x1ee95f * 0x2, this['endScreenCanvas']['width'] = _0x1e49fe + _0x1ee95f * 0x2, this['endScreenCanvas']['height'] = _0x142a9b, _0x568694['globalAlpha'] = 0.2, _0x568694['fillStyle'] = '#000000', _0x568694['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x568694['fillStyle'] = '#000000', _0x568694['fillRect'](_0x1ee95f, _0x1ee95f, this['endScreenCanvas']['width'] - _0x1ee95f * 0x2, this['endScreenCanvas']['height'] - _0x1ee95f * 0x2);
            var _0xb4adc6 = _0x1ee95f;
            _0x568694['globalAlpha'] = 0x1, _0x568694['fillStyle'] = '#FFFFFF', _0x568694['font'] = '30px Arial', _0xb4adc6 += 0x37;
            var _0x18512d = 'Final Stats';
            _0x568694['font'] = '30px Arial', _0x568694['fillText'](_0x18512d, this['endScreenCanvas']['width'] / 0x2 - _0x568694['measureText'](_0x18512d)['width'] / 0x2, _0xb4adc6), _0x568694['font'] = '20px Arial', _0xb4adc6 += 0x2d, _0x18512d = 'You were #' + _0x1f70b0['rank'], _0x568694['fillText'](_0x18512d, this['endScreenCanvas']['width'] / 0x2 - _0x568694['measureText'](_0x18512d)['width'] / 0x2, _0xb4adc6), _0xb4adc6 += 0x28;
            var _0x35cc60 = _0x22f380(_0x1f70b0['timeAlive']),
                _0x263f35 = _0x1ee95f + 0xf;
            _0x17eda1(_0x568694, 'Killed by', _0x1f70b0['killedBy'], _0x263f35, _0xb4adc6), _0xb4adc6 += 0x28, _0x17eda1(_0x568694, 'Time Alive', _0x22f380(_0x1f70b0['timeAlive']), _0x263f35, _0xb4adc6), _0x263f35 += 0xd2, _0x17eda1(_0x568694, 'Total Kills', _0x1f70b0['totalKills'], _0x263f35, _0xb4adc6), _0xb4adc6 += 0x28, _0x263f35 = _0x1ee95f + 0xf, _0x17eda1(_0x568694, 'Top rank', _0x1f70b0['topRank'], _0x263f35, _0xb4adc6), _0x263f35 += 0xd2, _0x17eda1(_0x568694, 'Max XP', _0x2c8aad(_0x1f70b0['maxXP']), _0x263f35, _0xb4adc6), _0xb4adc6 += 0x32;
        };
        var _0x4767a5 = function(_0x3e926d, _0x1906c3, _0x12663d, _0x328c53, _0x92dc45, _0xacb0f4, _0x498941) {
            _0x3e926d['save'](), _0x3e926d['globalAlpha'] = _0x92dc45, _0x3e926d['fillStyle'] = _0x328c53, _0x3e926d['rotate'](_0x12663d), _0x3e926d['save'](), _0x3e926d['strokeStyle'] = 'white', _0x3e926d['beginPath'](), _0x3e926d['arc'](0x0, 0x0, _0x1906c3, 0x0, Math['PI'] * 0.5, ![]), _0x3e926d['stroke'](), _0x3e926d['restore'](), _0x3e926d['save'](), _0x3e926d['beginPath'](), _0x3e926d['arc'](0x0, 0x0, _0x1906c3, 0x0, Math['PI'] * 0.5, ![]), _0x3e926d['lineTo'](0x0, _0xacb0f4), _0x3e926d['lineTo'](_0x498941, _0xacb0f4), _0x3e926d['lineTo'](_0x498941, 0x0), _0x3e926d['closePath'](), _0x3e926d['fill'](), _0x3e926d['restore'](), _0x3e926d['restore']();
        };
        _0x5d898e['prototype']['lastWastedPopupT'] = 0x0, _0x5d898e['prototype']['onPlayerWasted'] = function(_0x21d652) {
            if ((_0x476319 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
                this['lastWastedPopupT'] = _0x476319;
                var _0x3ee1b8 = new _0x3eb07d(_0x21d652 + ' wasted!', 0x28, 'red', 0x5dc);
                this['wastedPopups']['push'](_0x3ee1b8);
            }
        }, _0x5d898e['prototype']['screenTextEndT'] = 0x0, _0x5d898e['prototype']['screenTextMsg'] = '', _0x5d898e['prototype']['setMessage'] = function(_0x5ee9fa, _0x2839a4) {
            this['screenTextMsg'] = _0x5ee9fa;
            if (_0x2839a4 == 0x0) this['screenTextEndT'] = +new Date() + _0x2839a4;
            else this['screenTextEndT'] = +new Date() + _0x2839a4;
        }, _0x5d898e['prototype']['screenMessage'] = function() {
            var _0x4dc8da = 0x1,
                _0x10a86e = (this['screenTextEndT'] - _0x476319) / 0x3e8 / _0x4dc8da;
            _0x10a86e = 0x0 > _0x10a86e ? 0x0 : 0x1 < _0x10a86e ? 0x1 : _0x10a86e;
            if (_0x10a86e > 0x0) {
                _0x4597c4['save']();
                var _0x5728c3 = _0x4921b9 / 0x2,
                    _0x904b38 = 0x3c * _0x6039c,
                    _0x8163b7 = (_0x4921b9 / 0x2 - 0x64) * _0x6039c;
                _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
                var _0x2bbddf = _0x117fee - _0x117fee * 0.2;
                _0x4597c4['fillRect'](_0x5728c3 - _0x8163b7 / 0x2, _0x2bbddf - _0x904b38 / 0x2, _0x8163b7, _0x904b38), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['globalAlpha'] = _0x10a86e, _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x28 * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x4597c4['fillText'](this['screenTextMsg'], _0x4921b9 / 0x2, _0x2bbddf), _0x4597c4['restore']();
            }
        };
        var _0xd8569 = new Array();
        _0x5d898e['prototype']['setStatusBarMessage'] = function(_0x57dba6, _0x595021) {
            var _0x4453b6 = 0x28,
                _0x239729 = 0x1,
                _0x272943 = 'white',
                _0x1d7323 = _0x4921b9 / 0x2,
                _0x1cfe3c = _0x117fee - _0x117fee * 0.15,
                _0x5159ae = _0x4921b9 / 0x2 - 0x64,
                _0x115378 = 0x3c,
                _0x2a9fe6 = 'black',
                _0x108da5 = 0.1,
                _0x2d4fa9 = +new Date() + _0x595021 * 0x3e8;
            this['msg_statusbar'] = {
                'txt': _0x57dba6,
                'txt_size': _0x4453b6,
                'txt_alpha': _0x239729,
                'txt_color': _0x272943,
                'x': _0x1d7323,
                'y': _0x1cfe3c,
                'bg_w': _0x5159ae,
                'bg_h': _0x115378,
                'bg_color': _0x2a9fe6,
                'bg_alpha': _0x108da5,
                'dur': _0x2d4fa9
            };
        }, _0x5d898e['prototype']['msg_statusbar'] = null, _0x5d898e['prototype']['msg_playerCount'] = null;
        var _0x3b7ab4 = 0.1;
        _0x5d898e['prototype']['setPlayerCountMsg'] = function() {
            var _0xebbcc2 = 0x14,
                _0x50c4fd = 0x1,
                _0x1d8aa3 = 'white',
                _0x3c537a = _0x4921b9 / 0x2,
                _0x3cc39e = 0x1e,
                _0xc9d6ce = 0x64,
                _0x57146c = 0x28,
                _0x3571d2 = 'black',
                _0x486072 = 0.1,
                _0x1edff7 = '';
            this['playerCountMsg'] != 'alive' ? (_0x57146c = 0x46, _0x1edff7 = this['playerCountMsg'] + '\x0a' + this['alivePlayers'] + ' joined') : _0x1edff7 = this['alivePlayers'] + ' alive';
            var _0x5b7da4 = +new Date() + 0x3c * 0x3e8;
            this['msg_playerCount'] = {
                'txt': _0x1edff7,
                'txt_size': _0xebbcc2,
                'txt_alpha': _0x50c4fd,
                'txt_color': _0x1d8aa3,
                'x': _0x3c537a,
                'y': _0x3cc39e,
                'bg_w': _0xc9d6ce,
                'bg_h': _0x57146c,
                'bg_color': _0x3571d2,
                'bg_alpha': _0x486072,
                'dur': _0x5b7da4
            };
        }, _0x5d898e['prototype']['gameMode_screenMsg'] = function() {
            if (this['msg_statusbar']) {
                this['drawMessage'](this['msg_statusbar']);
                if (this['msg_statusbar']['dur'] - _0x476319 < 0x0) this['msg_statusbar'] = null;
            }
            this['msg_playerCount'] && this['drawMessage'](this['msg_playerCount']);
        }, _0x5d898e['prototype']['drawMessage'] = function(_0x1718bb) {
            if (_0x1718bb && _0x1718bb['txt']) this['drawMessageBar'](_0x1718bb['txt'], _0x1718bb['txt_size'], _0x1718bb['txt_alpha'], _0x1718bb['txt_color'], _0x1718bb['x'], _0x1718bb['y'], _0x1718bb['bg_w'], _0x1718bb['bg_h'], _0x1718bb['bg_color'], _0x1718bb['bg_alpha'], _0x1718bb['dur']);
        }, _0x5d898e['prototype']['drawMessageBar'] = function(_0x21311a, _0xe035cd, _0x5946c8, _0xaae9, _0x463543, _0x195f17, _0x18854a, _0x378c55, _0x3f7123, _0x1f2dcb, _0x103085) {
            var _0x44551e = 0x1;
            {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x1f2dcb, _0x4597c4['fillStyle'] = _0x3f7123, _0xe035cd = _0xe035cd * _0x6039c, _0x4597c4['font'] = _0xe035cd + 'px Arial';
                var _0x57ab43 = _0x463543,
                    _0x3d8edc = _0x195f17,
                    _0x462572 = _0x21311a['split']('\x0a'),
                    _0x42e7e5 = _0xe035cd * _0x462572['length'] * 1.5 * _0x6039c,
                    _0x4119e5 = 0x0;
                for (var _0x32e1d9 = 0x0; _0x32e1d9 < _0x462572['length']; ++_0x32e1d9) {
                    _0x4119e5 = Math['max'](_0x4119e5, _0x4597c4['measureText'](_0x462572[_0x32e1d9])['width']);
                }
                _0x4119e5 = _0x4119e5 * 1.5 * _0x6039c, _0x4597c4['fillRect'](_0x57ab43 - _0x4119e5 / 0x2, _0x3d8edc - _0x42e7e5 / 0x2, _0x4119e5, _0x42e7e5), _0x4597c4['globalAlpha'] = _0x5946c8, _0x4597c4['fillStyle'] = _0xaae9, _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black';
                if (_0x462572['length'] > 0x1) _0x3d8edc -= 0xa * _0x6039c;
                else _0x3d8edc += 0x5 * _0x6039c;
                for (var _0x32e1d9 = 0x0; _0x32e1d9 < _0x462572['length']; _0x32e1d9++) {
                    _0x4597c4['fillText'](_0x462572[_0x32e1d9], _0x57ab43, _0x3d8edc), _0x3d8edc += _0xe035cd * (_0x32e1d9 + 0x1);
                }
                _0x4597c4['restore']();
            }
        };

        function _0x5d898e(_0x27b77f) {
            this['mode'] = _0x21c3d1, this['chatAllowed'] = !![], this['createInterfaceButtons']();
        }
        var _0x50a00d = function(_0x3f4f57) {
                this['options'] = _0x3f4f57, this['radius'] = _0x3f4f57['radius'], this['pad'] = _0x3f4f57['pad'], this['canvas'] = _0x3f4f57['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x3f4f57['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['draw'] = function() {
                    var _0x55c5a3 = 0x0,
                        _0x1cfac9 = 0x0;
                    this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], 'white'), this['_ctx']['restore']();
                    for (var _0x23a872 in this['options']['data']) {
                        var _0x5260c7 = this['options']['data'][_0x23a872];
                        _0x55c5a3 += _0x5260c7;
                    }
                    var _0x1bbd1d = 0x0;
                    for (_0x23a872 in this['options']['data']) {
                        this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
                        var _0xb7d7aa = 0x0;
                        _0xf671c1 == _0x23a872 && (this['_ctx']['globalAlpha'] = 0.6, _0xb7d7aa = 0x8);
                        _0x5260c7 = this['options']['data'][_0x23a872];
                        var _0xd4ba33 = 0x2 * Math['PI'] * _0x5260c7 / _0x55c5a3;
                        this['drawPieSlice'](this['canvas']['width'] / 0x2 - this['pad'] / 0x2, this['canvas']['height'] / 0x2 - this['pad'] / 0x2, this['radius'] - this['pad'], _0x1bbd1d, _0x1bbd1d + _0xd4ba33, this['colors'][_0x23a872], _0xb7d7aa), this['_ctx']['restore'](), _0x1bbd1d += _0xd4ba33, _0x1cfac9++;
                    }
                }, this['drawPieSlice'] = function(_0x5f4451, _0x51aba7, _0x3079f3, _0x3fa5c8, _0x114efb, _0x3524a2, _0x68eef2) {
                    this['_ctx']['fillStyle'] = _0x3524a2, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x5f4451, _0x51aba7), this['_ctx']['arc'](_0x5f4451, _0x51aba7, _0x3079f3 + _0x68eef2, _0x3fa5c8, _0x114efb), this['_ctx']['closePath'](), this['_ctx']['fill']();
                    if (_0x68eef2 > 0x0) this['_ctx']['stroke']();
                }, this['drawCircle'] = function(_0x5bc1cb, _0x4dd04b, _0x5ecf76, _0xc460f1) {
                    this['_ctx']['fillStyle'] = _0xc460f1, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x5bc1cb, _0x4dd04b), this['_ctx']['arc'](_0x5bc1cb, _0x4dd04b, _0x5ecf76, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
                };
            },
            _0x4d8447 = _0x533155;
        _0x2024b6['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2024b6['prototype']['constructor'] = _0x2024b6, _0x2024b6['superClass'] = _0x4d8447, _0x2024b6['prototype']['safeArea'] = null, _0x2024b6['prototype']['teamColors'] = {
            0x0: '#cccccc',
            0x1: '#ffff00',
            0x2: '#01effc',
            0x3: '#bb00ff'
        };

        function _0x2024b6() {
            this['mode'] = _0x3a12fc, this['createInterfaceButtons']();
        }
        _0x2024b6['prototype']['wastedPopups'] = [], _0x2024b6['prototype']['playerDisplayNum'] = 0x0, _0x2024b6['prototype']['eventText'] = null, _0x2024b6['prototype']['setServerPlayerCount'] = function() {
            switch (this['playerDisplayNum']) {
                case 0x1:
                case 0x2:
                    _0x50f011['setText']('On Server: ' + _0x136baa(_0xf437f3) + ' playing ' + nPlayersUnique + ' unqiue'), this['playerDisplayNum']++;
                    break;
                case 0x3:
                case 0x4:
                    _0x50f011['setText']('Modes Total: ' + gamemodes_alive + ' playing, ' + gamemodes_unique + ' unique'), this['playerDisplayNum']++;
                    break;
                case 0x5:
                    var _0x73330d = gamemodes_unique / _0x570a5c * 0x64;
                    _0x50f011['setText']('Milestone 2: ' + _0x136baa(_0x73330d['toFixed'](0x2)) + '% (' + gamemodes_unique + ' of ' + _0x570a5c + ')'), this['playerDisplayNum']++;
                    break;
                case 0x6:
                    this['playerDisplayNum'] = 0x0;
                    break;
                default:
                    _0x50f011['setText'](_0x136baa(_0x570a5c) + ' across Mope!'), this['playerDisplayNum']++;
                    break;
            }
            _0x120225 && _0x120225['setPlayersCount'](_0x570a5c);
        };
        const _0x5164ea = 0x1,
            _0x4ac5ef = 0x2,
            _0x55045c = 0x3,
            _0x3ca8be = 0x4,
            _0x39dfbe = 0x5,
            _0x1a67bf = 0x6,
            _0xfc0ee5 = 0x7;
        _0x2024b6['prototype']['socketMessages'] = function(_0x4fc8d2) {
            var _0x2148d5 = _0x4fc8d2['readUInt8']();
            switch (_0x2148d5) {
                case _0x5164ea: {
                    let _0x47108c = _0x4fc8d2['readUInt8'](),
                        _0xfede82 = _0x4fc8d2['readString']();
                    _0xfede82 = 'Nice, your team has unlocked \'' + _0xfede82 + '\' buff.', this['showBuffMessage']('success', _0xfede82, _0x47108c, 0x6);
                    break;
                }
                case _0x4ac5ef: {
                    let _0x5de0e9 = _0x4fc8d2['readUInt8'](),
                        _0x12670d = _0x4fc8d2['readString']();
                    _0x12670d = 'Oh no, \'' + _0x12670d + '\' buff has been compromised!', this['showBuffMessage']('error', _0x12670d, _0x5de0e9, 0x6);
                    if (this['isApocalypseInprogress']) {}
                    break;
                }
                case _0x55045c: {
                    console['log']('APOCALYPSE_STARTED'), this['apocalypseType'] = _0x4fc8d2['readString'](), this['triggeredByTeamID'] = _0x4fc8d2['readUInt8'](), this['apocalypseStatus'] = _0x4fc8d2['readString'](), this['timeLeft'] = _0x4fc8d2['readUInt16']() / 0x64;
                    break;
                }
                case _0x3ca8be: {
                    console['log']('APOCALYPSE_ENDED'), this['apocalypseType'] = null, this['triggeredByTeamID'] = 0x0, this['apocalypseStatus'] = null, this['timeLeft'] = 0x0, _0x6a452e('Apocalypse is over. Now, you can go anywhere freely!', 'success', 0x6);
                    break;
                }
                case _0x39dfbe: {
                    this['isApocalypseInprogress'] = _0x4fc8d2['readUInt8']() == 0x1;
                    this['isApocalypseInprogress'] && (this['apocalypseType'] = _0x4fc8d2['readString'](), this['triggeredByTeamID'] = _0x4fc8d2['readUInt8'](), this['apocalypseStatus'] = _0x4fc8d2['readString'](), this['timeLeft'] = _0x4fc8d2['readUInt16']() / 0x64);
                    break;
                }
                case _0x1a67bf: {
                    this['team1'] = _0x4fc8d2['readUInt16'](), this['team2'] = _0x4fc8d2['readUInt16'](), this['team3'] = _0x4fc8d2['readUInt16'](), this['updatePieChart']({
                        0x1: this['team1'],
                        0x2: this['team2'],
                        0x3: this['team3']
                    }), this['drawPieLeaderboard']();
                    break;
                }
                case _0xfc0ee5: {
                    let _0x4bdc38 = _0x4fc8d2['readUInt8']();
                    this['capturedStones'] = [];
                    for (var _0x2f24f3 = 0x0; _0x2f24f3 < _0x4bdc38; _0x2f24f3++) {
                        this['capturedStones']['push']({
                            'stoneBuffID': _0x4fc8d2['readUInt8'](),
                            'hp': _0x4fc8d2['readUInt8']() / 0x64
                        });
                    }
                    break;
                }
            }
        }, _0x2024b6['prototype']['getStoneBuffIcon'] = function(_0x2ca9e3) {
            switch (_0x2ca9e3) {
                case 0x1:
                    return '/assets/s/2/gameobj/78/incentive/1.png';
                case 0x2:
                    return '/assets/s/2/gameobj/78/incentive/2.png';
                case 0x3:
                    return '/assets/s/2/gameobj/78/incentive/3.png';
                case 0x4:
                    return '/assets/s/2/gameobj/78/incentive/4.png';
                case 0x5:
                    return '/assets/s/2/gameobj/78/incentive/5.png';
                case 0x6:
                    return '/assets/s/2/gameobj/78/incentive/6.png';
                case 0x7:
                    return '/assets/s/2/gameobj/78/incentive/7.png';
                case 0x8:
                    return '/assets/s/2/gameobj/78/incentive/8.png';
                case 0x9:
                    return '/assets/s/2/gameobj/78/incentive/9.png';
                case 0xa:
                    return '/assets/s/2/gameobj/78/incentive/10.png';
                case 0xb:
                    return '/assets/s/2/gameobj/78/incentive/11.png';
                case 0xc:
                    return '/assets/s/2/gameobj/78/incentive/12.png';
                case 0xd:
                    return '/assets/s/2/gameobj/78/incentive/13.png';
            }
        }, _0x2024b6['prototype']['showBuffMessage'] = function(_0x122031, _0x1b0048, _0xfccfe2, _0x1ea0ae) {
            _0x36006b();
            var _0x2eb01e = document['getElementsByTagName']('body')[0x0];
            if (_0x2eb01e) {
                let _0x499a95 = document['getElementById']('gameAreaWrapper'),
                    _0x2a9781 = _0x29e808('mopeshop-popup'),
                    _0x2a5504 = this['getStoneBuffIcon'](_0xfccfe2),
                    _0x3664be = _0x29e808('mopeshop-popup-icon', '');
                _0x3664be['innerHTML'] = '<img src=\'' + _0x2a5504 + '\'/>';
                let _0x284d07 = _0x29e808('msg', _0x122031),
                    _0x4e58f7 = _0x29e808('text');
                _0x4e58f7['innerHTML'] = _0x1b0048;
                let _0x19952b = _0x29e808('closeMsg', '');
                _0x19952b['onclick'] = function() {
                    _0x36006b();
                }, _0x284d07['appendChild'](_0x3664be), _0x284d07['appendChild'](_0x19952b), _0x284d07['appendChild'](_0x4e58f7), _0x2a9781['appendChild'](_0x284d07), _0x2eb01e['insertBefore'](_0x2a9781, _0x499a95), _0x1ea0ae !== undefined && _0x1ea0ae > 0x0 && setTimeout(_0x36006b, _0x1ea0ae * 0x3e8);
            }
        }, _0x2024b6['prototype']['interface'] = function() {
            if (this['state'] == -0x1 || this['mode'] != _0x524bb8) return;
            _0xc7d16a && (this['pieChartCanvas'] != null && (this['pieChartCanvas']['width'] && _0x4597c4['drawImage'](this['pieChartCanvas'], 0x0, 0x0, this['pieChartCanvas']['width'], this['pieChartCanvas']['height']))), this['drawInterfaceButtons']();
        }, _0x2024b6['prototype']['drawMap'] = function() {
            if (_0xc7d16a) {
                if (_0x9ffe4d) return;
                this['drawPieLeaderboard'](), this['drawTeamPlayers'](), _0x120225 && _0x120225['drawMap'](), this['onApocalypseUpdated']();
            }
        }, _0x2024b6['prototype']['interfaceReset'] = function() {
            this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
            if (this['interfaceButtons'])
                for (var _0x3ddc17 = 0x0; _0x3ddc17 < this['interfaceButtons']['length']; _0x3ddc17++) {
                    var _0x3f5523 = this['interfaceButtons'][_0x3ddc17];
                    _0x3f5523['onInterfaceReset']();
                }
            this['interfaceButtons'] = [];
        }, _0x2024b6['prototype']['onInit'] = function() {}, _0x2024b6['prototype']['playercount'] = 0x0, _0x2024b6['prototype']['setPlayerCount'] = function(_0x32b005) {
            this['playercount'] = _0x32b005;
        }, _0x2024b6['prototype']['showPlayerCount'] = function() {
            _0x4597c4['save']();
            var _0xff2358 = _0x4921b9 / 0x2,
                _0x4ecb4b = 0x32 * _0x6039c,
                _0x136220 = 0x12c * _0x6039c;
            _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
            var _0x2683c6 = 0x1e * _0x6039c;
            _0x4597c4['fillRect'](_0xff2358 - _0x136220 / 0x2, _0x2683c6, _0x136220, _0x4ecb4b), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x1e * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x2683c6 += 0x19 * _0x6039c;
            var _0x1ec32a = ' player';
            if (this['playercount'] > 0x1) _0x1ec32a += 's';
            if (this['state'] == battleRoyal_inProgress) _0x1ec32a += ' alive!';
            else {
                if (this['state'] == _0x5d3f39 || this['state'] == battleRoyal_ready) _0x1ec32a += ' joined';
            }
            _0x4597c4['fillText'](this['playercount'] + _0x1ec32a, _0xff2358, _0x2683c6), _0x4597c4['restore']();
        }, _0x2024b6['prototype']['lbCanvas'] = null, _0x2024b6['prototype']['leaderboard'] = function(_0x3a3382) {}, _0x2024b6['prototype']['btnPlayAgain'] = null, _0x2024b6['prototype']['showStats'] = !![], _0x2024b6['prototype']['interfaceButtons'] = [], _0x2024b6['prototype']['createInterfaceButtons'] = function() {
            this['interfaceButtons'] = [];
        }, _0x2024b6['prototype']['drawInterfaceButtons'] = function() {
            if (this['interfaceButtons'])
                for (var _0x9f37aa = 0x0; _0x9f37aa < this['interfaceButtons']['length']; _0x9f37aa++) {
                    var _0x3b11ca = this['interfaceButtons'][_0x9f37aa];
                    _0x3b11ca['isVisible'] && _0x3b11ca['draw']();
                }
        }, _0x2024b6['prototype']['onResize'] = function() {
            this['drawInterfaceButtons']();
        }, _0x2024b6['prototype']['playerInfo'] = function(_0x264b9c) {}, _0x2024b6['prototype']['playerWorldUpdate'] = function(_0x5e5b3f) {
            return;
            this['team1'] = _0x5e5b3f['readUInt16'](), this['team2'] = _0x5e5b3f['readUInt16'](), this['team3'] = _0x5e5b3f['readUInt16'](), this['isApocalypseInprogress'] = _0x5e5b3f['readUInt8']() == 0x1;
            if (this['isApocalypseInprogress']) this['apocalypseType'] = _0x5e5b3f['readString'](), this['triggeredByTeamID'] = _0x5e5b3f['readUInt8'](), this['apocalypseStatus'] = _0x5e5b3f['readString'](), this['timeLeft'] = _0x5e5b3f['readUInt16']() / 0x64;
            else {}
            let _0x57d599 = _0x5e5b3f['readUInt8']();
            this['capturedStones'] = [];
            for (var _0x16bb02 = 0x0; _0x16bb02 < _0x57d599; _0x16bb02++) {
                this['capturedStones']['push']({
                    'stoneBuffID': _0x5e5b3f['readUInt8'](),
                    'hp': _0x5e5b3f['readUInt8']() / 0x64
                });
            }
        }, _0x2024b6['prototype']['onApocalypseUpdated'] = function() {
            this['isApocalypseInprogress'] && (this['eventText'] == null && (this['eventText'] = new _0x16040f(0x14, 'white'), this['eventText']['setFontSize'](0x1c * _0x6039c)), this['eventText'] && (this['eventText']['x'] = _0x4921b9 / 0x2, this['eventText']['y'] = _0x117fee * 0.2, this['eventText']['draw']()));
        }, _0x2024b6['prototype']['bonusRoundTimer'] = null, _0x2024b6['prototype']['pieChartCanvas'] = null, _0x2024b6['prototype']['setBonusRoundTimer'] = function(_0xf0ba1e) {
            var _0x1b8a6e = '' + _0xf0ba1e;
            null == this['bonusRoundTimer'] ? (this['bonusRoundTimer'] = new _0x16040f(0x28, '#FFFFFF'), this['bonusRoundTimer']['strokeW'] = 0x2, this['bonusRoundTimer']['multiLine'] = !![], this['bonusRoundTimer']['renderScale'] = 0x5, this['bonusRoundTimer']['setText'](_0x1b8a6e)) : (this['bonusRoundTimer']['setFontSize'](0x28), this['bonusRoundTimer']['setText'](_0x1b8a6e));
        }, _0x2024b6['prototype']['drawMiniMapObjects'] = function(_0x5225cf) {
            if (this['teamStones']) {
                for (let _0x1b4f9f = 0x0; _0x1b4f9f < this['teamStones']['length']; _0x1b4f9f++) {
                    let _0x55a532 = this['teamStones'][_0x1b4f9f];
                    _0x55a532 && (_0x55a532['c'] = 'black', _0x5225cf['drawCircle'](_0x55a532));
                }
                _0x5225cf['updateMapData']();
            }
        }, _0x2024b6['prototype']['teamStones'] = [], _0x2024b6['prototype']['teamModePieChart'] = null, _0x2024b6['prototype']['updatePieChart'] = function(_0x338a0f) {
            this['pieChartCanvas'] == null && (this['pieChartCanvas'] = document['createElement']('canvas'), this['teamModePieChart'] = new _0x50a00d({
                'pad': 0x1e,
                'canvas': this['pieChartCanvas'],
                'colors': this['teamColors']
            }));
            if (this['teamModePieChart']) this['teamModePieChart']['setData'](_0x338a0f);
        }, _0x2024b6['prototype']['drawPieLeaderboard'] = function() {
            if (this['pieChartCanvas'] == null) return;
            var _0x329ac7 = this['pieChartCanvas']['getContext']('2d'),
                _0x35758b = 0x5,
                _0x39da56 = 0xc8,
                _0x2e9972 = 0xc8;
            this['pieChartCanvas']['width'] = _0x39da56, this['pieChartCanvas']['height'] = _0x2e9972 + 0x14, this['teamModePieChart']['draw'](), _0x329ac7['globalAlpha'] = 0.2;
            var _0x3f655b = _0x35758b;
            _0x329ac7['globalAlpha'] = 0.5, _0x329ac7['fillStyle'] = 'white', _0x329ac7['font'] = '20px Arial';
            var _0x3f655b = 0xd2;
            str = _0x3a357f['name'], _0x329ac7['fillText'](str, this['pieChartCanvas']['width'] / 0x2 - _0x329ac7['measureText'](str)['width'] / 0x2, _0x3f655b);
        }, _0x2024b6['prototype']['inviteScreenCanvas'] = null, _0x2024b6['prototype']['endScreenCanvas'] = null, _0x2024b6['prototype']['endScreenDisplayed'] = ![];
        var _0x50a00d = function(_0x4cd2ac) {
            this['options'] = _0x4cd2ac, this['radius'] = _0x4cd2ac['radius'], this['pad'] = _0x4cd2ac['pad'], this['canvas'] = _0x4cd2ac['canvas'], this['_ctx'] = this['canvas']['getContext']('2d'), this['colors'] = _0x4cd2ac['colors'], this['radius'] = Math['min'](this['canvas']['width'] / 0x2, this['canvas']['height'] / 0x2), this['showBg'] = ![], this['setData'] = function(_0x4626a7) {
                this['options']['data'] = _0x4626a7;
            }, this['draw'] = function() {
                var _0x47060e = 0x0,
                    _0xba7597 = 0x0;
                this['showBg'] && (this['_ctx']['save'](), this['_ctx']['beginPath'](), this['_ctx']['globalAlpha'] = 0.1, this['_ctx']['fillStyle'] = 'black', this['_ctx']['rect'](0x0, 0x0, this['canvas']['width'], this['canvas']['height']), this['_ctx']['fill'](), this['_ctx']['restore']());
                var _0x4b002c = this['canvas']['width'] / 0x2,
                    _0x36d021 = this['canvas']['height'] / 0x2;
                this['_ctx']['save'](), this['_ctx']['globalAlpha'] = 0.3, this['drawCircle'](_0x4b002c, _0x36d021, this['radius'], 'white'), this['_ctx']['restore']();
                for (var _0x417317 in this['options']['data']) {
                    var _0x13d34d = this['options']['data'][_0x417317];
                    _0x47060e += _0x13d34d;
                }
                var _0x2feb9e = 0x0;
                for (_0x417317 in this['options']['data']) {
                    this['_ctx']['save'](), this['_ctx']['lineWidth'] = 0x4, this['_ctx']['strokeStyle'] = 'white', this['_ctx']['globalAlpha'] = 0.3;
                    var _0x1e4225 = 0x0;
                    _0xf671c1 == _0x417317 && (this['_ctx']['globalAlpha'] = 0.6, _0x1e4225 = 0x8);
                    _0x13d34d = this['options']['data'][_0x417317];
                    var _0x12d0ab = 0x2 * Math['PI'] * _0x13d34d / _0x47060e;
                    this['drawPieSlice'](_0x4b002c, _0x36d021, this['radius'], _0x2feb9e, _0x2feb9e + _0x12d0ab, this['colors'][_0x417317], _0x1e4225), this['_ctx']['restore'](), _0x2feb9e += _0x12d0ab, _0xba7597++;
                }
            }, this['drawPieSlice'] = function(_0x2a7ed0, _0x47caf8, _0x4d6b60, _0x51b8e9, _0x58b6f4, _0x56a626, _0x3f47ba) {
                this['_ctx']['fillStyle'] = _0x56a626, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x2a7ed0, _0x47caf8), this['_ctx']['arc'](_0x2a7ed0, _0x47caf8, _0x4d6b60 + _0x3f47ba, _0x51b8e9, _0x58b6f4), this['_ctx']['closePath'](), this['_ctx']['fill']();
                if (_0x3f47ba > 0x0) this['_ctx']['stroke']();
            }, this['drawCircle'] = function(_0x573243, _0x9a07fa, _0x3695a0, _0x5e862d) {
                this['_ctx']['fillStyle'] = _0x5e862d, this['_ctx']['beginPath'](), this['_ctx']['moveTo'](_0x573243, _0x9a07fa), this['_ctx']['arc'](_0x573243, _0x9a07fa, _0x3695a0, 0x0, Math['PI'] * 0x2), this['_ctx']['closePath'](), this['_ctx']['fill']();
            };
        };
        _0x2024b6['prototype']['stonesCanvas'] = null, _0x2024b6['prototype']['getSkinImageObj'] = function(_0x1d717e) {
            var _0x35ba00 = './assets/s/2/' + _0x1d717e;
            return _0x5e7a48(_0x35ba00, function(_0xb9714c) {});
        }, _0x2024b6['prototype']['playerUI'] = [], _0x2024b6['prototype']['drawPlayerUI'] = function(_0x174763) {}, _0x2024b6['prototype']['drawStoneCount'] = function(_0x582c92, _0x18f617, _0x426a49, _0x73292f) {
            _0x582c92['save'](), _0x582c92['globalAlpha'] = 0.5;
            let _0x1224fc = './assets/s/2/gameobj/78/stone' + _0x18f617 + '.png',
                _0x4e5100 = _0x5e7a48(_0x1224fc);
            _0x4e5100 && (_0x582c92['drawImage'](_0x4e5100, 0xa, _0x73292f, 0x28, 0x28), _0x73292f += 0x32, _0x582c92['fillStyle'] = 'black', _0x582c92['fillText'](_0x426a49 + '', 0x3c, _0x73292f - 0x12)), _0x582c92['restore']();
        }, _0x2024b6['prototype']['drawTeamPlayers'] = function() {
            if (this['teamPlayers']) {
                var _0x2a17ed = this['teamColors'][_0xf671c1];
                for (t = 0x0; t < this['teamPlayers']['length']; t++) {
                    _0x12db5d(this['teamPlayers'][t], _0x2a17ed, 0x1);
                }
            }
        }, _0x2024b6['prototype']['getTeamColor'] = function(_0x20f883) {
            switch (_0x20f883) {
                case 0x1:
                    return 'yellow';
                case 0x2:
                    return 'cyan';
                case 0x3:
                    return 'purple';
            }
            return 'gray';
        }, _0x2024b6['prototype']['msgDisplayPumpkinsOnMiniMap'] = function(_0x3881f6) {
            _0x2d122f = [];
            var _0x3655ef = _0x3881f6['readUInt16']();
            for (var _0x5b3a0c = 0x0; _0x5b3a0c < _0x3655ef; _0x5b3a0c++) {
                _0x2d122f['push']({
                    'x': _0x3881f6['readUInt16']() / 0x4,
                    'y': _0x3881f6['readUInt16']() / 0x4,
                    'type': 0x0,
                    'rad': 0x2
                });
            }
        }, _0x2024b6['prototype']['msgDisplayPlayersOnMiniMap'] = function(_0x437ffc) {
            _0x1432d8 = [];
            var _0x5e8376 = _0x437ffc['readUInt16']();
            for (var _0x44be20 = 0x0; _0x44be20 < _0x5e8376; _0x44be20++) {
                _0x1432d8['push']({
                    'teamID': _0x437ffc['readUInt16'](),
                    'x': _0x437ffc['readUInt32']() / 0x64,
                    'y': _0x437ffc['readUInt32']() / 0x64,
                    'rad': 0x3
                });
            }
        }, _0x2024b6['prototype']['readGameRoomPropertyUpdate'] = function(_0x564f07) {
            var _0x145e85 = _0x564f07['readUInt8']();
            for (var _0x340f96 = 0x0; _0x340f96 < _0x145e85; _0x340f96++) {
                var _0x4a3458 = _0x564f07['readUInt8']();
                this['readUpdatedPropertyItem'](_0x4a3458, _0x564f07);
            }
        }, _0x2024b6['prototype']['readUpdatedPropertyItem'] = function(_0xd29af5, _0x1556dd) {
            if (_0xd29af5 == _0x432b52) console['log']('TEAMMODE_APOCALYPSE_STARTED'), this['isApocalypseInprogress'] = _0x1556dd['readUInt8']() == 0x1;
            else {
                if (_0xd29af5 == _0xea64d7) console['log']('TEAMMODE_APOCALYPSE_ENDED'), this['isApocalypseInprogress'] = _0x1556dd['readUInt8']() == 0x1;
                else {
                    if (_0xd29af5 == _0x531230) {
                        console['log']('TEAMMODE_APOCALYPSE_TIME_LEFT');
                        let _0x15b506 = _0x1556dd['readUInt16']();
                    }
                }
            }
        };
        var _0x4d8447 = _0x533155;
        _0xcb1eb3['prototype'] = Object['create'](_0x4d8447['prototype']), _0xcb1eb3['prototype']['constructor'] = _0xcb1eb3, _0xcb1eb3['superClass'] = _0x4d8447, _0xcb1eb3['prototype']['safeArea'] = null;

        function _0xcb1eb3(_0x10514a) {
            this['mode'] = _0x10514a, this['stamp'] = +new Date(), this['chatAllowed'] = !![], this['createInterfaceButtons']();
        }
        _0xcb1eb3['prototype']['wastedPopups'] = [], _0xcb1eb3['prototype']['playerDisplayNum'] = 0x0, _0xcb1eb3['prototype']['setServerPlayerCount'] = function() {
            _0x50f011['setText'](_0x136baa(_0x570a5c) + ' online'), _0x120225 && _0x120225['setPlayersCount'](_0x570a5c), this['playerDisplayNum'] = this['playerDisplayNum'] == 0x0 ? 0x1 : 0x0;
        }, _0xcb1eb3['prototype']['interface'] = function() {
            if (this['state'] == -0x1 || this['mode'] != _0x524bb8) return;
            if (_0xc7d16a)
                for (var _0x3304d9 = this['wastedPopups']['length'] - 0x1; _0x3304d9 >= 0x0; _0x3304d9--) {
                    var _0x1d598b = this['wastedPopups'][_0x3304d9];
                    _0x1d598b['draw']();
                    if (_0x1d598b['timedOut']) this['wastedPopups']['splice'](_0x3304d9, 0x1);
                }
            if (this['endScreenCanvas'] != null) {
                this['endScreenCanvas']['width'] && _0x4597c4['drawImage'](this['endScreenCanvas'], _0x4921b9 / 0x2 - this['endScreenCanvas']['width'] / 0x2, 0xf * _0x52f571, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']);
                if (!_0xc7d16a || isGhost) _0x2332f9(!![]);
            }
            this['drawInterfaceButtons']();
        }, _0xcb1eb3['prototype']['interfaceReset'] = function() {
            this['endScreenCanvas'] = null, this['dangerCircleMiniMapCanvas'] = null, this['wastedPopups'] = [], this['lastWastedPopupT'] = 0x0, this['playercount'] = 0x0, this['safeArea'] = null;
            if (this['interfaceButtons'])
                for (var _0x27ccd3 = 0x0; _0x27ccd3 < this['interfaceButtons']['length']; _0x27ccd3++) {
                    var _0x1f509c = this['interfaceButtons'][_0x27ccd3];
                    _0x1f509c['onInterfaceReset']();
                }
            this['interfaceButtons'] = [];
        }, _0xcb1eb3['prototype']['onInit'] = function() {}, _0xcb1eb3['prototype']['playercount'] = 0x0, _0xcb1eb3['prototype']['setPlayerCount'] = function(_0x5ac44b) {
            this['playercount'] = _0x5ac44b;
        }, _0xcb1eb3['prototype']['showPlayerCount'] = function() {
            _0x4597c4['save']();
            var _0xa874c3 = _0x4921b9 / 0x2,
                _0x6f3601 = 0x32 * _0x6039c,
                _0x172274 = 0x12c * _0x6039c;
            _0x4597c4['globalAlpha'] = 0.35, _0x4597c4['fillStyle'] = 'black';
            var _0x409e9c = 0x1e * _0x6039c;
            _0x4597c4['fillRect'](_0xa874c3 - _0x172274 / 0x2, _0x409e9c, _0x172274, _0x6f3601), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'white', _0x4597c4['font'] = 0x1e * _0x6039c + 'px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle', _0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black', _0x409e9c += 0x19 * _0x6039c;
            var _0x503cdf = ' player';
            if (this['playercount'] > 0x1) _0x503cdf += 's';
            if (this['state'] == battleRoyal_inProgress) _0x503cdf += ' alive!';
            else {
                if (this['state'] == _0x5d3f39 || this['state'] == battleRoyal_ready) _0x503cdf += ' joined';
            }
            _0x4597c4['fillText'](this['playercount'] + _0x503cdf, _0xa874c3, _0x409e9c), _0x4597c4['restore']();
        }, _0xcb1eb3['prototype']['lbCanvas'] = null, _0xcb1eb3['prototype']['leaderboard'] = function(_0x213604) {
            if (this['lbCanvas'] == null) this['lbCanvas'] = document['createElement']('canvas');
            if (_0x213604) {
                var _0x4e037a = this['lbCanvas']['getContext']('2d'),
                    _0x36f702 = 0x37,
                    _0x46ea30 = 0x16;
                _0x36f702 = _0x36f702 + _0x46ea30 * _0x213604['length'], this['lbCanvas']['width'] = 0x10e, this['lbCanvas']['height'] = _0x36f702, _0x4e037a['globalAlpha'] = 0.2, _0x4e037a['fillStyle'] = '#000000', _0x4e037a['fillRect'](0x0, 0x0, this['lbCanvas']['width'], this['lbCanvas']['height']), _0x4e037a['globalAlpha'] = 0x1, _0x4e037a['fillStyle'] = '#FFFFFF';
                var _0x194dbb = _0x3a357f['name'];
                _0x4e037a['font'] = '24px Arial';
                !(_0x3aa021 == _0x243dd0) && (_0x4e037a['shadowOffsetX'] = 0x1, _0x4e037a['shadowOffsetY'] = 0x1);
                _0x4e037a['shadowColor'] = 'black', _0x4e037a['fillText'](_0x194dbb, this['lbCanvas']['width'] / 0x2 - _0x4e037a['measureText'](_0x194dbb)['width'] / 0x2, 0x28);
                var _0x424746;
                _0x4e037a['textAlign'] = 'left';
                for (_0x4e037a['font'] = '17px Arial', _0x424746 = 0x0; _0x424746 < _0x213604['length']; ++_0x424746) {
                    _0x194dbb = _0x3bd264 ? '' : _0x213604[_0x424746]['name'] || 'mope.io', _0x194dbb += ' (' + _0x2c8aad(_0x213604[_0x424746]['xp']) + ')', _0x4e037a['fillStyle'] = '#FFFFFF', _0x4e037a['fillText'](_0x194dbb, 0xf, 0x41 + _0x46ea30 * _0x424746);
                }
            }
        }, _0xcb1eb3['prototype']['drawLeaderboard'] = function() {
            if (_0xc7d16a) {
                if (!_0x33301f) _0x31daf7 && (_0x31daf7['width'] && _0x4597c4['drawImage'](_0x31daf7, 0xa * _0x52f571, 0xa * _0x52f571, _0x31daf7['width'] * _0x6039c, _0x31daf7['height'] * _0x6039c));
            }
        }, _0xcb1eb3['prototype']['btnPlayAgain'] = null, _0xcb1eb3['prototype']['showStats'] = !![], _0xcb1eb3['prototype']['interfaceButtons'] = [], _0xcb1eb3['prototype']['createInterfaceButtons'] = function() {
            this['interfaceButtons'] = [];
        }, _0xcb1eb3['prototype']['drawInterfaceButtons'] = function() {
            if (this['interfaceButtons'])
                for (var _0x3e4b3f = 0x0; _0x3e4b3f < this['interfaceButtons']['length']; _0x3e4b3f++) {
                    var _0x27ea2a = this['interfaceButtons'][_0x3e4b3f];
                    _0x27ea2a['isVisible'] && _0x27ea2a['draw']();
                }
        }, _0xcb1eb3['prototype']['onResize'] = function() {
            this['drawInterfaceButtons']();
        }, _0xcb1eb3['prototype']['readPlayerStats'] = function(_0x5074cc) {
            var _0x5d13f7 = [];
            return _0x5d13f7['rank'] = _0x5074cc['readUInt16'](), _0x5d13f7['timeAlive'] = _0x5074cc['readUInt16'](), _0x5d13f7['totalKills'] = _0x5074cc['readUInt16'](), _0x5d13f7['topRank'] = _0x5074cc['readUInt16'](), _0x5d13f7['maxXP'] = _0x5074cc['readUInt32'](), _0x5d13f7['killedBy'] = _0x5074cc['readString'](), _0x5d13f7;
        }, _0xcb1eb3['prototype']['playerInfo'] = function(_0x4830bf) {
            if (isGhost && !_0x5e010f) {
                var _0x1c87ba = this['readPlayerStats'](_0x4830bf);
                this['buildEndScreenHTML'](_0x1c87ba);
            } else !isGhost && (this['endScreenCanvas'] = null);
        }, _0xcb1eb3['prototype']['playerWorldUpdate'] = function(_0x268f1d) {}, _0xcb1eb3['prototype']['worldUpdate'] = function(_0x288148) {}, _0xcb1eb3['prototype']['drawMap'] = function() {
            if (_0xc7d16a) {
                if (_0x9ffe4d) return;
                if (_0x120225) _0x120225['drawMap']();
                this['drawLeaderboard']();
            }
        }, _0xcb1eb3['prototype']['pieChartCanvas'] = null, _0xcb1eb3['prototype']['teamColors'] = {
            0x0: 'white',
            0x1: '#B6CF40'
        }, _0xcb1eb3['prototype']['endScreenDisplayed'] = ![], _0xcb1eb3['prototype']['buildEndScreenHTML'] = function(_0x103be1) {
            if (this['endScreenDisplayed']) return;
            this['endScreenDisplayed'] = !![];
            var _0x5b23e2 = '';
            _0x5b23e2 += '<div class=\'msg\'>YOU WERE #' + _0x103be1['rank'] + '</div>', _0x5b23e2 += '<div class=\'row\'>', _0x5b23e2 += '<div class=\'label\'>Killed by:</div>', _0x5b23e2 += '<div class=\'value2\'>' + _0x103be1['killedBy'] + '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div class=\'row\'>', _0x5b23e2 += '<div class=\'col1\'>', _0x5b23e2 += '<div class=\'label\'>Time alive:</div>', _0x5b23e2 += '<div class=\'value\'>' + _0x22f380(_0x103be1['timeAlive']) + '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div class=\'col2\'>', _0x5b23e2 += '<div class=\'label\'>Total kills:</div>', _0x5b23e2 += '<div class=\'value\'>' + _0x103be1['totalKills'] + '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div class=\'row\'>', _0x5b23e2 += '<div class=\'col1\'>', _0x5b23e2 += '<div class=\'label\'>Top rank:</div>', _0x5b23e2 += '<div class=\'value\'>' + _0x103be1['topRank'] + '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div class=\'col2\'>', _0x5b23e2 += '<div class=\'label\'>Max xp:</div>', _0x5b23e2 += '<div class=\'value\'>' + _0x2c8aad(_0x103be1['maxXP']) + '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div style=\'clear:both;\'></div>', _0x5b23e2 += '<div class=\'btnDiv\'>', _0x5b23e2 += '<button id=\'btnMopeOptions\' class=\'btn\'>      CONTINUE      </button>', _0x5b23e2 += '</div>', _0x5b23e2 += '<div style=\'clear:both;\'></div>';
            var _0x1dec7f = document['getElementById']('endScreen');
            _0x1dec7f && (_0x1dec7f['innerHTML'] = _0x5b23e2, _0x1dec7f['style']['display'] = 'block'), (!_0xc7d16a || isGhost) && _0x4c69af();
        }, _0xcb1eb3['prototype']['endScreenCanvas'] = null, _0xcb1eb3['prototype']['buildEndScreen'] = function(_0x24818e, _0x5678ca) {
            if (this['endScreenCanvas'] == null) this['endScreenCanvas'] = document['createElement']('canvas');
            if (this['endScreenCanvas'] == null) return;
            var _0x52bf65 = this['endScreenCanvas']['getContext']('2d'),
                _0x586e3d = 0x37,
                _0x4a7420 = 0x28,
                _0x43ab9c = 0x5,
                _0x14a536 = 0xf0,
                _0x4ccbaf = 0x1a4;
            _0x586e3d = _0x14a536 + _0x43ab9c * 0x2, this['endScreenCanvas']['width'] = _0x4ccbaf + _0x43ab9c * 0x2, this['endScreenCanvas']['height'] = _0x586e3d, _0x52bf65['globalAlpha'] = 0.2, _0x52bf65['fillStyle'] = '#000000', _0x52bf65['fillRect'](0x0, 0x0, this['endScreenCanvas']['width'], this['endScreenCanvas']['height']), _0x52bf65['fillStyle'] = '#000000', _0x52bf65['fillRect'](_0x43ab9c, _0x43ab9c, this['endScreenCanvas']['width'] - _0x43ab9c * 0x2, this['endScreenCanvas']['height'] - _0x43ab9c * 0x2);
            var _0x58b1d5 = _0x43ab9c;
            _0x52bf65['globalAlpha'] = 0x1, _0x52bf65['fillStyle'] = '#FFFFFF', _0x52bf65['font'] = '30px Arial', _0x58b1d5 += 0x37;
            var _0x10acb8 = 'Final Stats';
            _0x52bf65['font'] = '30px Arial', _0x52bf65['fillText'](_0x10acb8, this['endScreenCanvas']['width'] / 0x2 - _0x52bf65['measureText'](_0x10acb8)['width'] / 0x2, _0x58b1d5), _0x52bf65['font'] = '20px Arial', _0x58b1d5 += 0x2d, _0x10acb8 = 'You were #' + _0x5678ca['rank'], _0x52bf65['fillText'](_0x10acb8, this['endScreenCanvas']['width'] / 0x2 - _0x52bf65['measureText'](_0x10acb8)['width'] / 0x2, _0x58b1d5), _0x58b1d5 += 0x28;
            var _0x5efe03 = _0x22f380(_0x5678ca['timeAlive']),
                _0x39f3e8 = _0x43ab9c + 0xf;
            _0x17eda1(_0x52bf65, 'Killed by', _0x5678ca['killedBy'], _0x39f3e8, _0x58b1d5), _0x58b1d5 += 0x28, _0x17eda1(_0x52bf65, 'Time Alive', _0x22f380(_0x5678ca['timeAlive']), _0x39f3e8, _0x58b1d5), _0x39f3e8 += 0xd2, _0x17eda1(_0x52bf65, 'Total Kills', _0x5678ca['totalKills'], _0x39f3e8, _0x58b1d5), _0x58b1d5 += 0x28, _0x39f3e8 = _0x43ab9c + 0xf, _0x17eda1(_0x52bf65, 'Top rank', _0x5678ca['topRank'], _0x39f3e8, _0x58b1d5), _0x39f3e8 += 0xd2, _0x17eda1(_0x52bf65, 'Max XP', _0x2c8aad(_0x5678ca['maxXP']), _0x39f3e8, _0x58b1d5), _0x58b1d5 += 0x32;
        }, _0xcb1eb3['prototype']['lastWastedPopupT'] = 0x0, _0xcb1eb3['prototype']['onPlayerWasted'] = function(_0x233da7) {
            if ((_0x476319 - this['lastWastedPopupT']) / 0x3e8 > 0.7) {
                this['lastWastedPopupT'] = _0x476319;
                var _0x21e17e = new _0x3eb07d(_0x233da7 + ' wasted!', 0x28, 'red', 0x5dc);
                this['wastedPopups']['push'](_0x21e17e);
            }
        }, _0xcb1eb3['prototype']['lastWastedPopupT'] = 0x0, _0xcb1eb3['prototype']['msgDisplayPumpkinsOnMiniMap'] = function(_0x595e97) {
            _0x2d122f = [];
            var _0x2f0065 = _0x595e97['readUInt16']();
            for (var _0x44cea5 = 0x0; _0x44cea5 < _0x2f0065; _0x44cea5++) {
                _0x2d122f['push']({
                    'x': _0x595e97['readUInt16']() / 0x4,
                    'y': _0x595e97['readUInt16']() / 0x4,
                    'type': 0x0,
                    'rad': 0x2
                });
            }
        }, _0xcb1eb3['prototype']['msgDisplayPlayersOnMiniMap'] = function(_0x393e6a) {
            _0x1432d8 = [];
            var _0x4c6485 = _0x393e6a['readUInt16']();
            for (var _0x5cf3e2 = 0x0; _0x5cf3e2 < _0x4c6485; _0x5cf3e2++) {
                _0x1432d8['push']({
                    'id': _0x393e6a['readUInt32'](),
                    'x': _0x393e6a['readUInt32']() / 0x64,
                    'y': _0x393e6a['readUInt32']() / 0x64,
                    'rad': 0x3
                });
            }
        };
        const _0x4113e0 = {
            [_0x19eca4]: 0x1,
            [_0x290562]: 0x2,
            [_0xceb64c]: 0x4,
            [_0x3f7358]: 0x6,
            [_0x474e8d]: 0x5,
            [_0xa5c3f5]: 0x3,
            [_0x5ae0eb]: 0x7,
            [_0x178278]: 0xb,
            [_0x4d45bb]: 0x9,
            [_0x59b412]: 0xa,
            [_0x590076]: 0xb,
            [_0x3f35f1]: 0xc,
            [_0x1b196d]: 0xd,
            [_0x31f937]: 0xf,
            [_0x19fc30]: 0x1,
            [_0x1a22d5]: 0x2,
            [_0x172231]: 0x3,
            [_0x4ef33a]: 0x5,
            [_0x2e6e95]: 0xc,
            [_0x31158f]: 0x8,
            [_0x23c342]: 0x7,
            [_0x1fff86]: 0x4,
            [_0x4a5a29]: 0x6,
            [_0x9038c6]: 0xf,
            [_0x1dbdcd]: 0x9,
            [_0x26d386]: 0xd,
            [_0x9918f2]: 0xa,
            [_0x248ce4]: 0x9,
            [_0x283bbc]: 0xb,
            [_0x3d9765]: 0xa,
            [_0x2a2b27]: 0x2,
            [_0x36fcdc]: 0xf,
            [_0x3d3994]: 0x1,
            [_0x33ea21]: 0x7,
            [_0x3bf4c4]: 0x3,
            [_0x2f4199]: 0xb,
            [_0x51d33b]: 0x4,
            [_0x538204]: 0x9,
            [_0x44a111]: 0x8,
            [_0x538056]: 0x5,
            [_0x38ffba]: 0x6,
            [_0x55fd3d]: 0xc,
            [_0x5ed897]: 0xe,
            [_0x1bb5dc]: 0x7,
            [_0x1de825]: 0x11,
            [_0x3ccf08]: 0xd,
            [_0x1d892b]: 0xe,
            [_0x52a058]: 0xe,
            [_0x45a408]: 0x8,
            [_0x471528]: 0xe,
            [_0x366af5]: 0xf,
            [_0x149505]: 0xa,
            [_0xbdc345]: 0x8,
            [_0x38e413]: 0xf,
            [_0x123d4e]: 0xd,
            [_0x24c6d5]: 0xb,
            [_0x4657a6]: 0x8,
            [_0x48a3f9]: 0xf,
            [_0x346859]: 0x10,
            [_0x1fb7c3]: 0x10,
            [_0xdd7007]: 0x10,
            [_0x19d925]: 0x10,
            [_0x1f01ec]: 0x2,
            [_0x4927bb]: 0x9,
            [_0x108e2d]: 0x5,
            [_0x1f079f]: 0xe,
            [_0x1ecc36]: 0x3,
            [_0x2d9acc]: 0x4,
            [_0x5bec16]: 0x6,
            [_0x427de7]: 0x1,
            [_0x214ca3]: 0x2,
            [_0x2521ea]: 0x3,
            [_0x355b29]: 0x5,
            [_0x41fd87]: 0x8,
            [_0x5cb417]: 0x7,
            [_0x502a88]: 0xa,
            [_0x483b9e]: 0x9,
            [_0x242003]: 0xb,
            [_0x456e24]: 0xc,
            [_0x4a2a55]: 0xd,
            [_0x582280]: 0x10,
            [_0x5e24a5]: 0xf,
            [_0x466d53]: 0xa,
            [_0x4bbe45]: 0xe,
            [_0xf8f210]: 0x11,
            [_0x2a0d7d]: 0xc,
            [a_birdMonster]: 0x10,
            [_0x2982a0]: 0xd,
            [_0x329081]: 0xc,
            [_0x40e6df]: 0x6,
            [_0x442c1e]: 0x1,
            [_0xd787b4]: 0xa,
            [_0x57f2d9]: 0x7,
            [_0x4828a0]: 0x4,
            [_0x29f076]: 0x6,
            [_0x1a5786]: 0x8,
            [_0x49ed0a]: 0x4,
            [_0x4767a1]: 0x9
        };
        var _0x527f8e = null;
        const _0x39c200 = ['skin', 'animal', 'deal', 'feature'];

        function _0x440a3e() {
            if (_0x100ed7) _0x100ed7['onLogon']();
        }

        function _0xf451d2() {
            var _0x3131bc = document['getElementById']('shop');
            _0x3131bc && (_0x3131bc['parentNode']['removeChild'](_0x3131bc), _0x4bdc5f());
            _0x19ce06();
            var _0x4ba2f3 = document['getElementById']('shopbutton2');
            if (_0x4ba2f3) _0x4ba2f3['disabled'] = ![];
            var _0x270a11 = document['getElementById']('shopbutton3');
            if (_0x270a11) _0x270a11['disabled'] = ![];
            _0x100ed7['removeBlockOverlay']();
            if (_0x527f8e) _0x527f8e['style']['display'] = 'none';
        }

        function _0x19ce06() {
            const _0x3c934d = _0x30041e['prototype']['changedWardrobeItems'],
                _0x5113ff = Object['keys'](_0x30041e['prototype']['wardrobeItems']),
                _0x3d2570 = [];
            for (let _0x4088aa = 0x0; _0x4088aa < _0x5113ff['length']; _0x4088aa++) {
                const _0x244c50 = _0x5113ff[_0x4088aa],
                    _0x504ebc = _0x30041e['prototype']['wardrobeItems'][_0x244c50]['equippedSkin'],
                    _0x14fa9e = _0x3c934d[_0x244c50];
                if (_0x14fa9e === undefined) continue;
                if (_0x14fa9e != _0x504ebc) _0x3d2570['push']({
                    'id': _0x244c50,
                    'changedSkin': _0x14fa9e
                });
            }
            _0x30041e['prototype']['changedWardrobeItems'] = {};
            if (_0x3d2570['length'] <= 0x0) return;
            _0x192d7b(_0x3d2570, (_0x496b4c, _0x152a56) => {
                !_0x496b4c && _0x6a452e('AccountServer: Wardrobe: ' + _0x152a56, 'error', 0x2710);
            });
        }

        function _0x145593() {
            _0xf451d2(), _0x100ed7['load'](), _0x4bdc5f();
        }

        function _0x56c430() {
            var _0x29a8d6 = document['getElementById']('shop_div');
            if (_0x29a8d6) {
                let _0x4eeddf = 0x27e,
                    _0x2b5420 = 0x159;
                var _0x27cdba = 0.9,
                    _0xb725c2 = Math['min'](0x1, Math['min'](_0x16540e * _0x27cdba, _0x4eeddf) / _0x4eeddf),
                    _0x5e6df4 = Math['min'](0x1, Math['min'](_0x14d9aa * _0x27cdba, _0x2b5420) / _0x2b5420),
                    _0x2bdf90 = Math['min'](_0xb725c2, _0x5e6df4);
                _0x29a8d6['style']['transform'] = 'scale(' + _0x2bdf90 + ')';
                var _0x1cb8da = Math['min'](0x0, _0x16540e / 0x2 - _0x4eeddf / 0x2) / _0x27cdba;
                _0x29a8d6['style']['marginLeft'] = _0x1cb8da != 0x0 ? _0x1cb8da + 'px' : 'auto';
            }
        }

        function _0x6a452e(_0x2c5b75, _0x1a00c6, _0x302375) {
            _0x36006b();
            var _0x316eed = document['getElementsByTagName']('body')[0x0];
            if (_0x316eed) {
                var _0x56c7e3 = document['getElementById']('gameAreaWrapper'),
                    _0x90823d = _0x29e808('mopeshop-popup'),
                    _0x29a3a1 = _0x29e808('msg', _0x1a00c6),
                    _0x2dcd49 = _0x29e808('text');
                _0x2dcd49['innerHTML'] = _0x2c5b75;
                var _0x2daa3a = _0x29e808('closeMsg', '');
                _0x2daa3a['innerHTML'] = 'X', _0x2daa3a['onclick'] = function() {
                    _0x36006b();
                }, _0x29a3a1['appendChild'](_0x2daa3a), _0x29a3a1['appendChild'](_0x2dcd49), _0x90823d['appendChild'](_0x29a3a1), _0x316eed['insertBefore'](_0x90823d, _0x56c7e3);
                if (_0x302375 !== undefined && _0x302375 > 0x0) setTimeout(_0x36006b, _0x302375 * 0x3e8);
            }
        }

        function _0x36006b() {
            var _0xdb847e = document['getElementById']('mopeshop-popup');
            if (_0xdb847e) _0xdb847e['parentNode']['removeChild'](_0xdb847e);
        }

        function _0x29e808(_0x126f70, _0x2d26df) {
            var _0x4d4fc2 = _0x3851ae('div', _0x126f70, _0x2d26df);
            return _0x4d4fc2;
        }

        function _0x12da31(_0x55d13f, _0x4434cd, _0x10ea17) {
            var _0x42c9e6 = _0x3851ae('div', _0x55d13f, _0x4434cd);
            return _0x42c9e6['innerHTML'] = _0x10ea17, _0x42c9e6;
        }

        function _0x3851ae(_0x2ccbdd, _0x127b9d, _0x2321b5) {
            if (_0x2ccbdd == undefined) return null;
            var _0x20c034 = document['createElement'](_0x2ccbdd);
            if (_0x127b9d != undefined) _0x20c034['id'] = _0x127b9d;
            if (_0x2321b5 != undefined) _0x20c034['className'] = _0x2321b5;
            return _0x20c034;
        }

        function _0x4ceade() {
            var _0x5920a9 = _0x326bc5['coins'];
            if (_0x5920a9 > -0x1) {
                if (('' + _0x5920a9)['length'] > 0xa) return ('' + _0x5920a9)['substring'](0x0, 0x4) + ' PI.COINS';
                return _0x5920a9;
            } else return 'LOGIN';
        }

        function _0x8e483d() {
            var _0x2e467e = _0x326bc5['gems'];
            if (_0x2e467e > -0x1) {
                if (('' + _0x2e467e)['length'] > 0xa) return ('' + _0x2e467e)['substring'](0x0, 0x4) + ' PI.GEMS';
                return _0x2e467e;
            } else return 0x0;
        }

        function _0x173edc() {
            return _0x326bc5['coins'] > -0x1;
        }

        function _0x108e60(_0x65ede5) {
            _0x65ede5 && _0x100ed7 ? _0x100ed7['load'](_0x65ede5) : (_0xf451d2(), _0x100ed7 = new _0x30041e(), _0x100ed7['load']());
        }
        var _0x4b9556 = {
            'customClassesForOType': {},
            'setCustomClassForShopItem': function(_0xf6f7c6, _0x9b18bd, _0x392ebb) {
                !this['customClassesForOType'][_0x9b18bd] && (this['customClassesForOType'][_0x9b18bd] = {
                    'oTypeMainClass': null,
                    'secondaryTypeClasses': {}
                });
                var _0x5b5b53 = this['customClassesForOType'][_0x9b18bd];
                if (_0x392ebb == null) {
                    if (_0x5b5b53['oTypeMainClass'] != null) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class (' + this['customClassesForOType'][_0x9b18bd] + ') is already set for oType ' + _0x9b18bd + '! Check for duplicate calls!');
                    _0x5b5b53['oTypeMainClass'] = _0xf6f7c6;
                } else {
                    if (_0x392ebb in _0x5b5b53['secondaryTypeClasses']) console['log']('ERROR \'GameObjType.setCustomClassForGameObjType\': a class is already set for oType ' + _0x9b18bd + ' AND secondaryType (eg. animalType) ' + _0x392ebb + '! Check for duplicate calls!');
                    _0x5b5b53['secondaryTypeClasses'][_0x392ebb] = _0xf6f7c6;
                }
                this['onClassSet'](_0xf6f7c6, _0x9b18bd, _0x392ebb);
            },
            'getClassForGameObjType': function(_0x4d71ad, _0x2fe324) {
                if (_0x4d71ad in this['customClassesForOType']) {
                    var _0x560ebd = this['customClassesForOType'][_0x4d71ad];
                    if (_0x2fe324 == null || _0x2fe324 == 0x0) return _0x560ebd['oTypeMainClass'];
                    else {
                        if (_0x2fe324 in _0x560ebd['secondaryTypeClasses']) return _0x560ebd['secondaryTypeClasses'][_0x2fe324];
                        else return _0x560ebd['oTypeMainClass'];
                    }
                } else return _0x456489;
            },
            'newlyVis_createGameObjFromMsg': function(_0x528272, _0x22392a) {
                var _0x5ad13e = _0x22392a['oType'],
                    _0x3bc7ae = null;
                _0x5ad13e == _0x269668 && (_0x3bc7ae = _0x22392a['animalType']);
                var _0x351964 = _0x4b9556['createGameObjOfOType'](_0x5ad13e, _0x3bc7ae);
                return _0x351964['itemType'] = _0x528272, _0x351964['worldUpd_readMsgNewlyVisible'](_0x22392a, _0x5ad13e, _0x3bc7ae), _0x351964;
            },
            'createGameObjOfOType': function(_0x373b7a, _0x9aa836) {
                var _0x47a021 = this['getClassForGameObjType'](_0x373b7a, _0x9aa836),
                    _0x4fe571 = new _0x47a021(_0x373b7a, _0x9aa836);
                return _0x4fe571;
            },
            'onClassSet': function(_0x3c3b49) {}
        };
        _0x456489['prototype'] = {
            'id': 0x0,
            'oType': 0x0,
            'itemType': null
        };

        function _0x456489(_0x2cc75f) {
            this['oType'] = _0x2cc75f;
        }
        _0x456489['prototype']['setObjTypes'] = function(_0x144223, _0x389fa3) {
            this['oType'] = _0x144223;
        }, _0x456489['prototype']['loadShopData'] = function(_0x492c2f) {
            this['data'] = _0x492c2f, this['id'] = _0x492c2f['id'], this['itemType'] = _0x492c2f['itemType'], this['price'] = _0x492c2f['price'], this['onAfterLoad']();
        }, _0x456489['prototype']['onAfterLoad'] = function() {
            this['btn'] = new _0x111c23(this);
        }, _0x456489['prototype']['worldUpd_readMsgNewlyVisible'] = function(_0x18d1de, _0x578c3d, _0x92feac) {
            this['setObjTypes'](_0x578c3d, _0x92feac), this['loadShopData'](_0x18d1de);
        }, _0x456489['prototype']['getImage'] = function() {
            return null;
        }, _0x456489['prototype']['generateHtml'] = function() {}, _0x111c23['prototype'] = {
            'itemID': 0x0,
            'shopItem': null
        };

        function _0x111c23(_0x2f91cc) {
            this['shopItem'] = _0x2f91cc;
        }
        _0x111c23['prototype']['generateHtml'] = function(_0x56620b) {
            var _0x1c966d = _0x3851ae('div', 'btn_' + this['shopItem']['id'], 'buybutton');
            if (this['shopItem']['price'] >= 0x0) {
                var _0x2dccae = new Image();
                _0x2dccae['className'] = 'buycoin-img', _0x2dccae['src'] = 'shop/' + (this['shopItem']['data']['currencyType'] === 0x1 ? 'gem' : 'mopecoin') + '.png', _0x2dccae['loading'] = 'lazy';
                var _0x3f3470 = _0x3851ae('span', '', 'buycoin-price'),
                    _0x38f654 = this['shopItem']['price'] == 0x0 ? 'FREE' : this['shopItem']['price'];
                if (this['shopItem']['saleType'] == 0x2) _0x38f654 = this['shopItem']['salePrice'];
                _0x3f3470['innerHTML'] = _0x38f654, _0x1c966d['appendChild'](_0x2dccae), _0x1c966d['appendChild'](_0x3f3470);
                var _0x368490 = this;
                if (_0x56620b == undefined || _0x56620b == _0x4e1d3d) _0x1c966d['onclick'] = function() {
                    _0x368490['onClick']();
                };
            } else _0x1c966d['innerHTML'] = 'OWNED';
            switch (this['shopItem']['data']['itemType']) {
                case 0x0:
                    _0x1c966d['setAttribute']('title', 'Click to buy ' + this['shopItem']['data']['skinName']['replace']('\x0a', ' '));
                    break;
                case 0x2:
                    _0x1c966d['setAttribute']('title', 'Click to buy this deal');
                    break;
            }
            return _0x1c966d;
        }, _0x111c23['prototype']['onClick'] = function() {
            if (!_0x173edc()) _0x100ed7['showLoginScreen']();
            else _0x100ed7['buyConfirmationOverlay'](this['shopItem']);
            _0x3cf313();
        };
        var _0x498438 = _0x417dae,
            _0x4d8447 = _0x456489;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447;

        function _0x417dae() {
            _0x417dae['superClass']['call'](this, 0x3e8), this['oType'] = 0x3e8, this['itemType'] = 0x1;
        }
        _0x417dae['prototype']['prefix'] = null, _0x417dae['prototype']['bonus'] = 0x0, _0x417dae['prototype']['loadShopData'] = function(_0x3fd72e) {
            _0x417dae['superClass']['prototype']['loadShopData']['call'](this, _0x3fd72e), this['prefix'] = _0x3fd72e['prefix'], this['bonus'] = _0x3fd72e['bonus'], this['value'] = _0x3fd72e['value'], this['onAfterLoad']();
        }, _0x417dae['prototype']['worldUpd_readMsgNewlyVisible'] = function(_0x4d0368, _0x9a99dd, _0xfceebc) {
            this['loadShopData'](_0x4d0368);
        }, _0x417dae['prototype']['generateHtml'] = function() {
            var _0x1f35b6 = _0x3851ae('div', '', 'coin-row'),
                _0x53efa3 = _0x3851ae('div', '', 'coin-prefix'),
                _0x392230 = _0x3851ae('div', '', 'coin-value'),
                _0x178cd2 = _0x3851ae('div', '', 'coin-plus'),
                _0x2d5600 = _0x3851ae('div', '', 'coin-bonus'),
                _0x13dbbd = _0x3851ae('div', '', 'coin-equ'),
                _0x34e980 = _0x3851ae('div', '', 'coin-total'),
                _0x4b4e6b = _0x3851ae('div', '', 'coin-dollars'),
                _0x2b5f57 = _0x3851ae('div', '', 'coin-buy'),
                _0x59a132 = _0x3851ae('div', '', 'coin-img'),
                _0x56446a = _0x3851ae('div', '', 'coin-img'),
                _0x5e1b56 = new Image(),
                _0x52ffb8 = new Image();
            return _0x5e1b56['src'] = 'shop/mopecoin.png', _0x52ffb8['src'] = 'shop/mopecoin.png', _0x59a132['appendChild'](_0x5e1b56), _0x56446a['appendChild'](_0x52ffb8), _0x53efa3['innerHTML'] = '&nbsp;' + this['prefix'], this['prefix'] != '' ? _0x53efa3['className'] = _0x53efa3['className'] + ' popular' : _0x2d5600['className'] = _0x2d5600['className'] + ' nopopular', _0x392230['innerHTML'] = '&nbsp;' + this['value'], _0x178cd2['innerHTML'] = '+', _0x2d5600['innerHTML'] = '&nbsp;' + this['bonus'] + '%', _0x13dbbd['innerHTML'] = '=', _0x2b5f57['innerHTML'] = 'BUY', _0x34e980['innerHTML'] = '&nbsp;' + Number(this['value']) * (Number(this['bonus'] + 0x64) / 0x64), _0x4b4e6b['innerHTML'] = '$' + this['price'], _0x1f35b6['appendChild'](_0x53efa3), _0x1f35b6['appendChild'](_0x59a132), _0x1f35b6['appendChild'](_0x392230), _0x1f35b6['appendChild'](_0x178cd2), _0x1f35b6['appendChild'](_0x2d5600), _0x1f35b6['appendChild'](_0x13dbbd), _0x1f35b6['appendChild'](_0x56446a), _0x1f35b6['appendChild'](_0x34e980), _0x1f35b6['appendChild'](_0x4b4e6b), _0x1f35b6['appendChild'](_0x2b5f57), _0x1f35b6;
        }, _0x4b9556['setCustomClassForShopItem'](_0x417dae, 0x3e8);
        var _0x498438 = _0x3794a8,
            _0x4d8447 = _0x456489;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447;

        function _0x3794a8(_0x405fc4, _0x14f394) {
            _0x3794a8['superClass']['call'](this, _0x269668), this['animalType'] = _0x14f394, this['setBiome'](this['animalType']);
        }
        _0x3794a8['prototype']['setBiome'] = function(_0x42295b) {
            switch (_0x42295b) {
                case _0x19d925:
                case _0x31f937:
                case _0x366af5:
                case _0x471528:
                case _0x1f079f:
                case _0x1d892b:
                case _0x1b196d:
                case _0x2982a0:
                case _0x123d4e:
                    this['biome'] = _0x1114cb;
                    break;
                case _0x346859:
                case _0x38e413:
                case _0x9038c6:
                case _0x52a058:
                case _0x26d386:
                    this['biome'] = _0x1085db;
                    break;
                case _0xdd7007:
                case _0x36fcdc:
                case _0x5ed897:
                case _0x3ccf08:
                    this['biome'] = _0x11e4d4;
                    break;
                case _0xf8f210:
                case _0x1de825:
                case _0x1fb7c3:
                case _0x48a3f9:
                    this['biome'] = _0x414053;
                    break;
                case _0x582280:
                case _0x5e24a5:
                case _0x4bbe45:
                case _0x4a2a55:
                    this['biome'] = _0x3e4ef7;
                    break;
                default:
                    break;
            }
        }, _0x3794a8['prototype']['loadShopData'] = function(_0x5433e8) {
            _0x3794a8['superClass']['prototype']['loadShopData']['call'](this, _0x5433e8), this['animalSpecies'] = _0x5433e8['animalSpecies'], this['shopImg'] = 'shop/' + _0x5433e8['shopImg'], this['skinImage'] = _0x5433e8['skinImage'], this['skinName'] = _0x5433e8['skinName'], this['saleType'] = _0x5433e8['saleType'], this['salePrice'] = _0x5433e8['salePrice'];
        }, _0x3794a8['prototype']['setObjTypes'] = function(_0x2baa4f, _0x42c856) {
            this['animalType'] = _0x42c856;
        }, _0x3794a8['prototype']['getAnimalName'] = function() {
            switch (this['animalType']) {
                case _0x290562:
                    return 'rabbit';
                case _0xceb64c:
                    return 'pig';
                case _0x3f7358:
                    return 'fox';
                case _0x474e8d:
                    return 'deer';
                case _0xa5c3f5:
                    return 'mole';
                case _0x5ae0eb:
                    return 'zebra';
                case _0x178278:
                    return 'lion';
                case _0x4d45bb:
                    return 'bigcat';
                case _0x59b412:
                    return 'bear';
                case _0x590076:
                    return 'croc';
                case _0x3f35f1:
                    return 'rhino';
                case _0x1b196d:
                    return 'hippo';
                case _0x31f937:
                    return 'dragon';
                case _0x19fc30:
                    return 'shrimp';
                case _0x1a22d5:
                    return 'trout';
                case _0x172231:
                    return 'crab';
                case _0x4ef33a:
                    return 'squid';
                case _0x2e6e95:
                    return 'shark';
                case _0x31158f:
                    return 'stingray';
                case _0x23c342:
                    return 'turtle';
                case _0x1fff86:
                    return 'seahorse';
                case _0x4a5a29:
                    return 'jellyfish';
                case _0x9038c6:
                    return 'kraken';
                case _0x1dbdcd:
                    return 'pufferfish';
                case _0x26d386:
                    return 'killerwhale';
                case _0x9918f2:
                    return 'swordfish';
                case _0x248ce4:
                    return 'gorilla';
                case _0x283bbc:
                    return 'octopus';
                case _0x3d9765:
                    return 'wolf';
                case _0x2a2b27:
                    return 'arctichare';
                case _0x36fcdc:
                    return 'yeti';
                case _0x3d3994:
                    return 'chipmunk';
                case _0x33ea21:
                    return 'muskox';
                case _0x3bf4c4:
                    return 'penguin';
                case _0x2f4199:
                    return 'polarbear';
                case _0x51d33b:
                    return 'seal';
                case _0x538204:
                    return 'snowleopard';
                case _0x44a111:
                    return 'walrus';
                case _0x538056:
                    return 'reindeer';
                case _0x38ffba:
                    return 'arcticfox';
                case _0x55fd3d:
                    return 'wolverine';
                case _0x5ed897:
                    return 'mammoth';
                case _0x1bb5dc:
                    return 'donkey';
                case _0x3fb2b0:
                    return 'snail';
                case _0x1de825:
                    return 'blackdragon';
                case _0x3ccf08:
                    return 'sabertoothtiger';
                case _0x1d892b:
                    return 'elephant';
                case _0x52a058:
                    return 'bluewhale';
                case _0x45a408:
                    return 'cobra';
                case _0x2982a0:
                    return 'boaconstrictor';
                case _0x471528:
                    return 'giantspider';
                case _0x366af5:
                    return 'trex';
                case _0x149505:
                    return 'tiger';
                case _0xbdc345:
                    return 'giraffe';
                case _0x329081:
                    return 'eagle';
                case _0x40e6df:
                    return 'hedgehog';
                case _0x52bb25:
                    return 'duck';
                case _0x3399b3:
                    return 'duckling';
                case _0x442c1e:
                    return 'lemming';
                case _0x38e413:
                    return 'kingcrab';
                case _0x25446a:
                    return 'frog';
                case _0x123d4e:
                    return 'ostrich';
                case _0xd787b4:
                    return 'pelican';
                case _0x24c6d5:
                    return 'falcon';
                case _0x4657a6:
                    return 'snowyowl';
                case _0x2d7197:
                    return 'honeybee';
                case _0x48a3f9:
                    return 'phoenix';
                case _0x4d08a1:
                    return 'ostrichbaby';
                case _0x346859:
                    return 'seamonster';
                case _0x1fb7c3:
                    return 'landmonster';
                case _0xdd7007:
                    return 'icemonster';
                case _0x19d925:
                    return 'dinomonster';
                case _0x1f01ec:
                    return 'pigeon';
                case _0x4927bb:
                    return 'toucan';
                case _0x57f2d9:
                    return 'macaw';
                case _0x108e2d:
                    return 'flamingo';
                case _0x1f079f:
                    return 'cassowary';
                case _0x1ecc36:
                    return 'chicken';
                case _0x2d9acc:
                    return 'woodpecker';
                case _0x5bec16:
                    return 'peacock';
                case _0x427de7:
                    return 'kangaroorat';
                case _0x214ca3:
                    return 'desertchipmunk';
                case _0x2521ea:
                    return 'meerkat';
                case _0x355b29:
                    return 'gazelle';
                case _0x4828a0:
                    return 'armadillo';
                case _0x29f076:
                    return 'fennecfox';
                case _0x41fd87:
                    return 'camel';
                case _0x5cb417:
                    return 'warthog';
                case _0x502a88:
                    return 'hyena';
                case _0x483b9e:
                    return 'rattlesnake';
                case _0x242003:
                    return 'vulture';
                case _0x456e24:
                    return 'bison';
                case _0x4a2a55:
                    return 'komododragon';
                case _0x582280:
                    return 'giantscorpion';
                case _0x5e24a5:
                    return 'pterodactyl';
                case _0x466d53:
                    return 'gobibear';
                case _0x4bbe45:
                    return 'blackwidow';
                case _0x120535:
                    return 'bulletant';
                case _0x2a0d7d:
                    return 'markhor';
            }
        }, _0x3794a8['prototype']['getSkinPath'] = function(_0x196479) {
            var _0x33d486 = this['animalSpecies'] > 0x0 ? this['animalSpecies'] : '',
                _0x1bd1b5 = _0x100ed7['ifMultiAssetSkin'](this['animalType'], this['skinImage']),
                _0x13a957 = this['skinImage'] == undefined ? this['shopImg'] : 'skins/' + _0x1bd1b5;
            if (_0x196479) _0x13a957 += _0x196479;
            return _0x13a957 + '.png';
        }, _0x3794a8['prototype']['getImage'] = function(_0x76fec0 = ![]) {
            const _0x1881ee = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath']();
            if (!_0x76fec0 && _0x4ac740[_0x1881ee]) return _0x4ac740[_0x1881ee];
            var _0x28365f = new Image();
            return _0x28365f['className'] = 'animalSkin_' + this['animalType'], _0x28365f['src'] = _0x1881ee, _0x28365f['loading'] = 'lazy', _0x4ac740[_0x1881ee] = _0x28365f, _0x28365f;
        }, _0x3794a8['prototype']['getImagePromo'] = function(_0x3bfb53) {
            const _0x20fed5 = 'assets/s/' + this['data']['season'] + '/' + this['getSkinPath'](_0x3bfb53);
            if (_0x4ac740[_0x20fed5]) return _0x4ac740[_0x20fed5];
            var _0x29cb7c = new Image();
            return _0x29cb7c['className'] = 'animalSkin_' + this['animalType'], _0x29cb7c['src'] = _0x20fed5, _0x29cb7c['loading'] = 'lazy', _0x4ac740[_0x20fed5] = _0x29cb7c, _0x29cb7c;
        }, _0x3794a8['prototype']['getSkinName'] = function() {
            var _0xc6b81b = this['skinName'];
            return _0xc6b81b['replace']('\x0a', '<br>');
        }, _0x3794a8['prototype']['generateHtml'] = function(_0xba5200) {
            var _0x2356f4 = 'item skin ' + (this['price'] == -0x1 ? ' itemOwned' : ' buyItem') + ' aniItem_' + this['animalType'];
            if (_0xba5200 == _0x32d458) _0x2356f4 = _0x2356f4 + ' confirm_item';
            var _0x14af08 = _0x29e808('', _0x2356f4),
                _0x46ac60 = _0x29e808('', 'image ' + 'biome_' + this['biome']),
                _0x5e9b17 = _0x29e808('', 'price');
            _0x46ac60['setAttribute']('title', this['getSkinName']()['replace']('<br>', ' ')), _0x5e9b17['innerHTML'] = this['getSkinName']();
            var _0x2c5fc9 = this['getImage'](_0xba5200 == _0x32d458);
            _0x46ac60['appendChild'](_0x2c5fc9);
            if (this['price'] > 0x0) {
                var _0x533531 = '';
                if (this['saleType'] == 0x1) _0x533531 = 'NEW';
                else {
                    if (this['saleType'] == 0x2) _0x533531 = 'SALE';
                }
                this['salePrice'] != this['price'] && this['saleType'] > 0x0 && (_0x533531 += ' -' + Math['floor']((0x1 - this['salePrice'] / this['price']) * 0x64) + '%');
                if (_0x533531 != '') {
                    var _0x7f8a37 = _0x29e808('newItem_' + this['animalType'], 'newItem');
                    _0x7f8a37['innerHTML'] = _0x533531, _0x14af08['appendChild'](_0x7f8a37);
                }
            }
            if (this['data']['tier'] !== undefined) {
                var _0x1a0e33 = _0x29e808('tier', 'tier');
                _0x1a0e33['innerHTML'] = 'T' + this['data']['tier'], _0x1a0e33['title'] = 'Animal Tier: ' + this['data']['tier'], _0x46ac60['appendChild'](_0x1a0e33);
            }
            if (_0x100ed7['showSeason']) {
                if (this['data']['season'] !== undefined) {
                    var _0xc79161 = _0x29e808('season', 'season');
                    _0xc79161['innerHTML'] = 'S' + this['data']['season'], _0xc79161['title'] = 'Released in Mopeio Season ' + this['data']['season'], _0x46ac60['appendChild'](_0xc79161);
                }
            }
            _0x14af08['appendChild'](_0x46ac60), _0x14af08['appendChild'](_0x5e9b17);
            if (this['price'] >= 0x0) _0x14af08['appendChild'](this['btn']['generateHtml'](_0xba5200));
            else {
                if (_0xba5200 != _0x55400b) var _0x322749 = this;
            }
            return _0x14af08;
        }, _0x4b9556['setCustomClassForShopItem'](_0x3794a8, _0x269668), _0x3794a8['prototype']['generateHtml'] = function(_0x2e73a9) {
            var _0x3f605e = 'item skin ' + (this['price'] == -0x1 ? ' itemOwned' : ' buyItem') + ' aniItem_' + this['animalType'];
            if (_0x2e73a9 == _0x32d458) _0x3f605e = _0x3f605e + ' confirm_item';
            var _0x28d2f0 = _0x29e808('', _0x3f605e),
                _0x59e00f = _0x29e808('', 'image ' + 'biome_' + this['biome']),
                _0x56a040 = _0x29e808('', 'price');
            _0x59e00f['setAttribute']('title', this['getSkinName']()['replace']('<br>', ' ')), _0x56a040['innerHTML'] = this['getSkinName']();
            var _0x1f3b19 = this['getImage'](_0x2e73a9 == _0x32d458);
            _0x59e00f['appendChild'](_0x1f3b19);
            if (this['price'] > 0x0) {
                var _0x42c15c = '';
                if (this['saleType'] == 0x1) _0x42c15c = 'NEW';
                else {
                    if (this['saleType'] == 0x2) _0x42c15c = 'SALE';
                }
                this['salePrice'] != this['price'] && this['saleType'] > 0x0 && (_0x42c15c += ' -' + Math['floor']((0x1 - this['salePrice'] / this['price']) * 0x64) + '%');
                if (_0x42c15c != '') {
                    var _0x504757 = _0x29e808('newItem_' + this['animalType'], 'newItem');
                    _0x504757['innerHTML'] = _0x42c15c, _0x28d2f0['appendChild'](_0x504757);
                }
            }
            if (this['data']['tier'] !== undefined) {
                var _0x46f093 = _0x29e808('tier', 'tier');
                _0x46f093['innerHTML'] = 'T' + this['data']['tier'], _0x46f093['title'] = 'Animal Tier: ' + this['data']['tier'], _0x59e00f['appendChild'](_0x46f093);
            }
            if (_0x100ed7['showSeason']) {
                if (this['data']['season'] !== undefined) {
                    var _0x3c88ea = _0x29e808('season', 'season');
                    _0x3c88ea['innerHTML'] = 'S' + this['data']['season'], _0x3c88ea['title'] = 'Released in Mopeio Season ' + this['data']['season'], _0x59e00f['appendChild'](_0x3c88ea);
                }
            }
            _0x28d2f0['appendChild'](_0x59e00f), _0x28d2f0['appendChild'](_0x56a040);
            if (this['price'] >= 0x0) _0x28d2f0['appendChild'](this['btn']['generateHtml'](_0x2e73a9));
            else {
                if (_0x2e73a9 != _0x55400b) var _0x1785d8 = this;
            }
            return _0x28d2f0;
        };

        function _0x30041e() {
            if (_0x173edc()) {
                var _0x3841b9 = document['getElementById']('divButtons');
                _0x3841b9['style']['display'] = 'none';
            }
            console['log']('@@@@ Mopeio Shop: v 1.0 b @@@@');
            var _0x31625a = document['getElementById']('shopbutton2'),
                _0x46926d = document['getElementById']('shopbutton3'),
                _0x3e2b8d = document['getElementById']('btnLogin'),
                _0x37778b = document['getElementById']('btnLogout2');
            _0x3e2b8d['onclick'] = function() {
                _0x394a17('login');
            }, _0x37778b['onclick'] = function() {
                _0xb9e158();
            }, _0x31625a['onclick'] = function() {
                this['disabled'] = !![], _0x394a17();
            }, _0x46926d['onclick'] = function() {
                this['disabled'] = !![], _0x394a17();
            };
            var _0x2c250c = document['getElementById']('onconnectDiv');
            if (_0x2c250c) {}
        }
        _0x30041e['prototype']['items'] = [], _0x30041e['prototype']['datatab'] = [], _0x30041e['prototype']['showSeason'] = !![], _0x30041e['prototype']['getPackageInfo'] = function(_0x50b2d4) {}, _0x30041e['prototype']['itemIdToItem'] = {}, _0x30041e['prototype']['purchasedItems'] = [], _0x30041e['prototype']['changedWardrobeItems'] = {}, _0x30041e['prototype']['generateXsollaItem'] = function(_0x3836c3, _0x4888d2) {
            var _0x2a327d = 'item skin buyItem';
            if (_0x4888d2 == _0x32d458) _0x2a327d = _0x2a327d + ' confirm_item';
            var _0x159fb5 = _0x29e808('', _0x2a327d),
                _0x27cd6b = _0x29e808('', 'image ' + 'biome_' + 'land'),
                _0x10e5e9 = _0x29e808('', 'price');
            _0x27cd6b['setAttribute']('title', _0x3836c3['description']);
            var _0x1476b1 = new Image();
            let _0x4b804d;
            switch (_0x3836c3['name']) {
                case 'Mopecoins':
                    _0x4b804d = 'shop/mopecoin.png', _0x10e5e9['innerHTML'] = _0x3836c3['amount'] + ' Mopecoins';
                    break;
                case 'Gems':
                    _0x4b804d = 'shop/gem.png', _0x10e5e9['innerHTML'] = _0x3836c3['amount'] + ' Gems';
                    break;
                case 'VIP':
                    _0x4b804d = 'shop/VIP_Pass.png', _0x10e5e9['innerHTML'] = 'VIP Pass', _0x159fb5['classList']['add']('vipPass'), _0x159fb5['classList']['add']('deal'), _0x1476b1['className'] = 'shopdeal', _0x1476b1['style']['width'] = 'auto';
                    break;
            }
            _0x1476b1['src'] = _0x4b804d, _0x27cd6b['appendChild'](_0x1476b1), _0x159fb5['appendChild'](_0x27cd6b), _0x159fb5['appendChild'](_0x10e5e9);
            const _0x151d76 = _0x3851ae('div', 'btn_' + _0x3836c3['name'], 'buybutton');
            var _0x1476b1 = new Image();
            _0x1476b1['className'] = 'buycoin-img', _0x1476b1['style']['width'] = 0x0, _0x1476b1['loading'] = 'lazy';
            var _0x10e5e9 = _0x3851ae('span', '', 'buycoin-price'),
                _0x598cff = '$' + _0x3836c3['price'];
            _0x10e5e9['innerHTML'] = _0x598cff, _0x151d76['appendChild'](_0x1476b1), _0x151d76['appendChild'](_0x10e5e9), _0x151d76['addEventListener']('click', () => {
                _0xc82ebe(_0x3836c3['id']);
            });
            _0x3836c3['name'] === 'VIP' && (_0x151d76['classList']['add']('vipPass'), _0x326bc5['hasVip'] && (_0x151d76['style']['display'] = 'none'));
            _0x151d76['setAttribute']('title', 'Click to buy this pack'), _0x159fb5['appendChild'](_0x151d76);
            if (_0x3836c3['name'] === 'VIP') {
                const _0x155a30 = _0x3851ae('div', 'btn_' + _0x3836c3['name'], 'buybutton');
                var _0x1476b1 = new Image();
                _0x1476b1['className'] = 'buycoin-img', _0x1476b1['style']['width'] = 0x0, _0x1476b1['loading'] = 'lazy';
                var _0x10e5e9 = _0x3851ae('span', '', 'buycoin-price');
                _0x10e5e9['innerHTML'] = 'Cancel autorenew', _0x10e5e9['style']['left'] = '150px', _0x155a30['appendChild'](_0x1476b1), _0x155a30['appendChild'](_0x10e5e9), _0x155a30['style']['backgroundColor'] = 'rgba(255, 0, 0, 0.75)', _0x155a30['addEventListener']('click', () => {
                    _0x4e8362();
                }), _0x155a30['setAttribute']('title', 'Click to cancel autorenew'), _0x155a30['classList']['add']('vipPass'), _0x326bc5['hasVip'] && _0x326bc5['hasAutoRenew'] && _0x159fb5['appendChild'](_0x155a30);
            }
            return _0x159fb5;
        }, _0x30041e['prototype']['load'] = function(_0x8993a6) {
            var _0x15d195 = this;
            if (_0x24d734) {
                var _0x5c1973 = document['getElementById']('divButtons');
                _0x5c1973['style']['display'] = 'none';
            }
            var _0x593893 = {
                'shopItems': [],
                'settings': []
            };
            _0x3527d7(function(_0x129884, _0x37cc86) {
                if (!_0x129884) {
                    _0x6a452e('Could not connect to AccountServer!', 'itemDoesntExist', 0x5);
                    var _0x1e3e79 = document['getElementById']('shopOverlay');
                    _0x1e3e79 && _0x1e3e79['parentNode']['removeChild'](_0x1e3e79);
                    return;
                }
                if (_0x37cc86) {
                    for (var _0x4be015 = 0x0; _0x4be015 < _0x37cc86['items']['length']; _0x4be015++) {
                        var _0x5196d4 = _0x37cc86['items'][_0x4be015];
                        _0x593893['shopItems']['push'](_0x5196d4);
                    }
                    if (_0x37cc86['settings'])
                        for (var _0x4be015 = 0x0; _0x4be015 < _0x37cc86['settings']['length']; _0x4be015++) {
                            _0x593893['settings']['push'](_0x37cc86['settings'][_0x4be015]);
                        }
                    _0x593893['shopItems']['sort']((_0x26b6dd, _0x226bbb) => {
                        return _0x226bbb['currencyType'] - _0x26b6dd['currencyType'];
                    });
                }
                var _0x59e44a = {
                        'tab': 'Skins',
                        'shopItems': []
                    },
                    _0x36ef0f = {
                        'tab': 'Deals',
                        'shopItems': []
                    },
                    _0xb8c745 = {
                        'tab': 'Features',
                        'shopItems': []
                    };
                const _0xd772eb = {
                        'tab': 'Coins',
                        'shopItems': []
                    },
                    _0x1e803d = {
                        'tab': 'Gems',
                        'shopItems': []
                    },
                    _0xcdee4b = {
                        'tab': 'VIP Pass',
                        'shopItems': []
                    };
                var _0x3bdd4c = [],
                    _0x1d8f31 = [_0x59e44a, _0xb8c745, _0x36ef0f, _0xd772eb, _0x1e803d];
                _0xcff3a0 && _0xcff3a0['success'] && _0x1d8f31['push'](_0xcdee4b);
                for (_0x4be015 = 0x0; _0x4be015 < _0x593893['shopItems']['length']; _0x4be015++) {
                    var _0x21b1d1 = _0x593893['shopItems'][_0x4be015];
                    switch (_0x21b1d1['shopCategory']) {
                        case 0x0: {
                            var _0x5b8994 = _0x55ab97({
                                'animalType': _0x21b1d1['animalType'],
                                'animalSpecies': _0x21b1d1['animalSpecies'],
                                'animalSubSpecies': _0x21b1d1['animalSubSpecies'],
                                'mopeSeasonID': _0x21b1d1['season']
                            });
                            _0x5b8994 ? (_0x21b1d1['id'] = _0x21b1d1['itemId'], _0x21b1d1['oType'] = _0x269668, _0x21b1d1['skinName'] = _0x5b8994['aniName'] || _0x21b1d1['itemId'], _0x21b1d1['skinImage'] = _0x5b8994['skinName'] + '.ui', _0x59e44a['shopItems']['push'](_0x21b1d1)) : console['log']('No animal type data for shop item ' + _0x21b1d1['itemId']);
                        }
                        break;
                        case 0x1: {
                            if (_0x21b1d1['itemType'] == 0x1) {
                                var _0x5b8994 = _0x55ab97({
                                    'animalType': _0x21b1d1['animalType'],
                                    'animalSpecies': _0x21b1d1['animalSpecies'],
                                    'animalSubSpecies': _0x21b1d1['animalSubSpecies'],
                                    'mopeSeasonID': _0x21b1d1['season']
                                });
                                _0x5b8994 ? (_0x21b1d1['id'] = _0x21b1d1['itemId'], _0x21b1d1['oType'] = _0x269668, _0x21b1d1['skinName'] = _0x5b8994['aniName'] || _0x21b1d1['itemId'], _0x21b1d1['skinImage'] = _0x5b8994['skinName'] + '.ui', _0xb8c745['shopItems']['push'](_0x21b1d1)) : console['log']('No animal type data for shop item ' + _0x21b1d1['itemId']);
                            } else _0x21b1d1['itemType'] == 0x3 && (_0x21b1d1['id'] = _0x21b1d1['itemId'], _0x21b1d1['oType'] = _0x3aeb57, _0xb8c745['shopItems']['push'](_0x21b1d1));
                        }
                        break;
                        case 0x2: {
                            _0x21b1d1['id'] = _0x21b1d1['itemId'], _0x21b1d1['oType'] = _0x1592f9, _0x36ef0f['shopItems']['push'](_0x21b1d1);
                        }
                        break;
                        break;
                        default:
                    }
                }
                var _0x389f6b = {
                    'skins': _0x1d8f31
                };
                _0x30041e['prototype']['itemIdToItem'] = {}, _0x30041e['prototype']['shop'] = {
                    'ownedSkins': [],
                    'ownedAnimals': [],
                    'ownedDeals': [],
                    'ownedProps': [],
                    'settings': [],
                    'skins': [],
                    'props': [],
                    'banners': _0x593893['banners']
                };
                var _0x3e99d1 = [];
                for (t = 0x0; t < _0x389f6b['skins']['length']; t++) {
                    var _0x2bc805 = _0x389f6b['skins'][t];
                    for (_0x4be015 = 0x0; _0x4be015 < _0x2bc805['shopItems']['length']; _0x4be015++) {
                        var _0x579900 = _0x2bc805['shopItems'][_0x4be015],
                            _0x5e718d = _0x4b9556['newlyVis_createGameObjFromMsg'](_0x579900['itemType'], _0x579900);
                        if (_0x5e718d['price'] == -0x1 && _0x5e718d['data']['itemType'] == 0x0) !_0x30041e['prototype']['shop']['ownedSkins'][_0x579900['itemId']] && (_0x30041e['prototype']['shop']['ownedSkins'][_0x579900['itemId']] = _0x5e718d, _0x30041e['prototype']['shop']['ownedSkins']['push'](_0x5e718d));
                        else {
                            if (_0x5e718d['price'] == -0x1 && _0x5e718d['data']['itemType'] == 0x1) !_0x30041e['prototype']['shop']['ownedAnimals'][_0x579900['itemId']] && (_0x30041e['prototype']['shop']['ownedAnimals'][_0x579900['itemId']] = _0x5e718d, _0x30041e['prototype']['shop']['ownedAnimals']['push'](_0x5e718d));
                            else _0x5e718d['price'] == -0x1 && _0x5e718d['data']['itemType'] == 0x2 && _0x30041e['prototype']['shop']['ownedDeals']['push'](_0x5e718d);
                        }
                        _0x30041e['prototype']['itemIdToItem'][_0x579900['itemId']] = _0x579900, _0x3e99d1['push'](_0x5e718d);
                    }
                }
                _0x30041e['prototype']['shop']['allItems'] = _0x3e99d1;
                for (d = 0x0; d < _0x30041e['prototype']['shop']['ownedDeals']['length']; d++) {
                    var _0x411512 = _0x30041e['prototype']['shop']['ownedDeals'][d];
                    for (s = 0x0; s < _0x3e99d1['length']; s++) {
                        var _0x579900 = _0x3e99d1[s];
                        _0x579900['data']['promotions'] && _0x579900['data']['promotions']['indexOf'](_0x411512['itemId']) > -0x1 && (_0x579900['price'] = -0x1, !_0x30041e['prototype']['shop']['ownedSkins'][_0x579900['data']['itemId']] && _0x30041e['prototype']['shop']['ownedSkins']['push'](_0x579900));
                    }
                }
                for (_0x4be015 = 0x0; _0x4be015 < _0x30041e['prototype']['shop']['allItems']['length']; _0x4be015++) {
                    _0x30041e['prototype']['shop']['allItems'][_0x30041e['prototype']['shop']['allItems'][_0x4be015]['data']['itemId']] = _0x30041e['prototype']['shop']['allItems'][_0x4be015];
                }
                for (t = 0x0; t < _0x389f6b['skins']['length']; t++) {
                    var _0x2bc805 = _0x389f6b['skins'][t],
                        _0x2fc48b = _0x2bc805['tab'],
                        _0x4238e2 = {
                            'name': _0x2fc48b,
                            'items': []
                        };
                    _0x30041e['prototype']['shop']['skins']['push'](_0x4238e2), _0x30041e['prototype']['shop']['skins'][_0x2fc48b] = _0x4238e2;
                    for (_0x4be015 = 0x0; _0x4be015 < _0x2bc805['shopItems']['length']; _0x4be015++) {
                        var _0x579900 = _0x2bc805['shopItems'][_0x4be015];
                        for (let _0x253890 = 0x0; _0x253890 < _0x3e99d1['length']; _0x253890++) {
                            var _0x9a721c = _0x3e99d1[_0x253890];
                            _0x579900['id'] == _0x9a721c['id'] && _0x9a721c['price'] > -0x1 && _0x4238e2['items']['push'](_0x9a721c);
                        }
                    }
                }
                if (_0x41a78c) _0x27eaaa((_0x441821, _0x49bd77) => {
                    !_0x441821 ? _0x6a452e('AccountServer: Failed to load your purchases: ' + _0x49bd77, 'error', 0x2710) : (_0x30041e['prototype']['shop']['settings'] = _0x49bd77['settings'], _0x30041e['prototype']['purchasedItems'] = _0x49bd77['purchases'], _0x30041e['prototype']['wardrobeItems'] = _0x49bd77['wardrobe'], _0x30041e['prototype']['createPurchases']());
                    if (_0x8993a6) _0x100ed7['updateshop_div']();
                    else _0x30041e['prototype']['buildInterface'](![]);
                    _0x100ed7['onShopLoaded']();
                });
                else {
                    if (_0x8993a6) _0x100ed7['updateshop_div']();
                    else _0x30041e['prototype']['buildInterface'](![]);
                    _0x100ed7['onShopLoaded']();
                }
            });
        }, _0x30041e['prototype']['loadData'] = function() {
            var _0xc3fe4a = {
                'shopItems': [],
                'settings': []
            };
            _0x3527d7(function(_0x1432fd, _0x16cca8) {
                if (!_0x1432fd) {
                    _0x6a452e('Could not connect to AccountServer!', 'itemDoesntExist', 0x5);
                    var _0x574741 = document['getElementById']('shopOverlay');
                    _0x574741 && _0x574741['parentNode']['removeChild'](_0x574741);
                    return;
                }
                if (_0x16cca8) {
                    for (var _0x4c11b1 = 0x0; _0x4c11b1 < _0x16cca8['items']['length']; _0x4c11b1++) {
                        var _0x99f47c = _0x16cca8['items'][_0x4c11b1];
                        _0xc3fe4a['shopItems']['push'](_0x99f47c);
                    }
                    if (_0x16cca8['settings'])
                        for (var _0x4c11b1 = 0x0; _0x4c11b1 < _0x16cca8['settings']['length']; _0x4c11b1++) {
                            _0xc3fe4a['settings']['push'](_0x16cca8['settings'][_0x4c11b1]);
                        }
                }
                var _0x4207fe = {
                        'tab': 'Skins',
                        'shopItems': []
                    },
                    _0x4fc525 = {
                        'tab': 'Features',
                        'shopItems': []
                    },
                    _0x2f310c = {
                        'tab': 'Deals',
                        'shopItems': []
                    };
                const _0x43094d = {
                        'tab': 'Coins',
                        'shopItems': [{}]
                    },
                    _0x3b42d7 = {
                        'tab': 'Gems',
                        'shopItems': [{}]
                    },
                    _0x4c0d3c = {
                        'tab': 'VIP Pass',
                        'shopItems': [{}]
                    };
                var _0x1417fe = [_0x4207fe, _0x4fc525, _0x2f310c, _0x43094d, _0x3b42d7];
                _0xcff3a0 && _0xcff3a0['success'] && _0x1417fe['push'](_0x4c0d3c);
                for (_0x4c11b1 = 0x0; _0x4c11b1 < _0xc3fe4a['shopItems']['length']; _0x4c11b1++) {
                    var _0x494227 = _0xc3fe4a['shopItems'][_0x4c11b1];
                    switch (_0x494227['shopCategory']) {
                        case 0x0: {
                            var _0xb569df = _0x55ab97({
                                'animalType': _0x494227['animalType'],
                                'animalSpecies': _0x494227['animalSpecies'],
                                'animalSubSpecies': _0x494227['animalSubSpecies'],
                                'mopeSeasonID': _0x494227['season']
                            });
                            if (_0xb569df) _0x494227['id'] = _0x494227['itemId'], _0x494227['oType'] = _0x269668, _0x494227['skinName'] = _0xb569df['aniName'] || _0x494227['itemId'], _0x494227['skinImage'] = _0xb569df['skinName'] + '.ui', _0x4207fe['shopItems']['push'](_0x494227);
                            else {}
                            break;
                        }
                        case 0x2: {
                            _0x494227['id'] = _0x494227['itemId'], _0x494227['oType'] = _0x1592f9, _0x2f310c['shopItems']['push'](_0x494227);
                        }
                        break;
                        break;
                        default:
                    }
                }
                var _0x4b26af = {
                    'skins': _0x1417fe
                };
                _0x30041e['prototype']['itemIdToItem'] = {}, _0x30041e['prototype']['shop'] = {
                    'ownedSkins': [],
                    'ownedDeals': [],
                    'ownedProps': [],
                    'settings': [],
                    'skins': [],
                    'props': [],
                    'banners': _0xc3fe4a['banners']
                };
                var _0x9042 = [];
                for (t = 0x0; t < _0x4b26af['skins']['length']; t++) {
                    var _0x2caee4 = _0x4b26af['skins'][t];
                    for (_0x4c11b1 = 0x0; _0x4c11b1 < _0x2caee4['shopItems']['length']; _0x4c11b1++) {
                        var _0x3b9838 = _0x2caee4['shopItems'][_0x4c11b1],
                            _0x32f8ad = _0x4b9556['newlyVis_createGameObjFromMsg'](_0x3b9838['itemType'], _0x3b9838);
                        if (_0x32f8ad['price'] == -0x1 && _0x32f8ad['data']['itemType'] == 0x0) !_0x30041e['prototype']['shop']['ownedSkins'][_0x3b9838['itemId']] && (_0x30041e['prototype']['shop']['ownedSkins'][_0x3b9838['itemId']] = _0x32f8ad, _0x30041e['prototype']['shop']['ownedSkins']['push'](_0x32f8ad));
                        else _0x32f8ad['price'] == -0x1 && _0x32f8ad['data']['itemType'] == 0x2 && _0x30041e['prototype']['shop']['ownedDeals']['push'](_0x32f8ad);
                        _0x30041e['prototype']['itemIdToItem'][_0x3b9838['itemId']] = _0x3b9838, _0x9042['push'](_0x32f8ad);
                    }
                }
                _0x30041e['prototype']['shop']['allItems'] = _0x9042;
                for (d = 0x0; d < _0x30041e['prototype']['shop']['ownedDeals']['length']; d++) {
                    var _0x507ca5 = _0x30041e['prototype']['shop']['ownedDeals'][d];
                    for (s = 0x0; s < _0x9042['length']; s++) {
                        var _0x3b9838 = _0x9042[s];
                        _0x3b9838['data']['promotions'] && _0x3b9838['data']['promotions']['indexOf'](_0x507ca5['itemId']) > -0x1 && (_0x3b9838['price'] = -0x1, !_0x30041e['prototype']['shop']['ownedSkins'][_0x3b9838['data']['itemId']] && _0x30041e['prototype']['shop']['ownedSkins']['push'](_0x3b9838));
                    }
                }
                for (_0x4c11b1 = 0x0; _0x4c11b1 < _0x30041e['prototype']['shop']['allItems']['length']; _0x4c11b1++) {
                    _0x30041e['prototype']['shop']['allItems'][_0x30041e['prototype']['shop']['allItems'][_0x4c11b1]['data']['itemId']] = _0x30041e['prototype']['shop']['allItems'][_0x4c11b1];
                }
                for (t = 0x0; t < _0x4b26af['skins']['length']; t++) {
                    var _0x2caee4 = _0x4b26af['skins'][t],
                        _0x21ade9 = _0x2caee4['tab'],
                        _0x122291 = {
                            'name': _0x21ade9,
                            'items': []
                        };
                    _0x30041e['prototype']['shop']['skins']['push'](_0x122291), _0x30041e['prototype']['shop']['skins'][_0x21ade9] = _0x122291;
                    for (_0x4c11b1 = 0x0; _0x4c11b1 < _0x2caee4['shopItems']['length']; _0x4c11b1++) {
                        var _0x3b9838 = _0x2caee4['shopItems'][_0x4c11b1];
                        for (let _0x45870a = 0x0; _0x45870a < _0x9042['length']; _0x45870a++) {
                            var _0x3e7149 = _0x9042[_0x45870a];
                            _0x3b9838['id'] == _0x3e7149['id'] && _0x3e7149['price'] > -0x1 && _0x122291['items']['push'](_0x3e7149);
                        }
                    }
                }
                if (!_0x41a78c) return;
                _0x27eaaa((_0x309c02, _0x212577) => {
                    !_0x309c02 ? _0x6a452e('AccountServer: Failed to load your purchases: ' + _0x212577, 'error', 0x2710) : (_0x30041e['prototype']['shop']['settings'] = _0x212577['settings'], _0x30041e['prototype']['purchasedItems'] = _0x212577['purchases'], _0x30041e['prototype']['wardrobeItems'] = _0x212577['wardrobe'], _0x30041e['prototype']['createPurchases']());
                });
            });
        }, _0x30041e['prototype']['createPurchases'] = () => {
            const _0x2a716a = _0x30041e['prototype'];
            _0x2a716a['shop']['ownedSkins'] = [], _0x2a716a['shop']['ownedAnimals'] = [], _0x2a716a['shop']['ownedDeals'] = [];
            for (let _0x5ba091 = 0x0; _0x5ba091 < _0x2a716a['shop']['allItems']['length']; _0x5ba091++) {
                const _0x13c570 = _0x2a716a['shop']['allItems'][_0x5ba091];
                if (_0x2a716a['purchasedItems']['includes'](_0x13c570['id'])) {
                    _0x13c570['price'] = -0x1;
                    switch (_0x13c570['data']['shopCategory']) {
                        case 0x0:
                            _0x2a716a['shop']['ownedSkins'][_0x13c570['id']] = _0x13c570, _0x2a716a['shop']['ownedSkins']['push'](_0x13c570);
                            break;
                        case 0x1:
                            _0x2a716a['shop']['ownedAnimals'][_0x13c570['id']] = _0x13c570, _0x2a716a['shop']['ownedAnimals']['push'](_0x13c570);
                            break;
                        case 0x2:
                            _0x2a716a['shop']['ownedDeals']['push'](_0x13c570);
                            break;
                    }
                }
            }
            _0x2a716a['purchasedItems']['length'] > 0x0 && Object['values'](_0x2a716a['wardrobeItems'])['every'](_0x3fc028 => !_0x3fc028['alreadySet']) && _0x6a452e('It looks like you have skins purchased, but didn\'t setup them. Please navigate to the Shop and go into the Wardrobe tab to set them up!', 'warn', 0xa);
        }, _0x30041e['prototype']['ownedItems'] = new Array(), _0x30041e['prototype']['setFilter'] = function(_0x3716b0) {
            this['item_filter'] = _0x3716b0;
        }, _0x30041e['prototype']['setFilterCat'] = function(_0x431fd2) {
            this['item_filter_cat'] = _0x431fd2;
        }, _0x30041e['prototype']['setPriceFilter'] = function(_0xf21ebe) {
            this['item_pricefilter'] = _0xf21ebe;
        }, _0x30041e['prototype']['showTab'] = function(_0x46de74) {
            if (this['tabId'] != this['selectedTab']) this['setFilter']('all');
            else this['setFilter'](this['item_filter']);
            this['textFilter'] = '', this['textFilterWardrobe'] = '';
            var _0x33167e = document['getElementsByClassName']('tab'),
                _0xfc395e = document['getElementsByClassName']('title');
            for (i = 0x0; i < _0xfc395e['length']; i++) {
                if (_0xfc395e[i]['id'] == '' + _0x46de74) _0xfc395e[i]['className'] = 'title selected';
                else _0xfc395e[i]['className'] = 'title notselected';
            }
            for (i = 0x0; i < _0x33167e['length']; i++) {
                if (_0x33167e[i]['id'] == 'tab-' + _0x46de74) _0x33167e[i]['className'] = 'tab selected';
                else _0x33167e[i]['className'] = 'tab notselected';
            }
            this['selectedTab'] = _0x46de74;
            if (_0x46de74 != 'MopeShop' && _0x46de74 != 'Coins' && _0x46de74 != 'CLOTHING') this['setVisiblePage'](_0x46de74, this['curTabPage']);
        }, _0x30041e['prototype']['shop'] = null, _0x30041e['prototype']['shopDiv'] = null, _0x30041e['prototype']['buildInterface'] = function(_0x32f76f) {
            var _0x4fe501 = document['getElementById']('shopOverlay');
            _0x4fe501 && _0x4fe501['parentNode']['removeChild'](_0x4fe501);
            this['shopDiv'] = document['createElement']('div'), this['shopDiv']['id'] = 'shop', this['shopDiv']['className'] = 'shop center';
            var _0x2c916d = document['getElementsByTagName']('body')[0x0];
            _0x2c916d['prepend'](this['shopDiv']), this['showShopButtons'](), this['callback'] && (this['callback'](), this['callback'] = null), _0x56c430();
        }, _0x30041e['prototype']['wardrobeItems'] = {}, _0x30041e['prototype']['onShopLoaded'] = function() {
            if (_0x24d734) {
                var _0x31ab96 = document['getElementById']('divButtons');
                _0x31ab96['style']['display'] = 'none';
                if (this['actionBtn']) {
                    if (this['actionBtn'] == 'login') this['showLoginScreen']();
                    else this['actionBtn'] == 'reg' && this['showLoginScreen'](!![]);
                } else {
                    if (this['upgradeMenu_callback'] != null) this['upgradeMenu_callback']();
                }
            } else this['showLoginScreen']();
            this['actionBtn'] = null;
        }, _0x30041e['prototype']['callback'] = null, _0x30041e['prototype']['updateshop_div'] = function() {
            console['log']('--- update shop_div ---'), console['log']('this.selectedTab: ' + this['selectedTab']), this['selectedTab'] == 'mySettings' ? (this['showShopButtons'](), this['selectedTab'] = 'mySettings', this['showTab'](this['selectedTab'])) : (this['buildInterface'](![]), this['skinsInterface'](), this['showTab'](this['selectedTab']));
        }, _0x30041e['prototype']['removeBlockOverlay'] = function(_0x15050c, _0x372ecc) {
            var _0x2e1749 = document['getElementById']('blockOverlay');
            if (_0x2e1749) _0x2e1749['parentNode']['removeChild'](_0x2e1749);
        }, _0x30041e['prototype']['blockOverlay'] = function(_0x3b2b4b, _0x6104e4) {
            var _0x17bd87 = document['getElementById']('shop_div');
            if (_0x17bd87) {
                var _0x22e43c = _0x29e808('blockOverlay', ''),
                    _0x11469c = _0x29e808('plzwait', '');
                _0x11469c['innerHTML'] = 'PLEASE WAIT...', _0x22e43c['appendChild'](_0x11469c), _0x17bd87['prepend'](_0x22e43c);
            }
        };
        var _0x4e1d3d = 0x0,
            _0x32d458 = 0x1,
            _0x55400b = 0x2;
        _0x30041e['prototype']['upgradeMenu_callback'] = null, _0x30041e['prototype']['buyConfirmationOverlay'] = function(_0x4e5343, _0x1ba23c) {
            var _0x4d4f6e = document['getElementById']('shop_div');
            if (_0x4d4f6e) {
                var _0x10a646 = _0x29e808('blockOverlay', 'confirmPurchase ' + _0x39c200[_0x4e5343['itemType']]),
                    _0x289b6f = _0x29e808('purchaseItemInfo', 'purchaseItemInfo');
                _0x10a646['appendChild'](_0x289b6f);
                var _0x3ffdd8 = _0x4e5343['generateHtml'](_0x32d458);
                _0x289b6f['appendChild'](_0x3ffdd8);
                var _0x358dea = _0x29e808('itemDetail', 'itemDetail');
                _0x289b6f['appendChild'](_0x358dea);
                if (_0x4e5343['data']['info'] != undefined) {
                    var _0x56b6b6 = _0x29e808('itemInfoText', '');
                    _0x56b6b6['innerHTML'] = _0x4e5343['data']['info'], _0x358dea['appendChild'](_0x56b6b6);
                }
                var _0x39a8a1 = _0x29e808('areyousure', '');
                _0x39a8a1['innerHTML'] = 'ARE YOU SURE YOU WANT TO PURCHASE THIS ITEM?', _0x358dea['appendChild'](_0x39a8a1);
                _0x4e5343['data']['itemType'] == 0x2 && (_0x3ffdd8['onmousemove'] = function() {
                    $('.bundleSkins_' + _0x4e5343['itemId'])['css']('display', 'block');
                }, _0x3ffdd8['onmouseout'] = function() {
                    $('.bundleSkins_' + _0x4e5343['itemId'])['css']('display', 'none');
                });
                var _0x4704f5 = _0x3851ae('div', 'btn_confirmBuy', 'confirmBuybutton');
                _0x4704f5['innerHTML'] = 'CONFIRM';
                var _0x5e31e5 = _0x4e5343['id'];
                _0x4704f5['onclick'] = function() {
                    _0x100ed7['removeBlockOverlay'](), _0x100ed7['blockOverlay'](), _0x43d7f4(_0x5e31e5, function(_0x4fe2a3, _0x111016) {
                        _0x4fe2a3 ? (_0x6a452e('Purchase successful!', 'success', 0x5), _0x4c28b8(), _0x108e60()) : _0x6a452e('AccountServer: ' + _0x111016, 'error', 0xf), _0x100ed7['removeBlockOverlay']();
                    });
                }, _0x358dea['appendChild'](_0x4704f5);
                var _0x2a9438 = _0x3851ae('div', 'btn_cancelBuy', 'cancelBuybutton');
                _0x2a9438['innerHTML'] = 'CANCEL', _0x2a9438['onclick'] = function() {
                    _0x100ed7['removeBlockOverlay']();
                }, _0x358dea['appendChild'](_0x2a9438), (_0x4e5343['data']['itemType'] == 0x2 || _0x4e5343['data']['itemType'] == 0x3) && _0x4e5343['fillItemDetails'](_0x358dea), _0x4d4f6e['prepend'](_0x10a646);
            } else console['log']('shop div not found...');
        }, _0x30041e['prototype']['isSkinAlreadyOwned'] = function() {}, _0x30041e['prototype']['itemDetailsOverlay'] = function(_0x2091c1, _0x103b15) {
            console['log']('@@@@@@@@@@@@ itemDetailsOverlay');
            var _0x418c1a = document['getElementById']('shop_div');
            if (_0x418c1a) {
                var _0x389827 = _0x29e808('blockOverlay', 'confirmPurchase item-details ' + _0x39c200[_0x2091c1['shopItem']['itemType']]),
                    _0x5d8239 = _0x29e808('purchaseItemInfo', 'purchaseItemInfo ');
                _0x389827['appendChild'](_0x5d8239);
                var _0x254e64 = _0x2091c1['shopItem']['generateHtml'](_0x103b15);
                _0x5d8239['appendChild'](_0x254e64);
                var _0x14edb4 = _0x29e808('itemDetail', 'itemDetail ' + _0x2091c1['shopItem']['data']['itemType']);
                _0x5d8239['appendChild'](_0x14edb4);
                _0x2091c1['shopItem']['data']['itemType'] == 0x2 && (_0x254e64['onmousemove'] = function() {
                    $('.bundleSkins_' + _0x2091c1['shopItem']['itemId'])['css']('display', 'block');
                }, _0x254e64['onmouseout'] = function() {
                    $('.bundleSkins_' + _0x2091c1['shopItem']['itemId'])['css']('display', 'none');
                });
                var _0x2fa071 = _0x3851ae('div', 'btn_cancelBuy', 'cancelBuybutton');
                _0x2fa071['innerHTML'] = 'CLOSE', _0x2fa071['onclick'] = function() {
                    _0x100ed7['removeBlockOverlay']();
                }, _0x14edb4['appendChild'](_0x2fa071);
                if (_0x2091c1['shopItem']['data']['itemType'] == 0x2) {
                    var _0x1a0c40 = _0x29e808('bundleSkins', 'bundleSkins_' + _0x2091c1['shopItem']['itemId']);
                    _0x14edb4['appendChild'](_0x1a0c40), console['log']('############### dislay deal info'), console['log'](_0x2091c1['shopItem']['data']);
                    if (_0x2091c1['shopItem']['data']['aniTypes'] === undefined)
                        for (i = 0x0; i < _0x100ed7['shop']['allItems']['length']; i++) {
                            var _0x51de19 = _0x100ed7['shop']['allItems'][i];
                            if (_0x51de19 && _0x51de19['data']['promotions'] && _0x51de19['data']['promotions']['toLowerCase']()['indexOf'](_0x2091c1['shopItem']['itemId']['toLowerCase']()) > -0x1) {
                                var _0x2ec86a = this['getPostFixForItem'](_0x2091c1['shopItem']['itemId']),
                                    _0x12bfd7 = _0x51de19['getImagePromo'](_0x2ec86a);
                                _0x12bfd7['className'] = 'bundleSkinImg', _0x12bfd7['width'] = '40px', _0x1a0c40['appendChild'](_0x12bfd7);
                            }
                        } else {
                            if (this['data']['aniTypes'])
                                for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
                                    var _0x2c696e = _0x100ed7['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
                                    if (_0x2c696e !== undefined) {
                                        var _0x12bfd7 = null;
                                        _0x4ac740[_0x2c696e] ? _0x12bfd7 = _0x4ac740[_0x2c696e] : (_0x12bfd7 = new Image(), _0x12bfd7['src'] = _0x2c696e, _0x12bfd7['loading'] = 'lazy', _0x12bfd7['className'] = 'bundleSkinImg', _0x12bfd7['width'] = '40px', _0x4ac740[_0x2c696e] = _0x12bfd7), _0x1a0c40['appendChild'](_0x12bfd7);
                                    }
                                }
                        }
                } else {
                    if (_0x2091c1['shopItem']['data']['itemType'] == 0x0) {
                        var _0x449d62 = _0x29e808('skinInfo', 'skin-info');
                        _0x14edb4['appendChild'](_0x449d62), _0x449d62['appendChild'](this['createField']('filed1', 'value1', 'skin-info-field', 'skin-info-label', 'skin-info-value')), _0x449d62['appendChild'](this['createField']('filed2', 'value2', 'skin-info-field', 'skin-info-label', 'skin-info-value')), _0x449d62['appendChild'](this['createField']('filed3', 'value3', 'skin-info-field', 'skin-info-label', 'skin-info-value')), _0x449d62['appendChild'](this['createField']('filed4', 'value4', 'skin-info-field', 'skin-info-label', 'skin-info-value')), _0x449d62['appendChild'](this['createField']('filed5', 'value5', 'skin-info-field', 'skin-info-label', 'skin-info-value'));
                    }
                }
                _0x418c1a['prepend'](_0x389827);
            }
        }, _0x30041e['prototype']['showLoginScreen'] = function(_0x142cc2) {
            var _0x2dfd3e = document['getElementById']('shop_div');
            if (_0x2dfd3e) {
                var _0x11b3d8 = _0x29e808('blockOverlay', 'confirmPurchase item-details '),
                    _0x51e502 = _0x29e808('purchaseItemInfo', 'purchaseItemInfo ');
                _0x11b3d8['appendChild'](_0x51e502);
                var _0x197aef = _0x29e808('itemDetail2', 'itemDetail2 ');
                _0x51e502['appendChild'](_0x197aef);
                var _0x28917f = _0x29e808('mobilelogininfo', '');
                _0x197aef['appendChild'](_0x28917f);
                var _0x4e322e = _0x3851ae('div', 'btn_cancelBuy', 'cancelBuybutton');
                _0x28917f['innerHTML'] = 'LOGIN INTO YOUR ACCOUNT', _0x527f8e = document['getElementById']('loginButtons'), _0x527f8e && (_0x527f8e['style']['display'] = 'block'), _0x4e322e['innerHTML'] = 'CLOSE', _0x4e322e['onclick'] = function() {
                    _0x100ed7['removeBlockOverlay']();
                    if (_0x527f8e) _0x527f8e['style']['display'] = 'none';
                    _0xf451d2();
                }, _0x197aef['appendChild'](_0x4e322e), _0x2dfd3e['prepend'](_0x11b3d8);
            }
            _0x3cf313();
        }, _0x30041e['prototype']['getSkinPath'] = function(_0xc0bdd2, _0x305f2c) {
            var _0x24e7d1 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0xc0bdd2);
            _0x24e7d1['animalType'] = _0xc0bdd2, _0x24e7d1['animalSpecies'] = 0x0, _0x24e7d1['animalSubSpecies'] = 0x0, _0x24e7d1['animalPremiumSkin'] = 0x0, _0x24e7d1['curBiome'] = 0x0, _0x24e7d1['lava'] = 0x64, _0x24e7d1['mopeSeasonID'] = 0x0, _0x24e7d1['skinThemeID'] = _0x305f2c;
            var _0x509838 = _0x24e7d1['animalInfo'](),
                _0x41665a = _0x24e7d1['getSkinImagePathForShop'](_0x509838['skinName']);
            return _0x41665a = this['ifMultiAssetSkin'](_0xc0bdd2, _0x41665a), _0x41665a + '.ui.png';
        }, _0x30041e['prototype']['ifMultiAssetSkin'] = function(_0x12629e, _0x5b189d) {
            return _0x5b189d;
        }, _0x30041e['prototype']['getPostFixForItem'] = function(_0x364493) {
            switch (_0x364493) {
                case 'halloween_pufferMace':
                    return '1';
            }
            return null;
        }, _0x30041e['prototype']['createField'] = function(_0x53fa43, _0x5bdaa6, _0xe8da52, _0x3407e1, _0x29e51d) {
            var _0x3fd183 = _0x29e808('', _0xe8da52),
                _0x53fa43 = _0x29e808('', _0x3407e1),
                _0x5bdaa6 = _0x29e808('', _0x29e51d);
            return _0x3fd183['appendChild'](_0x53fa43), _0x3fd183['appendChild'](_0x5bdaa6), _0x3fd183;
        }, _0x30041e['prototype']['addCloseButton'] = function(_0x386c83) {
            var _0x386f1f = _0x3851ae('div', 'close-shop');
            _0x386f1f['onclick'] = function() {
                _0xf451d2();
            }, _0x386f1f['innerHTML'] = 'X', _0x386c83['appendChild'](_0x386f1f);
        }, _0x30041e['prototype']['updateCoinsBalance'] = function() {
            var _0x36a84c = _0x326bc5;
            _0x36a84c['level'] = Math['round'](_0x4ec95c(0x1, 0xa)), _0x36a84c['xp'] = 0x32, _0x36a84c['xpNextLvl'] = _0x36a84c['xp'] + 0x12c;
            var _0x173586 = Math['round'](_0x36a84c['xp']),
                _0x3be78e = document['getElementById']('coins');
            if (_0x3be78e) {
                _0x3be78e['innerHTML'] = this['coinsFormat'](_0x4ceade());
                var _0x580948 = document['getElementById']('userxp-barbar'),
                    _0x1939a5 = document['getElementById']('userxp-val'),
                    _0x1414c1 = document['getElementById']('userxp-star');
                _0x1939a5['innerHTML'] = _0x173586 + ' / ' + _0x36a84c['xpNextLvl'], _0x173586 = _0x173586 / _0x36a84c['xpNextLvl'] * 0x64, _0x580948['style']['width'] = _0x173586 + 'px', _0x1414c1['innerHTML'] = _0x36a84c['level'];
            }
            var _0x3f8e73 = document['getElementById']('coins2');
            if (_0x3f8e73) {
                _0x3f8e73['innerHTML'] = _0x4ceade();
                var _0x580948 = document['getElementById']('userxp-barbar2'),
                    _0x1939a5 = document['getElementById']('userxp-val2'),
                    _0x1414c1 = document['getElementById']('userxp-star2');
                _0x1939a5['innerHTML'] = _0x173586 + ' / ' + _0x36a84c['xpNextLvl'], _0x173586 = _0x173586 / _0x36a84c['xpNextLvl'] * 0x64, _0x580948['style']['width'] = _0x173586 + 'px', _0x1414c1['innerHTML'] = _0x36a84c['level'];
            }
        }, _0x30041e['prototype']['coinsFormat'] = function(_0x2b4b8c) {
            var _0x4a872b = '' + _0x2b4b8c;
            if (_0x2b4b8c == 0x0) return _0x2b4b8c;
            return _0x4a872b = _0x4a872b['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ','), _0x4a872b;
        }, _0x30041e['prototype']['showUserExpBarAndCoinsBalance'] = function(_0x36dbc8) {
            var _0x147d0c = _0x3851ae('li', 'user-exp', 'user-exp'),
                _0x25d09e = _0x3851ae('div', 'userxp-bar', 'userxp-bar'),
                _0x3c9772 = _0x3851ae('div', 'userxp-barbar', 'userxp-barbar'),
                _0x52f7f6 = _0x3851ae('div', 'userxp-val', 'userxp-val'),
                _0x47caff = _0x3851ae('div', 'userxp-star', 'userxp-star'),
                _0xb4b859 = _0x326bc5;
            const _0x5e8705 = _0x3851ae('li', 'coins-balance', 'coins-balance');
            _0x5e8705['setAttribute']('title', 'add more gems'), _0x36dbc8['appendChild'](_0x5e8705), _0x5e8705['addEventListener']('click', function() {
                _0x100ed7['selectedTab'] = 'Gems', _0x100ed7['skinsInterface']();
            });
            const _0x10e933 = new Image();
            _0x10e933['src'] = 'shop/gem.png', _0x10e933['className'] = 'buycoin-img';
            if (_0x173edc()) _0x5e8705['appendChild'](_0x10e933);
            const _0x985145 = _0x3851ae('span', 'coins', 'coins');
            _0x985145['innerText'] = _0x8e483d(), _0x5e8705['appendChild'](_0x985145);
            var _0x2a10c2 = _0x3851ae('li', 'coins-balance', 'coins-balance'),
                _0x14b737 = new Image();
            _0x14b737['src'] = 'shop/mopecoin.png', _0x14b737['className'] = 'buycoin-img';
            if (_0x173edc()) _0x2a10c2['appendChild'](_0x14b737);
            var _0x1d95bb = _0x3851ae('span', 'coins', 'coins');
            _0x1d95bb['innerHTML'] = _0x4ceade(), _0x2a10c2['appendChild'](_0x1d95bb), _0x2a10c2['setAttribute']('title', 'add more coins'), _0x36dbc8['appendChild'](_0x2a10c2), _0x2a10c2['onclick'] = function() {
                if (_0x173edc()) _0x100ed7['selectedTab'] = 'Coins', _0x100ed7['skinsInterface']();
                else _0x100ed7['showLoginScreen']();
                _0x4bdc5f();
            };
        }, _0x30041e['prototype']['enableClothingShop'] = ![], _0x30041e['prototype']['showShopButtons'] = function() {
            this['deleteTab']();
            var _0x10b9aa = _0x29e808('shop_div', ''),
                _0x149539 = _0x3851ae('ul');
            this['addCloseButton2'](_0x149539), _0x10b9aa['appendChild'](_0x149539);
            var _0x150205 = {
                    'name': 'MopeShop'
                },
                _0x2941c7 = _0x3851ae('li', _0x150205['name'], 'title');
            _0x2941c7['innerHTML'] = 'SHOP', _0x2941c7['onclick'] = function() {
                _0x100ed7['showTab'](this['id']);
            }, _0x149539['appendChild'](_0x2941c7);
            var _0x2ba611 = _0x3851ae('div', 'tab-' + _0x150205['name'], 'tab'),
                _0x37a9c0 = _0x3851ae('div', undefined, 'content'),
                _0x24f220 = _0x3851ae('div', undefined, 'content-inner'),
                _0x5c2463 = _0x3851ae('div', 'content-items-' + _0x150205['name'], 'content-items');
            _0x24f220['append'](_0x5c2463), _0x5c2463['style']['width'] = '100%';
            var _0x4503e6 = _0x3851ae('div', undefined, 'box coinsBox');
            const _0x35b824 = _0x3851ae('div', undefined, 'box coinsBox'),
                _0x173410 = _0x3851ae('div', undefined, 'box coinsBox');
            var _0x2a2a97 = _0x3851ae('div', undefined, 'box skinsBox'),
                _0x221090 = _0x3851ae('div', undefined, 'box skinsBox'),
                _0x804892 = _0x3851ae('div', undefined, 'box dealsBox');
            _0x2a2a97['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'Skins', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            }, _0x221090['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'Features', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            }, _0x804892['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'Deals', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            }, _0x4503e6['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'Coins', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            };
            var _0x246a65 = _0x3851ae('div', undefined, 'title'),
                _0x40814f = _0x3851ae('div', undefined, 'img'),
                _0x36815d = new Image();
            _0x36815d['src'] = 'shop/coins.png', _0x40814f['appendChild'](_0x36815d), _0x246a65['innerHTML'] = 'COINS', _0x4503e6['appendChild'](_0x40814f), _0x4503e6['appendChild'](_0x246a65), _0x35b824['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'Gems', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            };
            const _0x222462 = _0x3851ae('div', undefined, 'title'),
                _0xad53e9 = _0x3851ae('div', undefined, 'img'),
                _0x4a327b = new Image();
            _0x4a327b['src'] = 'shop/gem.png', _0xad53e9['appendChild'](_0x4a327b), _0x222462['innerHTML'] = 'GEMS', _0x35b824['appendChild'](_0xad53e9), _0x35b824['appendChild'](_0x222462), _0x173410['onclick'] = function() {
                _0x100ed7['selectedTab'] = 'VIP Pass', _0x100ed7['skinsInterface'](), _0x4bdc5f();
            };
            const _0x2e9a04 = _0x3851ae('div', undefined, 'title'),
                _0x394404 = _0x3851ae('div', undefined, 'img'),
                _0x576aa6 = new Image();
            _0x576aa6['src'] = 'shop/VIP_Button.png', _0x394404['appendChild'](_0x576aa6), _0x2e9a04['innerHTML'] = 'VIP PASS', _0x173410['appendChild'](_0x394404), _0x173410['appendChild'](_0x2e9a04);
            var _0x5291f6 = _0x3851ae('div', undefined, 'title'),
                _0x5529c4 = _0x3851ae('div', undefined, 'img'),
                _0x5cedd5 = new Image();
            _0x5cedd5['src'] = 'shop/skins.png', _0x5529c4['appendChild'](_0x5cedd5), _0x5291f6['innerHTML'] = 'SKINS', _0x2a2a97['appendChild'](_0x5529c4), _0x2a2a97['appendChild'](_0x5291f6);
            var _0x279b62 = _0x3851ae('div', undefined, 'title'),
                _0x4592f5 = _0x3851ae('div', undefined, 'img'),
                _0x5cedd5 = new Image();
            _0x5cedd5['src'] = 'shop/features.png', _0x4592f5['appendChild'](_0x5cedd5), _0x279b62['innerHTML'] = 'FEATURES', _0x221090['appendChild'](_0x4592f5), _0x221090['appendChild'](_0x279b62);
            var _0x423139 = _0x3851ae('div', undefined, 'title'),
                _0x1ca222 = _0x3851ae('div', undefined, 'img'),
                _0x21be9b = new Image();
            _0x21be9b['src'] = 'shop/deals/deals.png', _0x1ca222['appendChild'](_0x21be9b), _0x423139['innerHTML'] = 'DEALS', _0x804892['appendChild'](_0x1ca222), _0x804892['appendChild'](_0x423139), _0x5c2463['appendChild'](_0x2a2a97), _0x5c2463['appendChild'](_0x221090), _0x5c2463['appendChild'](_0x804892), _0x5c2463['appendChild'](_0x4503e6), _0x5c2463['appendChild'](_0x35b824);
            _0xcff3a0 && _0xcff3a0['success'] && _0x5c2463['appendChild'](_0x173410);
            if (this['enableClothingShop']) {
                var _0xa1e3ee = _0x3851ae('div', undefined, 'box clothsBox');
                _0xa1e3ee['onclick'] = function() {
                    _0x100ed7['clothsInterface'](), _0x4bdc5f();
                };
                var _0x23b501 = _0x3851ae('div', undefined, 'title'),
                    _0x19186f = _0x3851ae('div', undefined, 'img'),
                    _0x509d25 = new Image();
                _0x509d25['src'] = 'shop/clothing.png', _0x19186f['appendChild'](_0x509d25), _0x23b501['innerHTML'] = 'CLOTHING', _0xa1e3ee['appendChild'](_0x19186f), _0xa1e3ee['appendChild'](_0x23b501), _0x5c2463['appendChild'](_0xa1e3ee);
            }
            _0x37a9c0['append'](_0x24f220), _0x37a9c0['append'](_0x3851ae('div', '', 'separator')), _0x24f220['append'](_0x3851ae('div', '', 'separator')), _0x5c2463['append'](_0x3851ae('div', '', 'separator')), _0x2ba611['append'](_0x37a9c0), _0x2ba611['append'](_0x3851ae('div', '', 'separator')), _0x10b9aa['appendChild'](_0x2ba611), this['createMyPurchasesTab'](_0x149539, _0x10b9aa, [..._0x100ed7['shop']['ownedSkins'], ..._0x100ed7['shop']['ownedAnimals']]), this['createMyDealsTab'](_0x149539, _0x10b9aa, _0x100ed7['shop']['ownedDeals']), this['createWardrobeTab'](_0x149539, _0x10b9aa, []), this['createMySettingsTab'](_0x149539, _0x10b9aa, _0x100ed7['shop']['settings']), this['showUserExpBarAndCoinsBalance'](_0x149539), _0x10b9aa['append'](_0x3851ae('div', '', 'separator')), this['shopDiv']['appendChild'](_0x10b9aa), this['showTab']('MopeShop'), _0x56c430();
        }, _0x30041e['prototype']['createLogoutBtn'] = function(_0x47a36e) {
            var _0x4f2b35 = _0x3851ae('div', 'divLogoutBtn', _0x173edc() ? 'logout' : 'login');
            _0x4f2b35['innerHTML'] = _0x173edc() ? 'LOGOUT' : 'LOGIN', _0x4f2b35['onclick'] = function() {
                if (_0x173edc()) _0xb9e158();
                else _0x100ed7['showLoginScreen']();
            }, _0x47a36e['append'](_0x4f2b35);
        }, _0x30041e['prototype']['getSkinDataById'] = function(_0x2d96da) {
            return _0x30041e['prototype']['itemIdToItem'][_0x2d96da];
        }, _0x30041e['prototype']['applyWardrobeFilter'] = function(_0x343da1) {
            let _0x4a630c = null,
                _0x368182 = ![];
            for (let _0x496fd4 = 0x0; _0x496fd4 < _0x343da1['children']['length']; _0x496fd4++) {
                const _0x44ff44 = _0x343da1['children'][_0x496fd4];
                if (_0x44ff44['className'] == 'wardrobe-tier') {
                    if (_0x4a630c != null) _0x4a630c['style']['display'] = _0x368182 ? 'block' : 'none';
                    _0x368182 = ![], _0x4a630c = _0x44ff44;
                    continue;
                }
                const _0x36689d = _0x44ff44['children'][0x1]['innerText']['toLowerCase']()['includes'](_0x100ed7['textFilterWardrobe']['toLowerCase']()) ? 'block' : 'none';
                _0x44ff44['style']['display'] = _0x36689d;
                if (!_0x368182 && _0x36689d == 'block') _0x368182 = !![];
            }
            if (_0x4a630c != null) _0x4a630c['style']['display'] = _0x368182 ? 'block' : 'none';
        }, _0x30041e['prototype']['createWardrobeTab'] = function(_0x16e146, _0x29d9b5, _0x4ca84e) {
            var _0x886a77 = {
                    'name': 'mopeWardrobe'
                },
                _0x2f182c = _0x3851ae('li', _0x886a77['name'], 'title');
            _0x2f182c['innerHTML'] = 'WARDROBE', _0x2f182c['onclick'] = function() {
                _0x100ed7['curTabPage'] = 0x0;
                if (!_0x173edc()) {
                    _0x100ed7['showLoginScreen']();
                    return;
                }
                _0x100ed7['showTab'](this['id']);
            }, _0x16e146['appendChild'](_0x2f182c);
            if (!this['item_filter']) this['item_filter'] = 'all';
            var _0x530e3b = _0x3851ae('div', 'tab-' + _0x886a77['name'], 'tab'),
                _0xa10879 = _0x3851ae('div', undefined, 'content content-wardrobe'),
                _0x368065 = _0x3851ae('div', undefined, 'content-inner'),
                _0x1f9807 = _0x3851ae('div', 'content-items-' + _0x886a77['name'], 'content-items'),
                _0x48d041 = _0x3851ae('div', 'item-filters', 'item-filters-wardrobe'),
                _0x201add = _0x3851ae('span', undefined, 'filter-label-wardrobe');
            _0x201add['innerHTML'] = 'Tiers: ', _0x48d041['appendChild'](_0x201add);
            const _0x53a51e = _0x3851ae('span');
            for (let _0x185cc6 = 0x1; _0x185cc6 <= 0x11; _0x185cc6++) {
                const _0x1f8cad = _0x3851ae('a', null, 'tier-button');
                _0x1f8cad['innerText'] = _0x185cc6, _0x1f8cad['onclick'] = () => {
                    const _0x2620c4 = document['querySelector']('#wardrobe-tier-section-' + _0x185cc6);
                    if (_0x2620c4 == null) return;
                    _0x2620c4['scrollIntoView']({
                        'behavior': 'smooth',
                        'block': 'end',
                        'inline': 'nearest'
                    });
                }, _0x53a51e['appendChild'](_0x1f8cad);
            }
            _0x201add['appendChild'](_0x53a51e);
            const _0x58b7b3 = _0x3851ae('input', '', 'filter');
            _0x58b7b3['type'] = 'text', _0x58b7b3['placeholder'] = 'Search...';
            const _0x2be0ef = _0x3851ae('div', null, 'mopeWardrobeGrid');
            _0x1f9807['appendChild'](_0x2be0ef), _0x58b7b3['oninput'] = function(_0x420f20) {
                _0x100ed7['textFilterWardrobe'] = _0x420f20['target']['value'], _0x30041e['prototype']['applyWardrobeFilter'](_0x2be0ef);
            }, _0x48d041['appendChild'](_0x58b7b3), _0x368065['append'](_0x1f9807), _0x1f9807['style']['maxWidth'] = '100%', _0xa10879['appendChild'](_0x48d041), _0xa10879['append'](_0x368065), _0xa10879['append'](_0x3851ae('div', '', 'separator')), _0x368065['append'](_0x3851ae('div', '', 'separator')), _0x1f9807['append'](_0x3851ae('div', '', 'separator')), _0x530e3b['append'](_0xa10879), _0x530e3b['append'](_0x3851ae('div', '', 'separator')), _0x29d9b5['appendChild'](_0x530e3b);
            if (!_0x24d734) return;
            const _0x479717 = Object['keys'](_0x30041e['prototype']['wardrobeItems'])['sort']((_0x92091e, _0x5e6c96) => _0x4113e0[_0x92091e] - _0x4113e0[_0x5e6c96]);
            let _0x287f34 = 0x0;
            for (let _0x5d3ce6 = 0x0; _0x5d3ce6 < _0x479717['length']; _0x5d3ce6++) {
                const _0x2b59e8 = _0x479717[_0x5d3ce6],
                    _0x1eca09 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x2b59e8);
                _0x1eca09['animalType'] = _0x2b59e8;
                const _0x215229 = _0x1eca09['animalInfo']()['aniName'];
                _0x1eca09['animalSpecies'] = 0x0, _0x1eca09['animalSubSpecies'] = 0x0, _0x1eca09['mopeSeasonID'] = 0x1, _0x1eca09['animalPremiumSkin'] = 0x0, _0x1eca09['skinThemeID'] = 0x0;
                const _0x384da7 = _0x30041e['prototype']['changedWardrobeItems'][_0x2b59e8] ? _0x30041e['prototype']['changedWardrobeItems'][_0x2b59e8] : _0x30041e['prototype']['wardrobeItems'][_0x2b59e8]['equippedSkin'];
                if (_0x384da7 && _0x384da7 != 'RANDOM') {
                    const _0x2454c8 = _0x30041e['prototype']['getSkinDataById'](_0x384da7);
                    _0x2454c8 && (_0x1eca09['animalSpecies'] = _0x2454c8['animalSpecies'], _0x1eca09['animalSubSpecies'] = _0x2454c8['animalSubSpecies'], _0x1eca09['mopeSeasonID'] = _0x2454c8['season']);
                }
                let _0x5a3d68 = _0x4113e0[_0x2b59e8];
                if (_0x5a3d68 != _0x287f34) {
                    _0x287f34 = _0x5a3d68;
                    const _0x3cb50b = document['createElement']('div');
                    _0x3cb50b['className'] = 'wardrobe-tier', _0x3cb50b['id'] = 'wardrobe-tier-section-' + _0x5a3d68, _0x3cb50b['innerText'] = 'Tier ' + _0x5a3d68, _0x2be0ef['appendChild'](_0x3cb50b);
                }
                _0x30041e['prototype']['createWardrobeItem'](_0x2be0ef, _0x1eca09, _0x215229);
            }
        }, _0x30041e['prototype']['createWardrobeItem'] = function(_0x5e86e2, _0x1b5384, _0x367d58) {
            const _0x44b292 = _0x29e808(null, 'mopeWardrobeItemContainer'),
                _0xdb2361 = _0x29e808(null, 'mopeWardrobeImgOuter'),
                _0x1768f6 = _0x29e808(null, 'mopeWardrobeItemTitle'),
                _0xfee528 = _0x3851ae('select', null, 'mopeWardrobeItemSelect');
            _0x1768f6['innerText'] = _0x367d58['replace']('!', '');
            const _0x43ca9d = 'assets/s/' + _0x1b5384['mopeSeasonID'] + '/skins/' + _0x1b5384['getSkinName']() + '.ui.png?w=1&v=' + _0x48024a,
                _0x43a1d4 = _0x4ac740[_0x43ca9d],
                _0x10ee74 = _0x43a1d4 ? _0x43a1d4 : _0x3851ae('img', null, null);
            !_0x43a1d4 && (_0x10ee74['src'] = _0x43ca9d, _0x10ee74['loading'] = 'lazy', _0x4ac740[_0x43ca9d] = _0x10ee74);
            _0xdb2361['append'](_0x10ee74), _0x44b292['append'](_0xdb2361, _0x1768f6, _0xfee528), _0x5e86e2['append'](_0x44b292);
            const _0x2c51f8 = _0x30041e['prototype']['wardrobeItems'][_0x1b5384['animalType']]['available'],
                _0x302ad9 = _0x30041e['prototype']['changedWardrobeItems'][_0x1b5384['animalType']] ? _0x30041e['prototype']['changedWardrobeItems'][_0x1b5384['animalType']] : _0x30041e['prototype']['wardrobeItems'][_0x1b5384['animalType']]['equippedSkin'];
            for (let _0xf9361f = 0x0; _0xf9361f < _0x2c51f8['length']; _0xf9361f++) {
                const _0x1e2411 = _0x2c51f8[_0xf9361f],
                    _0x5f2241 = _0x30041e['prototype']['getSkinDataById'](_0x1e2411);
                let _0x40cff9 = _0x1e2411 == null || _0x1e2411 === 'RANDOM' ? _0x367d58 : _0x1e2411;
                _0x5f2241 && (_0x1b5384['animalSpecies'] = _0x5f2241['animalSpecies'], _0x1b5384['animalSubSpecies'] = _0x5f2241['animalSubSpecies'], _0x1b5384['mopeSeasonID'] = _0x5f2241['season'], _0x40cff9 = _0x1b5384['animalInfo']()['aniName'] || _0x1e2411);
                if (_0x40cff9 == _0x1e2411) console['error']('Missing name declaration for: ' + _0x1e2411);
                _0x40cff9 = _0x40cff9['replace']('!', '');
                const _0x81c1d6 = _0x3851ae('option');
                _0x81c1d6['innerText'] = _0x1e2411 == 'RANDOM' ? 'Random' : _0x40cff9['replace']('\x0a', ' '), _0xfee528['appendChild'](_0x81c1d6), _0x81c1d6['dataset']['aniType'] = _0x1b5384['animalType'], _0x81c1d6['dataset']['skinType'] = _0x1e2411, _0x1e2411 == _0x302ad9 && (_0xfee528['selectedIndex'] = _0xf9361f);
            }
            _0xfee528['oninput'] = () => {
                const _0x1c94e6 = _0x2c51f8[_0xfee528['selectedIndex']];
                _0x30041e['prototype']['changedWardrobeItems'][_0x1b5384['animalType']] = _0x1c94e6;
                const _0x2732fb = _0x30041e['prototype']['getSkinDataById'](_0x1c94e6);
                _0x2732fb ? (_0x1b5384['animalSpecies'] = _0x2732fb['animalSpecies'], _0x1b5384['animalSubSpecies'] = _0x2732fb['animalSubSpecies'], _0x1b5384['mopeSeasonID'] = _0x2732fb['season']) : (_0x1b5384['animalSpecies'] = 0x0, _0x1b5384['animalSubSpecies'] = 0x0, _0x1b5384['mopeSeasonID'] = 0x1);
                _0x1b5384['animalInfo']();
                const _0x21147d = 'assets/s/' + _0x1b5384['mopeSeasonID'] + '/skins/' + _0x1b5384['getSkinName']() + '.ui.png?w=1&v=' + _0x48024a,
                    _0x3f66a9 = _0x4ac740[_0x21147d],
                    _0x644d00 = _0x3f66a9 ? _0x3f66a9 : _0x3851ae('img', null, null);
                !_0x3f66a9 && (_0x644d00['src'] = _0x21147d, _0x644d00['loading'] = 'lazy', _0x4ac740[_0x21147d] = _0x644d00);
                if (_0xdb2361['lastChild']) _0xdb2361['lastChild']['remove']();
                _0xdb2361['append'](_0x644d00);
            };
        }, _0x30041e['prototype']['textFilter'] = '', _0x30041e['prototype']['createMyPurchasesTab'] = function(_0x5d728e, _0x21cf82, _0x4458fb) {
            var _0x2327b9 = {
                    'name': 'myPurchases'
                },
                _0x1918ce = _0x3851ae('li', _0x2327b9['name'], 'title');
            _0x1918ce['innerHTML'] = 'PURCHASES', _0x1918ce['onclick'] = function() {
                _0x100ed7['curTabPage'] = 0x0;
                if (!_0x173edc()) {
                    _0x100ed7['showLoginScreen']();
                    return;
                }
                _0x100ed7['showTab'](this['id']);
            }, _0x5d728e['appendChild'](_0x1918ce);
            if (!this['item_filter']) this['item_filter'] = 'all';
            var _0x1aad6b = _0x3851ae('div', 'tab-' + _0x2327b9['name'], 'tab'),
                _0x276dab = _0x3851ae('div', undefined, 'content'),
                _0x4afe57 = _0x3851ae('div', undefined, 'content-inner'),
                _0x21e91f = _0x3851ae('div', 'content-items-' + _0x2327b9['name'], 'content-items'),
                _0x16c75e = _0x3851ae('div', 'item-filters', 'item-filters'),
                _0x299024 = ['all', 'skins', 'animals'],
                _0x4a1a8f = _0x3851ae('span', undefined, 'filter-label');
            _0x4a1a8f['innerHTML'] = 'Filter: ', _0x16c75e['appendChild'](_0x4a1a8f), _0x4afe57['append'](_0x21e91f);
            if (_0x2327b9['name'] == 'Coins') _0x21e91f['style']['width'] = '615px';
            else _0x21e91f['style']['width'] = 0x1 * 0x296 + 'px';
            _0x276dab['append'](_0x4afe57), _0x276dab['append'](_0x3851ae('div', '', 'separator')), _0x4afe57['append'](_0x3851ae('div', '', 'separator')), _0x21e91f['append'](_0x3851ae('div', '', 'separator')), _0x1aad6b['append'](_0x276dab), _0x1aad6b['append'](_0x3851ae('div', '', 'separator')), _0x21cf82['appendChild'](_0x1aad6b);
            var _0x339d02 = _0x3851ae('div', 'pages-' + _0x2327b9['name'], 'content-items-pages');
            let _0x312ee0 = null;
            for (i = 0x0; i < _0x299024['length']; i++) {
                let _0x64d21c = _0x3851ae('span', undefined, 'filter ' + (this['item_filter'] == _0x299024[i] ? 'selected' : '') + ' filter-' + _0x299024[i]);
                if (this['item_filter'] == _0x299024[i]) _0x312ee0 = _0x64d21c;
                _0x64d21c['setAttribute']('data-filter', _0x299024[i]), _0x64d21c['setAttribute']('data-tab', _0x2327b9['name']), _0x64d21c['innerHTML'] = _0x299024[i], _0x64d21c['onclick'] = function() {
                    _0x312ee0['classList']['remove']('selected'), _0x64d21c['classList']['add']('selected'), _0x312ee0 = _0x64d21c, _0x100ed7['item_filter'] = $(_0x64d21c)['data']('filter'), _0x100ed7['selectedTab'] = $(_0x64d21c)['data']('tab'), _0x30041e['prototype']['applyFilter'](_0x21e91f, _0x339d02, _0x4458fb);
                }, _0x16c75e['appendChild'](_0x64d21c);
            }
            const _0x269ad8 = _0x3851ae('input', '', 'filter');
            _0x269ad8['type'] = 'text', _0x269ad8['placeholder'] = 'Search...', _0x269ad8['oninput'] = function(_0xaaf6bd) {
                _0x100ed7['textFilter'] = _0xaaf6bd['target']['value'], _0x30041e['prototype']['applyFilter'](_0x21e91f, _0x339d02, _0x4458fb);
            }, _0x16c75e['appendChild'](_0x269ad8);
            var _0x4fe85b = _0x3851ae('div', 'left-' + _0x2327b9['name'], 'left'),
                _0x24c390 = _0x3851ae('div', 'right-' + _0x2327b9['name'], 'right');
            _0x24c390['onclick'] = function() {
                _0x100ed7['scrollItems'](this, !![]);
            }, _0x4fe85b['onclick'] = function() {
                _0x100ed7['scrollItems'](this, ![]);
            }, _0x4afe57['append'](_0x21e91f);
            if (_0x4458fb['length'] > 0x0) {
                _0x276dab['appendChild'](_0x16c75e), _0x4afe57['className'] += ' w662', _0x30041e['prototype']['updatePurchasesFilter'](_0x21e91f, _0x339d02, _0x4458fb, _0x4458fb);
                for (i = 0x0; i < _0x4458fb['length']; i++) {
                    var _0x17d721 = _0x4458fb[i],
                        _0x30d15a = _0x17d721['generateHtml']();
                    _0x30d15a['classList']['add']('data-index-' + i), _0x21e91f['appendChild'](_0x30d15a);
                }
                _0x276dab['append'](_0x4fe85b), _0x276dab['append'](_0x4afe57), _0x276dab['append'](_0x24c390), _0x276dab['append'](_0x339d02);
            } else {
                var _0x590450 = _0x29e808('div', 'nopurchases');
                _0x590450['innerHTML'] = 'You don\'t have any item to show here!', _0x4afe57['append'](_0x590450), _0x276dab['append'](_0x4afe57);
            }
        }, _0x30041e['prototype']['applyFilter'] = function(_0x2fa0d1, _0x4460f8, _0x4a54ed) {
            let _0x2560e3 = _0x4a54ed;
            switch (_0x100ed7['item_filter']) {
                case 'all':
                    _0x2560e3 = _0x4a54ed;
                    break;
                case 'skins':
                    _0x2560e3 = _0x4a54ed['filter'](_0x2274cc => _0x2274cc['itemType'] == 0x0);
                    break;
                case 'animals':
                    _0x2560e3 = _0x4a54ed['filter'](_0x2fc340 => _0x2fc340['itemType'] == 0x1);
                    break;
                case 'deals':
                    _0x2560e3 = _0x4a54ed['filter'](_0x328b0d => _0x328b0d['itemType'] == 0x2);
                    break;
            }
            _0x2560e3 = _0x2560e3['filter'](_0x2fe879 => _0x2fe879['skinName']['toLowerCase']()['replace']('\x0a', ' ')['includes'](_0x100ed7['textFilter']['toLowerCase']())), _0x30041e['prototype']['updatePurchasesFilter'](_0x2fa0d1, _0x4460f8, _0x2560e3, _0x4a54ed);
        }, _0x30041e['prototype']['updatePurchasesFilter'] = function(_0x4519c5, _0x45c89d, _0x46d7e1, _0x5305f8) {
            _0x30041e['prototype']['setVisiblePage']('myPurchases', 0x0);
            var _0x262678 = Math['ceil'](_0x46d7e1['length'] / 0x5);
            _0x4519c5['setAttribute']('data-pages', _0x262678), _0x4519c5['setAttribute']('data-curPage', 0x0), _0x4519c5['style']['width'] = _0x262678 * 0x296 + 'px', _0x45c89d['innerHTML'] = 'Page: 1 of ' + _0x262678;
            for (let _0x205381 = 0x0; _0x205381 < _0x5305f8['length']; _0x205381++) {
                const _0x4f968d = _0x5305f8[_0x205381],
                    _0x2f1e11 = _0x46d7e1['includes'](_0x4f968d),
                    _0x3ae032 = _0x4519c5['querySelector']('.data-index-' + _0x205381);
                if (_0x3ae032) _0x3ae032['style']['display'] = _0x2f1e11 ? 'block' : 'none';
            }
        }, _0x30041e['prototype']['createMyAnimalsTab'] = function(_0x26eee1, _0x2d0708, _0x2e4bb5) {
            var _0x8a5a21 = {
                    'name': 'myAnimals'
                },
                _0x3af114 = _0x3851ae('li', _0x8a5a21['name'], 'title');
            _0x3af114['innerHTML'] = 'MY FEATURES', _0x3af114['onclick'] = function() {
                _0x100ed7['curTabPage'] = 0x0;
                if (!_0x173edc()) {
                    _0x100ed7['showLoginScreen']();
                    return;
                }
                _0x100ed7['showTab'](this['id']);
            }, _0x26eee1['appendChild'](_0x3af114);
            var _0x3a8117 = _0x3851ae('div', 'tab-' + _0x8a5a21['name'], 'tab'),
                _0x188b6c = _0x3851ae('div', undefined, 'content'),
                _0x39ac23 = _0x3851ae('div', undefined, 'content-inner'),
                _0x27f874 = _0x3851ae('div', 'content-items-' + _0x8a5a21['name'], 'content-items');
            _0x39ac23['append'](_0x27f874);
            if (_0x8a5a21['name'] == 'Coins') _0x27f874['style']['width'] = '615px';
            else _0x27f874['style']['width'] = 0x1 * 0x296 + 'px';
            _0x188b6c['append'](_0x39ac23), _0x188b6c['append'](_0x3851ae('div', '', 'separator')), _0x39ac23['append'](_0x3851ae('div', '', 'separator')), _0x27f874['append'](_0x3851ae('div', '', 'separator')), _0x3a8117['append'](_0x188b6c), _0x3a8117['append'](_0x3851ae('div', '', 'separator')), _0x2d0708['appendChild'](_0x3a8117);
            var _0x2d0650 = _0x3851ae('div', 'left-' + _0x8a5a21['name'], 'left'),
                _0x3d7ac6 = _0x3851ae('div', 'pages-' + _0x8a5a21['name'], 'content-items-pages'),
                _0x3fcff1 = _0x3851ae('div', 'right-' + _0x8a5a21['name'], 'right');
            _0x3fcff1['onclick'] = function() {
                _0x100ed7['scrollItems'](this, !![]);
            }, _0x2d0650['onclick'] = function() {
                _0x100ed7['scrollItems'](this, ![]);
            }, _0x39ac23['append'](_0x27f874);
            if (_0x2e4bb5['length'] > 0x0) {
                _0x39ac23['className'] += ' w662';
                var _0x2a9768 = Math['ceil'](_0x2e4bb5['length'] / 0x5);
                _0x27f874['setAttribute']('data-pages', _0x2a9768), _0x27f874['setAttribute']('data-curPage', 0x0), _0x27f874['style']['width'] = _0x2a9768 * 0x296 + 'px', _0x3d7ac6['innerHTML'] = 'Page: 1 of ' + _0x2a9768;
                for (i = 0x0; i < _0x2e4bb5['length']; i++) {
                    var _0x4cc0d1 = _0x2e4bb5[i];
                    _0x27f874['appendChild'](_0x4cc0d1['generateHtml']());
                }
                _0x188b6c['append'](_0x2d0650), _0x188b6c['append'](_0x39ac23), _0x188b6c['append'](_0x3fcff1), _0x188b6c['append'](_0x3d7ac6);
            } else {
                var _0x267351 = _0x29e808('div', 'nopurchases');
                _0x267351['innerHTML'] = 'You don\'t have any item to show here!', _0x39ac23['append'](_0x267351), _0x188b6c['append'](_0x39ac23);
            }
        }, _0x30041e['prototype']['createMyDealsTab'] = function(_0x17d089, _0x3a1294, _0x483e4b) {
            var _0x175fb8 = {
                    'name': 'myDeals'
                },
                _0x3c04b1 = _0x3851ae('li', _0x175fb8['name'], 'title');
            _0x3c04b1['innerHTML'] = 'MY DEALS', _0x3c04b1['onclick'] = function() {
                _0x100ed7['curTabPage'] = 0x0;
                if (!_0x173edc()) {
                    _0x100ed7['showLoginScreen']();
                    return;
                }
                _0x100ed7['showTab'](this['id']);
            }, _0x17d089['appendChild'](_0x3c04b1);
            var _0x586a90 = _0x3851ae('div', 'tab-' + _0x175fb8['name'], 'tab'),
                _0x21e280 = _0x3851ae('div', undefined, 'content'),
                _0x2da4c1 = _0x3851ae('div', undefined, 'content-inner'),
                _0x3decb7 = _0x3851ae('div', 'content-items-' + _0x175fb8['name'], 'content-items');
            _0x2da4c1['append'](_0x3decb7);
            if (_0x175fb8['name'] == 'Coins') _0x3decb7['style']['width'] = '615px';
            else _0x3decb7['style']['width'] = 0x1 * 0x296 + 'px';
            _0x21e280['append'](_0x2da4c1), _0x21e280['append'](_0x3851ae('div', '', 'separator')), _0x2da4c1['append'](_0x3851ae('div', '', 'separator')), _0x3decb7['append'](_0x3851ae('div', '', 'separator')), _0x586a90['append'](_0x21e280), _0x586a90['append'](_0x3851ae('div', '', 'separator')), _0x3a1294['appendChild'](_0x586a90);
            var _0xd57328 = _0x3851ae('div', 'left-' + _0x175fb8['name'], 'left'),
                _0x1516a0 = _0x3851ae('div', 'pages-' + _0x175fb8['name'], 'content-items-pages'),
                _0x2f6421 = _0x3851ae('div', 'right-' + _0x175fb8['name'], 'right');
            _0x2f6421['onclick'] = function() {
                _0x100ed7['scrollItems'](this, !![]);
            }, _0xd57328['onclick'] = function() {
                _0x100ed7['scrollItems'](this, ![]);
            }, _0x2da4c1['append'](_0x3decb7);
            if (_0x483e4b['length'] > 0x0) {
                _0x2da4c1['className'] += ' w662';
                var _0x2e9a76 = Math['ceil'](_0x483e4b['length'] / 0x2);
                _0x3decb7['setAttribute']('data-pages', _0x2e9a76), _0x3decb7['setAttribute']('data-curPage', 0x0), _0x3decb7['style']['width'] = _0x2e9a76 * 0x296 + 'px', _0x1516a0['innerHTML'] = 'Page: 1 of ' + _0x2e9a76;
                for (i = 0x0; i < _0x483e4b['length']; i++) {
                    var _0x13ef85 = _0x483e4b[i];
                    _0x3decb7['appendChild'](_0x13ef85['generateHtml']());
                }
                _0x21e280['append'](_0xd57328), _0x21e280['append'](_0x2da4c1), _0x21e280['append'](_0x2f6421), _0x21e280['append'](_0x1516a0);
            } else {
                var _0x37dcea = _0x29e808('div', 'nopurchases');
                _0x37dcea['innerHTML'] = 'You don\'t have any item to show here!', _0x2da4c1['append'](_0x37dcea), _0x21e280['append'](_0x2da4c1);
            }
        }, _0x30041e['prototype']['createMySettingsTab'] = function(_0x50d79a, _0x23ba0a, _0x194d06) {
            var _0x111207 = {
                    'name': 'mySettings'
                },
                _0x3868f5 = _0x3851ae('li', _0x111207['name'], 'title');
            _0x3868f5['innerHTML'] = 'SETTINGS', _0x3868f5['onclick'] = function() {
                _0x100ed7['curTabPage'] = 0x0;
                if (!_0x173edc()) {
                    _0x100ed7['showLoginScreen']();
                    return;
                }
                _0x100ed7['showTab'](this['id']);
            }, _0x50d79a['appendChild'](_0x3868f5);
            var _0x23400f = _0x3851ae('div', 'tab-' + _0x111207['name'], 'tab'),
                _0x480a33 = _0x3851ae('div', undefined, 'content'),
                _0x118f7e = _0x3851ae('div', undefined, 'content-inner'),
                _0x3c7b04 = _0x3851ae('div', 'content-items-' + _0x111207['name'], 'content-items');
            _0x118f7e['append'](_0x3c7b04), _0x480a33['append'](_0x118f7e), _0x480a33['append'](_0x3851ae('div', '', 'separator')), _0x118f7e['append'](_0x3851ae('div', '', 'separator')), _0x3c7b04['append'](_0x3851ae('div', '', 'separator')), _0x23400f['append'](_0x480a33), _0x23400f['append'](_0x3851ae('div', '', 'separator')), _0x23ba0a['appendChild'](_0x23400f), _0x118f7e['append'](_0x3c7b04);
            if (_0x194d06 && _0x194d06['length'] > 0x0) {
                for (i = 0x0; i < _0x194d06['length']; i++) {
                    var _0x31b5f8 = _0x194d06[i],
                        _0x51bbd3 = _0x3851ae('div', undefined, 'fileddiv'),
                        _0x4be755 = _0x3851ae('div', undefined, 'field-label'),
                        _0x10bb5f = _0x3851ae('div', undefined, 'field-value'),
                        _0x7af7ac = _0x31b5f8['value'] == -0x1 ? 'BUY' : _0x31b5f8['value'] == 0x0 ? 'EQUIP' : 'UNEQUIP',
                        _0x53bb00 = _0x3851ae('div', 'action_' + _0x31b5f8['handle'], 'field-action ' + _0x7af7ac);
                    _0x53bb00['setAttribute']('data-actionid', 'action_' + _0x31b5f8['handle']), _0x53bb00['setAttribute']('data-handle', _0x31b5f8['handle']);
                    if (_0x31b5f8['value'] == -0x1) _0x53bb00['onclick'] = function() {
                        if (!_0x173edc()) _0x100ed7['showLoginScreen']();
                        else {
                            var _0x163962 = _0x100ed7['getItemByName']($(this)['data']('handle'));
                            if (_0x163962 != null) _0x100ed7['buyConfirmationOverlay'](_0x163962);
                        }
                    }, _0x10bb5f['setAttribute']('width', '300px'), _0x53bb00['title'] = _0x53bb00['innerHTML'] = 'CLICK HERE TO BUY THIS ITEM';
                    else {
                        if (_0x31b5f8['type'] == 'clicktoview') _0x53bb00['innerHTML'] = !_0x31b5f8['visible'] ? '*******' : _0x31b5f8['value'], _0x53bb00['title'] = !_0x31b5f8['visible'] ? 'CLICK TO VIEW' : 'CLICK TO HIDE', _0x53bb00['setAttribute']('data-value', _0x31b5f8['value']), _0x53bb00['setAttribute']('data-visible', _0x31b5f8['visible'] == !![]), _0x53bb00['onclick'] = function() {
                            var _0xa82297 = $(this)['data']('visible');
                            !_0xa82297 ? ($(this)['html']($(this)['data']('value')), $(this)['data']('visible', !![])) : ($(this)['html']('*******'), $(this)['data']('visible', ![]));
                        };
                        else {
                            if (_0x31b5f8['type'] == 'action') _0x53bb00['onclick'] = function() {
                                _0x100ed7['playerSettings_update']($(this)['data']('handle'));
                            }, _0x53bb00['innerHTML'] = _0x31b5f8['value'] == 0x0 ? 'EQUIP' : 'UNEQUIP', _0x53bb00['title'] = _0x31b5f8['value'] == 0x0 ? 'CLICK TO EQUIP' : 'CLICK TO UNEQUIP';
                            else {
                                if (_0x31b5f8['type'] == 'display') {
                                    var _0x3d2034 = '' + _0x31b5f8['value'];
                                    _0x53bb00['innerHTML'] = _0x3d2034 == 'null' ? 0x0 : _0x3d2034;
                                }
                            }
                        }
                    }
                    _0x4be755['innerHTML'] = _0x31b5f8['label'], _0x10bb5f['appendChild'](_0x53bb00), _0x51bbd3['appendChild'](_0x4be755), _0x51bbd3['appendChild'](_0x10bb5f), _0x3c7b04['appendChild'](_0x51bbd3);
                }
                _0x3c7b04['style']['width'] = 0x1 * 0x296 + 'px';
            } else {
                var _0x1fe9e5 = _0x29e808('div', 'nopurchases');
                _0x1fe9e5['innerHTML'] = 'You don\'t have any item to show here!', _0x118f7e['append'](_0x1fe9e5), _0x480a33['append'](_0x118f7e);
            }
        }, _0x30041e['prototype']['getItemByName'] = function(_0x4d2dcb) {
            if (this['shop']['allItems'])
                for (i = 0x0; i < this['shop']['allItems']['length']; i++) {
                    if (this['shop']['allItems'][i]['itemId'] == _0x4d2dcb) return this['shop']['allItems'][i];
                }
            return null;
        }, _0x30041e['prototype']['deleteTab'] = function() {
            var _0x2dfd32 = document['getElementById']('shop_div');
            _0x2dfd32 && _0x2dfd32['parentNode']['removeChild'](_0x2dfd32);
        }, _0x30041e['prototype']['getShopFilters'] = function() {}, _0x30041e['prototype']['skinsInterface'] = function() {
            this['deleteTab']();
            var _0x343d0f = _0x29e808('shop_div', ''),
                _0x44801f = _0x3851ae('ul');
            _0x343d0f['appendChild'](_0x44801f), this['addCloseButton2'](_0x44801f), this['addBackButton'](_0x44801f);
            for (t = 0x0; t < this['shop']['skins']['length']; t++) {
                var _0x2b8d2a = this['shop']['skins'][t],
                    _0x961228 = _0x3851ae('li', _0x2b8d2a['name'], 'title'),
                    _0xd04f16 = _0x3851ae('a');
                _0x961228['innerHTML'] = _0x2b8d2a['name'], _0xd04f16['setAttribute']('href', '#tab-' + _0x2b8d2a['name']), _0x961228['onclick'] = function() {
                    _0x100ed7['curTabPage'] = 0x0, _0x100ed7['showTab'](this['id']), _0x4bdc5f();
                }, _0x44801f['appendChild'](_0x961228);
                var _0x2d1ba0 = _0x3851ae('div', 'tab-' + _0x2b8d2a['name'], 'tab'),
                    _0x3b8190 = _0x3851ae('div', undefined, 'content'),
                    _0x32162a = _0x3851ae('div', undefined, 'content-inner w662'),
                    _0x3b5dba = _0x3851ae('div', 'item-filters', 'item-filters'),
                    _0x41fff6 = _0x3851ae('div', 'content-items-' + _0x2b8d2a['name'], 'content-items'),
                    _0x9ced70 = _0x3851ae('div', 'left-' + _0x2b8d2a['name'], 'left'),
                    _0x2e3e2a = _0x3851ae('div', 'left-' + _0x2b8d2a['name'], 'right'),
                    _0x4f0141 = _0x3851ae('div', 'pages-' + _0x2b8d2a['name'], 'content-items-pages');
                this['item_filter'] == undefined && (this['item_filter'] = 'all');
                var _0x5666d0 = ['all', 'new', 'sale', 'normal', 'high-price', 'low-price'],
                    _0x2902f7 = _0x3851ae('span', undefined, 'filter-label');
                _0x2902f7['innerHTML'] = 'Filter: ', _0x3b5dba['appendChild'](_0x2902f7);
                var _0x49e5c2 = [];
                for (i = 0x0; i < _0x2b8d2a['items']['length']; i++) {
                    var _0x23c249 = _0x2b8d2a['items'][i];
                    if (!_0x23c249['data']['canBuy']) continue;
                    if (_0x30041e['prototype']['shop']['ownedSkins'][_0x23c249['id']]) continue;
                    if (_0x30041e['prototype']['shop']['ownedAnimals'][_0x23c249['id']]) continue;
                    if (_0x30041e['prototype']['shop']['ownedDeals'][_0x23c249['id']]) continue;
                    if (this['item_filter'] == 'all') _0x49e5c2['push'](_0x23c249);
                    else {
                        if (this['item_filter'] == 'new' && _0x23c249['saleType'] == 0x1) _0x49e5c2['push'](_0x23c249);
                        else {
                            if (this['item_filter'] == 'sale' && _0x23c249['saleType'] == 0x2) _0x49e5c2['push'](_0x23c249);
                            else {
                                if (this['item_filter'] == 'normal' && _0x23c249['saleType'] == 0x0) _0x49e5c2['push'](_0x23c249);
                                else {
                                    if (this['item_filter'] == 'high-price' || this['item_filter'] == 'low-price') _0x49e5c2['push'](_0x23c249);
                                }
                            }
                        }
                    }
                }
                if (this['item_filter'] == 'low-price') {
                    var _0x17a7ce = _0x49e5c2['slice'](0x0);
                    _0x17a7ce['sort'](function(_0x215ab9, _0x5bc8c6) {
                        return _0x215ab9['price'] - _0x5bc8c6['price'];
                    }), _0x49e5c2 = _0x17a7ce;
                } else {
                    if (this['item_filter'] == 'high-price') {
                        var _0xfb4eb0 = _0x49e5c2['slice'](0x0);
                        _0xfb4eb0['sort'](function(_0x2a2545, _0x270391) {
                            return _0x270391['price'] - _0x2a2545['price'];
                        }), _0x49e5c2 = _0xfb4eb0;
                    }
                }
                _0x32162a['append'](_0x41fff6);
                var _0x30c02e = 0x5;
                if (_0x2b8d2a['name'] == 'Deals') _0x30c02e = 0x2;
                var _0x2755cd = Math['ceil'](_0x49e5c2['length'] / _0x30c02e);
                ['Coins', 'Gems', 'VIP Pass']['includes'](_0x2b8d2a['name']) && (_0x2755cd = Math['ceil'](_0x20117d['filter'](function(_0x450411) {
                    if (_0x450411['name'] === 'Mopecoins' && _0x2b8d2a['name'] === 'Coins' || _0x450411['name'] === 'Gems' && _0x2b8d2a['name'] === 'Gems' || _0x450411['name'] === 'VIP' && _0x2b8d2a['name'] === 'VIP Pass') return !![];
                })['length'] / _0x30c02e));
                for (i = 0x0; i < _0x5666d0['length']; i++) {
                    var _0x2902f7 = _0x3851ae('span', undefined, 'filter ' + (this['item_filter'] == _0x5666d0[i] ? 'selected' : '') + ' filter-' + _0x5666d0[i]);
                    _0x2902f7['setAttribute']('data-filter', _0x5666d0[i]), _0x2902f7['setAttribute']('data-tab', _0x2b8d2a['name']), _0x2902f7['innerHTML'] = _0x5666d0[i], _0x2902f7['onclick'] = function() {
                        _0x100ed7['item_filter'] = $(this)['data']('filter'), _0x100ed7['selectedTab'] = $(this)['data']('tab'), _0x100ed7['skinsInterface'](), _0x100ed7['setVisiblePage'](_0x100ed7['selectedTab'], 0x0), _0x100ed7['showTab'](_0x100ed7['selectedTab']);
                    }, _0x3b5dba['appendChild'](_0x2902f7);
                }
                _0x2e3e2a['onclick'] = function() {
                    _0x100ed7['scrollItems'](this, !![]);
                }, _0x9ced70['onclick'] = function() {
                    _0x100ed7['scrollItems'](this, ![]);
                }, _0x41fff6['setAttribute']('data-pages', _0x2755cd), _0x41fff6['setAttribute']('data-curPage', 0x0), _0x41fff6['style']['width'] = _0x2755cd * 0x296 + 'px', _0x4f0141['innerHTML'] = 'Page: 1 of ' + _0x2755cd;
                if (_0x2b8d2a['items']['length'] > 0x0 || ['Coins', 'Gems', 'VIP Pass']['includes'](_0x2b8d2a['name'])) {
                    _0x3b8190['append'](_0x3b5dba);
                    (_0x2b8d2a['name'] === 'Coins' || _0x2b8d2a['name'] === 'Gems' || _0x2b8d2a['name'] === 'VIP Pass') && (_0x3b5dba['style']['visibility'] = 'hidden');
                    for (i = 0x0; i < _0x49e5c2['length']; i++) {
                        var _0x23c249 = _0x49e5c2[i];
                        _0x41fff6['appendChild'](_0x23c249['generateHtml']());
                    }
                    for (const _0x5a59ac of _0x20117d) {
                        (_0x5a59ac['name'] === 'Mopecoins' && _0x2b8d2a['name'] === 'Coins' || _0x5a59ac['name'] === 'Gems' && _0x2b8d2a['name'] === 'Gems' || _0x5a59ac['name'] === 'VIP' && _0x2b8d2a['name'] === 'VIP Pass') && _0x41fff6['appendChild'](this['generateXsollaItem'](_0x5a59ac));
                    }
                    _0x2b8d2a['name'] === 'VIP Pass' && this['vipInterface'](_0x41fff6), _0x3b8190['append'](_0x9ced70), _0x3b8190['append'](_0x32162a), _0x3b8190['append'](_0x2e3e2a), _0x3b8190['append'](_0x4f0141);
                } else {
                    var _0x5a9560 = _0x29e808('div', 'nopurchases');
                    _0x5a9560['innerHTML'] = 'You don\'t have any item to show here!', _0x32162a['append'](_0x5a9560), _0x3b8190['append'](_0x32162a);
                }
                _0x3b8190['append'](_0x3851ae('div', '', 'separator')), _0x32162a['append'](_0x3851ae('div', '', 'separator')), _0x41fff6['append'](_0x3851ae('div', '', 'separator')), _0x2d1ba0['append'](_0x3b8190), _0x2d1ba0['append'](_0x3851ae('div', '', 'separator')), _0x343d0f['appendChild'](_0x2d1ba0);
            }
            this['showUserExpBarAndCoinsBalance'](_0x44801f), _0x343d0f['append'](_0x3851ae('div', '', 'separator')), this['shopDiv']['appendChild'](_0x343d0f), this['showTab'](this['selectedTab']);
        }, _0x30041e['prototype']['vipInterface'] = function(_0x5ebdc8) {
            if (!_0xcff3a0) {
                _0x5ebdc8['innerHTML'] = 'Sync Issue Please Refresh The Page';
                return;
            }
            if (!_0xcff3a0['success']) {
                _0x5ebdc8['innerHTML'] = _0xcff3a0['error'];
                return;
            }
            const _0x1ae1a8 = this['getSkinDataById'](_0xcff3a0['data']['skinId1']),
                _0x1623fd = this['getSkinDataById'](_0xcff3a0['data']['skinId2']),
                _0x121620 = _0x55ab97({
                    'animalType': _0x1ae1a8['animalType'],
                    'animalSpecies': _0x1ae1a8['animalSpecies'],
                    'animalSubSpecies': _0x1ae1a8['animalSubSpecies'],
                    'mopeSeasonID': _0x1ae1a8['season']
                });
            _0x121620 && (_0x1ae1a8['id'] = _0x1ae1a8['itemId'], _0x1ae1a8['oType'] = _0x269668, _0x1ae1a8['skinName'] = _0x121620['aniName'] || _0x1ae1a8['itemId'], _0x1ae1a8['skinImage'] = _0x121620['skinName'] + '.ui');
            const _0x137b06 = _0x4b9556['newlyVis_createGameObjFromMsg'](_0x1ae1a8['itemType'], _0x1ae1a8),
                _0x4ab72f = _0x55ab97({
                    'animalType': _0x1623fd['animalType'],
                    'animalSpecies': _0x1623fd['animalSpecies'],
                    'animalSubSpecies': _0x1623fd['animalSubSpecies'],
                    'mopeSeasonID': _0x1623fd['season']
                });
            _0x4ab72f && (_0x1623fd['id'] = _0x1623fd['itemId'], _0x1623fd['oType'] = _0x269668, _0x1623fd['skinName'] = _0x4ab72f['aniName'] || _0x1623fd['itemId'], _0x1623fd['skinImage'] = _0x4ab72f['skinName'] + '.ui');
            const _0x4419c2 = _0x4b9556['newlyVis_createGameObjFromMsg'](_0x1623fd['itemType'], _0x1623fd);
            _0x5ebdc8['appendChild'](_0x137b06['generateHtml']()), _0x5ebdc8['appendChild'](_0x4419c2['generateHtml']());
        }, _0x30041e['prototype']['dealsInterface'] = function() {
            this['deleteTab']();
            var _0x345438 = _0x29e808('shop_div', 'boxshadow'),
                _0x41debf = _0x3851ae('ul');
            _0x345438['appendChild'](_0x41debf), this['addCloseButton2'](_0x41debf), this['addBackButton'](_0x41debf);
            for (t = 0x0; t < this['shop']['skins']['length']; t++) {
                var _0x435b7e = this['shop']['skins'][t],
                    _0x517e3d = _0x3851ae('li', _0x435b7e['name'], 'title'),
                    _0x20562e = _0x3851ae('a');
                _0x517e3d['innerHTML'] = _0x435b7e['name'], _0x20562e['setAttribute']('href', '#tab-' + _0x435b7e['name']), _0x517e3d['onclick'] = function() {
                    _0x100ed7['curTabPage'] = 0x0, _0x100ed7['showTab'](this['id']), _0x4bdc5f();
                }, _0x41debf['appendChild'](_0x517e3d);
                var _0x5573d7 = _0x3851ae('div', 'tab-' + _0x435b7e['name'], 'tab'),
                    _0x36070a = _0x3851ae('div', undefined, 'content'),
                    _0x334408 = _0x3851ae('div', undefined, 'content-inner w662'),
                    _0x2862a2 = _0x3851ae('div', 'content-items-' + _0x435b7e['name'], 'content-items'),
                    _0x36f711 = _0x3851ae('div', 'left-' + _0x435b7e['name'], 'left'),
                    _0x9ebe85 = _0x3851ae('div', 'pages-' + _0x435b7e['name'], 'content-items-pages'),
                    _0xb75be1 = _0x3851ae('div', 'left-' + _0x435b7e['name'], 'right');
                _0xb75be1['onclick'] = function() {
                    _0x100ed7['scrollItems'](this, !![]);
                }, _0x36f711['onclick'] = function() {
                    _0x100ed7['scrollItems'](this, ![]);
                }, _0x334408['append'](_0x2862a2);
                var _0x3542b8 = Math['ceil'](_0x435b7e['items']['length'] / 0x2);
                _0x2862a2['setAttribute']('data-pages', _0x3542b8), _0x2862a2['setAttribute']('data-curPage', 0x0);
                if (_0x435b7e['name'] == 'Coins') _0x2862a2['style']['width'] = '615px';
                else _0x2862a2['style']['width'] = _0x3542b8 * 0x296 + 'px';
                _0x9ebe85['innerHTML'] = 'Page: 1 of ' + _0x3542b8;
                for (i = 0x0; i < _0x435b7e['items']['length']; i++) {
                    var _0x30a6b9 = _0x435b7e['items'][i];
                    _0x2862a2['appendChild'](_0x30a6b9['generateHtml']());
                }
                _0x36070a['append'](_0x36f711), _0x36070a['append'](_0x334408), _0x36070a['append'](_0xb75be1), _0x36070a['append'](_0x9ebe85), _0x36070a['append'](_0x3851ae('div', '', 'separator')), _0x334408['append'](_0x3851ae('div', '', 'separator')), _0x2862a2['append'](_0x3851ae('div', '', 'separator')), _0x5573d7['append'](_0x36070a), _0x5573d7['append'](_0x3851ae('div', '', 'separator')), _0x345438['appendChild'](_0x5573d7);
            }
            this['showUserExpBarAndCoinsBalance'](_0x41debf), _0x345438['append'](_0x3851ae('div', '', 'separator')), this['shopDiv']['appendChild'](_0x345438), this['showTab'](this['selectedTab']);
        }, _0x30041e['prototype']['props'] = {
            'hatsColor': '',
            'beardsColor': '',
            'glassesColor': '',
            'scarfsColor': ''
        }, _0x30041e['prototype']['propBought'] = {
            'hats': {
                'white': 0x1,
                'red': 0x0,
                'green': 0x0,
                'blue': 0x1,
                'pink': 0x0,
                'gold': 0x0
            },
            'beards': {
                'white': 0x0,
                'red': 0x1,
                'green': 0x0,
                'blue': 0x0,
                'pink': 0x0,
                'gold': 0x1
            },
            'glasses': {
                'white': 0x0,
                'red': 0x1,
                'green': 0x1,
                'blue': 0x0,
                'pink': 0x0,
                'gold': 0x0
            },
            'scarfs': {
                'white': 0x0,
                'red': 0x1,
                'green': 0x0,
                'blue': 0x1,
                'pink': 0x0,
                'gold': 0x1
            }
        }, _0x30041e['prototype']['hasBoughtProp'] = function(_0x573a9c, _0x48dff9) {
            var _0x2d4042 = this['propBought'][_0x573a9c][_0x48dff9];
            if (_0x2d4042 === 0x1) return !![];
            return ![];
        }, _0x30041e['prototype']['isPropSelected'] = function(_0x36301e, _0x5d14e6) {
            var _0x530166 = this['getPropColorNum'](_0x5d14e6),
                _0x1ec07f = this['props'][_0x36301e + 'Color'];
            return _0x1ec07f === _0x530166;
        }, _0x30041e['prototype']['showProp'] = function(_0xda1e97) {
            var _0x3f1bb3 = document['getElementById']('propDisplay');
            _0x3f1bb3['style']['display'] = 'block';
            var _0x270871 = document['getElementById']('btn-' + _0xda1e97);
            if (_0x270871) {
                var _0x474cc4 = document['getElementById']('btn-hats'),
                    _0x3d14ad = document['getElementById']('btn-glasses'),
                    _0x1c8750 = document['getElementById']('btn-beards'),
                    _0xed5cd9 = document['getElementById']('btn-scarfs');
                _0x474cc4['className'] = 'clothingbtn', _0x3d14ad['className'] = 'clothingbtn', _0x1c8750['className'] = 'clothingbtn', _0xed5cd9['className'] = 'clothingbtn', _0x270871['className'] = 'clothingbtn selected';
                var _0x3a9c3e = document['getElementById']('propColors');
                _0x3a9c3e['innerHTML'] = '';
                var _0x5b3dfe = _0x3851ae('div', 'propColor-white', 'propColor propColor-white' + (this['isPropSelected'](_0xda1e97, 'white') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'white') ? ' bought' : '')),
                    _0x399ab7 = _0x3851ae('div', 'propColor-red', 'propColor propColor-red' + (this['isPropSelected'](_0xda1e97, 'red') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'red') ? ' bought' : '')),
                    _0x53d294 = _0x3851ae('div', 'propColor-green', 'propColor propColor-green' + (this['isPropSelected'](_0xda1e97, 'green') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'green') ? ' bought' : '')),
                    _0x1f0b5f = _0x3851ae('div', 'propColor-blue', 'propColor propColor-blue' + (this['isPropSelected'](_0xda1e97, 'blue') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'blue') ? ' bought' : '')),
                    _0x586ef8 = _0x3851ae('div', 'propColor-pink', 'propColor propColor-pink' + (this['isPropSelected'](_0xda1e97, 'pink') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'pink') ? ' bought' : '')),
                    _0x4711da = _0x3851ae('div', 'propColor-gold', 'propColor propColor-gold' + (this['isPropSelected'](_0xda1e97, 'gold') ? ' selected' : '') + (this['hasBoughtProp'](_0xda1e97, 'gold') ? ' bought' : ''));
                _0x5b3dfe['appendChild'](_0x3851ae('div', '', 'color')), _0x399ab7['appendChild'](_0x3851ae('div', '', 'color')), _0x53d294['appendChild'](_0x3851ae('div', '', 'color')), _0x1f0b5f['appendChild'](_0x3851ae('div', '', 'color')), _0x586ef8['appendChild'](_0x3851ae('div', '', 'color')), _0x4711da['appendChild'](_0x3851ae('div', '', 'color')), _0x5b3dfe['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'white');
                }, _0x399ab7['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'red');
                }, _0x53d294['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'green');
                }, _0x1f0b5f['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'blue');
                }, _0x586ef8['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'pink');
                }, _0x4711da['onclick'] = function() {
                    _0x100ed7['setPropColor'](_0xda1e97, 'gold');
                }, _0x3a9c3e['appendChild'](_0x5b3dfe), _0x3a9c3e['appendChild'](_0x399ab7), _0x3a9c3e['appendChild'](_0x53d294), _0x3a9c3e['appendChild'](_0x1f0b5f), _0x3a9c3e['appendChild'](_0x586ef8), _0x3a9c3e['appendChild'](_0x4711da);
                var _0x2126df = document['getElementById']('propBuyDiv');
                _0x2126df['innerHTML'] = '';
            }
        }, _0x30041e['prototype']['propAnimal'] = null, _0x30041e['prototype']['updatePropsForAnimal'] = function() {
            console['log'](this['props']);
            var _0x3e1398 = _0x19eca4,
                _0x511268 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x3e1398);
            _0x511268['animalType'] = _0x3e1398, _0x511268['animalSpecies'] = 0x0, _0x511268['animalSubSpecies'] = 0x0, _0x511268['animalPremiumSkin'] = 0x0;
            var _0x2d26e8 = _0x29e808('', 'propimg'),
                _0x711b17 = _0x29e808('', 'propimg'),
                _0x30ad3f = _0x29e808('', 'propimg'),
                _0x215b46 = _0x29e808('', 'propimg'),
                _0x31a2a6 = _0x29e808('', 'propimg'),
                _0x31b26f = document['getElementById']('propAnimal');
            _0x31b26f['innerHTML'] = '';
            var _0xe65721 = 'skins/' + _0x511268['animalInfo']()['skinName'] + '.png',
                _0x1285bf = '/props/' + _0x3e1398 + '/beards/' + this['props']['beardsColor'] + '.png',
                _0x33c408 = '/props/' + _0x3e1398 + '/hats/' + this['props']['hatsColor'] + '.png',
                _0x53e214 = '/props/' + _0x3e1398 + '/scarfs/' + this['props']['scarfsColor'] + '.png',
                _0x34986a = '/props/' + _0x3e1398 + '/glasses/' + this['props']['glassesColor'] + '.png';
            console['log'](_0x1285bf), _0x711b17['style']['backgroundImage'] = 'url(' + _0x1285bf + ')', _0x2d26e8['style']['backgroundImage'] = 'url(' + _0xe65721 + ')', _0x30ad3f['style']['backgroundImage'] = 'url(' + _0x33c408 + ')', _0x215b46['style']['backgroundImage'] = 'url(' + _0x53e214 + ')', _0x31a2a6['style']['backgroundImage'] = 'url(' + _0x34986a + ')', _0x31b26f['appendChild'](_0x711b17), _0x31b26f['appendChild'](_0x2d26e8), _0x31b26f['appendChild'](_0x215b46), _0x31b26f['appendChild'](_0x31a2a6), _0x31b26f['appendChild'](_0x30ad3f);
        }, _0x30041e['prototype']['getPropColorNum'] = function(_0x4d331b) {
            switch (_0x4d331b) {
                case 'white':
                    return 0x0;
                case 'red':
                    return 0x1;
                case 'green':
                    return 0x2;
                case 'blue':
                    return 0x3;
                case 'pink':
                    return 0x4;
                case 'gold':
                    return 0x5;
            }
        }, _0x30041e['prototype']['setPropColor'] = function(_0x1093f8, _0xe96666) {
            var _0x33eae9 = _0x1093f8 + 'Color',
                _0x3d3edd = document['getElementById']('propColor-' + _0xe96666),
                _0x387f55 = document['getElementById']('propColor-red'),
                _0x5bf64e = document['getElementById']('propColor-green'),
                _0x3b8543 = document['getElementById']('propColor-blue'),
                _0x2812b4 = document['getElementById']('propColor-pink'),
                _0x2a3b8f = document['getElementById']('propColor-white'),
                _0x1c895e = document['getElementById']('propColor-gold');
            _0x387f55['className'] = 'propColor propColor-red' + (this['hasBoughtProp'](_0x1093f8, 'red') ? ' bought' : ''), _0x5bf64e['className'] = 'propColor propColor-green' + (this['hasBoughtProp'](_0x1093f8, 'green') ? ' bought' : ''), _0x3b8543['className'] = 'propColor propColor-blue' + (this['hasBoughtProp'](_0x1093f8, 'blue') ? ' bought' : ''), _0x2812b4['className'] = 'propColor propColor-pink' + (this['hasBoughtProp'](_0x1093f8, 'pink') ? ' bought' : ''), _0x2a3b8f['className'] = 'propColor propColor-white' + (this['hasBoughtProp'](_0x1093f8, 'white') ? ' bought' : ''), _0x1c895e['className'] = 'propColor propColor-gold' + (this['hasBoughtProp'](_0x1093f8, 'gold') ? ' bought' : '');
            var _0x36483f = document['getElementById']('propBuyDiv');
            _0x36483f['innerHTML'] = '';
            var _0x5e40db = _0x3851ae('div', 'propBuyBtn', 'buybutton');
            _0x5e40db['onclick'] = function() {
                alert('buy prop: ' + _0x1093f8 + ' color: ' + _0xe96666);
            };
            if (this['isPropSelected'](_0x1093f8, _0xe96666)) this['props'][_0x33eae9] = '', _0x3d3edd['className'] = 'propColor propColor-' + _0xe96666;
            else {
                this['props'][_0x33eae9] = this['getPropColorNum'](_0xe96666), _0x3d3edd['className'] = 'propColor propColor-' + _0xe96666 + ' selected';
                if (!this['hasBoughtProp'](_0x1093f8, _0xe96666)) {
                    var _0x50f7e1 = new Image();
                    _0x50f7e1['className'] = 'buycoin-img', _0x50f7e1['src'] = 'shop/mopecoin.png';
                    var _0x39d818 = _0x3851ae('span', '', 'buycoin-price');
                    _0x39d818['innerHTML'] = 0x64 + this['getPropColorNum'](_0xe96666) * 0x64, _0x5e40db['appendChild'](_0x50f7e1), _0x5e40db['appendChild'](_0x39d818), _0x36483f['appendChild'](_0x5e40db);
                }
            }
            this['updatePropsForAnimal']();
        }, _0x30041e['prototype']['addBackButton'] = function(_0x1144be) {
            var _0x54c8e5 = _0x3851ae('li', 'back', 'title '),
                _0x34af24 = new Image();
            _0x34af24['src'] = 'shop/back.png', _0x54c8e5['appendChild'](_0x34af24), _0x54c8e5['onclick'] = function() {
                _0x100ed7['showShopButtons']();
            }, _0x1144be['appendChild'](_0x54c8e5);
        }, _0x30041e['prototype']['addCloseButton2'] = function(_0x1e47e0) {
            var _0x3a1ba3 = _0x3851ae('li', 'closebtn', 'title '),
                _0x59655b = new Image();
            _0x59655b['src'] = 'shop/close.png', _0x3a1ba3['appendChild'](_0x59655b), _0x3a1ba3['onclick'] = function() {
                _0xf451d2();
            }, _0x1e47e0['appendChild'](_0x3a1ba3);
        }, _0x30041e['prototype']['coinsInterface'] = function() {
            this['deleteTab']();
            var _0x36764c = _0x29e808('shop_div', ''),
                _0x186a12 = _0x3851ae('ul');
            _0x36764c['appendChild'](_0x186a12), this['addCloseButton2'](_0x186a12), this['addBackButton'](_0x186a12), this['showUserExpBarAndCoinsBalance'](_0x186a12), _0x36764c['append'](_0x3851ae('div', '', 'separator')), this['shopDiv']['appendChild'](_0x36764c), this['showTab']('Coins');
        }, _0x30041e['prototype']['curTabPage'] = 0x0, _0x30041e['prototype']['setVisiblePage'] = function(_0x710178, _0xae713b) {
            var _0x5aa9d2 = document['getElementById']('pages-' + _0x710178);
            if (!_0x5aa9d2) return;
            var _0x4e4596 = 'content-items-' + _0x710178,
                _0x5f5619 = document['getElementById'](_0x4e4596);
            if (_0x5f5619) {
                var _0x5b246b = _0x5f5619['getAttribute']('data-pages');
                _0x5f5619['setAttribute']('data-curPage', _0xae713b), this['curTabPage'] = _0xae713b, _0x5aa9d2['innerHTML'] = 'Page: ' + (_0xae713b + 0x1) + ' of ' + _0x5b246b;
                var _0x36bc2c = -0x294 * _0xae713b;
                _0x5f5619['style']['left'] = _0x36bc2c + 'px', _0x5f5619['style']['webkitAnimation'] = '';
            }
        }, _0x30041e['prototype']['scrollItems'] = function(_0x1b2377, _0x392705) {
            var _0x468154 = _0x1b2377['id']['split']('-')[0x1],
                _0x1c31bb = 'content-items-' + _0x468154,
                _0x22b566 = document['getElementById'](_0x1c31bb),
                _0x3849ef = _0x22b566['getAttribute']('data-pages'),
                _0x5e37e2 = Number(_0x22b566['getAttribute']('data-curPage'));
            if (_0x5e37e2 < _0x3849ef - 0x1 && _0x392705) _0x5e37e2++;
            else {
                if (_0x5e37e2 > 0x0 && !_0x392705) _0x5e37e2--;
            }
            this['setVisiblePage'](_0x468154, _0x5e37e2);
        }, _0x30041e['prototype']['version'] = 0.2, _0x30041e['prototype']['onLogon'] = function() {
            console['log']('MopeShop ' + this['version'] + ' onLogon');
            if (_0x24d734) {
                var _0x284128 = document['getElementById']('accountsDiv');
                if (_0x284128) {
                    var _0x46ad25 = _0x29e808('profilePic', 'profilePic'),
                        _0x44661c = new Image(),
                        _0x510d32 = _0x29e808('profileName', 'profileName');
                    _0x46ad25['appendChild'](_0x44661c);
                    _0x4a18b3 && (_0x44661c['src'] = _0x4a18b3);
                    _0x510d32['innerHTML'] = _0x389e39, _0x284128['appendChild'](_0x46ad25);
                    var _0x2bfa81 = _0x326bc5,
                        _0x1b2b73 = _0x3851ae('div', 'user-exp2', 'user-exp'),
                        _0x1da27d = _0x3851ae('div', 'userxp-bar2', 'userxp-bar'),
                        _0x912f39 = _0x3851ae('div', 'userxp-barbar2', 'userxp-barbar'),
                        _0x53f055 = _0x3851ae('div', 'userxp-val2', 'userxp-val'),
                        _0x2c1c8f = _0x3851ae('div', 'userxp-star2', 'userxp-star'),
                        _0x2199e5 = 0x64;
                    _0x53f055['innerHTML'] = _0x2199e5 + ' / ' + _0x2bfa81['xpNextLvl'], _0x2199e5 = _0x2199e5 / _0x2bfa81['xpNextLvl'] * 0x64, _0x912f39['style']['width'] = _0x2199e5 + 'px', _0x2c1c8f['innerHTML'] = _0x2bfa81['level'], _0x1da27d['appendChild'](_0x912f39), _0x1b2b73['appendChild'](_0x1da27d), _0x1b2b73['appendChild'](_0x53f055), _0x1b2b73['appendChild'](_0x2c1c8f);
                    var _0x272bf4 = _0x3851ae('div', 'coins-balance2', 'coins-balance'),
                        _0x467a61 = new Image();
                    _0x467a61['src'] = 'shop/mopecoin.png', _0x467a61['className'] = 'buycoin-img', _0x272bf4['appendChild'](_0x467a61);
                    var _0x1cff0b = _0x3851ae('div', 'coins2', 'coins');
                    _0x1cff0b['innerHTML'] = _0x4ceade(), _0x272bf4['appendChild'](_0x1cff0b), _0x272bf4['setAttribute']('title', 'add more coins'), _0x272bf4['onclick'] = function() {
                        _0xf451d2(), _0x100ed7 = new _0x30041e(), _0x30041e['prototype']['callback'] = function() {
                            this['coinsInterface'](), _0x30041e['prototype']['callback'] = null;
                        }, _0x100ed7['load']();
                    };
                    var _0x220d12 = _0x29e808('userNameExpDiv', 'userNameExpDiv');
                    _0x220d12['appendChild'](_0x510d32), _0x220d12['appendChild'](_0x29e808(undefined, 'clear')), _0x220d12['appendChild'](_0x1b2b73), _0x220d12['appendChild'](_0x29e808(undefined, 'clear')), _0x220d12['appendChild'](_0x272bf4), _0x284128['appendChild'](_0x220d12), _0x284128['appendChild'](_0x29e808(undefined, 'clear'));
                }
            }
        }, _0x30041e['prototype']['playerSettings_update'] = function(_0xb7e0a6) {
            console['log']('update: ' + _0xb7e0a6), _0x100ed7['removeBlockOverlay'](), _0x100ed7['blockOverlay'](), _0xe890b7(_0xb7e0a6, function(_0x28048a, _0x3b8d0d) {
                if (_0x28048a) {
                    _0x6a452e('Settings updated successfully!', 'success', 0x5);
                    var _0x3bd44b = 0x1;
                    _0x3bd44b += 0x1;
                    _0x24d734 && (_0x3bd44b += _0x4eaafb(_0x41a78c)['length'] + 0x2, _0x3bd44b += _0x4eaafb(_0x2790b3)['length'] + 0x2);
                    var _0x3547bc = new _0x278eb3(_0x3bd44b);
                    _0x3547bc['writeUInt8'](0x47), _0x3547bc['writeUInt8'](_0x24d734 ? 0x1 : 0x0), _0x24d734 && (_0x3547bc['writeString'](_0x41a78c), _0x3547bc['writeString'](_0x2790b3)), _0x5df395(_0x3547bc), _0x108e60(!![]), _0x4c28b8();
                } else switch (_0x3b8d0d) {
                    case 'alreadyowned':
                        _0x6a452e('AccountServer: item already purchased!', _0x3b8d0d, 0xf);
                        break;
                    case 'cantafford':
                        _0x6a452e('AccountServer: not enough coins to buy this!', _0x3b8d0d, 0xf);
                        break;
                    case 'urlnotfound':
                        _0x6a452e('AccountServer: Can\'t reach server at this moment!', 'itemDoesntExist', 0xf);
                        break;
                }
                _0x100ed7['removeBlockOverlay']();
            });
        };
        var _0x100ed7 = new _0x30041e(),
            _0x4d8106 = document['getElementById']('divButtons');
        _0x24d734 ? _0x4d8106['style']['display'] = 'none' : _0x4d8106['style']['display'] = 'block';

        function _0x394a17(_0x24ff67) {
            var _0x2f2303 = document['createElement']('div');
            _0x2f2303['id'] = 'shopOverlay', _0x2f2303['className'] = 'shopOverlay center';
            var _0x1f11d4 = document['createElement']('div');
            _0x1f11d4['className'] = 'shopOverlay_plzwait', _0x1f11d4['innerHTML'] = 'Please wait...', _0x2f2303['appendChild'](_0x1f11d4);
            var _0x49f896 = document['getElementsByTagName']('body')[0x0];
            _0x49f896['prepend'](_0x2f2303), _0x24ff67 && (_0x100ed7['actionBtn'] = _0x24ff67), _0x145593();
        }

        function _0x3bf113(_0x47395a) {
            var _0x6ad4de = _0x3851ae('input', 'txtCopy');
            _0x6ad4de['setAttribute']('type', 'text'), _0x6ad4de['setAttribute']('value', _0x47395a), console['log'](_0x6ad4de), _0x6ad4de['select'](), _0x6ad4de['setSelectionRange'](0x0, 0x1869f), document['execCommand']('copy'), alert('Copied the text: ' + _0x6ad4de['value']);
        }
        _0x100ed7['loadData'](), _0x30041e['prototype']['getAnimalInfo'] = function(_0x43be52, _0x5c94b2) {
            switch (_0x43be52) {
                case 'sampleTestSkin':
                    return [_0x19eca4, 0xfa, 'Sample Mouse', 'land/mouse/250/mouse'];
                case 'summer21_seamonster':
                    return [_0x346859, 0xc9, 'Ancient Tortoise', 'ocean/seamonster/201/seamonster'];
                case 'summer21_puffer':
                    return [_0x1dbdcd, 0xc9, 'Omniball Puffer', 'ocean/pufferfish/201/pufferfish'];
                case 'summer21_turtle':
                    return [_0x23c342, 0xc9, 'Kiwi Turtle', 'ocean/turtle/201/turtle'];
                case 'summer21_octopus':
                    return [_0x283bbc, 0xc9, 'Fuchsia Tiger', 'ocean/octopus/201/octopus.ui'];
                case 'summer21_orca':
                    return [_0x26d386, 0xc9, 'Lifeguard Orca', 'ocean/killerwhale/201/killerwhale'];
                case 'summer21_iceMonster':
                    return [_0xdd7007, 0xc9, 'Cryo Coach Monster', 'arctic/icemonster/201/icemonster'];
                case 'summer21_mammoth':
                    return [_0x5ed897, 0xc9, 'Lost Tourist', 'arctic/mammoth/201/mammoth'];
                case 'summer21_crab':
                    return [_0x172231, 0xc9, 'Coconut Crab', 'ocean/crab/201/crab'];
                case 'summer21_hare':
                    return [_0x2a2b27, 0xc9, 'Snow Cone Hare', 'arctic/arctichare/201/arctichare'];
                case 'summer21_shrimp':
                    return [_0x19fc30, 0xc9, 'Chef Shrimp', 'ocean/shrimp/201/shrimp'];
                case 'summer21_walrus':
                    return [_0x44a111, 0xc9, 'Walrusmelon', 'arctic/walrus/201/walrus'];
                case 'summer21_squid':
                    return [_0x4ef33a, 0xc9, 'Seacoast Squid', 'ocean/squid/201/squid.ui'];
                case 'summer21_fox':
                    return [_0x3f7358, 0xc9, 'Forest Sprit Fox', 'arctic/arcticfox/201/arcticfox'];
                case 'summer21_seal':
                    return [_0x51d33b, 0xc9, 'Hawaiian Monk', 'arctic/seal/201/seal'];
                case 'summer21_wolf':
                    return [_0x3d9765, 0xc9, 'Pineapple Wolf', 'arctic/wolf/201/wolf'];
                case 'summer21_markhor':
                    return [_0x2a0d7d, 0xc9, 'Fruity Ice Markhor', 'arctic/markhor/201/1/markhor'];
                case 'summer21_warthog':
                    return [_0x5cb417, 0xc9, 'Flame Tiki', 'desert/warthog/201/warthog'];
                case 'summer21_chicken':
                    return [_0x1ecc36, 0xc9, 'Countryside Chick', 'land/chicken/201/chicken'];
                case 'summer21_owl':
                    return [_0x4657a6, 0xc9, 'Snowy Owrigami', 'arctic/snowyowl/201/snowyowl'];
                case 'summer21_zebra':
                    return [_0x5ae0eb, 0xc9, 'Playground Zebra', 'land/zebra/201/zebra'];
                case 'summer21_croc':
                    return [_0x590076, 0xc9, 'Big Hoss', 'land/croc/0/201/croc'];
                case 'summer21_meerkat':
                    return [_0x2521ea, 0xc9, 'Scubakat', 'desert/meerkat/201/meerkat'];
                case 'summer21_rhino':
                    return [_0x3f35f1, 0xc9, 'Shrub Rhino', 'land/rhino/201/rhino'];
                case 'summer21_elephant':
                    return [_0x1d892b, 0xc9, 'Leiphant', 'land/elephant/0/201/elephant'];
                case 'summer21_pig':
                    return [_0xceb64c, 0xc9, 'Floaty Pig', 'land/pig/201/pig'];
                case 'summer21_camel':
                    return [_0x41fd87, 0xc9, 'Balloon Warrior', 'desert/camel/201/camel'];
                case 'summer21_hyena':
                    return [_0x502a88, 0xc9, 'DJ Hyena', 'desert/hyena/201/hyena'];
                case 'summer21_gorilla':
                    return [_0x248ce4, 0xc9, 'Explorer Ape', 'land/gorilla/0/201/gorilla'];
                case 'summer21_squishyYeti':
                    return [_0x36fcdc, 0xc9, 'Squishy Yeti', 'arctic/yeti/201/yeti'];
                case 'summer21_squishyKraken':
                    return [_0x9038c6, 0xc9, 'Squishy Kraken', 'ocean/kraken/201/kraken'];
                case 'summer21_squishyDragon':
                    return [_0x31f937, 0xc9, 'Squishy Dragon', 'land/dragon/0/201/dragon'];
                case 'summer21_mermaidWhale':
                    return [_0x52a058, 0xc9, 'Mermaid Whale', 'ocean/bluewhale/0/201/bluewhale'];
                case 'summer21_seafoamJellyfish':
                    return [_0x4a5a29, 0xc9, 'Seafoam Jellyfish', 'ocean/jellyfish/201/jellyfish'];
                case 'summer21_bubblyMouse':
                    return [_0x19eca4, 0xc9, 'Bubbly Mouse', 'land/mouse/201/mouse'];
                case 'summer21_surfboardChomper':
                    return [_0x2e6e95, 0xc9, 'Surfboard Chomper', 'ocean/shark/201/shark'];
                case 'summer21_surferPenguin':
                    return [_0x3bf4c4, 0xc9, 'Surfer Penguin', 'arctic/penguin/201/penguin'];
                case 'summer21_waterGunHorse':
                    return [_0x1fff86, 0xc9, 'Water Gun Horse', 'ocean/seahorse/201/seahorse'];
                case 'summer21_sunburnReindeer':
                    return [_0x538056, 0xc9, 'Sunburn Reindeer', 'arctic/reindeer/201/reindeer'];
                case 'summer21_surfboardSwordfish':
                    return [_0x9918f2, 0xc9, 'Surfboardfish', 'ocean/swordfish/0/201/swordfish'];
                case 'summer21_popsicleTrout':
                    return [_0x1a22d5, 0xc9, 'Popsicle Trout', 'ocean/trout/0/201/trout'];
                case 'summer21_playfulChipmunk':
                    return [_0x3d3994, 0xc9, 'Playful Munk', 'arctic/chipmunk/201/chipmunk'];
                case 'summer21_fireworkOx':
                    return [_0x33ea21, 0xc9, 'Fireworks Ox', 'arctic/muskox/201/muskox'];
                case 'summer21_chocolateStingray':
                    return [_0x31158f, 0xc9, 'Chocolate Ray', 'ocean/stingray/201/stingray.ui'];
                case 'summer21_connoisseurBear':
                    return [_0x2f4199, 0xc9, 'Cola Connoisseur', 'arctic/bear/201/bear'];
                case 'summer21_coralQueen':
                    return [_0x538204, 0xc9, 'Coral Queen', 'arctic/snowleopard/201/snowleopard'];
                case 'summer21_strawbertoothTiger':
                    return [_0x3ccf08, 0xc9, 'Strawbertooth', 'arctic/sabertooth/201/sabertooth'];
                case 'skin_leatherBackTurtle':
                    return [_0x23c342, 0xc8, 'Leather Back\x0aTurtle', 'ocean/turtle/200/turtle'];
                case 'skin_celestialCobra':
                    return [_0x45a408, 0xc8, 'Celestial Cobra', 'land/cobra/200/cobra'];
                case 'skin_brazenBull':
                    return [_0x33ea21, 0xc8, 'Brazen Bull', 'arctic/muskox/200/muskox'];
                case 'skin_luckyCharmMonster':
                    return [_0x346859, 0xc8, 'Luckycharm Monster', 'ocean/seamonster/200/seamonster'];
                case 'skin_iceToucan':
                    return [_0x4927bb, 0xc8, 'Ice Toucan', 'land/toucan/200/toucan'];
                case 'skin_clowoudLion':
                    return [_0x178278, 0xc8, 'Clowoud Lion', 'land/lion/200/0/lion'];
                case 'skin_sunsetClowoudLion':
                    return [_0x178278, 0xc8, 'Sunset\x0aClowoud Lion', 'land/lion/200/1/lion'];
                case 'skin_stormClowoudLion':
                    return [_0x178278, 0xc8, 'Storm\x0aClowoud Lion', 'land/lion/200/2/lion'];
                case 'skin_kaijuRex':
                    return [_0x366af5, 0xc8, 'Kaiju Rex', 'land/trex/200/trex'];
                case 'skin_warTHog':
                    return [_0x5cb417, 0xc8, 'WarT. Hog', 'desert/warthog/200/warthog'];
                case 'skin_velvetChimp':
                    return [_0x214ca3, 0xc8, 'Velvet\x0aChipmunk', 'desert/chipmunk/200/chipmunk'];
                case 'skin_aquaPhoenix':
                    return [_0x48a3f9, 0xc8, 'Aqua Phoenix', 'volcano/phoenix/200/0/phoenix'];
                case 'skin_icePhoenix':
                    return [_0x48a3f9, 0xc8, 'Ice Phoenix', 'volcano/phoenix/200/1/phoenix'];
                case 'skin_ashPhoenix':
                    return [_0x48a3f9, 0xc8, 'Ash Phoenix', 'volcano/phoenix/200/2/phoenix'];
                case 'skin_redGiantPhoenix':
                    return [_0x48a3f9, 0xc8, 'Red Giant\x0aPhoenix', 'volcano/phoenix/200/3/phoenix'];
                case 'skin_goofyDragon':
                    return [_0x31f937, 0xc8, 'Goofy Dragon', 'land/dragon/0/101/dragon'];
                case 'skin_desertDragon':
                    return [_0x31f937, 0xc8, 'Desert Dragon', 'land/dragon/0/102/dragon'];
                case 'skin_forgeDragon':
                    return [_0x31f937, 0xc8, 'Forge Dragon', 'land/dragon/0/103/dragon'];
                case 'skin_mythicalSerpent':
                    return [_0x31f937, 0xc8, 'Mythical Serpent', 'land/dragon/0/104/dragon'];
                case 'skin_fireyDragon':
                    return [_0x31f937, 0xc8, 'Firey Dragon', 'land/dragon/0/105/dragon'];
                case 'skin_technoSaber':
                    return [_0x3ccf08, 0xc8, 'Techno\x0aSabertooth', 'arctic/sabertooth/200/sabertooth'];
                case 'skin_iceFox':
                    return [_0x38ffba, 0xc8, 'Ice Fox', 'arctic/arcticfox/200/arcticfox'];
                case 'skin_clownfish':
                    return [_0x1a22d5, 0xc8, 'Clownfish', 'ocean/trout/0/200/trout'];
                case 'skin_tullyMonster':
                    return [_0x1fff86, 0xc8, 'Tully\x0aMonster', 'ocean/seahorse/200/seahorse'];
                case 'skin_vampireSquid':
                    return [_0x283bbc, 0xc8, 'Vampire\x0aSquid', 'ocean/octopus/200/octopus'];
                case 'skin_cuttlefish':
                    return [_0x4ef33a, 0xc8, 'Cuttle Fish', 'ocean/squid/200/squid'];
                case 'skin_deluxeShrimp':
                    return [_0x19fc30, 0xc8, 'Deluxe\x0aShrimp', 'ocean/shrimp/200/shrimp'];
                case 'skin_monochromeRabbit':
                    return [_0x290562, 0xc8, 'Monochrome\x0aRabbit', 'land/rabbit/200/rabbit'];
                case 'skin_nightFox':
                    return [_0x3f7358, 0xc8, 'Thief of\x0aThe Night', 'land/fox/200/fox'];
                case 'skin_plagueRaptor':
                    return [_0x5bec16, 0xc8, 'Plague\x0aRaptor', 'land/peacock/200/peacock.ui'];
                case 'skin_titanBison':
                    return [_0x456e24, 0xc8, 'Titan Bison', 'desert/bison/200/bison'];
                case 'skin_dowagerVarande':
                    return [_0x4a2a55, 0xc8, 'Dowager Varande', 'desert/komododragon/200/0/komodo'];
                case 'skin_emeprorVarande':
                    return [_0x4a2a55, 0xc8, 'Emepror Varande', 'desert/komododragon/200/1/komodo'];
                case 'skin_rubyDevil':
                    return [_0x19d925, 0xc8, 'Ruby Devil', 'land/dinomonster/200/dinomonster'];
                case 'skin_metalicCrab':
                    return [_0x172231, 0xc8, 'Metallic Crab', 'ocean/crab/200/crab'];
                case 'skin_queenFlame':
                    return [_0xf8f210, 0xc8, 'Queen Flame', 'volcano/kingdragon/200/kingdragon'];
                case 'halloween_wyrmous':
                    return [_0x45a408, 0x64, 'Wyrmous', 'land/cobra/100/cobra'];
                case 'halloween_equusthulhu':
                    return [_0x1bb5dc, 0x64, 'Equusthulhu', 'land/donkey/100/donkey'];
                case 'halloween_frostaline':
                    return [_0x538204, 0x64, 'Frostaline', 'arctic/snowleopard/100/snowleopard'];
                case 'halloween_pufferMace':
                    return [_0x1dbdcd, 0x64, 'Puffermace', 'ocean/pufferfish/100/pufferfish'];
                case 'halloween_carnageodactyl':
                    return [_0x5e24a5, 0x64, 'Carnageodactyl', 'desert/pterodactyl/100/pterodactyl_ability'];
                case 'halloween_mrDollar':
                    return [_0x366af5, 0x64, 'Mr. Dollar', 'land/trex/100/trex'];
                case 'halloween_wendigoDeer':
                    return [_0x474e8d, 0x64, 'The Wendigo', 'land/deer/100/deer'];
                case 'halloween_cactiRat':
                    return [_0x427de7, 0x64, 'Cacti Rat', 'desert/kangaroorat/100/kangaroorat'];
                case 'halloween_hiPower':
                    return [_0x1b196d, 0x64, 'Swampster', 'land/hippo/100/hippo'];
                case 'halloween_puumpkat':
                    return [_0x2521ea, 0x64, 'Puumpkat', 'desert/meerkat/100/meerkat'];
                case 'halloween_doomedarius':
                    return [_0x41fd87, 0x64, 'The Doomedarius', 'desert/camel/100/camel'];
                case 'halloween_roboMouse':
                    return [_0x19eca4, 0x64, 'Robo Mouse', 'land/mouse/100/mouse'];
                case 'halloween_uncleSam':
                    return [_0x590076, 0x64, 'Uncle Sam', 'land/croc/0/100/croc'];
                case 'halloween_zombieMole':
                    return [_0xa5c3f5, 0x64, 'Zombie Mole', 'land/mole/100/mole'];
                case 'halloween_flammyHart':
                    return [_0x355b29, 0x64, 'Flammy Hart', 'desert/gazelle/100/gazelle'];
                case 'halloween_gummyViper':
                    return [_0x483b9e, 0x64, 'Gummy Viper', 'desert/rattlesnake/100/rattlesnake'];
                case 'halloween_grimRipper':
                    return [_0x248ce4, 0x64, 'Grim Reaper', 'land/gorilla/0/100/gorilla'];
                case 'halloween_bigCookie':
                    return [_0x4d45bb, 0x64, 'Big Cookie', 'land/bigcat/100/bigcat'];
                case 'halloween_gargolgon':
                    return [_0x31f937, 0x64, 'The Gargon', 'land/dragon/0/100/dragon'];
                case 'halloween_candyRus':
                    return [_0x44a111, 0x64, 'Candy Rus', 'arctic/walrus/100/walrus'];
                case 'halloween_mantilian':
                    return [_0x178278, 0x64, 'The Mantilian', 'land/lion/100/lion'];
                case 'halloween_phantomRay':
                    return [_0x31158f, 0x64, 'Phantom Ray', 'ocean/stingray/100/stingray'];
                case 'halloween_suitedToucan':
                    return [_0x4927bb, 0x64, 'The Dapper', 'land/toucan/100/toucan'];
                case 'halloween_vulgeist':
                    return [_0x242003, 0x64, 'The Vulgeist', 'desert/vulture/100/vulture'];
                case 'halloween_burlone':
                    return [_0x5cb417, 0x64, 'The Burlone', 'desert/warthog/100/warthog'];
                case 'halloween_unicornze':
                    return [_0x5ae0eb, 0x64, 'Unicornze', 'land/zebra/100/zebra'];
                case 'gold_blackDragon':
                    return [_0x1de825, 0x1, 'Golden\x0aBlack Dragon', 'volcano/blackdragon/1/blackdragon'];
                case 'gold_kingDragon':
                    return [_0xf8f210, 0x1, 'Golden\x0aKing Dragon', 'volcano/kingdragon/1/kingdragon'];
                case 'gold_Dragon':
                    return [_0x31f937, 0x1, 'Golden\x0aDragon', 'land/dragon/0/1/dragon'];
                case 'gold_kraken':
                    return [_0x9038c6, 0x1, 'Golden\x0aKraken', 'ocean/kraken/1/kraken'];
                case 'gold_yeti':
                    return [_0x36fcdc, 0x1, 'Golden\x0aYeti', 'arctic/yeti/1/yeti'];
                case 'gold_trex':
                    return [_0x366af5, 0x1, 'Golden\x0aT.Rex', 'land/trex/1/trex'];
                case 'gold_kingCrab':
                    return [_0x38e413, 0x1, 'Golden\x0aCrab', 'ocean/kingcrab/1/kingcrab'];
                case 'gold_phoenix':
                    return [_0x48a3f9, 0x1, 'Golden\x0aPhoenix', 'volcano/phoenix/1/phoenix'];
                case 'gold_pterodactyl':
                    return [_0x5e24a5, 0x1, 'Golden\x0aPterodactyl', 'desert/pterodactyl/1/pterodactyl_ability'];
                case 'gold_iceMonster':
                    return [_0xdd7007, 0x1, 'Golden\x0aIce Monster', 'arctic/icemonster/1/icemonster'];
                case 'gold_dinoMonster':
                    return [_0x19d925, 0x1, 'Golden\x0aDino Monster', 'land/dinomonster/1/dinomonster'];
                case 'gold_seaMonster':
                    return [_0x346859, 0x1, 'Golden\x0aSea Monster', 'ocean/seamonster/1/seamonster'];
                case 'gold_landMonster':
                    return [_0x1fb7c3, 0x1, 'Golden\x0aLand Monster', 'volcano/landmonster/0/1/landmonster'];
                case 'gold_giantScorion':
                    return [_0x582280, 0x1, 'Golden\x0aGiant Scorpion', 'desert/scorpion/1/giantscorpion'];
                case 'gold_bluewhale':
                    return [_0x52a058, 0x1, 'Golden\x0aBlue Whale', 'ocean/bluewhale/0/1/bluewhale'];
                case 'gold_elephant':
                    return [_0x1d892b, 0x1, 'Golden\x0aElephant', 'land/elephant/1/elephant'];
                case 'gold_cassowary':
                    return [_0x1f079f, 0x1, 'Golden\x0aCassowary', 'land/cassowary/1/cassowary'];
                case 'gold_giantspider':
                    return [_0x471528, 0x1, 'Golden\x0aGiant Spider', 'land/giantspider/1/giantspider'];
                case 'gold_blackwidow':
                    return [_0x4bbe45, 0x1, 'Golden\x0aBlackwidow', 'desert/blackwidow/0/1/blackwidow'];
                case 'gold_mammoth':
                    return [_0x5ed897, 0x1, 'Golden\x0aMammoth', 'arctic/mammoth/1/mammoth'];
                case 'gold_hippo':
                    return [_0x1b196d, 0x1, 'Golden\x0aHippo', 'land/hippo/1/hippo'];
                case 'gold_ostrich':
                    return [_0x123d4e, 0x1, 'Golden\x0aOstrich', 'land/ostrich/1/ostrich'];
                case 'gold_boa':
                    return [_0x2982a0, 0x1, 'Golden\x0aBoa', 'land/boaconstrictor/1/boaconstrictor'];
                case 'gold_komodo':
                    return [_0x4a2a55, 0x1, 'Golden\x0aKomodo', 'desert/komododragon/1/komodo'];
                case 'gold_killerwhale':
                    return [_0x26d386, 0x1, 'Golden\x0aKiller Whale', 'ocean/killerwhale/1/killerwhale'];
                case 'gold_sabertooth':
                    return [_0x3ccf08, 0x1, 'Golden\x0aSabertooth', 'arctic/sabertooth/1/sabertooth'];
                case 'skin_blueDragon':
                    return [_0x1de825, 0x2, 'The\x0aAzure Bringer', 'volcano/blackdragon/2/blackdragon'];
                case 'skin_kingRipper':
                    return [_0xf8f210, 0x2, 'King\x0aRipper', 'volcano/kingdragon/2/kingdragon'];
                case 'skin_kingStan':
                    return [_0xf8f210, 0x3, 'King\x0aStan', 'volcano/kingdragon/3/kingdragon'];
                case 'skin_kingShah':
                    return [_0xf8f210, 0x4, 'King\x0aShah', 'volcano/kingdragon/4/kingdragon'];
                case 'king_mistik':
                    return [_0xf8f210, 0x8, 'King Mistik', 'volcano/kingdragon/8/kingdragon'];
                case 'skin_dragon_gray':
                    return [_0x31f937, 0x2, 'Knight\x0aDragon', 'land/dragon/0/2/dragon'];
                case 'skin_kraken_cyan':
                    return [_0x9038c6, 0x2, 'Chromatic\x0aKraken', 'ocean/kraken/2/kraken'];
                case 'skin_yeti_emerald':
                    return [_0x36fcdc, 0x2, 'Emerald\x0aYeti', 'arctic/yeti/2/yeti'];
                case 'skin_snowman':
                    return [_0x1323b9, 0x1, 'The\x0aSnowman', 'arctic/snowman/1/snowman'];
                case 'skin_snowgirl':
                    return [_0x1323b9, 0x2, 'The\x0aSnowgirl', 'arctic/snowman/2/snowgirl'];
                case 'skin_trex_gray':
                    return [_0x366af5, 0x2, 'Ember\x0aT.Rex', 'land/trex/2/trex'];
                case 'skin_kingCrab':
                    return [_0x38e413, 0x2, 'Amethyst\x0aCrab', 'ocean/kingcrab/2/kingcrab'];
                case 'skin_phoenix_blue':
                    return [_0x48a3f9, 0x2, 'Alpha\x0aPhoenix', 'volcano/phoenix/2/phoenix'];
                case 'skin_pterodactyl_green':
                    return [_0x5e24a5, 0x2, 'Emerald\x0aPterodactyl', 'desert/pterodactyl/2/pterodactyl_ability'];
                case 'skin_iceMonster':
                    return [_0xdd7007, 0x2, 'Amethyst\x0aMonster', 'arctic/icemonster/2/icemonster'];
                case 'skin_dinoMonster':
                    return [_0x19d925, 0x2, 'Citrine\x0aMonster', 'land/dinomonster/2/dinomonster'];
                case 'skin_seaMonster':
                    return [_0x346859, 0x2, 'Sapphire\x0aMonster', 'ocean/seamonster/2/seamonster'];
                case 'skin_landMonster':
                    return [_0x1fb7c3, 0x2, 'Titanite\x0aMonster', 'volcano/landmonster/0/2/landmonster'];
                case 'skin_orangeScorpion':
                    return [_0x582280, 0x2, 'Carnelian\x0aScorpion', 'desert/scorpion/2/giantscorpion'];
                case 'skin_bluewhale':
                    return [_0x52a058, 0x2, 'Albino\x0aBlue Whale', 'ocean/bluewhale/0/2/bluewhale'];
                case 'skin_elephant':
                    return [_0x1d892b, 0x2, 'White\x0aElephant', 'land/elephant/2/elephant'];
                case 'skin_cassowary':
                    return [_0x1f079f, 0x2, 'Cotton\x0aCassowary', 'land/cassowary/2/cassowary'];
                case 'skin_giantspider':
                    return [_0x471528, 0x2, 'Goliath\x0aSpider', 'land/giantspider/2/giantspider'];
                case 'skin_blackwidow':
                    return [_0x4bbe45, 0x2, 'Queen\x0aBlackwidow', 'desert/blackwidow/0/2/blackwidow'];
                case 'skin_mammoth':
                    return [_0x5ed897, 0x2, 'Black\x0aMammoth', 'arctic/mammoth/2/mammoth'];
                case 'skin_hippo':
                    return [_0x1b196d, 0x2, 'Pygmy\x0aHippo', 'land/hippo/2/hippo'];
                case 'skin_ostrich':
                    return [_0x123d4e, 0x2, 'Ruffled\x0aOstrich', 'land/ostrich/2/ostrich'];
                case 'skin_boa':
                    return [_0x2982a0, 0x2, 'Tree\x0aBoa', 'land/boaconstrictor/2/boaconstrictor'];
                case 'skin_komodo':
                    return [_0x4a2a55, 0x2, 'Night\x0aKomodo', 'desert/komododragon/2/komodo'];
                case 'skin_killerwhale':
                    return [_0x26d386, 0x2, 'Albino\x0aOrca', 'ocean/killerwhale/2/killerwhale'];
                case 'skin_sabertooth':
                    return [_0x3ccf08, 0x2, 'Margala\x0aSabertooth', 'arctic/sabertooth/2/sabertooth'];
                case 'skin_tigerShark':
                    return [_0x2e6e95, 0x2, 'Tiger\x0aShark', 'ocean/shark/1/shark'];
                case 'skin_hamerHeadShark':
                    return [_0x2e6e95, 0x3, 'Hammerhead\x0aShark', 'ocean/shark/2/shark'];
                case 'skin_panda':
                    return [_0x59b412, 0x2, 'Panda', 'land/panda/panda'];
                case 'skin_zonkey':
                    return [_0x1bb5dc, 0x3, 'Zonkey', 'land/donkey/2/zonkey'];
                case 'skin_okapi':
                    return [_0x5ae0eb, 0x2, 'Okapi', 'land/okapi/okapi'];
                case 'skin_giantCroc':
                    return [_0x590076, 0x1, 'Giant\x0aCrocodile', 'land/croc/0/1/croc'];
                case 'skin_purpleMouse':
                    return [_0x19eca4, 0x2, 'Purple\x0aMouse', 'land/mouse/2/mouse'];
                case 'skin_prismaToucan':
                    return [_0x4927bb, 0x6, 'Prisma\x0aToucan', 'land/toucan/6/toucan'];
                case 'gold_mouse':
                    return [_0x19eca4, 0x1, 'Golden\x0aMouse', 'land/mouse/1/mouse'];
                case 'skin_queenScarlet':
                    return [_0xf8f210, 0x5, 'Queen\x0aScarlet', 'volcano/kingdragon/5/kingdragon'];
                case 'skin_queenCeleste':
                    return [_0xf8f210, 0x6, 'Queen\x0aCeleste', 'volcano/kingdragon/6/kingdragon'];
                case 'skin_bigFoot':
                    return [_0x198193, 0x1, 'The\x0aBigfoot', 'land/bigfoot/1/thebigfoot'];
                case 'skin_woollyRhino':
                    return [_0x3f35f1, 0x3, 'Woolly\x0aRhino', 'land/rhino/3/rhino'];
                case 'darkPlagueRat':
                    return [_0x19eca4, 0xcc, 'Dark Plague\x0aRat', 'land/mouse/204/0/mouse'];
                case 'lightPlagueRat':
                    return [_0x19eca4, 0xcc, 'Light Plague\x0aRat', 'land/mouse/204/1/mouse'];
                case 'carrotRabbit':
                    return [_0x290562, 0xcc, 'Carrot\x0aRabbit', 'land/rabbit/204/rabbit'];
                case 'darkMatterCrab':
                    return [_0x172231, 0xcc, 'Dark Matter\x0aCrab', 'ocean/crab/204/crab'];
                case 'necromancerMeerkat':
                    return [_0x2521ea, 0xcc, 'Necromancer\x0aMeerkat', 'desert/meerkat/204/meerkat'];
                case 'butcherPig':
                    return [_0xceb64c, 0xcc, 'Butcher\x0aPig', 'land/pig/204/0/pig'];
                case 'hotdogPig':
                    return [_0xceb64c, 0xcc, 'Hot Dog\x0aPig', 'land/pig/204/1/pig'];
                case 'voidScuttlingSquid':
                    return [_0x4ef33a, 0xcc, 'Void Scuttling\x0aSquid', 'ocean/squid/204/squid'];
                case 'spideer':
                    return [_0x538056, 0xcc, 'Spideer', 'arctic/reindeer/204/reindeer'];
                case 'blackAsuraFox':
                    return [_0x3f7358, 0xcc, 'Black Asura\x0aFox', 'land/fox/204/fox'];
                case 'candyCornWarthog':
                    return [_0x5cb417, 0xcc, 'Candy Corn\x0aWarthog', 'desert/warthog/204/warthog'];
                case 'phantomGorilla':
                    return [_0x248ce4, 0xcc, 'Phantom\x0aGorilla', 'land/gorilla/0/204/gorilla.ui'];
                case 'martianLeopard':
                    return [_0x538204, 0xcc, 'Martian\x0aLeopard', 'arctic/snowleopard/204/snowleopard'];
                case 'genieCheetah':
                    return [_0x4d45bb, 0xcc, 'Genie\x0aCheetah', 'land/bigcat/204/cheetah'];
                case 'chimeraTiger':
                    return [_0x149505, 0xcc, 'Chimera\x0aTiger', 'land/tiger/204/tiger'];
                case 'acidHusk':
                    return [_0x242003, 0xcc, 'Acid\x0aHusk', 'desert/vulture/204/vulture'];
                case 'acutiRhino':
                    return [_0x3f35f1, 0xcc, 'Acuti\x0aRhino', 'land/rhino/204/rhino'];
                case 'goldenDevilGoat':
                    return [_0x2a0d7d, 0xcc, 'Golden Devil\x0aGoat', 'arctic/markhor/204/2/markhor'];
                case 'sunHippo':
                    return [_0x1b196d, 0xcc, 'Sun\x0aHippo', 'land/hippo/204/hippo'];
                case 'smileSpider':
                    return [_0x471528, 0xcc, 'Smile\x0aSpider', 'land/giantspider/204/giantspider'];
                case 'bloodwidowSpider':
                    return [_0x4bbe45, 0xcc, 'Bloodwidow\x0aSpider', 'desert/blackwidow/0/204/blackwidow'];
                case 'basiliskCassowary':
                    return [_0x1f079f, 0xcc, 'Basilisk\x0aCassowary', 'land/cassowary/204/cassowary'];
                case 'magmaDragon':
                    return [_0x31f937, 0xcc, 'Magma\x0aDragon', 'land/dragon/0/204/dragon'];
                case 'plasmacoreKingCrab':
                    return [_0x38e413, 0xcc, 'Plasma-core King\x0aCrab', 'ocean/kingcrab/204/kingcrab'];
                case 'frostWolf':
                    return [_0x36fcdc, 0xcc, 'Frost\x0aWolf', 'arctic/yeti/204/yeti'];
                case 'tartarusRex':
                    return [_0x366af5, 0xcc, 'Tartarus\x0aRex', 'land/trex/204/trex'];
                case 'cthulhuKraken':
                    return [_0x9038c6, 0xcc, 'Cthulhu\x0aKraken', 'ocean/kraken/204/kraken'];
                case 'necromus':
                    return [_0x1fb7c3, 0xcc, 'Necromus', 'volcano/landmonster/0/204landmonster'];
                case 'planetEaterMonster':
                    return [_0x1fb7c3, 0xcc, 'Planet Eater\x0aMonster', 'volcano/landmonster/0/205/landmonster'];
                case 'bloodCrystalMonster':
                    return [_0xdd7007, 0xcc, 'Blood Crystal\x0aMonster', 'arctic/icemonster/204/icemonster'];
                case 'superMouse':
                    return [_0x19eca4, 0xca, 'Super Mouse', 'land/mouse/202/mouse'];
                case 'sushiShrimp':
                    return [_0x19fc30, 0xca, 'Sushi Shrimp', 'ocean/shrimp/202/shrimp'];
                case 'plasmaRat':
                    return [_0x427de7, 0xca, 'Plasma Rat', 'desert/kangaroorat/202/kangaroorat'];
                case 'chipmonk':
                    return [_0x3d3994, 0xca, 'Chipmonk', 'desert/chipmunk/202/chipmunk'];
                case 'jackapole':
                    return [_0x290562, 0xca, 'Jackapole', 'land/rabbit/202/0/rabbit'];
                case 'thugPigeon':
                    return [_0x1f01ec, 0xca, 'Thug Pigeon', 'land/pigeon/202/pigeon'];
                case 'royalGuppy':
                    return [_0x1a22d5, 0xca, 'Royal Guppy', 'ocean/trout/0/202/trout'];
                case 'hollowRabbit':
                    return [_0x290562, 0xca, 'Hollow Rabbit', 'land/rabbit/202/1/rabbit'];
                case 'ratMunk':
                    return [_0x214ca3, 0xca, 'Ratmunk', 'desert/chipmunk/202/chipmunk'];
                case 'toxicMole':
                    return [_0xa5c3f5, 0xca, 'Toxic Mole', 'land/mole/202/0/mole'];
                case 'lightningLord':
                    return [_0x1ecc36, 0xca, 'Lightning Lord', 'land/chicken/202/chicken'];
                case 'ufoPigeon':
                    return [_0x3bf4c4, 0xca, 'UFO Pigeon', 'arctic/penguin/202/penguin'];
                case 'cytokineticMole':
                    return [_0xa5c3f5, 0xca, 'Cytokinetic Mole', 'land/mole/202/1/mole'];
                case 'piggyBank':
                    return [_0xceb64c, 0xca, 'Piggy Bank', 'land/pig/202/pig'];
                case 'jackhammer':
                    return [_0x2d9acc, 0xca, 'Jackhammer', 'land/woodpecker/202/woodpecker'];
                case 'leafySeadragon':
                    return [_0x1fff86, 0xca, 'Leafy Seadragon', 'ocean/seahorse/202/seahorse'];
                case 'soapySeal':
                    return [_0x51d33b, 0xca, 'Soapy Seal', 'arctic/seal/202/seal'];
                case 'windupKakapo':
                    return [_0x49ed0a, 0xca, 'Wind-up Kakapo', 'forest/kakapo/202/kakapo'];
                case 'mevazor':
                    return [_0x474e8d, 0xca, 'Mevazor', 'land/deer/202/0/deer'];
                case 'flyMango':
                    return [_0x108e2d, 0xca, 'Fly Mango', 'ocean/flamingo/202/flamingo'];
                case 'psychedelicSquid':
                    return [_0x4ef33a, 0xca, 'Psychedelic Squid', 'ocean/squid/202/squid'];
                case 'piebaldCosmos':
                    return [_0x538056, 0xca, 'Piebald Cosmos', 'arctic/reindeer/202/reindeer'];
                case 'retroNeonGazelle':
                    return [_0x355b29, 0xca, 'Retro Neon Gazelle', 'desert/gazelle/202/gazelle'];
                case 'divineDeer':
                    return [_0x474e8d, 0xca, 'Divine Deer', 'land/deer/202/1/deer'];
                case 'grassHedgehog':
                    return [_0x40e6df, 0xca, 'Grass Hedgehog', 'land/hedgehog/202/hedgehog'];
                case 'spectrumPeacock':
                    return [_0x5bec16, 0xca, 'Spectrum Peacock', 'land/peacock/202/peacock'];
                case 'discoJellyfish':
                    return [_0x4a5a29, 0xca, 'Disco Jellyfish', 'ocean/jellyfish/202/0/jellyfish'];
                case 'iceFox':
                    return [_0x38ffba, 0xca, 'Ice Fox', 'arctic/arcticfox/202/arcticfox'];
                case 'fireFox':
                    return [_0x29f076, 0xca, 'Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
                case 'muscipulaRaven':
                    return [_0x1a5786, 0xca, 'Muscipula Raven', 'forest/raven/202/raven'];
                case 'sneakyFox':
                    return [_0x3f7358, 0xca, 'Sneaky Fox', 'land/fox/202/fox'];
                case 'twistedHorror':
                    return [_0x4a5a29, 0xca, 'Twisted Horror', 'ocean/jellyfish/202/1/jellyfish'];
                case 'purpleFireFox':
                    return [_0x29f076, 0xca, 'Purple Fire Fox', 'desert/fennecfox/202/1/fennecfox'];
                case 'synthZebra':
                    return [_0x5ae0eb, 0xca, 'Synth Zebra', 'land/zebra/202/zebra'];
                case 'moltenGlassTurtle':
                    return [_0x23c342, 0xca, 'Molten Glass Turtle', 'ocean/turtle/202/turtle'];
                case 'monitorMuskox':
                    return [_0x33ea21, 0xca, 'Monitor Muskox', 'arctic/muskox/202/muskox'];
                case 'headlessMule':
                    return [_0x1bb5dc, 0xca, 'Headless Mule', 'land/donkey/202/donkey'];
                case 'quilinGiraffe':
                    return [_0xbdc345, 0xca, 'Quilin Giraffe', 'land/giraffe/202/0/giraffe'];
                case 'etherStingray':
                    return [_0x31158f, 0xca, 'Ether Stingray', 'ocean/stingray/202/0/stingray'];
                case 'potatoWalrus':
                    return [_0x44a111, 0xca, 'Potato Walrus', 'arctic/walrus/202/walrus'];
                case 'fungalCamel':
                    return [_0x41fd87, 0xca, 'Fungal Camel', 'desert/camel/202/camel'];
                case 'draquorum':
                    return [_0xbdc345, 0xca, 'Draquorum', 'land/giraffe/202/1/giraffe'];
                case 'pancakeStingray':
                    return [_0x31158f, 0xca, 'Pancake Stingray', 'ocean/stingray/202/1/stingray'];
                case 'kongrilla':
                    return [_0x248ce4, 0xca, 'Kongrilla', 'land/gorilla/0/202/gorilla'];
                case 'corpseFlowerToucan':
                    return [_0x4927bb, 0xca, 'Corpse Flower Toucan', 'land/toucan/202/toucan'];
                case 'ballonPufferfish':
                    return [_0x1dbdcd, 0xca, 'Balloon Pufferfish', 'ocean/pufferfish/202/pufferfish'];
                case 'astralLeopard':
                    return [_0x538204, 0xca, 'Astral Leopard', 'arctic/snowleopard/202/snowleopard'];
                case 'cmykNeonCheetah':
                    return [_0x4d45bb, 0xca, 'C.M.Y.K NeoN Cheetak', 'land/bigcat/202/cheetah'];
                case 'beekeeperBear':
                    return [_0x59b412, 0xca, 'Beekeeper Bear', 'land/bear/0/202/bear'];
                case 'dalmatianPelican':
                    return [_0xd787b4, 0xca, 'Dalmatian Pelican', 'ocean/pelican/202/pelican'];
                case 'rocketSwordfish':
                    return [_0x9918f2, 0xca, 'Rocket Swordfish', 'ocean/swordfish/0/202/swordfish'];
                case 'okamiWolf':
                    return [_0x3d9765, 0xca, 'Okami Wolf', 'arctic/wolf/202/wolf'];
                case 'anubisHyena':
                    return [_0x502a88, 0xca, 'Anubis Hyena', 'desert/hyena/202/hyena'];
                case 'gobeeBear':
                    return [_0x466d53, 0xca, 'Gobee Bear', 'desert/gobibear/202/gobibear'];
                case 'chimeraLion':
                    return [_0x178278, 0xca, 'Chimera Lion', 'land/lion/202/lion'];
                case 'meteorFalcon':
                    return [_0x24c6d5, 0xca, 'Meteor Falcon', 'land/falcon/202/falcon'];
                case 'naKika':
                    return [_0x283bbc, 0xca, 'Na Kika', 'ocean/octopus/202/octopus'];
                case 'waterBear':
                    return [_0x2f4199, 0xca, 'Water Bear', 'arctic/bear/202/bear'];
                case 'croczilla':
                    return [_0x590076, 0xca, 'Croczilla', 'land/croc/0/202/croc'];
                case 'ammit':
                    return [_0x590076, 0xca, 'Ammit', 'land/croc/0/203/croc'];
                case 'cottonCandyRhino':
                    return [_0x3f35f1, 0xca, 'Cotton Candy Rhino', 'land/rhino/202/rhino'];
                case 'floralWolverine':
                    return [_0x55fd3d, 0xca, 'Floral Wolverine', 'arctic/wolverine/202/wolverine'];
                case 'minotaur':
                    return [_0x456e24, 0xca, 'Minotaur', 'desert/bison/202/bison'];
                case 'planetHippo':
                    return [_0x1b196d, 0xca, 'Planet Hippo', 'land/hippo/202/hippo'];
                case 'seaAngelOrca':
                    return [_0x26d386, 0xca, 'Sea Angel Orca', 'ocean/killerwhale/202/killerwhale'];
                case 'icefangSabertooth':
                    return [_0x3ccf08, 0xca, 'Ice-Fang Sabertooth', 'arctic/sabertooth/202/sabertooth'];
                case 'galaxyKomodoDragon':
                    return [_0x4a2a55, 0xca, 'Galaxy Komodo Dragon', 'desert/komododragon/202/komododragon'];
                case 'sapphireCaveSpider':
                    return [_0x471528, 0xca, 'Sapphire Cave Spider', 'land/giantspider/202/giantspider'];
                case 'pastelCassowary':
                    return [_0x1f079f, 0xca, 'Pastel Cassowary', 'land/cassowary/202/cassowary'];
                case 'whaleboat':
                    return [_0x52a058, 0xca, 'Whale Boat', 'ocean/bluewhale/0/202/bluewhale'];
                case 'acidMammoth':
                    return [_0x5ed897, 0xca, 'Acid Mammoth', 'arctic/mammoth/202/0/mammoth'];
                case 'iceWizardElephant':
                    return [_0x1d892b, 0xca, 'Ice Wizard Elephant', 'land/elephant/0/202/elephant'];
                case 'ancientIslandMonster':
                    return [_0x52a058, 0xca, 'Ancient Island Monster', 'ocean/bluewhale/0/203/bluewhale'];
                case 'crystalGolem':
                    return [_0x5ed897, 0xca, 'Crystal Golem', 'arctic/mammoth/202/1/mammoth'];
                case 'aberrantDragon':
                    return [_0x31f937, 0xca, 'Aberrant Dragon', 'land/dragon/0/202/dragon'];
                case 'astralDragon':
                    return [_0x31f937, 0xe0, 'Astral Dragon', 'land/dragon/0/204/dragon'];
                case 'astralPhoenix':
                    return [_0x48a3f9, 0xc8, 'Astral Phoenix', 'volcano/phoenix/200/4/phoenix'];
                case 'roseDragon':
                    return [_0x31f937, 0xe1, 'Rose Dragon', 'land/dragon/0/225/dragon'];
                case 'purpleHaze':
                    return [_0x31f937, 0xe2, 'Purple Haze', 'land/dragon/0/226/dragon'];
                case 'copperPhoenix':
                    return [_0x31f937, 0x3, 'Copper Phoenix', 'volcano/phoenix/3/phoenix'];
                case 'agDragon':
                    return [_0x31f937, 0xce, 'AG Dragon', 'land/dragon/0/206/dragon'];
                case 'hyporevenantRex':
                    return [_0x366af5, 0xca, 'Hyporevenant Rex', 'land/trex/202/0/trex'];
                case 'giantSquid':
                    return [_0x9038c6, 0xca, 'Giant Squid', 'ocean/kraken/202/0/kraken'];
                case 'lovelyYeti':
                    return [_0x36fcdc, 0xca, 'Lovely Yeti', 'arctic/yeti/202/0/yeti'];
                case 'abyssalKingCrab':
                    return [_0x38e413, 0xca, 'Abyssal King Crab', 'ocean/kingcrab/202/kingcrab'];
                case 'hydrothothKraken':
                    return [_0x9038c6, 0xca, 'Hydrothoth Kraken', 'ocean/kraken/202/1/kraken'];
                case 'frostEyeDemon':
                    return [_0x36fcdc, 0xca, 'Frosty Eye Demon', 'arctic/yeti/202/1/yeti'];
                case 'ghoulDragon':
                    return [_0x31f937, 0xca, 'Ghoul Dragon', 'land/dragon/0/203/dragon'];
                case 'tankMonster':
                    return [_0x19d925, 0xca, 'Tank Monster', 'land/dinomonster/202/dinomonster'];
                case 'fighterJet':
                    return [_0x1fb7c3, 0xca, 'Fighter Jet', 'volcano/landmonster/0/202/landmonster'];
                case 'submarineMonster':
                    return [_0x346859, 0xca, 'Submarine Monster', 'ocean/seamonster/202/seamonster'];
                case 'kingGraveyard1':
                    return [_0xf8f210, 0xca, 'King Graveyard', 'volcano/kingdragon/202/kingdragon'];
                case 'fairyRabbit':
                    return [_0x290562, 0xdc, 'Fairy Rabbit', 'land/rabbit/220/rabbit'];
                case 'darkMatterWarthog':
                    return [_0x5cb417, 0xca, 'Dark Matter Warthog', 'desert/warthog/220/warthog'];
                case 'fumigatorPig':
                    return [_0xceb64c, 0xdc, 'Fumigator Pig', 'land/pig/220/pig'];
                case 'moltenToucan':
                    return [_0x4927bb, 0xdc, 'Molten Toucan', 'land/toucan/220/toucan.ui'];
                case 'summonerWolverine':
                    return [_0x55fd3d, 0xdc, 'Summoner Wolverine', 'arctic/wolverine/220/wolverine'];
                case 'golemMammoth':
                    return [_0x5ed897, 0xdc, 'Golem Mammoth', 'arctic/mammoth/220/mammoth'];
                case 'glacialDemon':
                    return [_0x36fcdc, 0xdc, 'Glacial Demon', 'arctic/yeti/220/yeti'];
                case 'cordyceraDino':
                    return [_0x19d925, 0xdc, 'Cordycera Dino', 'land/dinomonster/220/dinomonster'];
                case 'blazingIceMonster':
                    return [_0xdd7007, 0xdc, 'BlazingIce Monster', 'arctic/icemonster/220/icemonster'];
                case 'bioMutantTRex':
                    return [_0x366af5, 0xdc, 'Bio Mutant T-rex', 'land/trex/220/trex'];
                case 'sunsetOstrich':
                    return [_0x123d4e, 0xdc, 'Sunset Ostrich', 'land/ostrich/220/ostrich'];
                case 'lightwaveElephant':
                    return [_0x1d892b, 0xdc, 'Lightwave Elephant', 'land/elephant/0/220/elephant'];
                case 'inkRhino':
                    return [_0x3f35f1, 0xdc, 'Ink Rhino', 'land/rhino/220/rhino'];
                case 'dimensionalMonster':
                    return [_0x346859, 0xdc, 'Dimensional Monster', 'ocean/seamonster/220/seamonster'];
                case 'nebuladonScorpion':
                    return [_0x582280, 0xdc, 'Nebuladon Scorpion', 'desert/scorpion/220/giantscorpion'];
                case 'ghastlyJadeLion':
                    return [_0x178278, 0xdc, 'Ghastly Jade Lion', 'land/lion/220/lion'];
                case 'belphegor':
                    return [_0x1fb7c3, 0xdc, 'Belphegor', 'volcano/landmonster/0/220/landmonster'];
                case 'muscipulaRaven':
                    return [_0x1a5786, 0xdc, 'Muscipula Raven', 'forest/raven/220/raven'];
                case 'behemothHiveDragon':
                    return [_0x31f937, 0xdc, 'Behemoth Hive Dragon', 'land/dragon/0/220/dragon'];
                case 'okamiWolf':
                    return [_0x3d9765, 0xdc, 'Okami Wolf', 'arctic/wolf/220/wolf'];
                case 'starCrusherCrab':
                    return [_0x38e413, 0xdc, 'Star Crusher Crab', 'ocean/kingcrab/220/kingcrab'];
                case 'drBrainiopod':
                    return [_0x9038c6, 0xdc, 'Dr. Brainiopod', 'ocean/kraken/220/kraken'];
                case 'xmas22_iceHuskTrout':
                    return [_0x1a22d5, 0xde, 'Ice Husk Trout', 'ocean/trout/0/221/trout'];
                case 'xmas22_jollyRabbit':
                    return [_0x290562, 0xde, 'Jolly Rabbit', 'land/rabbit/222/rabbit'];
                case 'xmas22_peppermintLandMonster':
                    return [_0x1fb7c3, 0xde, 'Peppermint Land Monster', 'volcano/landmonster/0/222/landmonster'];
                case 'xmas22_gingerbreadKraken':
                    return [_0x9038c6, 0xde, 'Gingerbread Kraken', 'ocean/kraken/222/kraken'];
                case 'val23_wolverine':
                    return [_0x55fd3d, 0x0, 'Valentine Wolverine', 'arctic/wolverine/0/223/wolverine'];
                case 'val23_orca':
                    return [_0x26d386, 0x0, 'Valentine Orca', 'ocean/killerwhale/0/223/killerwhale'];
                case 'val23_mamoth':
                    return [_0x5ed897, 0x0, 'Valentine Mammoth', 'arctic/mammoth/0/223/mammoth'];
                case 'val23_whale':
                    return [_0x52a058, 0x0, 'Valentine Whale', 'ocean/bluewhale/0/223/bluewhale'];
                case 'val23_walrus':
                    return [_0x44a111, 0x0, 'Valentine Walrus', 'arctic/walrus/0/223/walrus'];
                case 'val23_stingray':
                    return [_0x31158f, 0x0, 'Valentine Stingray', 'ocean/stingray/0/223/stingray'];
                case 'val23_snowleopard':
                    return [_0x538204, 0x0, 'Valentine Snow Leopard', 'arctic/snowleopard/0/223/snowleopard'];
                case 'val23_gorilla':
                    return [_0x248ce4, 0x0, 'Valentine Gorilla', 'land/gorilla/0/223/gorilla'];
                case 'animal_BirdMonster':
                    return [a_birdMonster, 0x0, 'Bird Monster', 'land/birdmonster/0/birdmonster'];
                case 'apesGorilla':
                    return [_0x248ce4, 0xe0, 'Apes.io Gorilla', 'land/gorilla/0/224/gorilla'];
                case 'hw2023_botX303':
                    return [_0x4bbe45, 0x7e7, 'Bot X-303', 'desert/blackwidow/0/2023/blackwidow'];
                case 'hw2023_sodaFish':
                    return [_0x9918f2, 0x7e7, 'Sodafish', 'ocean/swordfish/0/2023/swordfish'];
                case 'hw2023_solarWyvern':
                    return [_0x1fb7c3, 0x7e7, 'Solar Wyvern', 'volcano/landmonster/0/2023/landmonster'];
                case 'hw2023_drLochness':
                    return [_0x1a22d5, 0x7e7, 'Dr. Lochness', 'ocean/trout/0/2023/trout'];
                case 'hw2023_moltenFrostWhale':
                    return [_0x52a058, 0x7e7, 'Molten Frost Whale', 'ocean/bluewhale/0/2023/bluewhale'];
                case 'hw2023_sharkodile':
                    return [_0x590076, 0x7e7, 'Sharkodile', 'land/croc/0/2023/croc'];
                case 'hw2023_mafiaGorilla':
                    return [_0x248ce4, 0x7e7, 'Mafia Gorilla', 'land/gorilla/0/2023/gorilla'];
                case 'hw2023_carnivalElephant':
                    return [_0x1d892b, 0x7e7, 'Carnival Elephant', 'land/elephant/0/2023/elephant'];
                case 'hw2023_beachBattleKraken':
                    return [_0x9038c6, 0x7e7, 'Beach Battle Kraken', 'ocean/kraken/0/2023/kraken'];
                case 'hw2023_stormDragon':
                    return [_0x31f937, 0x7e7, 'Storm Dragon', 'land/dragon/0/2023/dragon'];
                case 'hw2023_spookyBear':
                    return [_0x59b412, 0xca, 'Spooky Bear', 'land/bear/0/2023/bear'];
            }
            return [_0x19eca4, 0x1869f, 'Error Skin', ''];
        };
        var _0x498438 = _0xda9997,
            _0x4d8447 = _0x456489;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447;

        function _0xda9997() {
            _0xda9997['superClass']['call'](this, _0x1592f9);
        }
        _0xda9997['prototype']['loadShopData'] = function(_0x30f2f5) {
            _0xda9997['superClass']['prototype']['loadShopData']['call'](this, _0x30f2f5), this['itemId'] = _0x30f2f5['itemId'], this['title'] = _0x30f2f5['description'], this['saleType'] = _0x30f2f5['saleType'], this['salePrice'] = _0x30f2f5['salePrice'];
        }, _0xda9997['prototype']['getShopImageSrc'] = function() {
            return 'shop/deals/' + this['itemId']['toLowerCase']() + '.png';
        }, _0xda9997['prototype']['getImage'] = function() {
            var _0x4d3784 = new Image();
            return _0x4d3784['className'] = 'shopdeal', _0x4d3784['src'] = 'shop/deals/' + this['itemId']['toLowerCase']() + '.png', _0x4d3784['loading'] = 'lazy', _0x4d3784;
        }, _0xda9997['prototype']['getTitle'] = function() {
            var _0x15fbcf = '' + this['title'];
            return _0x15fbcf['replace']('\x0a', '<br>')['toUpperCase']();
        }, _0xda9997['prototype']['generateHtml'] = function(_0x352cc8) {
            var _0x2af8bf = 'item deal' + (this['price'] == -0x1 ? ' itemOwned buyItem' : ' buyItem') + ' ' + this['itemId'];
            if (_0x352cc8 == _0x32d458) _0x2af8bf = _0x2af8bf + ' confirm_deal';
            var _0x3a5715 = _0x29e808('', _0x2af8bf),
                _0x2e3383 = _0x29e808('', 'image ' + 'biome_' + this['biome']),
                _0x330464 = _0x29e808('', 'price'),
                _0x4dbe88 = _0x29e808('', 'orig-value');
            _0x3a5715['setAttribute']('title', this['getTitle']()['replace']('<BR>', ' ')), _0x330464['innerHTML'] = this['getTitle']();
            var _0x576a40 = this['getImage']();
            _0x2e3383['appendChild'](_0x576a40);
            if (this['price'] > 0x0) {
                var _0x50cb46 = '';
                if (this['saleType'] == 0x1) _0x50cb46 = 'NEW BUNDLE';
                else {
                    if (this['saleType'] == 0x2) _0x50cb46 = 'SALE BUNDLE';
                }
                if (_0x50cb46 != '') {
                    var _0x3ea667 = _0x29e808('newItem_' + this['animalType'], 'newItem');
                    _0x3ea667['innerHTML'] = _0x50cb46, _0x3a5715['appendChild'](_0x3ea667);
                }
            }
            _0x3a5715['appendChild'](_0x2e3383), _0x3a5715['appendChild'](_0x330464);
            if (this['saleType'] == 0x2) {
                var _0x82d089 = new Image();
                _0x82d089['className'] = 'buycoin-img', _0x82d089['src'] = 'shop/mopecoin.png';
                var _0x52848d = _0x3851ae('span', '', 'buycoin-price');
                _0x52848d['innerHTML'] = this['price'], _0x4dbe88['appendChild'](_0x82d089), _0x4dbe88['appendChild'](_0x52848d);
            } else _0x4dbe88['innerText'] = 'NO SALE';
            if (this['price'] > 0x0) _0x3a5715['appendChild'](_0x4dbe88), _0x3a5715['appendChild'](this['btn']['generateHtml'](_0x352cc8));
            else {}
            return _0x3a5715;
        }, _0xda9997['prototype']['fillItemDetails'] = function(_0x457d08) {
            var _0xcea43b = _0x29e808('bundleSkins', 'bundleSkins_' + this['itemId']);
            _0x457d08['appendChild'](_0xcea43b);
            if (this['data']['bundled'])
                for (i = 0x0; i < _0x100ed7['shop']['allItems']['length']; i++) {
                    var _0x1b1505 = _0x100ed7['shop']['allItems'][i];
                    if (!this['data']['bundled']['includes'](_0x1b1505['data']['id'])) continue;
                    var _0x4b4930 = _0x100ed7['getPostFixForItem'](_0x1b1505['data']['itemId']),
                        _0x4d024e = _0x1b1505['getImagePromo'](_0x4b4930);
                    _0x4d024e['className'] = 'bundleSkinImg' + (_0x1b1505['price'] == -0x1 ? ' bought' : ''), _0x4d024e['width'] = '40px', _0xcea43b['appendChild'](_0x4d024e);
                }
        };
        var _0x1592f9 = 0x3;
        _0x4b9556['setCustomClassForShopItem'](_0xda9997, _0x1592f9);
        var _0x498438 = _0x5edd9a,
            _0x4d8447 = _0x456489;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447;

        function _0x5edd9a() {
            _0x5edd9a['superClass']['call'](this, _0x1592f9);
        }
        _0x5edd9a['prototype']['loadShopData'] = function(_0x2ebe12) {
            _0x5edd9a['superClass']['prototype']['loadShopData']['call'](this, _0x2ebe12), this['itemId'] = _0x2ebe12['itemId'], this['title'] = _0x2ebe12['description'], this['credits'] = _0x2ebe12['credits'], this['saleType'] = _0x2ebe12['saleType'], this['salePrice'] = _0x2ebe12['salePrice'];
        }, _0x5edd9a['prototype']['getShopImageSrc'] = function() {
            return 'shop/feature/' + this['itemId']['toLowerCase']() + '.png';
        }, _0x5edd9a['prototype']['getImage'] = function() {
            var _0x30d3cb = new Image();
            return _0x30d3cb['className'] = 'shopFeature', _0x30d3cb['src'] = 'shop/feature/' + this['itemId']['toLowerCase']() + '.png', _0x30d3cb['loading'] = 'lazy', _0x30d3cb;
        }, _0x5edd9a['prototype']['getTitle'] = function() {
            var _0x290a01 = '' + this['title'];
            return _0x290a01['replace']('\x0a', '<br>')['toUpperCase']();
        }, _0x5edd9a['prototype']['generateHtml'] = function(_0x56dda9) {
            var _0x19f787 = 'item feature ' + (this['price'] == -0x1 ? ' itemOwned' : ' buyItem') + ' ' + this['itemId'];
            if (_0x56dda9 == _0x32d458) _0x19f787 = _0x19f787 + ' confirm_item';
            var _0x419033 = _0x29e808('', _0x19f787),
                _0x4fa431 = _0x29e808('', 'image ' + 'biome_' + this['biome']),
                _0x7ad184 = _0x29e808('', 'price');
            _0x7ad184['innerHTML'] = this['title'];
            var _0x16169f = this['getImage']();
            _0x4fa431['appendChild'](_0x16169f);
            if (this['price'] > 0x0) {
                var _0x48e9a0 = '';
                if (this['saleType'] == 0x1) _0x48e9a0 = 'NEW';
                else {
                    if (this['saleType'] == 0x2) _0x48e9a0 = 'SALE';
                }
                this['salePrice'] != this['price'] && this['saleType'] > 0x0 && (_0x48e9a0 += ' -' + Math['floor']((0x1 - this['salePrice'] / this['price']) * 0x64) + '%');
                if (_0x48e9a0 != '') {
                    var _0x723d60 = _0x29e808('newItem_' + this['animalType'], 'newItem');
                    _0x723d60['innerHTML'] = _0x48e9a0, _0x419033['appendChild'](_0x723d60);
                }
            }
            _0x419033['appendChild'](_0x4fa431), _0x419033['appendChild'](_0x7ad184);
            if (this['price'] >= 0x0) _0x419033['appendChild'](this['btn']['generateHtml'](_0x56dda9));
            else {
                if (_0x56dda9 != _0x55400b) var _0x17c5da = this;
            }
            return _0x419033;
        }, _0x5edd9a['prototype']['fillItemDetails'] = function(_0x170891) {
            var _0x87c599 = _0x29e808('bundleSkins', 'bundleSkins_' + this['itemId']);
            _0x170891['appendChild'](_0x87c599);
            if (this['data']['aniTypes'] == undefined)
                for (i = 0x0; i < _0x100ed7['shop']['allItems']['length']; i++) {
                    var _0x14989a = _0x100ed7['shop']['allItems'][i];
                    if (_0x14989a && _0x14989a['data']['promotions'] && _0x14989a['data']['promotions']['toLowerCase']()['indexOf'](this['itemId']['toLowerCase']()) > -0x1) {
                        var _0x5648f3 = _0x100ed7['getPostFixForItem'](_0x14989a['data']['itemId']),
                            _0x16b812 = _0x14989a['getImagePromo'](_0x5648f3);
                        _0x16b812['className'] = 'bundleSkinImg' + (_0x14989a['price'] == -0x1 ? ' bought' : ''), _0x16b812['width'] = '40px', _0x87c599['appendChild'](_0x16b812);
                    }
                } else
                    for (i = 0x0; i < this['data']['aniTypes']['length']; i++) {
                        if (this['data']['aniTypes'][i] == 0x3e8) continue;
                        var _0x121ac3 = _0x100ed7['getSkinPath'](this['data']['aniTypes'][i], this['data']['theme']);
                        console['log'](_0x121ac3);
                        var _0x16b812 = new Image();
                        _0x16b812['src'] = _0x121ac3, _0x16b812['loading'] = 'lazy', _0x16b812['className'] = 'bundleSkinImg aniTypes', _0x16b812['width'] = '40px', _0x87c599['appendChild'](_0x16b812);
                    }
        };
        var _0x3aeb57 = 0x4;
        _0x4b9556['setCustomClassForShopItem'](_0x5edd9a, _0x3aeb57);
        var _0x498438 = _0x3efc1f,
            _0x4d8447 = _0x456489;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447;
        var _0x2e4173 = 0x3e9;

        function _0x3efc1f(_0x140c24, _0x2830ae) {
            _0x3efc1f['superClass']['call'](this, _0x2e4173);
        }
        _0x3efc1f['prototype']['data'] = null, _0x3efc1f['prototype']['loadShopData'] = function(_0x5aff80) {
            _0x3efc1f['superClass']['prototype']['loadShopData']['call'](this, _0x5aff80), this['data'] = _0x5aff80, this['getPropType']();
        }, _0x3efc1f['prototype']['itemType'] = null, _0x3efc1f['prototype']['propType'] = null, _0x3efc1f['prototype']['propColor'] = null, _0x3efc1f['prototype']['getPropType'] = function() {
            if (this['data'] == null) return;
            var _0x3c91a6 = this['data']['id']['split']('_');
            _0x3c91a6['length'] == 0x3 && (this['itemType'] = _0x3c91a6[0x0], this['propType'] = _0x3c91a6[0x1], this['propColor'] = _0x3c91a6[0x2]);
        }, _0x4b9556['setCustomClassForShopItem'](_0x3efc1f, _0x2e4173);

        function _0x5a5d12(_0x47db19) {
            this['tabs'] = {
                'titles': new Array()
            }, this['data'] = _0x47db19, this['load'] = function() {
                for (i = 0x0; i < this['data']['length']; i++) {
                    var _0x500c10 = this['data'][i]['itemType'];
                    this['tabs'][_0x500c10] === undefined && (this['tabs']['titles']['push'](_0x500c10), this['tabs'][_0x500c10] = new Array()), this['tabs'][_0x500c10]['push'](this['data'][i]);
                }
            };
        }
        var _0x498438 = _0x4dea18,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x498438['prototype']['arenaState'] = 0x0, _0x498438['prototype']['fightNumber'] = 0x0, _0x498438['prototype']['climaxType'] = 0x1, _0x498438['prototype']['timer'] = 0x0, _0x498438['prototype']['timerTxt'] = null, _0x498438['prototype']['p1Name'] = null, _0x498438['prototype']['p2Name'] = null, _0x498438['prototype']['p1Bites'] = 0x0, _0x498438['prototype']['p2Bites'] = 0x0, _0x498438['prototype']['arenaRad'] = 0xa, _0x498438['prototype']['nArenaRad'] = 0xa, _0x498438['prototype']['oArenaRad'] = 0xa, _0x498438['prototype']['isCountdownTimer'] = !![], _0x498438['prototype']['p1PushRemain'] = 0x0, _0x498438['prototype']['p1DashRemain'] = 0x0, _0x498438['prototype']['p2PushRemain'] = 0x0, _0x498438['prototype']['p2DashRemain'] = 0x0, _0x4dea18['prototype']['setTimer'] = function(_0x2181fb) {
            var _0x35dfa0 = '',
                _0x46ad7c = 0x19;
            if (this['isCountdownTimer']) _0x35dfa0 = '' + _0x2181fb;
            else {
                _0x46ad7c = 0xf;
                if (this['isCpuVsPlayer']) _0x35dfa0 = '1v1 REDEMPTION';
                else {
                    if (this['arenaModeType'] == 0x2) _0x35dfa0 = 'MATCH #' + this['fightNumber'];
                    else _0x35dfa0 = 'FIGHT\x0a#' + this['fightNumber'];
                }
                _0x35dfa0 = _0x3a357f['name'] + '\x0a' + _0x35dfa0;
            }
            if (this['isCountdownTimer']) _0x46ad7c = Number(_0x2181fb) ? 0x1e : _0x46ad7c;
            null == this['timerTxt'] ? (this['timerTxt'] = new _0x16040f(_0x46ad7c, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x35dfa0)) : (this['timerTxt']['setFontSize'](_0x46ad7c), this['timerTxt']['setText'](_0x35dfa0));
            var _0x530aeb = 'MOPE';
            if (this['arenaModeType'] == 0x1) _0x530aeb = 'NOOB';
            else {
                if (this['arenaModeType'] == 0x2) _0x530aeb = 'PRO';
            }
            var _0x2d120a = this['climaxType'] == 0x1 ? 'LAST ' + _0x530aeb + ' STANDING' : this['maxBitesToWin'] + ' BITES WINS';
            null == this['climaxTxt'] ? (this['climaxTxt'] = new _0x16040f(_0x46ad7c, '#FFFFFF'), this['climaxTxt']['strokeW'] = 0x2, this['climaxTxt']['multiLine'] = !![], this['climaxTxt']['renderScale'] = 0x5, this['climaxTxt']['setText'](_0x2d120a)) : (this['climaxTxt']['setFontSize'](0xf), this['climaxTxt']['setText'](_0x2d120a));
        }, _0x4dea18['prototype']['playerFontSize'] = 0xa, _0x4dea18['prototype']['setP1'] = function(_0x3c475e) {
            var _0x13d06e = '' + _0x3c475e;
            null == this['p1Name'] ? (this['p1Name'] = new _0x16040f(this['playerFontSize'], 'cyan'), this['p1Name']['strokeW'] = 0x2, this['p1Name']['multiLine'] = !![], this['p1Name']['renderScale'] = 0x2, this['p1Name']['setText'](_0x13d06e)) : (this['p1Name']['setFontSize'](this['playerFontSize']), this['p1Name']['setText'](_0x13d06e));
        }, _0x4dea18['prototype']['setP2'] = function(_0x204835) {
            var _0x5835b9 = '' + _0x204835;
            null == this['p2Name'] ? (this['p2Name'] = new _0x16040f(this['playerFontSize'], 'yellow'), this['p2Name']['strokeW'] = 0x2, this['p2Name']['multiLine'] = !![], this['p2Name']['renderScale'] = 0x2, this['p2Name']['setText'](_0x5835b9)) : (this['p2Name']['setFontSize'](this['playerFontSize']), this['p2Name']['setText'](_0x5835b9));
        }, _0x4dea18['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x4dea18['prototype']['dotX'] = 0.33, _0x4dea18['prototype']['dotY'] = 0.77;
        var _0x1464e8 = 0x23,
            _0x49b607 = 0.72,
            _0x39afc2 = 0.2,
            _0x26ec7f = 0.65,
            _0x5ee6cc = 0xa;
        _0x4dea18['prototype']['glowEffect'] = 0x0, _0x4dea18['prototype']['ver'] = 0x2, _0x4dea18['prototype']['customDraw'] = function(_0xd82c37) {
            if (_0x9ffe4d && _0x13635f && _0x5a4190 == this['id']) this['drawCanvas']();
            (this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && this['displayEndScreen']();
            _0x4597c4['save'](), _0x4597c4['rotate'](-0.5 * Math['PI']), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.065, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['arenaRad'], 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = 'red', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
            if (_0x5a4190 == this['id']) {
                if (_0x5a4190 == this['id'] && this['arenaState'] == 0x1) {
                    _0x4597c4['save'](), _0x4597c4['lineWidth'] = 0x4, _0x4597c4['globalAlpha'] = 0.5;
                    var _0x2ecbcf = -0x2 * this['timeoutAngle'];
                    if (this['closingAngleSet']) {
                        var _0x175b91 = -0x2 * this['arenaClosingAngle'];
                        _0x4597c4['save'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'] - 0x2, _0x175b91 * Math['PI'], _0x2ecbcf * Math['PI']), _0x4597c4['strokeStyle'] = 'red', _0x4597c4['stroke'](), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x175b91 * Math['PI']), _0x4597c4['strokeStyle'] = '#32ff00', _0x4597c4['stroke'](), _0x4597c4['restore']();
                    } else _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'] - 0x2, 0x0, _0x2ecbcf * Math['PI']), _0x4597c4['strokeStyle'] = '#32ff00', _0x4597c4['stroke']();
                    _0x4597c4['restore']();
                }
                if (this['showTimerAngle']) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5;
                    var _0x1fdf9e = -0x2 * this['timerAngle'];
                    _0x4597c4['beginPath'](), _0x4597c4['lineWidth'] = 0x2, _0x4597c4['arc'](0x0, 0x0, this['arenaRad'] + 0x2, 0x0, _0x1fdf9e * Math['PI']), _0x4597c4['strokeStyle'] = 'red', _0x4597c4['stroke'](), _0x4597c4['restore']();
                }
            }
            _0x4597c4['restore']();
            if (this['timerTxt'] != null) {
                if (this['arenaState'] == 0x0) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']();
                else {
                    if (this['arenaState'] == 0x1) this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']());
                    else(this['arenaState'] == 0x2 || this['arenaState'] == 0x3) && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw'](), this['climaxTxt'] != null && (this['climaxTxt']['x'] = 0x0, this['climaxTxt']['y'] = this['rad'] * 0.85, this['climaxTxt']['draw']()));
                }
            }
            var _0x368c69 = 0xf,
                _0x2a4936 = this['rad'] / 0x2 + this['rad'] * 0.05;
            if (this['p1Name'] != null) {
                this['p1Name']['x'] = -this['rad'] / 0x2, this['p1Name']['y'] = -this['rad'] * 0.65, this['p1Name']['draw']();
                if (!this['isCpuVsPlayer']) {
                    var _0x1b09da = 0x0,
                        _0x13ea7b = -this['rad'] * _0x49b607;
                    _0x1b09da -= _0x1464e8, _0x13ea7b -= _0x368c69 * 0x2;
                    var _0xee7547 = this['getSkinImageObj']('gameobj/18/0/0.png');
                    for (i = 0x0; i < this['getLives'](); i++) {
                        _0x1b09da -= _0x368c69 * 2.2;
                        if (_0xee7547) {
                            _0x4597c4['save']();
                            if (this['roundsWon_p1'] > 0x0 && i + 0x1 <= this['roundsWon_p1']) _0x4597c4['globalAlpha'] = 0.8;
                            else _0x4597c4['globalAlpha'] = 0.2;
                            _0x4597c4['drawImage'](_0xee7547, _0x1b09da - _0x368c69, _0x13ea7b - _0x368c69, _0x368c69 * 0x2, _0x368c69 * 0x2), _0x4597c4['restore']();
                        }
                    }
                }
            }
            if (this['p2Name'] != null) {
                this['p2Name']['x'] = this['rad'] / 0x2, this['p2Name']['y'] = -this['rad'] * 0.65, this['p2Name']['draw']();
                if (!this['isCpuVsPlayer']) {
                    var _0x1b09da = 0x0,
                        _0x13ea7b = -this['rad'] * _0x49b607;
                    _0x1b09da = _0x1464e8, _0x13ea7b -= _0x368c69 * 0x2;
                    var _0xee7547 = this['getSkinImageObj']('gameobj/18/0/0.png');
                    for (i = 0x0; i < this['getLives'](); i++) {
                        _0x1b09da += _0x368c69 * 2.2;
                        if (_0xee7547) {
                            _0x4597c4['save']();
                            if (this['roundsWon_p2'] > 0x0 && i + 0x1 <= this['roundsWon_p2']) _0x4597c4['globalAlpha'] = 0.8;
                            else _0x4597c4['globalAlpha'] = 0.2;
                            _0x4597c4['drawImage'](_0xee7547, _0x1b09da - _0x368c69, _0x13ea7b - _0x368c69, _0x368c69 * 0x2, _0x368c69 * 0x2), _0x4597c4['restore']();
                        }
                    }
                }
            }
            if (_0x59b0bc != 0x0 && this['id'] == _0x5a4190 && this['arenaState'] == 0x0) {}
        };
        var _0x2ca4c0 = 0x1,
            _0x56c50e = 0x3,
            _0x9120c6 = 0x5,
            _0x4a088b = 0x9;
        _0x4dea18['prototype']['getLives'] = function() {
            switch (this['fightType']) {
                case _0x2ca4c0:
                    return 0x1;
                case _0x56c50e:
                    return 0x2;
                case _0x9120c6:
                    return 0x3;
                case _0x4a088b:
                    return 0x5;
            }
            return 0x1;
        }, _0x4dea18['prototype']['hasAdLoaded'] = ![], _0x4dea18['prototype']['isCpuVsPlayer'] = ![], _0x4dea18['prototype']['arenaModeType'] = 0x0, _0x4dea18['prototype']['canPush'] = ![], _0x4dea18['prototype']['canDash'] = ![], _0x4dea18['prototype']['isDarkTheme'] = ![], _0x4dea18['prototype']['custom_canvas'] = null, _0x4dea18['prototype']['drawCanvas'] = function() {
            if (this['custom_canvas'] == null) {
                this['custom_canvas'] = document['createElement']('canvas');
                var _0x19cafa = this['rad'] * 0xa,
                    _0xee44f5 = this['rad'] * 0xa;
                this['custom_canvas']['width'] = _0x19cafa, this['custom_canvas']['height'] = _0xee44f5;
                var _0xa88474 = this['custom_canvas']['getContext']('2d');
                _0xa88474['save'](), _0xa88474['globalAlpha'] = 0x1, _0xa88474['fillStyle'] = 'black', _0xa88474['fillRect'](0x0, 0x0, this['custom_canvas']['width'], this['custom_canvas']['height']), _0xa88474['globalCompositeOperation'] = 'xor', _0xa88474['beginPath'](), _0xa88474['arc'](_0x19cafa / 0x2, _0x19cafa / 0x2, this['rad'], 0x0, 0x2 * Math['PI']), _0xa88474['fillStyle'] = 'blue', _0xa88474['fill'](), _0xa88474['restore']();
            }
            this['custom_canvas'] != null && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](this['custom_canvas'], -this['custom_canvas']['width'] / 0x2, -this['custom_canvas']['height'] / 0x2, this['custom_canvas']['width'], this['custom_canvas']['height']), _0x4597c4['restore']());
        }, _0x4dea18['prototype']['timerAngle'] = 0x0, _0x4dea18['prototype']['nTimerAngle'] = 0x0, _0x4dea18['prototype']['showTimerAngle'] = !![], _0x4dea18['prototype']['nTimeoutAngle'] = 0x0, _0x4dea18['prototype']['timeoutAngle'] = 0x0, _0x4dea18['prototype']['arenaTimeoutLeft'] = 0x0, _0x4dea18['prototype']['isArenaClosing'] = ![], _0x4dea18['prototype']['closingAngleSet'] = ![], _0x4dea18['prototype']['arenaClosingAngle'] = 0x0, _0x4dea18['prototype']['onLerpUpdate'] = function(_0xe4019c) {
            _0x4dea18['superClass']['prototype']['onLerpUpdate']['call'](this, _0xe4019c), this['arenaRad'] += (this['nArenaRad'] - this['arenaRad']) * 0.1, this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1, this['timeoutAngle'] += (this['nTimeoutAngle'] - this['timeoutAngle']) * 0.1;
        }, _0x4dea18['prototype']['timeLeft'] = 0x0, _0x4dea18['prototype']['fightType'] = 0x0, _0x4dea18['prototype']['rounds'] = 0x0, _0x4dea18['prototype']['roundsWon_p1'] = 0x0, _0x4dea18['prototype']['roundsWon_p2'] = 0x0, _0x4dea18['prototype']['resetArena'] = ![], _0x4dea18['prototype']['player1DarkTheme'] = ![], _0x4dea18['prototype']['player2DarkTheme'] = ![], _0x4dea18['prototype']['readCustomData_onNewlyVisible'] = function(_0x548420) {
            _0x4dea18['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x548420), this['fightType'] = _0x548420['readUInt8'](), this['arenaState'] = _0x548420['readUInt8'](), this['rounds'] = _0x548420['readUInt8'](), this['p1'] = _0x548420['readString'](), this['p2'] = _0x548420['readString'](), this['arenaModeType'] = _0x548420['readUInt8'](), this['isCpuVsPlayer'] = this['arenaModeType'] == 0x1 || this['arenaModeType'] == 0x2, this['p1Wins'] = _0x548420['readUInt8'](), this['p2Wins'] = _0x548420['readUInt8'](), this['fightNumber'] = _0x548420['readUInt16']();
            var _0x13bd14 = _0x548420['readUInt16']() / 0x64;
            this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0x13bd14, this['setNames'](), this['climaxType'] = _0x548420['readUInt8']();
            if (this['climaxType'] == 0x2) this['maxBitesToWin'] = _0x548420['readUInt8']();
            this['canPush'] = _0x548420['readUInt8']() == 0x1, this['canDash'] = _0x548420['readUInt8']() == 0x1;
        }, _0x4dea18['prototype']['readUpdatedProperty'] = function(_0x41f406, _0x3ec64f) {
            if (_0x41f406 == _0x389429) this['arenaState'] = _0x3ec64f['readUInt8']();
            else {
                if (_0x41f406 == _0x2f64f5) this['rounds'] = _0x3ec64f['readUInt8']();
                else {
                    if (_0x41f406 == _0x3390a5) {
                        var _0x2b3faa = _0x3ec64f['readUInt16']() / 0x64;
                        this['oArenaRad'] = this['arenaRad'], this['nArenaRad'] = _0x2b3faa;
                    } else {
                        if (_0x41f406 == _0x19a142) {
                            this['closingAngleSet'] = this['isArenaClosing'] = ![], this['timer'] = _0x3ec64f['readUInt16']() / 0x64, this['isCountdownTimer'] = !![];
                            if (this['timer'] < 0x17) this['updateTimer']();
                        } else {
                            if (_0x41f406 == _0x4c4fa4) this['timer'] = _0x3ec64f['readUInt16']() / 0x64, this['isCountdownTimer'] = ![], this['updateTimer'](), this['displayAds'] = ![], this['adShown'] = ![];
                            else {
                                if (_0x41f406 == _0x5832f0) this['timeLeft'] = _0x3ec64f['readUInt16'](), this['nTimerAngle'] = this['timeLeft'] / 0x3e8;
                                else {
                                    if (_0x41f406 == _0x53c271) this['showTimerAngle'] = _0x3ec64f['readUInt8']() == 0x1;
                                    else {
                                        if (_0x41f406 == _0x74bb6b) this['isArenaClosing'] = _0x3ec64f['readUInt8']() == 0x1, this['isArenaClosing'] && !this['closingAngleSet'] && (this['closingAngleSet'] = !![], this['arenaClosingAngle'] = this['timeoutAngle']);
                                        else {
                                            if (_0x41f406 == _0x4e4370) this['arenaTimeoutLeft'] = _0x3ec64f['readUInt16'](), this['nTimeoutAngle'] = this['arenaTimeoutLeft'] / 0x3e8;
                                            else {
                                                if (_0x41f406 == _0x56333c) {
                                                    this['winner'] = _0x3ec64f['readUInt8']();
                                                    var _0x59c155 = '' + this['p1'];
                                                    if (_0x59c155['length'] == 0x0) _0x59c155 = 'mope.io';
                                                    var _0x4f0673 = '' + this['p2'];
                                                    if (_0x4f0673['length'] == 0x0) _0x4f0673 = 'mope.io';
                                                    if (this['winner'] == 0x1) this['winnerName'] = _0x59c155;
                                                    else this['winnerName'] = _0x4f0673;
                                                } else {
                                                    if (_0x41f406 == _0x325fdd) this['winnerMsg'] = _0x3ec64f['readString']();
                                                    else {
                                                        if (_0x41f406 == _0x3a8204) this['p1Bites'] = _0x3ec64f['readUInt8'](), this['setNames']();
                                                        else {
                                                            if (_0x41f406 == _0xb7c7b9) this['p2Bites'] = _0x3ec64f['readUInt8'](), this['setNames']();
                                                            else {
                                                                if (_0x41f406 == _0x153172) this['winBonus'] = _0x3ec64f['readUInt32']();
                                                                else {
                                                                    if (_0x41f406 == _0x228a09) this['roundsWon_p1'] = _0x3ec64f['readUInt8']();
                                                                    else {
                                                                        if (_0x41f406 == _0x450696) this['roundsWon_p2'] = _0x3ec64f['readUInt8']();
                                                                        else {
                                                                            if (_0x41f406 == _0x3c6793) this['p1Wins'] = _0x3ec64f['readUInt8']();
                                                                            else {
                                                                                if (_0x41f406 == _0x5b55ee) this['p2Wins'] = _0x3ec64f['readUInt8']();
                                                                                else {
                                                                                    if (_0x41f406 == _0x32c83c) this['p1'] = _0x3ec64f['readString'](), this['setNames']();
                                                                                    else {
                                                                                        if (_0x41f406 == _0x28fc41) this['p2'] = _0x3ec64f['readString'](), this['setNames']();
                                                                                        else {
                                                                                            if (_0x41f406 == _0xf9f49e) {
                                                                                                var _0xba6618 = _0x3ec64f['readUInt8']() == 0x1;
                                                                                                this['resetArena'] != _0xba6618 && (this['endScreenState'] = 0x0, this['resetArena'] = _0xba6618);
                                                                                            } else {
                                                                                                if (_0x41f406 == _0x567764) this['fightNumber'] = _0x3ec64f['readUInt16']();
                                                                                                else {
                                                                                                    if (_0x41f406 == _0x40c8a3) this['player1DarkTheme'] = _0x3ec64f['readUInt8']() == 0x1;
                                                                                                    else _0x41f406 == _0x3688a2 && (this['player2DarkTheme'] = _0x3ec64f['readUInt8']() == 0x1);
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }, _0x4dea18['prototype']['endScreenState'] = -0x1, _0x4dea18['prototype']['endScreenChangeT'] = 0x0, _0x4dea18['prototype']['resetEndScreenState'] = !![], _0x4dea18['prototype']['displayEndScreen'] = function() {
            _0x476319 >= this['endScreenChangeT'] && (this['endScreenState']++, this['endScreenChangeT'] = _0x476319 + 0xbb8);
            if (this['timerTxt'] != null) {
                if (this['endScreenState'] == 0x0) {
                    this['timerTxt']['setFontSize'](0x28);
                    if (this['winnerName'] !== undefined) this['timerTxt']['setText']('\x0aKO!');
                } else {
                    if (this['endScreenState'] == 0x1) {
                        this['timerTxt']['setFontSize'](0x14);
                        if (this['winnerName'] == undefined) this['timerTxt']['setText']('TIE!');
                        else this['timerTxt']['setText'](this['winnerName'] + '\x0aWON!');
                    } else this['endScreenState'] >= 0x3 && (this['timerTxt']['setFontSize'](0x14), this['winBonus'] !== undefined && this['winnerMsg'] != null && this['winBonus'] > 0x0 && this['timerTxt']['setText'](this['winnerMsg'] + '\x0aWIN BONUS: ' + _0x2c8aad(this['winBonus'])));
                }
            }
        }, _0x4dea18['prototype']['challenger'] = null, _0x4dea18['prototype']['opponent'] = null, _0x4dea18['prototype']['setNames'] = function() {
            var _0x180c38 = '' + this['p1'];
            if (_0x180c38['length'] == 0x0) _0x180c38 = 'mope.io';
            var _0x53f64e = '' + this['p2'];
            if (_0x53f64e['length'] == 0x0) _0x53f64e = 'mope.io';
            var _0x5377c6 = this['isCpuVsPlayer'] ? 'level' : 'wins',
                _0x3e7a9c = '\x0a(' + _0x5377c6 + ': ' + this['p1Wins'] + ')',
                _0x541d87 = '\x0a(' + _0x5377c6 + ': ' + this['p2Wins'] + ')',
                _0x12ae63 = '\x0abites: ' + this['p1Bites'],
                _0x32ea65 = '\x0abites: ' + this['p2Bites'];
            if (this['arenaState'] < 0x3) this['challenger'] = _0x180c38 + _0x3e7a9c, this['opponent'] = _0x53f64e + _0x541d87, this['setP1'](_0x180c38 + _0x3e7a9c + _0x12ae63), this['setP2'](_0x53f64e + _0x541d87 + _0x32ea65);
            else {
                if (this['arenaState'] == 0x3) {
                    if (this['winner'] == 0x1) this['winnerName'] = _0x180c38, this['setP1'](_0x180c38 + _0x3e7a9c + _0x12ae63), this['p2Name'] = null;
                    else this['winner'] == 0x2 && (this['winnerName'] = _0x53f64e, this['setP2'](_0x53f64e + _0x541d87 + _0x32ea65), this['p1Name'] = null);
                }
            }
        }, _0x4dea18['prototype']['updateTimer'] = function() {
            this['timer'] = Math['round'](this['timer']);
            var _0x1f841c = this['timer'];
            if (this['isCountdownTimer']) {
                switch (this['timer']) {
                    case 0x17:
                        _0x1f841c = '';
                        break;
                    case 0x16:
                    case 0x15:
                        if (this['arenaModeType'] == 0x3) _0x1f841c = '1V1 TOURNAMENT';
                        else _0x1f841c = 'WELCOME TO 1V1 ARENA';
                        break;
                    case 0x14:
                    case 0x13:
                        if (this['arenaModeType'] == 0x3) _0x1f841c = 'MATCH #' + this['fightNumber'];
                        else {
                            var _0x1d700e = 'MAN';
                            if (this['arenaModeType'] == 0x1) _0x1d700e = 'NOOB';
                            else {
                                if (this['arenaModeType'] == 0x2) _0x1d700e = 'PRO';
                            }
                            _0x1f841c = 'FIGHT #' + this['fightNumber'] + '\x0a' + (this['climaxType'] == 0x1 ? 'LAST ' + _0x1d700e + ' STANDING' : this['maxBitesToWin'] + ' BITES TO WIN'), _0x1f841c = _0x3a357f['name'] + '\x0a' + _0x1f841c;
                        }
                        break;
                    case 0x12:
                    case 0x11:
                        if (!this['isCpuVsPlayer']) {
                            _0x1f841c = 'CHALLENGER';
                            break;
                        }
                    case 0x10:
                    case 0xf:
                        if (this['isCpuVsPlayer']) _0x1f841c = 'REDEMPTION\x0aLEVEL ' + this['p1Wins'];
                        else _0x1f841c = this['challenger'];
                        break;
                    case 0xe:
                    case 0xd:
                        _0x1f841c = 'OPPONENT';
                        break;
                    case 0xc:
                    case 0xb:
                        _0x1f841c = this['opponent'];
                        break;
                    case 0x2:
                        _0x1f841c = 'ROUND ' + this['rounds'];
                        break;
                    case 0x1:
                        _0x1f841c = 'GET SET';
                        break;
                    case 0x0:
                        _0x1f841c = 'FIGHT';
                        break;
                }
                if (this['timer'] < 0x14 && !this['displayAds'] && !this['adShown']) this['displayAds'] = !![];
            }
            this['setTimer'](_0x1f841c);
        }, _0x4dea18['prototype']['adShown'] = ![], _0x4dea18['prototype']['displayAds'] = ![], _0x4dea18['prototype']['displayedAdsOnEnd'] = ![], _0x4dea18['prototype']['showAds'] = function(_0x3d2354) {
            if (!_0x3e1b12) !this['adShown'] && (this['displayAds'] && (_0x1cd530 > 0xd && (this['adShown'] = !![])));
        }, _0x4dea18['prototype']['removeAds'] = function() {
            if (_0x5a4190 == this['id']) {}
        }, _0x4dea18['prototype']['onRemovedFromGame'] = function() {
            console['log']('Arena removed from game!');
        };

        function _0x4dea18() {
            _0x4dea18['superClass']['call'](this), this['hasAdLoaded'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4dea18, _0x4fbd16, _0x33b982);
        var _0x4d8447 = _0x5502af;
        _0xf434a['prototype'] = Object['create'](_0x4d8447['prototype']), _0xf434a['prototype']['constructor'] = _0xf434a, _0xf434a['superClass'] = _0x4d8447, _0xf434a['prototype']['getSkinName'] = function() {
            if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster1';
            else return 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster';
        }, _0xf434a['prototype']['calcAnimalZIndex'] = function() {
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_isInArena']) this['z'] += 0x3e8;
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else this['z'] = 0x3e8 + this['rad'];
                }
            }
        }, _0xf434a['prototype']['animalInfo'] = function() {
            var _0x21794b = {},
                _0x3e6e23 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x21794b['aniName'] = 'Sea Monster';
                    break;
                case 0x1:
                    _0x21794b['aniName'] = 'Golden Sea Monster';
                    break;
                case 0x2:
                    _0x21794b['aniName'] = 'Sapphire Monster';
                    break;
                case 0x6f:
                    _0x21794b['aniName'] = 'Classic Sea Monster';
                    break;
                case 0xc8:
                    _0x21794b['aniName'] = 'Luckycharm Monster';
                    break;
                case 0xc9:
                    _0x21794b['aniName'] = 'Ancient Tortoise';
                    break;
                case 0xca:
                    _0x21794b['aniName'] = 'Submarine Monster';
                    break;
                case 0xdc:
                    _0x21794b['aniName'] = 'Dimensional Monster';
                    break;
            }
            return _0x21794b['aniCol'] = 'blue', _0x21794b['upgradeText'] = 'UPGRADED to ' + _0x21794b['aniName'] + '!\x0aCreate whirlpool to trap prey!' + _0x3e6e23, _0x21794b['skinName'] = 'ocean/seamonster/' + this['animalSpecies'] + '/seamonster', _0x21794b;
        }, _0xf434a['prototype']['getAbilityInfo'] = function(_0x2afd1c) {
            var _0x39969c = {};
            return _0x39969c['abilName'] = 'Giant Whirlpool', _0x39969c['abilImg'] = 'skins/ocean/seamonster/' + this['animalSpecies'] + '/seamonster.png', _0x39969c['skinThemeID'] = this['skinThemeID'], _0x39969c['mopeSeasonID'] = this['mopeSeasonID'], _0x39969c;
        }, _0xf434a['prototype']['drawWhenUnderwater'] = function() {
            var _0x2c1379 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x3b9e27 = 1.5,
                _0x429e3d = 0x1,
                _0x299b13 = _0x429e3d * Math['sin'](0x2 * Math['PI'] / _0x3b9e27 * _0x2c1379),
                _0x33e41f = 'white';
            _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['fillStyle'] = _0x33e41f;
            var _0x380976 = this['flag_underWater'] ? this['rad'] * 0.15 : this['rad'] * 0.1;
            _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x380976 + _0x299b13), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x380976 - _0x299b13), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x380976 + _0x299b13), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x380976 - _0x299b13), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
            var _0x9b1354 = this['getSkinImageObj']('skins/' + this['getSkinName']() + '-crown.png');
            if (_0x9b1354) {
                var _0x1f8ed9 = 0x1f4 / 0x154;
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.4;
                var _0x358a79 = this['rad'];
                _0x4597c4['drawImage'](_0x9b1354, -_0x358a79 * _0x1f8ed9, (-_0x358a79 + _0x358a79 * 0.4) * _0x1f8ed9, 0x2 * _0x358a79 * _0x1f8ed9, 0x2 * _0x358a79 * _0x1f8ed9), _0x4597c4['restore']();
            }
        }, _0xf434a['prototype']['drawSkinCustomization'] = function() {
            this['setSkinScale']();
            if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
                var _0x523cb4 = 'skins/ocean/seamonster/220/',
                    _0x1eda38 = this['skinScale'] * 1.07,
                    _0x9e1837 = this['skinRad'],
                    _0x104d46 = 0x1 + Math['trunc'](_0x476319 / 0x78) % 0x8,
                    _0x48866a = 0x0,
                    _0x5ab13b = this['getSkinImageObj'](_0x523cb4 + '/anim/' + _0x104d46 + '.png');
                _0x5ab13b && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x5ab13b, -_0x9e1837 * _0x1eda38, (-_0x9e1837 + _0x9e1837 * 0.05) * _0x1eda38 - _0x48866a, 0x2 * _0x9e1837 * _0x1eda38, 0x2 * _0x9e1837 * _0x1eda38), _0x4597c4['restore']());
            }
        }, _0xf434a['prototype']['basicDrawSkinImg'] = function() {
            if (this['animalSpecies'] == 0xdc && this['animalSubSpecies'] == 0x0) {
                this['setSkinScale']();
                var _0x54caba = this['skinScale'],
                    _0x42496a = this['skinRad'];
                this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x42496a * _0x3b60f9, -_0x42496a * _0x3b60f9, 0x2 * _0x42496a * _0x3b60f9, 0x2 * _0x42496a * _0x3b60f9));
            } else _0xf434a['superClass']['prototype']['basicDrawSkinImg']['call'](this);
        };

        function _0xf434a() {
            _0xf434a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xf434a, _0x269668, _0x346859);
        var _0x4d8447 = _0x5502af;
        _0x76535d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x76535d['prototype']['constructor'] = _0x76535d, _0x76535d['superClass'] = _0x4d8447, _0x76535d['prototype']['calcAnimalZIndex'] = function() {
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_isInArena']) this['z'] += 0x3e8;
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else this['z'] = 0x4b0 + this['rad'];
                }
            }
        }, _0x76535d['prototype']['animalInfo'] = function() {
            var _0x569f78 = {},
                _0x2d10d4 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x569f78['aniName'] = 'Land Monster';
                    break;
                case 0x1:
                    _0x569f78['aniName'] = 'Golden Land Monster';
                    break;
                case 0x2:
                    _0x569f78['aniName'] = 'Titanite Monster';
                    break;
            }
            return _0x569f78['aniCol'] = 'orange', _0x569f78['upgradeText'] = 'UPGRADED to ' + _0x569f78['aniName'] + '!\x0aCreate Sink holes to trap prey!' + _0x2d10d4, _0x569f78['skinName'] = 'volcano/landmonster/' + this['animalSpecies'] + '/landmonster', _0x569f78;
        }, _0x76535d['prototype']['getSkinName'] = function() {
            return 'volcano/landmonster/' + this['animalSpecies'] + '/landmonster';
        }, _0x76535d['prototype']['getAbilityInfo'] = function(_0x521e44) {
            var _0x278046 = {};
            return _0x278046['abilName'] = 'Giant\x0aSinkhole!', _0x278046['abilImg'] = 'skins/volcano/landmonster/' + this['animalSpecies'] + '/landmonster.png', _0x278046['skinThemeID'] = this['skinThemeID'], _0x278046['mopeSeasonID'] = this['mopeSeasonID'], _0x278046;
        }, _0x76535d['prototype']['drawWhenUnderwater'] = function() {
            var _0x4eb1b0 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x4441e8 = 1.5,
                _0x4d6c74 = 0x1,
                _0x1a6277 = _0x4d6c74 * Math['sin'](0x2 * Math['PI'] / _0x4441e8 * _0x4eb1b0),
                _0x5f81b4 = '#f9d43b';
            _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['fillStyle'] = _0x5f81b4;
            var _0x450558 = this['flag_underWater'] ? this['rad'] * 0.15 : this['rad'] * 0.1;
            _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * -0.33, Math['max'](0x0, _0x450558 + _0x1a6277), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * -0.32, Math['max'](0x0, _0x450558 - _0x1a6277), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.35, this['rad'] * 0.36, Math['max'](0x0, _0x450558 + _0x1a6277), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.35, this['rad'] * 0.35, Math['max'](0x0, _0x450558 - _0x1a6277), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
        }, _0x76535d['prototype']['animalInfo'] = function() {
            var _0x3e1765 = {},
                _0x5665ac = '';
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x3e1765['aniName'] = 'Land Monster';
                            break;
                        case 0x6f:
                            _0x3e1765['aniName'] = 'Classic Land Monster';
                            break;
                    }
                    break;
                case 0x1:
                    _0x3e1765['aniName'] = 'Golden Land Monster';
                    break;
                case 0x2:
                    _0x3e1765['aniName'] = 'Titanite Monster';
                    break;
                case 0xca:
                    _0x3e1765['aniName'] = 'Fighter Jet';
                    break;
                case 0xcc:
                    _0x3e1765['aniName'] = 'Necromus';
                    break;
                case 0xcd:
                    _0x3e1765['aniName'] = 'Planet Eater Monster';
                    break;
                case 0xdc:
                    _0x3e1765['aniName'] = 'Belphegor';
                    break;
                case 0xde:
                    _0x3e1765['aniName'] = 'Peppermint Monster';
                    break;
                case 0x7e7:
                    _0x3e1765['aniName'] = 'Solar Wyvern';
                    break;
            }
            return _0x3e1765['aniCol'] = 'orange', _0x3e1765['upgradeText'] = 'UPGRADED to ' + _0x3e1765['aniName'] + '!\x0aCreate Sink holes to trap prey!' + _0x5665ac, _0x3e1765['skinName'] = this['getSkinName'](), _0x3e1765;
        }, _0x76535d['prototype']['getSkinName'] = function() {
            if (this['animalSubSpecies'] == 0xcc) return 'volcano/landmonster/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/landmonster1';
            else return 'volcano/landmonster/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/landmonster';
        }, _0x76535d['prototype']['getAbilityInfo'] = function(_0x4ef82d) {
            var _0x2149ab = {};
            return _0x2149ab['abilName'] = 'Giant\x0aSinkhole!', _0x2149ab['abilImg'] = 'skins/volcano/landmonster/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/landmonster.png', _0x2149ab['skinThemeID'] = this['skinThemeID'], _0x2149ab['mopeSeasonID'] = this['mopeSeasonID'], _0x2149ab;
        }, _0x76535d['prototype']['drawSkinCustomization'] = function() {
            this['setSkinScale']();
            if (this['animalSubSpecies'] == 0xcc) {
                var _0x6f332e = 'skins/volcano/landmonster/0/204/',
                    _0x223e4e = this['skinScale'] * 1.07,
                    _0x2eb018 = this['skinRad'],
                    _0x5155bd = 0x1 + Math['trunc'](_0x476319 / 0x78) % 0x7,
                    _0x402789 = this['getSkinImageObj'](_0x6f332e + '/landmonster_head.png'),
                    _0x2e0b85 = 0x0;
                if (_0x402789) {
                    _0x4597c4['save']();
                    var _0x2eb018 = this['rad'];
                    _0x4597c4['drawImage'](_0x402789, -_0x2eb018 * _0x223e4e, (-_0x2eb018 + _0x2eb018 * 0.05) * _0x223e4e - _0x2e0b85, 0x2 * _0x2eb018 * _0x223e4e, 0x2 * _0x2eb018 * _0x223e4e), _0x4597c4['restore']();
                    var _0x269c39 = this['getSkinImageObj'](_0x6f332e + '/fire' + _0x5155bd + '.png');
                    _0x269c39 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x269c39, -_0x2eb018 * _0x223e4e, (-_0x2eb018 + _0x2eb018 * 0.05) * _0x223e4e - _0x2e0b85, 0x2 * _0x2eb018 * _0x223e4e, 0x2 * _0x2eb018 * _0x223e4e), _0x4597c4['restore']());
                    var _0x269c39 = this['getSkinImageObj'](_0x6f332e + '/landmonster_head1.png');
                    _0x269c39 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x269c39, -_0x2eb018 * _0x223e4e, (-_0x2eb018 + _0x2eb018 * 0.05) * _0x223e4e - _0x2e0b85, 0x2 * _0x2eb018 * _0x223e4e, 0x2 * _0x2eb018 * _0x223e4e), _0x4597c4['restore']());
                }
            }
        };
        var _0x3b60f9 = 1.8;
        _0x76535d['prototype']['basicDrawSkinImg'] = function() {
            if (this['animalSubSpecies'] == 0xcc) {
                this['setSkinScale']();
                var _0x4d030a = this['skinScale'],
                    _0x37b879 = this['skinRad'];
                this['loadedSkinImg'] && (overSizeOffset = this['skinRad'] / 0x2, _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x37b879 * _0x3b60f9, -_0x37b879 * _0x3b60f9, 0x2 * _0x37b879 * _0x3b60f9, 0x2 * _0x37b879 * _0x3b60f9));
            } else _0x76535d['superClass']['prototype']['basicDrawSkinImg']['call'](this);
        };

        function _0x76535d() {
            _0x76535d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x76535d, _0x269668, _0x1fb7c3);
        var _0x4d8447 = _0x5502af;
        _0x9a991a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x9a991a['prototype']['constructor'] = _0x9a991a, _0x9a991a['superClass'] = _0x4d8447, _0x9a991a['prototype']['calcAnimalZIndex'] = function() {
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_isInArena']) this['z'] += 0x3e8;
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else this['z'] = 0x3e8 + this['rad'];
                }
            }
        }, _0x9a991a['prototype']['animalInfo'] = function() {
            var _0x186248 = {},
                _0x438343 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x186248['aniName'] = 'Ice Monster';
                    break;
                case 0x1:
                    _0x186248['aniName'] = 'Golden Ice Monster';
                    break;
                case 0x2:
                    _0x186248['aniName'] = 'Amethyst Monster';
                    break;
                case 0x6f:
                    _0x186248['aniName'] = 'Classic Ice Monster';
                    break;
                case 0xc9:
                    _0x186248['aniName'] = 'Cryo Coach Monster';
                    break;
                case 0xcc:
                    _0x186248['aniName'] = 'Blood Crystal Monster';
                    break;
                case 0xdc:
                    _0x186248['aniName'] = 'Blazing Ice Monster';
                    break;
            }
            return _0x186248['aniCol'] = '#ffffff', _0x186248['upgradeText'] = 'UPGRADED to ' + _0x186248['aniName'] + '!\x0aShoot Ice crystals to freeze prey!' + _0x438343, _0x186248['skinName'] = 'arctic/icemonster/' + this['animalSpecies'] + '/icemonster', _0x186248;
        }, _0x9a991a['prototype']['getSkinName'] = function() {
            var _0x46d352 = this['id'] == 0x0 ? 'ability' : 'icemonster';
            return 'arctic/icemonster/' + this['animalSpecies'] + '/' + _0x46d352;
        }, _0x9a991a['prototype']['getAbilityInfo'] = function(_0x2a7ddb) {
            var _0x56d293 = {};
            return _0x56d293['abilName'] = 'Freeze Prey!', _0x56d293['abilImg'] = 'skins/arctic/icemonster/' + this['animalSpecies'] + '/ability.png', _0x56d293['skinThemeID'] = this['skinThemeID'], _0x56d293['mopeSeasonID'] = this['mopeSeasonID'], _0x56d293;
        }, _0x9a991a['prototype']['readCustomData_onNewlyVisible'] = function(_0x1bd1d2) {
            _0x9a991a['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1bd1d2), this['readCrystalsInfo'](_0x1bd1d2);
        }, _0x9a991a['prototype']['readCrystal'] = function(_0x37e296, _0x5a3c1b) {
            var _0x4ac71e = _0x37e296['readInt16']() / 0x64;
            this['crystals'][_0x5a3c1b]['nRad'] = _0x4ac71e;
            if (_0x4ac71e < 0x1) this['crystals'][_0x5a3c1b]['rad'] = 0x0;
            this['crystals'][_0x5a3c1b]['isReady'] = _0x37e296['readUInt8']() == 0x1;
        }, _0x9a991a['prototype']['customUpdatedProperty'] = function(_0x234a7a, _0x420049) {
            if (_0x234a7a == _0x35da52) this['readCrystal'](_0x420049, 0x0);
            else {
                if (_0x234a7a == _0x42f3a) this['readCrystal'](_0x420049, 0x1);
                else {
                    if (_0x234a7a == _0x1c475f) this['readCrystal'](_0x420049, 0x2);
                    else {
                        if (_0x234a7a == _0x26850b) this['readCrystal'](_0x420049, 0x3);
                        else {
                            if (_0x234a7a == _0xdb5a9c) this['readCrystal'](_0x420049, 0x4);
                            else {
                                if (_0x234a7a == _0xaae8d6) this['readCrystal'](_0x420049, 0x5);
                                else _0x234a7a == _0x5486c6 && this['readCrystal'](_0x420049, 0x6);
                            }
                        }
                    }
                }
            }
        }, _0x9a991a['prototype']['crystals'] = [], _0x9a991a['prototype']['readCrystalsInfo'] = function(_0x1da309) {
            var _0x3e0674 = _0x1da309['readUInt8']();
            this['crystals'] = [];
            for (i = 0x0; i < _0x3e0674; i++) {
                var _0x29aa04 = _0x1da309['readInt16']() / 0x64,
                    _0x105710 = _0x1da309['readInt16']() / 0x64,
                    _0x2889e7 = _0x1da309['readInt16']() / 0x64,
                    _0x4862b9 = _0x1da309['readUInt8']() * 0x4,
                    _0x1ef3f7 = _0x1da309['readUInt8']() == 0x1;
                this['crystals']['push']({
                    'isReady': _0x1ef3f7,
                    'x': _0x29aa04,
                    'y': _0x105710,
                    'nRad': _0x2889e7,
                    'oRad': _0x2889e7,
                    'rad': _0x2889e7,
                    'angle': _0x4862b9
                });
            }
        };
        var _0x3276db = 1.5;
        _0x9a991a['prototype']['drawSkinCustomization'] = function() {
            if (this['animalSpecies'] == 0xc9) {
                _0x4597c4['save']();
                var _0x158d0c = 0x0;
                for (i = 0x0; i < this['crystals']['length']; i++) {
                    var _0x394e46 = this['crystals'][i];
                    if (_0x394e46['isReady']) _0x158d0c++;
                }
                _0x158d0c = Math['min'](0x5, _0x158d0c);
                var _0x55a62f = 'skins/arctic/icemonster/201/icemonster' + _0x158d0c + '.png',
                    _0x5403c5 = this['getSkinImageObj'](_0x55a62f);
                if (_0x5403c5) {
                    var _0x572aa8 = this['rad'] * _0x3276db;
                    _0x4597c4['drawImage'](_0x5403c5, -_0x572aa8, -_0x572aa8, 0x2 * _0x572aa8, 0x2 * _0x572aa8);
                }
                _0x4597c4['restore']();
            } else {
                var _0x572aa8 = this['rad'] - this['outlineW'];
                for (i = 0x0; i < this['crystals']['length']; i++) {
                    var _0x394e46 = this['crystals'][i];
                    if (_0x394e46['nRad'] == 0x0) continue;
                    _0x394e46['rad'] += (_0x394e46['nRad'] - _0x394e46['rad']) * 0.01;
                    var _0x17fd1b = _0x394e46['x'] * _0x572aa8,
                        _0x1766ac = _0x394e46['y'] * _0x572aa8,
                        _0x2be294 = _0x394e46['angle'],
                        _0x42543d = _0x394e46['rad'];
                    _0x4597c4['save'](), _0x4597c4['translate'](_0x17fd1b, _0x1766ac), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['rotate'](_0x4c4686(_0x2be294));
                    var _0x5403c5 = this['getSkinImageObj']('skins/arctic/icemonster/' + this['animalSpecies'] + '/crystal.png');
                    _0x5403c5 && _0x4597c4['drawImage'](_0x5403c5, -_0x42543d, -_0x42543d * 0x2, _0x42543d * 0x2, _0x42543d * 0x2), _0x4597c4['restore']();
                }
            }
        };

        function _0x9a991a() {
            _0x9a991a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x9a991a, _0x269668, _0xdd7007);
        var _0x4d8447 = _0x5502af;
        _0x46d5f1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x46d5f1['prototype']['constructor'] = _0x46d5f1, _0x46d5f1['superClass'] = _0x4d8447, _0x46d5f1['prototype']['calcAnimalZIndex'] = function() {
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_isInArena']) this['z'] += 0x3e8;
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else this['z'] = 0x3e8 + this['rad'];
                }
            }
        }, _0x46d5f1['prototype']['animalInfo'] = function() {
            var _0x1366d3 = {},
                _0x275499 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1366d3['aniName'] = 'Dino Monster';
                    break;
                case 0x1:
                    _0x1366d3['aniName'] = 'Golden Dino Monster';
                    break;
                case 0x2:
                    _0x1366d3['aniName'] = 'Citrine Monster';
                    break;
                case 0x6f:
                    _0x1366d3['aniName'] = 'Classic Dino Monster';
                    break;
                case 0xc8:
                    _0x1366d3['aniName'] = 'Ruby Devil';
                    break;
                case 0xca:
                    _0x1366d3['aniName'] = 'Tank Monster';
                    break;
                case 0xdc:
                    _0x1366d3['aniName'] = 'Cordycera Dino Monster';
                    break;
            }
            return _0x1366d3['aniCol'] = 'orange', _0x1366d3['upgradeText'] = 'UPGRADED to ' + _0x1366d3['aniName'] + '!\x0aKnock prey in Air to inflict deadly damage!' + _0x275499, _0x1366d3['skinName'] = 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster', _0x1366d3;
        }, _0x46d5f1['prototype']['getSkinName'] = function() {
            return 'land/dinomonster/' + this['animalSpecies'] + '/dinomonster1';
        }, _0x46d5f1['prototype']['getAbilityInfo'] = function(_0x18742b) {
            var _0x561f6b = {};
            return _0x561f6b['abilName'] = 'Knock in Air', _0x561f6b['abilImg'] = 'skins/land/dinomonster/' + this['animalSpecies'] + '/dinomonster.png', _0x561f6b['skinThemeID'] = this['skinThemeID'], _0x561f6b['mopeSeasonID'] = this['mopeSeasonID'], _0x561f6b;
        }, _0x46d5f1['prototype']['drawSkinCustomization'] = function() {
            var _0x2a115c = 'skins/land/dinomonster/' + this['animalSpecies'] + '/dinomonster';
            if (this['flag_usingAbility']) _0x2a115c += '3';
            else _0x2a115c += '2';
            var _0x7bda64 = this['getSkinImageObj'](_0x2a115c + '.png');
            if (_0x7bda64) {
                _0x4597c4['save']();
                var _0x214eca = (this['rad'] - this['outlineW']) * 1.1;
                _0x4597c4['drawImage'](_0x7bda64, -_0x214eca * this['skinScale'] * 0.91, -_0x214eca * this['skinScale'] * 1.1, 0x2 * _0x214eca * this['skinScale'] * 0.91, 0x2 * _0x214eca * this['skinScale'] * 1.1), _0x4597c4['restore']();
            }
        };

        function _0x46d5f1() {
            _0x46d5f1['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x46d5f1, _0x269668, _0x19d925);
        var _0x4d8447 = _0x5d11ac;
        _0x53750b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x53750b['prototype']['constructor'] = _0x53750b, _0x53750b['superClass'] = _0x4d8447, _0x53750b['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0x53750b['prototype']['customDraw'] = function(_0x4c9e0c) {
            var _0x1fe55f = this['getSkinImageObj']('skins/arctic/icemonster/' + this['speciesType'] + '/crystalfire.png');
            if (_0x1fe55f) {
                _0x4597c4['save']();
                var _0x3d4789 = this['rad'] * 1.5;
                _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['drawImage'](_0x1fe55f, -_0x3d4789, -_0x3d4789, _0x3d4789 * 0x2, _0x3d4789 * 2.5), _0x4597c4['restore']();
            }
        }, _0x53750b['prototype']['getSkinImageObj'] = function(_0x4e62db) {
            var _0x1caa7c = this['mopeSeasonID'],
                _0x26bb95 = './assets/s/' + _0x1caa7c + '/' + _0x4e62db;
            return this['skinThemeID'] > 0x0 && (_0x26bb95 = './assets/t/' + this['skinThemeID'] + '/' + _0x4e62db), _0x5e7a48(_0x26bb95, function(_0x53c231) {
                console['log'](_0x53c231['src']);
            });
        }, _0x53750b['prototype']['readCustomData_onNewlyVisible'] = function(_0x104caf) {
            _0x53750b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x104caf), this['speciesType'] = _0x104caf['readUInt8']();
        };

        function _0x53750b() {
            _0x53750b['superClass']['call'](this, _0x1bfff2);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x53750b, _0x1bfff2);
        var _0x4d8447 = _0x5d11ac;
        _0x4265ef['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4265ef['prototype']['constructor'] = _0x4265ef, _0x4265ef['superClass'] = _0x4d8447, _0x4265ef['prototype']['updateZ'] = function() {
            this['z'] = -0x65;
        }, _0x4265ef['prototype']['customDraw'] = function(_0x4b5890) {
            _0x4597c4['save'](), this['specType'] == 0x0 ? (this['drawOutlinedCircle']('', '#9F8641'), _0x4597c4['globalAlpha'] = 0.6, _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.9), '#5C4E28'), _0x4597c4['globalAlpha'] = 0.7, _0x4096ce(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x4597c4['globalAlpha'] = 0.9, _0x4096ce(0x0 - this['rPer'], 0x1, Math['max'](0x0, this['rad'] * 0.8), '#40371D'), _0x4597c4['globalAlpha'] = 0.5, _0x4096ce(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.5), 'black'), _0x4597c4['globalAlpha'] = 0x1, _0x4096ce(0x0 - this['rPer'] * 0x3, 0x1, Math['max'](0x0, this['rad'] * 0.3), _0x1c0746)) : (this['drawOutlinedCircle']('', '#9F8641'), _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, this['rad'] - 0x7), '#7E6A35'), _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, this['rad'] - 0xe), '#5C4E28'), _0x4096ce(0x0 - this['rPer'] * 0x2 - 0x3, 0x1, Math['max'](0x0, this['rad'] - 18.5), '#40371D')), _0x4597c4['restore']();
        };

        function _0x4265ef() {
            _0x4265ef['superClass']['call'](this, _0x3b5e93), this['webTransparency'] = 0x0, this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4265ef, _0x38261d);
        var _0x4d8447 = _0x5d11ac;
        _0x6ec997['prototype'] = Object['create'](_0x4d8447['prototype']), _0x6ec997['prototype']['constructor'] = _0x6ec997, _0x6ec997['superClass'] = _0x4d8447, _0x6ec997['prototype']['mommyID'] = 0x0, _0x6ec997['prototype']['updateZ'] = function() {
            this['z'] = -0x99;
        }, _0x6ec997['prototype']['isEdibleOutlined'] = function() {
            if (this['mommyID'] == _0x59b0bc) return ![];
            var _0x3b0d44 = _0x20b6fd['superClass']['prototype']['isEdibleOutlined']['call'](this);
            return _0x3b0d44;
        }, _0x6ec997['prototype']['customDraw'] = function(_0x20d6ee) {
            _0x4597c4['save']();
            var _0x7e8e7 = this['getSkinImageObj']('skins/land/ostrich/' + this['speciesType'] + '/ostrichEgg' + (this['isEdibleOutlined']() ? 'edible' : '') + '.png');
            if (_0x7e8e7) {
                var _0x5c8afc = this['rad'];
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x7e8e7, -_0x5c8afc, -_0x5c8afc, 0x2 * _0x5c8afc, 0x2 * _0x5c8afc);
            }
            _0x4597c4['restore']();
        }, _0x6ec997['prototype']['getSkinImageObj'] = function(_0x3be3a7) {
            var _0x3ea512 = this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x3be3a7, _0x3ea512);
        }, _0x6ec997['prototype']['readCustomData_onNewlyVisible'] = function(_0x126721) {
            _0x6ec997['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x126721), this['mommyID'] = _0x126721['readUInt32'](), this['speciesType'] = _0x126721['readUInt8']();
        };

        function _0x6ec997() {
            _0x6ec997['superClass']['call'](this, _0x3b1d1b), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x6ec997, _0x3b1d1b);
        var _0x4d8447 = _0x5502af;
        _0x204730['prototype'] = Object['create'](_0x4d8447['prototype']), _0x204730['prototype']['constructor'] = _0x204730, _0x204730['superClass'] = _0x4d8447, _0x204730['prototype']['drawNickName'] = function(_0x2aaa89) {
            (this['flag_usingAbility'] && this['flag_flying'] || !this['flag_usingAbility'] || _0x36850d['mode'] == _0x31e908) && _0x204730['superClass']['prototype']['drawNickName']['call'](this, _0x2aaa89);
        }, _0x204730['prototype']['animalInfo'] = function() {
            var _0x341fa3 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x341fa3['aniName'] = 'Macaw';
                    break;
                case 0x2:
                    _0x341fa3['aniName'] = 'Spix\'s Macaw';
                    break;
                case 0x1:
                    _0x341fa3['aniName'] = 'Blue Macaw';
                    break;
                case 0x6f:
                    _0x341fa3['aniName'] = 'Classic Macaw';
                    break;
                case 0x70:
                    _0x341fa3['aniName'] = 'Gold-trim Macaw';
                    break;
            }
            return _0x341fa3['aniCol'] = '#FF9000', _0x341fa3['skinName'] = this['getSpeciesPath']('macaw') + '/macaw', _0x341fa3['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x2 ? 'Rare ' : '') + _0x341fa3['aniName'] + '!\x0aHold W to fly around.\x0a(Hint: Use ability on hills to mimic animals) ', _0x341fa3;
        }, _0x204730['prototype']['getSkinName'] = function() {
            var _0x5e49a3 = this['getSpeciesPath']('macaw') + '/macaw';
            return _0x5e49a3 += this['specType'] == 0x0 ? '' : this['specType'], _0x5e49a3;
        }, _0x204730['prototype']['getSpeciesPath'] = function(_0x45b0d9) {
            return 'land/' + _0x45b0d9 + '/' + this['animalSpecies'];
        }, _0x204730['prototype']['getWing'] = function(_0x124057, _0x1741c1, _0x33864f) {
            var _0xf900e4 = 'skins/' + (_0x33864f ? this['getSpeciesPath'](_0x124057) + '/' : _0x124057 + '/');
            return _0xf900e4 += _0x124057 + '_wing' + _0x1741c1 + '.png', _0xf900e4;
        }, _0x204730['prototype']['getHead'] = function(_0x42e963, _0x53fd56) {
            var _0x10592c = 'skins/' + (_0x53fd56 ? this['getSpeciesPath'](_0x42e963) + '/' : _0x42e963 + '/');
            return _0x10592c += _0x42e963 + '_head.png', _0x10592c;
        }, _0x204730['prototype']['getAniRadius'] = function(_0x5ef44f) {
            return this['flag_flying'] ? _0x5ef44f * 0.9 : _0x5ef44f;
        }, _0x204730['prototype']['basicDrawSkinImg'] = function() {
            if (this['flag_usingAbility']) {
                if (!this['flag_flying'] && this['octoDrawObj'] != null) return;
            }
            var _0x44c525 = 0.05,
                _0x370462 = -0.08,
                _0xadd335 = 1.1;
            this['setSkinScale']();
            var _0x5c812b = this['getAniRadius'](this['skinRad'] - this['outlineW']),
                _0x2e5db5 = 0x1f4 / 0x154;
            this['loadedSkinImg'] && _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x5c812b * _0x2e5db5, -_0x5c812b * _0x2e5db5, 0x2 * _0x5c812b * _0x2e5db5, 0x2 * _0x5c812b * _0x2e5db5);
        };
        var _0x3f9885 = 1.7,
            _0x4f387b = 2.2;
        _0x204730['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x136182 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
                _0x4611b9 = _0x136182 * 0.8;
            if (this['flag_flying']) {
                var _0x26f546 = 0x1f4 / 0x154;
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    let _0x37491d = _0x38f4be('bird', this['spawnTime']);
                    _0x37491d !== undefined && _0x37491d != null && (this['theFrame'] = _0x37491d);
                    let _0x32d8e6 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
                    var _0x4ff03c = this['getSkinImageObj'](this['getWing']('macaw', 0x1, !![]));
                    if (_0x4ff03c) {
                        _0x4597c4['save']();
                        var _0x4e3472 = -(-0.2 + _0x32d8e6) * _0x197fc1;
                        _0x4597c4['rotate'](_0x31cf4b + _0x4e3472);
                        var _0x1551bc = 0x0,
                            _0x2c5154 = _0x4611b9,
                            _0x481a36 = _0x4611b9 * 0x2 * 0.62,
                            _0x2f33ab = _0x4611b9 * _0x4f387b,
                            _0x59ca0a = 0.2,
                            _0x579ac5 = _0x3f9885;
                        _0x4597c4['drawImage'](_0x4ff03c, _0x1551bc + _0x481a36 * -_0x59ca0a, _0x2c5154 + _0x2f33ab * -_0x579ac5, _0x481a36, _0x2f33ab), _0x4597c4['restore']();
                    }
                    var _0x4ff03c = this['getSkinImageObj'](this['getWing']('macaw', 0x2, !![]));
                    if (_0x4ff03c) {
                        _0x4597c4['save']();
                        var _0x4e3472 = -(-0.2 + _0x32d8e6) * -_0x197fc1;
                        _0x4597c4['rotate'](-_0x31cf4b + _0x4e3472);
                        var _0x1551bc = 0x0,
                            _0x2c5154 = _0x4611b9,
                            _0x481a36 = _0x4611b9 * 0x2 * 0.62,
                            _0x2f33ab = _0x4611b9 * _0x4f387b,
                            _0x59ca0a = 0.8,
                            _0x579ac5 = _0x3f9885;
                        _0x4597c4['drawImage'](_0x4ff03c, _0x1551bc + _0x481a36 * -_0x59ca0a, _0x2c5154 + _0x2f33ab * -_0x579ac5, _0x481a36, _0x2f33ab), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x15e001 = this['getSkinImageObj'](this['getHead']('macaw', !![]));
                    if (_0x15e001) {
                        _0x4597c4['save']();
                        var _0x136182 = this['rad'];
                        _0x4597c4['drawImage'](_0x15e001, -_0x136182 * _0x26f546, (-_0x136182 + _0x136182 * 0.2) * _0x26f546, 0x2 * _0x136182 * _0x26f546, 0x2 * _0x136182 * _0x26f546), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x204730['prototype']['readCustomData_onNewlyVisible'] = function(_0x52fc10) {
            _0x204730['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x52fc10), this['customUpdatedProperty'](_0x1a2989, _0x52fc10);
        }, _0x204730['prototype']['customUpdatedProperty'] = function(_0x4119c1, _0x555408) {
            if (_0x4119c1 == _0x1a2989) {
                var _0x4c9505 = _0x555408['readUInt8']() == 0x1;
                if (_0x4c9505) {
                    var _0x173b67 = _0x555408['readUInt16'](),
                        _0x34b84d = _0x555408['readUInt16']();
                    this['createDisguiseAniObj'](_0x173b67, _0x34b84d);
                } else this['octoDrawObj'] = null;
            }
        }, _0x204730['prototype']['createDisguiseAniObj'] = function(_0x45226c, _0x3d1670) {
            if (this['octoDrawObj'] == null) {
                var _0x7d45a4 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x45226c);
                _0x7d45a4['animalType'] = _0x45226c, _0x7d45a4['animalSpecies'] = _0x3d1670, _0x7d45a4['rad'] = _0x7d45a4['oRad'] = _0x7d45a4['nRad'] = this['rad'], _0x7d45a4['curBiome'] = this['curBiome'], _0x7d45a4['hp'] = 0x5 + Math['random']() * 0x32, this['octoDrawObj'] = _0x7d45a4;
            }
        }, _0x204730['prototype']['drawHealthBar'] = function() {
            this['flag_usingAbility'] && !this['flag_flying'] && this['octoDrawObj'] != null && (this['octoDrawObj']['curBiome'] = this['curBiome'], this['hpPer_n'] = 0x1, this['hpPer'] = this['octoDrawObj']['hp'], this['hpBarA'] = 0x1);
            _0x4597c4['save']();
            var _0x31c17a = _0x476319 < this['hpBarTimeoutT'] ? 0x1 : 0x0;
            this['hpBarA'] += (_0x31c17a - this['hpBarA']) * 0.04;
            if (this['hpBarA'] > 0.001) {
                this['hpPer'] += (this['hpPer_n'] - this['hpPer']) * 0.1;
                var _0x9ce59c = Math['max'](0x1, this['rad'] / 0x19),
                    _0x47aba8 = 0x14 * _0x9ce59c,
                    _0x40e89f = 0x5 * _0x9ce59c,
                    _0x5c1392 = 0x0,
                    _0x4f8507 = -this['rad'] - 0xa * _0x9ce59c;
                _0x4597c4['globalAlpha'] *= this['hpBarA'], _0x4597c4['fillStyle'] = 'rgba(0,0,0,0.35)', _0x4597c4['fillRect'](_0x5c1392 - _0x47aba8 / 0x2, _0x4f8507 - _0x40e89f / 0x2, _0x47aba8, _0x40e89f), _0x4597c4['fillStyle'] = '#16D729';
                var _0x4592cf = _0x47aba8 * (this['hpPer'] / 0x64);
                if (this['flag_usingAbility'] && this['octoIsAnimal']) _0x4592cf = _0x47aba8 * (0x19 / 0x64);
                _0x4597c4['fillRect'](_0x5c1392 - _0x47aba8 / 0x2, _0x4f8507 - _0x40e89f / 0x2, _0x4592cf, _0x40e89f);
            }
            _0x4597c4['restore']();
        }, _0x204730['prototype']['drawOnTopOfSkinImg'] = function() {
            _0x204730['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this), this['flag_usingAbility'] && !this['flag_flying'] && (this['octoDrawObj'] != null && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, this['octoDrawObj']['mopeSeasonID'] = 0x1, this['octoDrawObj']['rad'] = this['rad'], this['octoDrawObj']['draw'](), _0x4597c4['restore']()));
        };

        function _0x204730() {
            _0x204730['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x204730, _0x269668, _0x57f2d9);
        var _0x4d8447 = _0x5502af;
        _0x3064ab['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3064ab['prototype']['constructor'] = _0x3064ab, _0x3064ab['superClass'] = _0x4d8447, _0x3064ab['prototype']['getSkinName'] = function() {
            var _0x39c9ce = this['getSpeciesPath']('flamingo') + '/flamingo';
            return _0x39c9ce += this['specType'] == 0x0 ? '' : this['specType'], _0x39c9ce;
        }, _0x3064ab['prototype']['animalInfo'] = function() {
            var _0x448846 = {};
            _0x448846['aniName'] = 'Flamingo';
            switch (this['animalSpecies']) {
                case 0x6f:
                    _0x448846['aniName'] = 'Classic Flamingo';
                    break;
                case 0x70:
                    _0x448846['aniName'] = 'Gold-trim Flamingo';
                    break;
                case 0xca:
                    _0x448846['aniName'] = 'Fly Mango';
                    break;
            }
            return _0x448846['aniCol'] = '#FF9000', _0x448846['skinName'] = this['getSpeciesPath']('flamingo') + '/flamingo', _0x448846['upgradeText'] = 'UPGRADED to ' + _0x448846['aniName'] + '!\x0aHold W in water to search for food underwater.\x0a(Tip: Any nearby underwater animals will get surfaced by the flamingo!)', _0x448846;
        }, _0x3064ab['prototype']['getSpeciesPath'] = function(_0x3fa570) {
            return 'ocean/' + _0x3fa570 + '/' + this['animalSpecies'];
        }, _0x3064ab['prototype']['getWing'] = function(_0x5ce3b2, _0x5e8e5e, _0x5a66ef) {
            var _0x5351f8 = 'skins/' + this['getSpeciesPath'](_0x5ce3b2) + (_0x5a66ef ? '/pink' : '') + '/';
            return _0x5351f8 += _0x5ce3b2 + '_wing' + _0x5e8e5e + '.png', _0x5351f8;
        }, _0x3064ab['prototype']['getHead'] = function(_0x221de6, _0x4a5445) {
            var _0x191b50 = 'skins/' + this['getSpeciesPath'](_0x221de6) + (_0x4a5445 ? '/pink' : '') + '/';
            return _0x191b50 += _0x221de6 + '_head.png', _0x191b50;
        }, _0x3064ab['prototype']['basicDrawSkinImg'] = function() {
            _0x3064ab['superClass']['prototype']['basicDrawSkinImg']['call'](this);
            if (!this['flag_underWater'] && this['id'] > 0x0) {
                var _0x1700fc = this['skinScale'],
                    _0x3cdb4c = this['skinRad'],
                    _0x2b3a19 = 'skins/' + this['getSpeciesPath']('flamingo') + '/pink/flamingo';
                _0x2b3a19 += this['specType'] == 0x0 ? '' : this['specType'];
                var _0x457aa1 = this['getSkinImageObj'](_0x2b3a19 + '.png');
                _0x457aa1 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['colorPerc'], _0x4597c4['drawImage'](_0x457aa1, -_0x3cdb4c * _0x1700fc, -_0x3cdb4c * _0x1700fc, 0x2 * _0x3cdb4c * _0x1700fc, 0x2 * _0x3cdb4c * _0x1700fc), _0x4597c4['restore']());
            }
        }, _0x3064ab['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x4ef0cf = 0x1f4 / 0x154;
            _0x4597c4['save']();
            var _0x9795e5 = this['flag_flying'] ? 0x2d : 0x2f,
                _0x171a24 = this['flag_flying'] ? 0x5a : 0x2d,
                _0x30ee9e = this['flag_flying'] ? 0.2 : 0.01,
                _0x4393cc = this['flag_flying'] ? 2.5 : 0x2,
                _0x3e5806 = this['flag_flying'] ? 0x2 : 2.5,
                _0x9c0fba = this['flag_flying'] ? 0.5 : 1.2,
                _0x413b08 = (_0x476319 - this['spawnTime']) / 0x3e8;
            if (this['flag_flying']) {
                var _0xfbd400 = _0x38f4be('bird', this['spawnTime']);
                _0xfbd400 !== undefined && _0xfbd400 != null && (this['theFrame'] = _0xfbd400);
            } else this['theFrame'] = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x413b08, _0x9c0fba, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'];
            var _0x1503d0 = this['theFrame'],
                _0x582247 = this['getSkinImageObj'](this['getWing']('flamingo', 0x1, ![]));
            if (_0x582247) {
                _0x4597c4['save']();
                var _0x51102f = -(-_0x30ee9e + _0x1503d0) * _0x4c4686(_0x171a24),
                    _0x3eaa1c = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(_0x9795e5) + _0x51102f);
                var _0x530cb4 = 0x0,
                    _0x13f8d3 = this['rad'],
                    _0x378cf1 = _0x3eaa1c * _0x3e5806 * 0.62,
                    _0x1507f9 = _0x3eaa1c * _0x4393cc,
                    _0xaeb78e = 0.2,
                    _0x31f185 = 1.7;
                _0x4597c4['drawImage'](_0x582247, _0x530cb4 + _0x378cf1 * -_0xaeb78e, _0x13f8d3 + _0x1507f9 * -_0x31f185, _0x378cf1, _0x1507f9), _0x4597c4['restore']();
            }
            var _0x582247 = this['getSkinImageObj'](this['getWing']('flamingo', 0x2, ![]));
            if (_0x582247) {
                _0x4597c4['save']();
                var _0x51102f = -(-_0x30ee9e + _0x1503d0) * _0x4c4686(-_0x171a24),
                    _0x3eaa1c = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(-_0x9795e5) + _0x51102f);
                var _0x530cb4 = 0x0,
                    _0x13f8d3 = this['rad'],
                    _0x378cf1 = _0x3eaa1c * _0x3e5806 * 0.62,
                    _0x1507f9 = _0x3eaa1c * _0x4393cc,
                    _0xaeb78e = 0.8,
                    _0x31f185 = 1.7;
                _0x4597c4['drawImage'](_0x582247, _0x530cb4 + _0x378cf1 * -_0xaeb78e, _0x13f8d3 + _0x1507f9 * -_0x31f185, _0x378cf1, _0x1507f9), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
            if (this['specType'] == 0x1) {
                var _0x3751d5 = this['getSkinImageObj'](this['getHead']('flamingo', ![]));
                if (_0x3751d5) {
                    _0x4597c4['save']();
                    var _0x3eaa1c = this['rad'];
                    _0x4597c4['drawImage'](_0x3751d5, -_0x3eaa1c * _0x4ef0cf, (-_0x3eaa1c + _0x3eaa1c * 0.1) * _0x4ef0cf, 0x2 * _0x3eaa1c * _0x4ef0cf, 0x2 * _0x3eaa1c * _0x4ef0cf), _0x4597c4['restore']();
                }
            }
        }, _0x3064ab['prototype']['drawUnderSkinImgOutline'] = function() {
            _0x3064ab['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
            if (this['flag_usingAbility'] && !this['flag_flying']) {
                var _0xe834fb = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x21e2d8 = 1.5,
                    _0x599657 = 0.5,
                    _0x66ef97 = _0x599657 * Math['sin'](0x2 * Math['PI'] / _0x21e2d8 * _0xe834fb);
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= 0.8, _0x4096ce(0x0, this['rad'] * (0.9 + 0.12 * _0x66ef97), this['rad'] * 0.3, '#2c84ff'), _0x4096ce(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x66ef97), '#4668ff'), _0x4597c4['restore'](), _0x4597c4['save']();
                var _0x1b4818 = '#4E71C3';
                _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = _0x1b4818;
                var _0x472870 = this['rad'] * 0.1;
                _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.3, this['rad'] * 1.2, Math['max'](0x0, _0x472870 + _0x66ef97), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.2, this['rad'] * 1.5, Math['max'](0x0, _0x472870 - _0x66ef97), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.3, this['rad'] * 1.2, Math['max'](0x0, _0x472870 + _0x66ef97), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * -0.2, this['rad'] * 1.5, Math['max'](0x0, _0x472870 - _0x66ef97), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
        }, _0x3064ab['prototype']['readCustomData_onNewlyVisible'] = function(_0x1528a9) {
            _0x3064ab['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1528a9);
            var _0x35250f = _0x1528a9['readUInt8']();
            this['colorPerc'] = _0x35250f / 0x64;
        }, _0x3064ab['prototype']['customUpdatedProperty'] = function(_0x229555, _0x20144a) {
            if (_0x229555 == _0x2e4873) {
                var _0x3c801d = _0x20144a['readUInt8']();
                this['colorPerc'] = _0x3c801d / 0x64;
            }
        };

        function _0x3064ab() {
            _0x3064ab['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3064ab, _0x269668, _0x108e2d);
        var _0x4d8447 = _0x5502af;
        _0x5abd8a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5abd8a['prototype']['constructor'] = _0x5abd8a, _0x5abd8a['superClass'] = _0x4d8447, _0x5abd8a['prototype']['getSkinName'] = function() {
            let _0x2afa76 = this['getSpeciesPath']() + '/cassowary';
            return _0x2afa76 += this['specType'] == 0x0 ? '' : this['specType'], _0x2afa76;
        }, _0x5abd8a['prototype']['getSpeciesPath'] = function() {
            return 'land/cassowary/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x5abd8a['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x5abd8a['prototype']['getAbilityInfo'] = function(_0x3fb791) {
            var _0x28b3ff = {};
            return _0x28b3ff['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0x28b3ff['abilImg'] = 'skins/land/cassowary/' + this['animalSpecies'] + this['getSubSpecies']() + '/cassowary2.png', _0x28b3ff['skinThemeID'] = this['skinThemeID'], _0x28b3ff['mopeSeasonID'] = this['mopeSeasonID'], _0x28b3ff;
        }, _0x5abd8a['prototype']['animalInfo'] = function() {
            var _0xf81a53 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xf81a53['aniName'] = 'Cassowary!';
                    break;
                case 0x1:
                    _0xf81a53['aniName'] = 'Golden Cassowary!';
                    break;
                case 0x2:
                    _0xf81a53['aniName'] = 'Cotton Cassowary!';
                    break;
                case 0x6f:
                    _0xf81a53['aniName'] = 'Classic Cassowary';
                    break;
                case 0xca:
                    _0xf81a53['aniName'] = 'Pastel Cassowary';
                    break;
                case 0xcc:
                    _0xf81a53['aniName'] = 'Basilisk Cassowary!';
                    break;
            }
            return _0xf81a53['aniCol'] = '#FF9000', _0xf81a53['skinName'] = this['getSkinName'](), _0xf81a53['upgradeText'] = 'UPGRADED to ' + _0xf81a53['aniName'] + '!\x0aHold W to charge up a kick, the longer you hold, the more powerful it is!', _0xf81a53;
        };

        function _0x5abd8a() {
            _0x5abd8a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5abd8a, _0x269668, _0x1f079f);
        var _0x4d8447 = _0x5502af;
        _0x3b2c6e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3b2c6e['prototype']['constructor'] = _0x3b2c6e, _0x3b2c6e['superClass'] = _0x4d8447, _0x3b2c6e['prototype']['getSkinName'] = function() {
            var _0x529ccd = 'land/chicken/' + this['animalSpecies'] + '/chicken';
            return _0x529ccd += this['specType'] == 0x0 ? '' : this['specType'], _0x529ccd;
        }, _0x3b2c6e['prototype']['animalInfo'] = function() {
            var _0x2fc91c = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2fc91c['aniName'] = 'Chicken';
                    break;
                case 0x6f:
                    _0x2fc91c['aniName'] = 'Classic Chicken';
                    break;
                case 0x70:
                    _0x2fc91c['aniName'] = 'Gold-trim Chicken';
                    break;
                case 0xc9:
                    _0x2fc91c['aniName'] = 'Countryside Chick';
                    break;
                case 0xca:
                    _0x2fc91c['aniName'] = 'Lightning Lord';
                    break;
            }
            return _0x2fc91c['aniCol'] = '#FF9000', _0x2fc91c['skinName'] = 'land/chicken/' + this['animalSpecies'] + '/chicken', _0x2fc91c['upgradeText'] = 'UPGRADED to ' + _0x2fc91c['aniName'] + '!', _0x2fc91c;
        }, _0x3b2c6e['prototype']['getWing'] = function(_0x152b27, _0x3320f6, _0x1b9f68) {
            var _0x50a13c = 'skins/land/' + (_0x1b9f68 ? this['getSpeciesPath'](_0x152b27) + '/' : _0x152b27 + '/');
            return _0x50a13c += _0x152b27 + '_wing' + _0x3320f6 + '.png', _0x50a13c;
        }, _0x3b2c6e['prototype']['getHead'] = function(_0x21af2b, _0x5c207e) {
            var _0x36da39 = 'skins/land/' + (_0x5c207e ? this['getSpeciesPath'](_0x21af2b) + '/' : _0x21af2b + '/');
            return _0x36da39 += _0x21af2b + '_head.png', _0x36da39;
        }, _0x3b2c6e['prototype']['getAbilityInfo'] = function(_0x27ca4f) {
            var _0x3841fd = {};
            return _0x3841fd['abilName'] = 'Run!', _0x3841fd['abilImg'] = 'skins/land/chicken/' + this['animalSpecies'] + '/ability.png', _0x3841fd['skinThemeID'] = this['skinThemeID'], _0x3841fd['mopeSeasonID'] = this['mopeSeasonID'], _0x3841fd;
        }, _0x3b2c6e['prototype']['drawSkinCustomization'] = function() {
            var _0x12a528 = 0x1f4 / 0x154;
            if (this['flag_usingAbility']) {
                _0x4597c4['save']();
                var _0x3540c4 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x7defc3 = _0x5b9e97(_0x3540c4, 0.3, 0x1, 0x2),
                    _0x59c98f = this['getSkinImageObj'](this['getWing']('chicken', 0x1, !![]));
                if (_0x59c98f) {
                    _0x4597c4['save']();
                    var _0x3fa73f = -(-0.2 + _0x7defc3) * _0x4c4686(0xf),
                        _0x3a0982 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(0xf) + _0x3fa73f);
                    var _0x34bd5a = 0x0,
                        _0x5c69f5 = this['rad'],
                        _0x1416b7 = _0x3a0982 * 0x2 * 0.7,
                        _0x5b4e33 = _0x3a0982 * 2.2,
                        _0x53a254 = 0x0,
                        _0x56978e = 1.5;
                    _0x4597c4['drawImage'](_0x59c98f, _0x34bd5a + _0x1416b7 * -_0x53a254, _0x5c69f5 + _0x5b4e33 * -_0x56978e, _0x1416b7, _0x5b4e33), _0x4597c4['restore']();
                }
                var _0x59c98f = this['getSkinImageObj'](this['getWing']('chicken', 0x2, !![]));
                if (_0x59c98f) {
                    _0x4597c4['save']();
                    var _0x3fa73f = -(-0.2 + _0x7defc3) * _0x4c4686(-0xf),
                        _0x3a0982 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-0xf) + _0x3fa73f);
                    var _0x34bd5a = 0x0,
                        _0x5c69f5 = this['rad'],
                        _0x1416b7 = _0x3a0982 * 0x2 * 0.7,
                        _0x5b4e33 = _0x3a0982 * 2.2,
                        _0x53a254 = 0x1,
                        _0x56978e = 1.5;
                    _0x4597c4['drawImage'](_0x59c98f, _0x34bd5a + _0x1416b7 * -_0x53a254, _0x5c69f5 + _0x5b4e33 * -_0x56978e, _0x1416b7, _0x5b4e33), _0x4597c4['restore']();
                }
                var _0x6d4b38 = this['getSkinImageObj'](this['getHead']('chicken', !![]));
                if (_0x6d4b38) {
                    _0x4597c4['save']();
                    var _0x3a0982 = this['rad'] * 0x1,
                        _0xc45615 = -this['rad'] * 0.1;
                    _0x4597c4['drawImage'](_0x6d4b38, -_0x3a0982 * _0x12a528, -_0x3a0982 + _0xc45615 * _0x12a528, 0x2 * _0x3a0982 * _0x12a528, 0x2 * _0x3a0982 * _0x12a528), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            }
        };

        function _0x3b2c6e() {
            _0x3b2c6e['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3b2c6e, _0x269668, _0x1ecc36);
        var _0x4d8447 = _0x5502af;
        _0x47cd1c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x47cd1c['prototype']['constructor'] = _0x47cd1c, _0x47cd1c['superClass'] = _0x4d8447, _0x47cd1c['prototype']['animalInfo'] = function() {
            var _0x4581f2 = {};
            _0x4581f2['aniName'] = 'Woodpecker';
            switch (this['animalSpecies']) {
                case 0x6f:
                    _0x4581f2['aniName'] = 'Classic Woodpecker';
                    break;
                case 0x70:
                    _0x4581f2['aniName'] = 'Gold-trim Woodpecker';
                    break;
                case 0xca:
                    _0x4581f2['aniName'] = 'Jackhammer';
                    break;
            }
            return _0x4581f2['aniCol'] = '#FF9000', _0x4581f2['skinName'] = this['getSpeciesPath']('woodpecker') + '/woodpecker', _0x4581f2['upgradeText'] = 'UPGRADED to ' + _0x4581f2['aniName'] + '!\x0aHold W to Peck other animals,\x0a or (Hint: Use ability on hills to fly)', _0x4581f2;
        }, _0x47cd1c['prototype']['getSpeciesPath'] = function(_0x50c861) {
            return 'land/' + _0x50c861 + '/' + this['animalSpecies'];
        }, _0x47cd1c['prototype']['getSkinName'] = function() {
            var _0x3c9feb = this['getSpeciesPath']('woodpecker') + '/woodpecker';
            return _0x3c9feb += this['specType'] == 0x0 ? '' : this['specType'], _0x3c9feb;
        }, _0x47cd1c['prototype']['getHead'] = function(_0x46d3fc, _0x4a170d) {
            var _0x42f561 = 'skins/' + (_0x4a170d ? this['getSpeciesPath'](_0x46d3fc) + '/' : _0x46d3fc + '/');
            return _0x42f561 += _0x46d3fc + '_head' + (!this['flag_flying'] && this['flag_usingAbility'] ? '1' : '') + '.png', _0x42f561;
        }, _0x47cd1c['prototype']['getAniRadius'] = function(_0x3ac22a) {
            if (this['flag_usingAbility'] && this['flag_flying']) return _0x3ac22a * 0.8;
            return _0x3ac22a;
        }, _0x47cd1c['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x5b4338 = 'skins';
            {
                var _0x24a559 = 0x1f4 / 0x154;
                _0x4597c4['save']();
                var _0x50b089 = this['flag_flying'] ? 0x2d : 0x2f,
                    _0xfd4b03 = this['flag_flying'] ? 0x5a : 0x2d,
                    _0x2dee21 = this['flag_flying'] ? 0.2 : 0.01,
                    _0x171ffc = this['flag_flying'] ? 2.5 : 0x2,
                    _0x34eba1 = this['flag_flying'] ? 2.2 : 2.5,
                    _0x301ed1 = this['flag_flying'] ? 0.5 : 0.3,
                    _0x293c0b = 0.3,
                    _0x5bb49f = (_0x476319 - this['spawnTime']) / 0x3e8;
                if (this['flag_flying']) {
                    var _0x3e516d = _0x38f4be('bird', this['spawnTime']);
                    _0x3e516d !== undefined && _0x3e516d != null && (this['theFrame'] = _0x3e516d);
                } else this['theFrame'] = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x5bb49f, _0x301ed1, _0x293c0b, 0x2) : this['birdNoAnimationFlyWingAngle'];
                var _0x564b79 = this['theFrame'],
                    _0x98ee62 = this['getSkinImageObj'](this['getWing']('woodpecker', 0x1, !![]));
                if (_0x98ee62) {
                    _0x4597c4['save']();
                    var _0x2f772b = -(-_0x2dee21 + _0x564b79) * _0x4c4686(_0xfd4b03),
                        _0x109953 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(_0x50b089) + _0x2f772b);
                    var _0x127431 = 0x0,
                        _0x3de88b = this['rad'],
                        _0x2c3079 = _0x109953 * _0x34eba1 * 0.62,
                        _0x54f01c = _0x109953 * _0x171ffc,
                        _0x393d18 = 0.2,
                        _0x30f716 = 1.7;
                    _0x4597c4['drawImage'](_0x98ee62, _0x127431 + _0x2c3079 * -_0x393d18, _0x3de88b + _0x54f01c * -_0x30f716, _0x2c3079, _0x54f01c), _0x4597c4['restore']();
                }
                var _0x98ee62 = this['getSkinImageObj'](this['getWing']('woodpecker', 0x2, !![]));
                if (_0x98ee62) {
                    _0x4597c4['save']();
                    var _0x2f772b = -(-_0x2dee21 + _0x564b79) * _0x4c4686(-_0xfd4b03),
                        _0x109953 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-_0x50b089) + _0x2f772b);
                    var _0x127431 = 0x0,
                        _0x3de88b = this['rad'],
                        _0x2c3079 = _0x109953 * _0x34eba1 * 0.62,
                        _0x54f01c = _0x109953 * _0x171ffc,
                        _0x393d18 = 0.8,
                        _0x30f716 = 1.7;
                    _0x4597c4['drawImage'](_0x98ee62, _0x127431 + _0x2c3079 * -_0x393d18, _0x3de88b + _0x54f01c * -_0x30f716, _0x2c3079, _0x54f01c), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x390be1 = this['getSkinImageObj'](this['getHead']('woodpecker', !![]));
                    if (_0x390be1) {
                        _0x564b79 = 0x0;
                        !this['flag_flying'] && (_0x293c0b = 0x3, _0x301ed1 = 0.18, _0x564b79 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x5bb49f, _0x301ed1, _0x293c0b, 0x2) : this['birdNoAnimationFlyWingAngle']);
                        _0x4597c4['save']();
                        var _0x109953 = this['rad'],
                            _0x7e26bd = !this['flag_flying'] ? (-_0x109953 + _0x109953 * 0.1) * _0x24a559 + _0x564b79 : -_0x109953;
                        _0x4597c4['drawImage'](_0x390be1, -_0x109953 * _0x24a559, _0x7e26bd, 0x2 * _0x109953 * _0x24a559, 0x2 * _0x109953 * _0x24a559), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x47cd1c() {
            _0x47cd1c['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x47cd1c, _0x269668, _0x2d9acc);
        var _0x4d8447 = _0x5502af;
        _0x573a9b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x573a9b['prototype']['constructor'] = _0x573a9b, _0x573a9b['superClass'] = _0x4d8447, _0x573a9b['prototype']['updateZ'] = function() {
            if (this['flag_usingAbility']) {
                if (this['flag_flying']) {
                    this['z'] = 0x186a0 + this['rad'];
                    return;
                }
            }
            this['z'] = 0x3e8 + this['rad'];
        }, _0x573a9b['prototype']['animalInfo'] = function() {
            var _0x578073 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x578073['aniName'] = 'Peacock';
                    break;
                case 0x6f:
                    _0x578073['aniName'] = 'Classic Peacock';
                    break;
                case 0x70:
                    _0x578073['aniName'] = 'Gold-trim Peacock';
                    break;
                case 0xc8:
                    _0x578073['aniName'] = 'Plague Raptor';
                    break;
                case 0xca:
                    _0x578073['aniName'] = 'Spectrum Peacock';
                    break;
            }
            return _0x578073['aniCol'] = '#FF9000', _0x578073['skinName'] = this['getSpeciesPath']('peacock') + '/peacock', _0x578073['upgradeText'] = 'UPGRADED to ' + _0x578073['aniName'] + '!\x0aHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \x0aHint:Start the ability on a hill to fly!. ', _0x578073;
        }, _0x573a9b['prototype']['getSkinName'] = function() {
            if (this['mopeSeasonID'] == 0x1) {
                if (this['flag_usingAbility']) {
                    if (this['flag_flying']) return this['getSpeciesPath']('peacock') + '/peacock_flying_tail';
                    else return this['getSpeciesPath']('peacock') + '/tail3';
                }
                return this['getSpeciesPath']('peacock') + '/tail1';
            } else {
                var _0x5c7ccc = this['getSpeciesPath']('peacock') + '/peacock';
                return _0x5c7ccc += this['specType'] == 0x0 ? '' : this['specType'], _0x5c7ccc;
            }
        }, _0x573a9b['prototype']['getSpeciesPath'] = function(_0x2c2107) {
            return 'land/' + _0x2c2107 + '/' + this['animalSpecies'];
        }, _0x573a9b['prototype']['getWing'] = function(_0x117946, _0x528764, _0x2774bf) {
            var _0x4e1f2f = 'skins/' + (_0x2774bf ? this['getSpeciesPath'](_0x117946) + '/' : _0x117946 + '/');
            return _0x4e1f2f += _0x117946 + '_wing' + _0x528764 + '.png', _0x4e1f2f;
        }, _0x573a9b['prototype']['getHead'] = function(_0x5c39ff, _0x486b77) {
            var _0x220253 = 'skins/' + (_0x486b77 ? this['getSpeciesPath'](_0x5c39ff) + '/' : _0x5c39ff + '/');
            return _0x220253 += _0x5c39ff + '_head.png', _0x220253;
        }, _0x573a9b['prototype']['getAniRadius'] = function(_0x4ed726) {
            if (this['flag_usingAbility'] && this['flag_flying']) return _0x4ed726 * 0.9;
            return _0x4ed726;
        }, _0x573a9b['prototype']['getSkinImageObj'] = function(_0x5b0b85) {
            var _0x2816d4 = this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x5b0b85, _0x2816d4);
        }, _0x573a9b['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            if (this['mopeSeasonID'] <= 0x1) {
                var _0x4d64c0 = this['skinRad'];
                if (this['loadedSkinImg']) {
                    if (!this['flag_usingAbility']) {
                        _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x4d64c0 * this['skinScale'], -_0x4d64c0 * 1.25 * this['skinScale'], 0x2 * _0x4d64c0 * this['skinScale'], 0x2 * _0x4d64c0 * this['skinScale']);
                        var _0x2f2c40 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('peacock') + '/peacock_top.png');
                        _0x2f2c40 && _0x4597c4['drawImage'](_0x2f2c40, -_0x4d64c0 * this['skinScale'], -_0x4d64c0 * this['skinScale'], 0x2 * _0x4d64c0 * this['skinScale'], 0x2 * _0x4d64c0 * this['skinScale']);
                    } else _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x4d64c0 * this['skinScale'], -_0x4d64c0 * 1.75 * this['skinScale'], 0x2 * _0x4d64c0 * this['skinScale'], 2.5 * _0x4d64c0 * this['skinScale']);
                }
            } else {
                var _0x4aeb0e = 0.05,
                    _0x528bd2 = -0.8,
                    _0x4d64c0 = this['getAniRadius'](this['skinRad'] - this['outlineW']),
                    _0x30c900 = 0x1f4 / 0x154;
                if (!this['flag_flying'] && this['flag_usingAbility']) {
                    var _0x3df536 = -0.55,
                        _0xaf9639 = 'peacock_ability',
                        _0x34a755 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0xaf9639 + '.png'),
                        _0x1906eb = this['skinScale'] + (this['flag_usingAbility'] && !this['flag_flying'] ? 0x1 : 0x0);
                    _0x34a755 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x34a755, -_0x4d64c0 * _0x1906eb, (-_0x4d64c0 + _0x4d64c0 * _0x3df536) * _0x1906eb, 0x2 * _0x4d64c0 * _0x1906eb, 0x2 * _0x4d64c0 * _0x1906eb), _0x4597c4['restore']());
                }
                if (this['loadedSkinImg']) {
                    var _0xa750b6 = this['flag_usingAbility'] && !this['flag_flying'] ? this['skinScale'] * 1.1 : _0x30c900;
                    _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x4d64c0 * _0xa750b6, (-_0x4d64c0 + _0x4d64c0 * _0x4aeb0e) * _0xa750b6, 0x2 * _0x4d64c0 * _0xa750b6, 0x2 * _0x4d64c0 * _0xa750b6);
                    if (this['flag_flying'] || !this['flag_usingAbility']) {
                        var _0xaf9639 = 'tail',
                            _0x34a755 = this['getSkinImageObj']('skins/land/peacock/' + this['animalSpecies'] + '/' + _0xaf9639 + '.png'),
                            _0x1906eb = this['skinScale'];
                        if (_0x34a755) {
                            _0x4597c4['save']();
                            var _0x4d64c0 = this['rad'] - this['outlineW'];
                            _0x4597c4['drawImage'](_0x34a755, -_0x4d64c0 * _0x1906eb, (-_0x4d64c0 + _0x4d64c0 * _0x528bd2) * _0x1906eb, 0x2 * _0x4d64c0 * _0x1906eb, 0x2 * _0x4d64c0 * _0x1906eb), _0x4597c4['restore']();
                        }
                    }
                    if (!this['flag_usingAbility']) {
                        var _0x2f2c40 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('peacock') + '/peacock_top.png');
                        _0x2f2c40 && _0x4597c4['drawImage'](_0x2f2c40, -_0x4d64c0 * _0x30c900, (-_0x4d64c0 + _0x4d64c0 * _0x4aeb0e) * _0x30c900, 0x2 * _0x4d64c0 * _0x30c900, 0x2 * _0x4d64c0 * _0x30c900);
                    }
                }
            }
        }, _0x573a9b['prototype']['drawSkinCustomization'] = function() {
            if (this['mopeSeasonID'] <= 0x1) {
                if (!this['flag_usingAbility']) return;
                if (!this['flag_flying']) {
                    _0x4597c4['save']();
                    var _0x4949f9 = this['rad'],
                        _0x4ebf14 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('peacock') + '/peacock_ability.png');
                    _0x4ebf14 && _0x4597c4['drawImage'](_0x4ebf14, -_0x4949f9 * this['skinScale'] * 0x2, -_0x4949f9 * this['skinScale'] * 0x3 + _0x4949f9 * 0.4, 0x2 * _0x4949f9 * this['skinScale'] * 0x2, 0x3 * _0x4949f9 * this['skinScale']), _0x4597c4['restore']();
                }
                var _0x1b43df = 0x1f4 / 0x154;
                _0x4597c4['save']();
                var _0x59d093 = this['flag_flying'] ? 0x2d : 0x14,
                    _0x565ce8 = this['flag_flying'] ? 0x5a : 0x2d,
                    _0x1929d4 = this['flag_flying'] ? 0.2 : 0.01,
                    _0x575f1d = this['flag_flying'] ? 2.5 : 0x2,
                    _0x3b4e36 = this['flag_flying'] ? 2.5 : 0x2,
                    _0x271e37 = this['flag_flying'] ? 0x0 : -0.4,
                    _0x37aa15 = this['flag_flying'] ? 0x0 : -0.2,
                    _0x49781a = this['flag_flying'] ? 0.5 : 1.2,
                    _0xeaa790 = this['flag_flying'] ? 0.3 : 0.1,
                    _0x21f638 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x446185 = !(_0x3aa021 == 0x2 || _0x9ffe4d) ? _0x5b9e97(_0x21f638, _0x49781a, _0xeaa790, 0x2) : this['birdNoAnimationFlyWingAngle'],
                    _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
                if (_0x28de0f) {
                    _0x4597c4['save']();
                    var _0x21e70d = -(-_0x1929d4 + _0x446185) * _0x4c4686(_0x565ce8),
                        _0x4949f9 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(_0x59d093) + _0x21e70d);
                    var _0x1662c0 = 0x0,
                        _0x15ffda = this['rad'],
                        _0x5781c5 = _0x4949f9 * _0x3b4e36 * 0.62,
                        _0x19b3f0 = _0x4949f9 * _0x575f1d,
                        _0x2a9592 = 0.2 + _0x271e37,
                        _0x47da6e = 1.7 + _0x37aa15;
                    _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                }
                var _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
                if (_0x28de0f) {
                    _0x4597c4['save']();
                    var _0x21e70d = -(-_0x1929d4 + _0x446185) * _0x4c4686(-_0x565ce8),
                        _0x4949f9 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-_0x59d093) + _0x21e70d);
                    var _0x1662c0 = 0x0,
                        _0x15ffda = this['rad'],
                        _0x5781c5 = _0x4949f9 * _0x3b4e36 * 0.62,
                        _0x19b3f0 = _0x4949f9 * _0x575f1d,
                        _0x2a9592 = 0.8 - _0x271e37,
                        _0x47da6e = 1.7 + _0x37aa15;
                    _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
                if (this['specType'] == 0x1) {
                    var _0x4eebc3 = this['getSkinImageObj'](this['getHead']('peacock', !![]));
                    if (_0x4eebc3) {
                        _0x4597c4['save']();
                        var _0x4949f9 = this['rad'];
                        _0x4597c4['drawImage'](_0x4eebc3, -_0x4949f9 * _0x1b43df, (-_0x4949f9 + _0x4949f9 * 0.1) * _0x1b43df, 0x2 * _0x4949f9 * _0x1b43df, 0x2 * _0x4949f9 * _0x1b43df), _0x4597c4['restore']();
                    }
                }
            } else {
                if (!this['flag_usingAbility']) return;
                var _0x1b43df = 0x1f4 / 0x154;
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    var _0x463350 = _0x38f4be('bird', this['spawnTime']);
                    _0x463350 !== undefined && _0x463350 != null && (this['theFrame'] = _0x463350);
                    var _0x446185 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
                    if (_0x28de0f) {
                        _0x4597c4['save']();
                        var _0x21e70d = -(-0.2 + _0x446185) * _0x197fc1,
                            _0x4949f9 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x21e70d);
                        var _0x1662c0 = 0x0,
                            _0x15ffda = this['rad'],
                            _0x5781c5 = _0x4949f9 * 0x2 * 0.62,
                            _0x19b3f0 = _0x4949f9 * 2.5,
                            _0x2a9592 = 0.2,
                            _0x47da6e = 1.7;
                        _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                    }
                    var _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
                    if (_0x28de0f) {
                        _0x4597c4['save']();
                        var _0x21e70d = -(-0.2 + _0x446185) * _0x4c4686(-0x5a),
                            _0x4949f9 = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x21e70d);
                        var _0x1662c0 = 0x0,
                            _0x15ffda = this['rad'],
                            _0x5781c5 = _0x4949f9 * 0x2 * 0.62,
                            _0x19b3f0 = _0x4949f9 * 2.5,
                            _0x2a9592 = 0.8,
                            _0x47da6e = 1.7;
                        _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                } else {
                    if (this['flag_usingAbility'] && !this['flag_flying']) {
                        _0x4597c4['save']();
                        var _0x59d093 = this['flag_flying'] ? 0x2d : 0x14,
                            _0x565ce8 = this['flag_flying'] ? 0x5a : 0x2d,
                            _0x1929d4 = this['flag_flying'] ? 0.2 : 0.01,
                            _0x575f1d = this['flag_flying'] ? 2.5 : 0x2,
                            _0x3b4e36 = this['flag_flying'] ? 2.5 : 0x2,
                            _0x271e37 = this['flag_flying'] ? 0x0 : -0.4,
                            _0x37aa15 = this['flag_flying'] ? 0x0 : -0.2,
                            _0x49781a = this['flag_flying'] ? 0.5 : 1.2,
                            _0xeaa790 = this['flag_flying'] ? 0.3 : 0.1,
                            _0x21f638 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x446185 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x21f638, _0x49781a, _0xeaa790, 0x2) : this['birdNoAnimationFlyWingAngle'],
                            _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x1, !![]));
                        if (_0x28de0f) {
                            _0x4597c4['save']();
                            var _0x21e70d = -(-_0x1929d4 + _0x446185) * _0x4c4686(_0x565ce8),
                                _0x4949f9 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(_0x59d093) + _0x21e70d);
                            var _0x1662c0 = 0x0,
                                _0x15ffda = this['rad'],
                                _0x5781c5 = _0x4949f9 * _0x3b4e36 * 0.62,
                                _0x19b3f0 = _0x4949f9 * _0x575f1d,
                                _0x2a9592 = 0.2 + _0x271e37,
                                _0x47da6e = 1.7 + _0x37aa15;
                            _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                        }
                        var _0x28de0f = this['getSkinImageObj'](this['getWing']('peacock', 0x2, !![]));
                        if (_0x28de0f) {
                            _0x4597c4['save']();
                            var _0x21e70d = -(-_0x1929d4 + _0x446185) * _0x4c4686(-_0x565ce8),
                                _0x4949f9 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(-_0x59d093) + _0x21e70d);
                            var _0x1662c0 = 0x0,
                                _0x15ffda = this['rad'],
                                _0x5781c5 = _0x4949f9 * _0x3b4e36 * 0.62,
                                _0x19b3f0 = _0x4949f9 * _0x575f1d,
                                _0x2a9592 = 0.8 - _0x271e37,
                                _0x47da6e = 1.7 + _0x37aa15;
                            _0x4597c4['drawImage'](_0x28de0f, _0x1662c0 + _0x5781c5 * -_0x2a9592, _0x15ffda + _0x19b3f0 * -_0x47da6e, _0x5781c5, _0x19b3f0), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x1a036d = 0.4,
                        _0x4eebc3 = this['getSkinImageObj'](this['getHead']('peacock', !![]));
                    if (_0x4eebc3) {
                        _0x4597c4['save']();
                        var _0x4949f9 = this['rad'];
                        _0x4597c4['drawImage'](_0x4eebc3, -_0x4949f9 * _0x1b43df, (-_0x4949f9 + _0x4949f9 * _0x1a036d) * _0x1b43df, 0x2 * _0x4949f9 * _0x1b43df, 0x2 * _0x4949f9 * _0x1b43df), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x573a9b() {
            _0x573a9b['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x573a9b, _0x269668, _0x5bec16);
        var _0x4d8447 = _0x5502af;
        _0x3642e6['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3642e6['prototype']['constructor'] = _0x3642e6, _0x3642e6['superClass'] = _0x4d8447, _0x3642e6['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
            if (this['flag_canClimbHill'] || this['flag_flying']) this['z'] += 0x186a0;
        }, _0x3642e6['prototype']['animalInfo'] = function() {
            var _0xd1a166 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xd1a166['aniName'] = 'Gazelle';
                    break;
                case 0x64:
                    _0xd1a166['aniName'] = 'Flammy Hart';
                    break;
                case 0x6f:
                    _0xd1a166['aniName'] = 'Classic Gazelle';
                    break;
                case 0x70:
                    _0xd1a166['aniName'] = 'Gold-trim Gazelle';
                    break;
                case 0xca:
                    _0xd1a166['aniName'] = 'Retro Neon Gazelle';
                    break;
            }
            return _0xd1a166['skinName'] = this['getSkinName'](), _0xd1a166['aniCol'] = '#FF9000', _0xd1a166['upgradeText'] = 'UPGRADED to ' + _0xd1a166['aniName'] + '!\x0aHold \'W\' to Jump High through everything.', _0xd1a166;
        }, _0x3642e6['prototype']['moveF'] = 0.08, _0x3642e6['prototype']['jumpAnim'] = null, _0x3642e6['prototype']['frame'] = 0x0, _0x3642e6['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility'] && _0x3aa021 != _0x243dd0) {
                var _0x3ea4ea = 0x1;
                this['jumpAnim'] == null && (this['jumpAnim'] = new _0x504c7a(this, 0.5, _0x504c7a['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function(_0x56d6c5) {
                    this['forObj']['frame'] = _0x56d6c5;
                }, this['jumpAnim']['onStop'] = function() {});
                if (this['jumpAnim'] != null) this['jumpAnim']['run']();
                var _0x249249 = this['rad'] - this['outlineW'],
                    _0x5566b8 = 0x1f4 / 0x154;
                this['setSkinScale']();
                var _0x25f1cb = 'skins/' + this['getSkinPath']() + '/legs0.png',
                    _0x2cdbde = 'skins/' + this['getSkinPath']() + '/legs1.png',
                    _0x1584e4 = this['getSkinImageObj'](_0x25f1cb),
                    _0x5bee3d = this['getSkinImageObj'](_0x2cdbde);
                if (_0x1584e4 && _0x5bee3d) {
                    var _0x5566b8 = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
                        _0x249249 = this['skinRad'];
                    this['specType'] == 0x0 ? (_0x4597c4['drawImage'](_0x1584e4, -_0x249249 * _0x5566b8, -_0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8), _0x4597c4['drawImage'](_0x5bee3d, -_0x249249 * _0x5566b8, (-_0x249249 - _0x249249 * this['moveF'] * this['frame']) * _0x5566b8, 0x2 * _0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8)) : (_0x4597c4['drawImage'](_0x5bee3d, -_0x249249 * _0x5566b8, -_0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8), _0x4597c4['drawImage'](_0x1584e4, -_0x249249 * _0x5566b8, (-_0x249249 + _0x249249 * this['moveF'] * this['frame']) * _0x5566b8, 0x2 * _0x249249 * _0x5566b8, 0x2 * _0x249249 * _0x5566b8));
                }
            } else this['jumpAnim'] = null;
        }, _0x3642e6['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x3642e6['prototype']['getSkinPath'] = function(_0x2b4f25) {
            return 'desert/gazelle/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x3642e6['prototype']['getSkinName'] = function() {
            var _0xdd68fd = this['getSkinPath']() + '/gazelle';
            return _0xdd68fd += this['specType'] == 0x0 || _0x3aa021 !== _0x243dd0 ? '' : this['specType'], _0xdd68fd;
        }, _0x3642e6['prototype']['getAbilityInfo'] = function(_0xc8d627) {
            var _0x5ee5b2 = {};
            return _0x5ee5b2['abilImg'] = 'skins/' + this['getSkinPath']() + '/gazelle1.png', _0x5ee5b2['abilName'] = 'HOLD to Jump High\x0a', _0x5ee5b2['skinThemeID'] = this['skinThemeID'], _0x5ee5b2['mopeSeasonID'] = this['mopeSeasonID'], _0x5ee5b2;
        };

        function _0x3642e6() {
            _0x3642e6['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3642e6, _0x269668, _0x355b29);
        var _0x4d8447 = _0x5502af;
        _0x1c946e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1c946e['prototype']['constructor'] = _0x1c946e, _0x1c946e['superClass'] = _0x4d8447, _0x1c946e['prototype']['animalInfo'] = function() {
            var _0x311998 = {};
            _0x311998['aniCol'] = '#FF9000';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x311998['aniName'] = 'Armadillo';
                    break;
                case 0x6f:
                    _0x311998['aniName'] = 'Classic Armadillo';
                    break;
                case 0x70:
                    _0x311998['aniName'] = 'Gold-trim Armadillo';
                    break;
            }
            return _0x311998['skinName'] = this['getSkinName'](), _0x311998['upgradeText'] = 'UPGRADED to ' + _0x311998['aniName'] + '!\x0aHold \'W\' to roll through everything. \x0aCarefully, try eating mangoes around venus flytraps!', _0x311998;
        }, _0x1c946e['prototype']['drawUnderSkinTail'] = function(_0x31a7a2) {
            !this['flag_usingAbility'] && _0x1c946e['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x31a7a2);
        }, _0x1c946e['prototype']['drawAnimalUnderSkinCircle'] = function(_0x235e65) {
            !this['flag_usingAbility'] && _0x1c946e['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x235e65);
        }, _0x1c946e['prototype']['basicDrawSkinImg'] = function() {
            if (!this['flag_usingAbility']) {
                _0x1c946e['superClass']['prototype']['basicDrawSkinImg']['call'](this);
                return;
            } else {
                this['setSkinScale'](), this['frameNumber'] = Math['trunc'](_0x476319 / 0x78) % 0x6;
                var _0x3a842b = 'skins/' + this['getSkin']() + this['frameNumber'] + '.png',
                    _0x4b289e = this['getSkinImageObj'](_0x3a842b);
                if (_0x4b289e) {
                    var _0x5c67f2 = this['skinScale'],
                        _0x2e8172 = this['skinRad'];
                    _0x4597c4['drawImage'](_0x4b289e, -_0x2e8172 * _0x5c67f2, -_0x2e8172 * _0x5c67f2, 0x2 * _0x2e8172 * _0x5c67f2, 0x2 * _0x2e8172 * _0x5c67f2);
                }
            }
        }, _0x1c946e['prototype']['getSkin'] = function() {
            return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo';
        }, _0x1c946e['prototype']['getSkinName'] = function() {
            return 'desert/armadillo/' + this['animalSpecies'] + this['getSubSpecies']() + '/armadillo' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x1c946e['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x1c946e() {
            _0x1c946e['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1c946e, _0x269668, _0x4828a0);
        var _0x4d8447 = _0x5502af;
        _0x1c796c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1c796c['prototype']['constructor'] = _0x1c796c, _0x1c796c['superClass'] = _0x4d8447, _0x1c796c['prototype']['animalInfo'] = function() {
            var _0x31e0d1 = {};
            _0x31e0d1['aniCol'] = '#FF9000';
            switch (this['animalSpecies']) {
                case 0x64:
                    _0x31e0d1['aniName'] = 'Cacti Rat';
                    break;
                case 0x0:
                    _0x31e0d1['aniName'] = 'Desert Rat';
                    break;
                case 0x6f:
                    _0x31e0d1['aniName'] = 'Classic Desert Rat';
                    break;
                case 0x70:
                    _0x31e0d1['aniName'] = 'Gold-trim Desert Rat';
                    break;
                case 0xca:
                    _0x31e0d1['aniName'] = 'Plasma Rat';
                    break;
            }
            return _0x31e0d1['skinName'] = this['getSkinName'](), _0x31e0d1['upgradeText'] = 'You\'re a tiny ' + _0x31e0d1['aniName'] + '- Eat food to grow!', _0x31e0d1;
        }, _0x1c796c['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/kangaroorat' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x1c796c['prototype']['getSkinPath'] = function() {
            return 'desert/kangaroorat/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x1c796c['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x1c796c['prototype']['flapStart'] = 0x0, _0x1c796c['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility']) {
                var _0x5a126d = 'skins/' + this['getSkinPath']() + '/tail.png',
                    _0x1e6b58 = this['getSkinImageObj'](_0x5a126d);
                if (_0x1e6b58) {
                    var _0x1ea811 = this['skinScale'] * 1.5,
                        _0x2b264b = this['skinRad'];
                    _0x4597c4['drawImage'](_0x1e6b58, -_0x2b264b * _0x1ea811, (-_0x2b264b + _0x2b264b * -0.08) * _0x1ea811, 0x2 * _0x2b264b * _0x1ea811, 0x2 * _0x2b264b * _0x1ea811);
                }
            }
        };

        function _0x1c796c() {
            _0x1c796c['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1c796c, _0x269668, _0x427de7);
        var _0x4d8447 = _0x5502af;
        _0x45dee8['prototype'] = Object['create'](_0x4d8447['prototype']), _0x45dee8['prototype']['constructor'] = _0x45dee8, _0x45dee8['superClass'] = _0x4d8447, _0x45dee8['prototype']['animalInfo'] = function() {
            var _0x27e3f5 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x27e3f5['aniName'] = 'Desert Chipmunk';
                    break;
                case 0x6f:
                    _0x27e3f5['aniName'] = 'Classic Desert Chipmunk';
                    break;
                case 0x70:
                    _0x27e3f5['aniName'] = 'Gold-trim Desert Chipmunk';
                    break;
                case 0xc8:
                    _0x27e3f5['aniName'] = 'Velvet Chipmunk';
                    break;
                case 0xca:
                    _0x27e3f5['aniName'] = 'Chipmonk';
                    break;
            }
            return _0x27e3f5['skinName'] = this['getSkinName'](), _0x27e3f5['aniCol'] = '#FF9000', _0x27e3f5['upgradeText'] = 'UPGRADED to ' + _0x27e3f5['aniName'] + '!\x0a Press W to Spit food to boost yourself!', _0x27e3f5;
        }, _0x45dee8['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/chipmunk' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x45dee8['prototype']['getSkinPath'] = function() {
            return 'desert/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x45dee8['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x45dee8() {
            _0x45dee8['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x45dee8, _0x269668, _0x214ca3);
        var _0x4d8447 = _0x5502af;
        _0x2b2ebd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2b2ebd['prototype']['constructor'] = _0x2b2ebd, _0x2b2ebd['superClass'] = _0x4d8447, _0x2b2ebd['prototype']['updateZ'] = function() {
            if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
            else {
                if (this['flag_usingAbility']) this['z'] = -0x9d;
                else {
                    if (this['flag_flying'] || this['flag_eff_tossedInAir']) this['z'] = 0x834 + this['rad'];
                    else this['z'] = this['rad'];
                }
            }
        }, _0x2b2ebd['prototype']['animalInfo'] = function() {
            var _0xe18f1 = {};
            _0xe18f1['aniCol'] = '#FF9000';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xe18f1['aniName'] = 'Meerkat';
                    break;
                case 0x64:
                    _0xe18f1['aniName'] = 'Puumpkat';
                    break;
                case 0x6f:
                    _0xe18f1['aniName'] = 'Classic Meerkat';
                    break;
                case 0x70:
                    _0xe18f1['aniName'] = 'Gold-trim Meerkat';
                    break;
                case 0xc9:
                    _0xe18f1['aniName'] = 'Scubakat';
                    break;
                case 0xcc:
                    _0xe18f1['aniName'] = 'Necromancer Meerkat';
                    break;
            }
            return _0xe18f1['skinName'] = this['getSkinName'](), _0xe18f1['upgradeText'] = 'UPGRADED to ' + _0xe18f1['aniName'] + '!\x0a HOLD to Dig Underground. \x0aYou can now eat pink cactus fruits!', _0xe18f1;
        }, _0x2b2ebd['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/meerkat' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x2b2ebd['prototype']['getSkinPath'] = function() {
            return 'desert/meerkat/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x2b2ebd['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x2b2ebd['prototype']['drawAnimalUnderSkinCircle'] = function(_0x59b688) {
            !this['flag_usingAbility'] && _0x2b2ebd['superClass']['prototype']['drawAnimalUnderSkinCircle']['call'](this, _0x59b688);
        }, _0x2b2ebd['prototype']['drawUnderSkinTail'] = function(_0x3bb4a6) {
            !this['flag_usingAbility'] && _0x2b2ebd['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x3bb4a6);
        }, _0x2b2ebd['prototype']['basicDrawSkinImg'] = function() {
            if (!this['flag_usingAbility']) {
                _0x2b2ebd['superClass']['prototype']['basicDrawSkinImg']['call'](this);
                return;
            } else {
                this['setSkinScale'](), _0x4597c4['save']();
                var _0xd58304 = _0xd58304 = 'skins/' + this['getSkinPath']() + '/meerkat1.png',
                    _0x3bceb6 = this['getSkinImageObj'](_0xd58304);
                if (_0x3bceb6) {
                    var _0x1b19f8 = this['skinScale'],
                        _0x17a1bc = this['skinRad'];
                    _0x4597c4['drawImage'](_0x3bceb6, -_0x17a1bc * _0x1b19f8, -_0x17a1bc * _0x1b19f8, 0x2 * _0x17a1bc * _0x1b19f8, 0x2 * _0x17a1bc * _0x1b19f8);
                }
                _0x4597c4['restore']();
            }
        };

        function _0x2b2ebd() {
            _0x2b2ebd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2b2ebd, _0x269668, _0x2521ea);
        var _0x4d8447 = _0x5502af;
        _0x2ff87['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2ff87['prototype']['constructor'] = _0x2ff87, _0x2ff87['superClass'] = _0x4d8447, _0x2ff87['prototype']['animalInfo'] = function() {
            var _0x5986ed = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5986ed['aniName'] = 'Fennec Fox';
                    break;
                case 0x6f:
                    _0x5986ed['aniName'] = 'Classic Fennec Fox';
                    break;
                case 0x70:
                    _0x5986ed['aniName'] = 'Gold-trim Fennec Fox';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x5986ed['aniName'] = 'Fire Fox';
                            break;
                        case 0x1:
                            _0x5986ed['aniName'] = 'Purple Fire Fox';
                    }
                    break;
            }
            return _0x5986ed['aniCol'] = '#FF9000', _0x5986ed['skinName'] = this['getSkinName'](), _0x5986ed['upgradeText'] = 'UPGRADED to ' + _0x5986ed['aniName'] + '!\x0aFennec Fox has very sharp ears (can see animals in hiding holes).\x0a Press W to Whine!', _0x5986ed;
        }, _0x2ff87['prototype']['getSkinPath'] = function(_0x12d9f8) {
            return 'desert/fennecfox/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x2ff87['prototype']['getSkinName'] = function() {
            var _0xe27f73 = this['getSkinPath']() + '/fennecfox';
            return _0xe27f73 += this['specType'] == 0x0 ? '' : this['specType'], _0xe27f73;
        }, _0x2ff87['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x2ff87['prototype']['flapStart'] = 0x0, _0x2ff87['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['flapStart'] = 0x0;
                return;
            } else this['flapStart'] == 0x0 && (this['flapStart'] = _0x476319);
            this['setSkinScale']();
            var _0x39ee8a = 0.5,
                _0x3ec620 = !(_0x3aa021 == _0x243dd0) ? _0x38f4be('fennecfox', this['spawnTime']) : 0x2;
            _0x3ec620 = Math['abs'](Math['round'](_0x3ec620));
            var _0x36bbd9 = 'skins/' + this['getSkinPath']() + '/ears' + _0x3ec620 + '.png',
                _0x39635e = this['getSkinImageObj'](_0x36bbd9);
            if (_0x39635e) {
                var _0x286e3f = this['skinScale'],
                    _0xba72a1 = this['skinRad'];
                _0x4597c4['drawImage'](_0x39635e, -_0xba72a1 * _0x286e3f, -_0xba72a1 * _0x286e3f, 0x2 * _0xba72a1 * _0x286e3f, 0x2 * _0xba72a1 * _0x286e3f);
            }
        };

        function _0x2ff87() {
            _0x2ff87['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2ff87, _0x269668, _0x29f076);
        var _0x4d8447 = _0x5502af;
        _0x267b65['prototype'] = Object['create'](_0x4d8447['prototype']), _0x267b65['prototype']['constructor'] = _0x267b65, _0x267b65['superClass'] = _0x4d8447, _0x267b65['prototype']['animalInfo'] = function() {
            var _0xb21267 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xb21267['aniName'] = 'Gobi Bear';
                    break;
                case 0x6f:
                    _0xb21267['aniName'] = 'Classic Gobi Bear';
                    break;
                case 0x70:
                    _0xb21267['aniName'] = 'Gold-trim Gobi Bear';
                    break;
                case 0xca:
                    _0xb21267['aniName'] = 'Gobee Bear';
                    break;
            }
            return _0xb21267['aniCol'] = '#FF9000', _0xb21267['skinName'] = this['getSkinName'](), _0xb21267['upgradeText'] = 'UPGRADED to ' + _0xb21267['aniName'] + '!\x0a', _0xb21267;
        }, _0x267b65['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/gobibear' + (this['flag_usingAbility'] ? '1' : '');
        }, _0x267b65['prototype']['getSkinPath'] = function() {
            return 'desert/gobibear/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x267b65['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x267b65['prototype']['biteStart'] = 0x0, _0x267b65['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                if (_0x476319 - this['biteStart'] < 0x190) {
                    if (this['specType'] != 0x0 && this['specType'] != undefined) {
                        var _0xec0c2a = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/gobibear_head1.png'),
                            _0x53f28d = (_0x476319 - this['biteStart']) / 0x3e8,
                            _0x17f0a9 = this['skinScale'] * 1.1,
                            _0x5f4dcf = this['skinRad'];
                        if (_0xec0c2a) {
                            frame = 0x0;
                            !this['flag_flying'] && (flapAmount = 0x3, flapDur = 0.5, frame = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x53f28d, flapDur, flapAmount, 0x2) : this['birdNoAnimationFlyWingAngle']);
                            _0x4597c4['save']();
                            var _0x5f4dcf = this['rad'];
                            _0x4597c4['drawImage'](_0xec0c2a, -_0x5f4dcf * _0x17f0a9, (-_0x5f4dcf + _0x5f4dcf * 0.1) * _0x17f0a9 + frame, 0x2 * _0x5f4dcf * _0x17f0a9, 0x2 * _0x5f4dcf * _0x17f0a9), _0x4597c4['restore']();
                        }
                    }
                }
            }
        };

        function _0x267b65() {
            _0x267b65['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x267b65, _0x269668, _0x466d53);
        var _0x4d8447 = _0x5502af;
        _0x5a6bb4['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5a6bb4['prototype']['constructor'] = _0x5a6bb4, _0x5a6bb4['superClass'] = _0x4d8447, _0x5a6bb4['prototype']['animalInfo'] = function() {
            var _0x57da44 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x57da44['aniName'] = 'Camel';
                    break;
                case 0x64:
                    _0x57da44['aniName'] = 'Doomedarius';
                    break;
                case 0x6f:
                    _0x57da44['aniName'] = 'Classic Camel';
                    break;
                case 0x70:
                    _0x57da44['aniName'] = 'Gold-trim Camel';
                    break;
                case 0xc9:
                    _0x57da44['aniName'] = 'Balloon Warrior';
                    break;
                case 0xca:
                    _0x57da44['aniName'] = 'Fungal Camel';
                    break;
            }
            return _0x57da44['skinName'] = this['getSkinName'](), _0x57da44['aniCol'] = '#FF9000', _0x57da44['upgradeText'] = 'UPGRADED to ' + _0x57da44['aniName'] + '!\x0a Press W to Spit. Try eating oranges from trees!', _0x57da44;
        }, _0x5a6bb4['prototype']['getSkinName'] = function() {
            let _0x151fa3 = this['getSkinPath']() + '/camel';
            return _0x151fa3 += this['specType'] == 0x0 ? '' : this['specType'], _0x151fa3;
        }, _0x5a6bb4['prototype']['getSkinPath'] = function() {
            return 'desert/camel/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x5a6bb4['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x5a6bb4['prototype']['getAbilityInfo'] = function(_0x524ae7) {
            var _0x32f27d = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x32f27d['abilName'] = 'Spit!';
                    break;
                case 0x64:
                    _0x32f27d['abilName'] = 'Cannon Shots!';
                    break;
                case 0xc9:
                    _0x32f27d['abilName'] = 'Water Balloons!';
                    break;
            }
            return _0x32f27d['abilImg'] = 'skins/desert/camel/' + this['animalSpecies'] + this['getSubSpecies']() + '/spit.png', _0x32f27d['skinThemeID'] = this['skinThemeID'], _0x32f27d['mopeSeasonID'] = this['mopeSeasonID'], _0x32f27d;
        }, _0x5a6bb4['prototype']['biteStart'] = 0x0, _0x5a6bb4['prototype']['flapAmount'] = 0x3, _0x5a6bb4['prototype']['flapDur'] = 0x1, _0x5a6bb4['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x123a73 = 'skins/' + this['getSkinPath']() + '/camel_head1.png',
                        _0xd2adbc = this['getSkinImageObj'](_0x123a73),
                        _0x5e7fb0 = (_0x476319 - this['biteStart']) / 0x3e8,
                        _0x135be6 = this['skinScale'] * 1.1,
                        _0x24e865 = this['skinRad'];
                    if (_0xd2adbc) {
                        var _0x3fd804 = 0x0;
                        !this['flag_flying'] && (_0x3fd804 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x5e7fb0, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                        _0x4597c4['save']();
                        var _0x24e865 = this['rad'];
                        _0x4597c4['drawImage'](_0xd2adbc, -_0x24e865 * _0x135be6, (-_0x24e865 + _0x24e865 * 0.1) * _0x135be6 - _0x3fd804, 0x2 * _0x24e865 * _0x135be6, 0x2 * _0x24e865 * _0x135be6), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x5a6bb4() {
            _0x5a6bb4['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5a6bb4, _0x269668, _0x41fd87);
        var _0x4d8447 = _0x5d11ac;
        _0x40f71d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x40f71d['prototype']['constructor'] = _0x40f71d, _0x40f71d['superClass'] = _0x4d8447, _0x40f71d['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0x40f71d['prototype']['customDraw'] = function(_0x479325) {
            var _0x3b5150 = '';
            if (this['speciesType'] == 0xc9) _0x3b5150 = 'skins/desert/camel/' + this['speciesType'] + '/spit' + this['specType'] + '.png';
            else _0x3b5150 = 'skins/desert/camel/' + this['speciesType'] + '/spit.png';
            var _0x119732 = this['getSkinImageObj'](_0x3b5150);
            if (_0x119732) {
                _0x4597c4['save']();
                var _0x8ae6e7 = this['rad'] * 0x2;
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x119732, -_0x8ae6e7, -_0x8ae6e7, _0x8ae6e7 * 0x2, _0x8ae6e7 * 0x2), _0x4597c4['restore']();
            }
        }, _0x40f71d['prototype']['getSkinImageObj'] = function(_0x30cc3c) {
            var _0x233422 = this['speciesType'] === 0x64 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
                _0x524ece = './assets/s/' + _0x233422 + '/' + _0x30cc3c;
            return this['skinThemeID'] > 0x0 && (_0x524ece = './assets/t/' + this['skinThemeID'] + '/' + _0x30cc3c), _0x5e7a48(_0x524ece, function(_0x456c46) {
                console['log'](_0x456c46['src']);
            });
        };

        function _0x40f71d() {
            _0x40f71d['superClass']['call'](this, _0x21f562);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x40f71d, _0x21f562);
        var _0x4d8447 = _0x5502af;
        _0x12c3c9['prototype'] = Object['create'](_0x4d8447['prototype']), _0x12c3c9['prototype']['constructor'] = _0x12c3c9, _0x12c3c9['superClass'] = _0x4d8447, _0x12c3c9['prototype']['animalInfo'] = function() {
            var _0x39960a = {};
            _0x39960a['aniCol'] = '#FF9000';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x39960a['aniName'] = 'Warthog';
                    break;
                case 0x64:
                    _0x39960a['aniName'] = 'The Burlone';
                    break;
                case 0x6f:
                    _0x39960a['aniName'] = 'Classic Warthog';
                    break;
                case 0x70:
                    _0x39960a['aniName'] = 'Gold-trim Warthog';
                    break;
                case 0xc8:
                    _0x39960a['aniName'] = 'WarT. Hog';
                    break;
                case 0xc9:
                    _0x39960a['aniName'] = 'Flame Tiki';
                    break;
                case 0xca:
                    _0x39960a['aniName'] = 'Dark Matter Warthog';
                    break;
                case 0xcc:
                    _0x39960a['aniName'] = 'Candy Corn Warthog';
                    break;
                case 0xdc:
                    _0x39960a['aniName'] = 'Dark Matter Warthog';
                    break;
            }
            return _0x39960a['skinName'] = this['getSkinName'](), _0x39960a['upgradeText'] = 'UPGRADED to ' + _0x39960a['aniName'] + '!\x0aPress W to Dig and Charge.', _0x39960a;
        }, _0x12c3c9['prototype']['getSkinName'] = function() {
            let _0xfed84f = this['getSkinPath']() + '/warthog';
            return _0xfed84f += this['specType'] == 0x0 ? '' : this['specType'], _0xfed84f;
        }, _0x12c3c9['prototype']['getSkinPath'] = function() {
            return 'desert/warthog/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x12c3c9['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x12c3c9['prototype']['flapStart'] = 0x0, _0x12c3c9['prototype']['drawUnderSkinImgOutline'] = function() {
            console['log'](this['teamID']), _0x12c3c9['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
            if (this['flag_usingAbility'] && !this['isCharging']) {
                var _0x1005e8 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x17e365 = 1.5,
                    _0x43d8bc = 0x1,
                    _0x3cb1f3 = _0x43d8bc * Math['sin'](0x2 * Math['PI'] / _0x17e365 * _0x1005e8);
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= 0.8 - 0.2 * _0x3cb1f3, _0x4096ce(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x3cb1f3), '#b69327'), _0x4096ce(0x0, -this['rad'] * 0.2, this['rad'] * (0.9 + 0.09 * _0x3cb1f3), '#b69327'), _0x4597c4['restore']();
            }
        }, _0x12c3c9['prototype']['drawUnderSkinImg'] = function() {
            if (!this['flag_usingAbility']) {
                this['flapStart'] = 0x0;
                return;
            } else this['flapStart'] == 0x0 && (this['flapStart'] = _0x476319);
            if (this['flag_usingAbility'] && !this['isCharging']) {
                var _0x1ba6ac = this['rad'] - this['outlineW'],
                    _0x3b3de3 = 0x1f4 / 0x154;
                this['setSkinScale']();
                var _0x19d1d2 = 0.8,
                    _0x4fed75 = (_0x476319 - this['flapStart']) / 0x3e8,
                    _0xad94a7 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x4fed75, _0x19d1d2, 0x1, 0x1) : 0x0;
                _0xad94a7 = Math['round'](_0xad94a7);
                if (_0xad94a7 < 0x0) _0xad94a7 = 0x0;
                var _0x4fd0e9 = 'skins/' + this['getSkinPath']() + '/leg' + _0xad94a7 + '.png',
                    _0x48e625 = this['getSkinImageObj'](_0x4fd0e9);
                if (_0x48e625) {
                    var _0x3b3de3 = this['skinScale'],
                        _0x1ba6ac = this['skinRad'];
                    _0x4597c4['drawImage'](_0x48e625, -_0x1ba6ac * _0x3b3de3, -_0x1ba6ac * _0x3b3de3, 0x2 * _0x1ba6ac * _0x3b3de3, 0x2 * _0x1ba6ac * _0x3b3de3);
                }
            }
        }, _0x12c3c9['prototype']['getAbilityInfo'] = function(_0x5b8387) {
            var _0xce6642 = {};
            return _0xce6642['abilName'] = 'Dig Food\x0aSudden Charge', _0xce6642['abilImg'] = 'skins/' + this['getSkinPath']() + '/warthog.png', _0xce6642['skinThemeID'] = this['skinThemeID'], _0xce6642['mopeSeasonID'] = this['mopeSeasonID'], _0xce6642;
        }, _0x12c3c9['prototype']['isCharging'] = ![], _0x12c3c9['prototype']['readCustomData_onNewlyVisible'] = function(_0x1322e4) {
            _0x12c3c9['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1322e4), this['customUpdatedProperty'](_0x2bf14a, _0x1322e4);
        }, _0x12c3c9['prototype']['customUpdatedProperty'] = function(_0x13bc30, _0x1a8b9d) {
            _0x13bc30 == _0x2bf14a && (this['isCharging'] = _0x1a8b9d['readUInt8']() == 0x1);
        };

        function _0x12c3c9() {
            _0x12c3c9['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x12c3c9, _0x269668, _0x5cb417);
        var _0x4d8447 = _0x5502af;
        _0x3c6c67['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3c6c67['prototype']['constructor'] = _0x3c6c67, _0x3c6c67['superClass'] = _0x4d8447, _0x3c6c67['prototype']['animalInfo'] = function() {
            var _0x4d16f3 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4d16f3['aniName'] = 'Hyena';
                    break;
                case 0x6f:
                    _0x4d16f3['aniName'] = 'Classic Hyena';
                    break;
                case 0x70:
                    _0x4d16f3['aniName'] = 'Gold-trim Hyena';
                    break;
                case 0xc9:
                    _0x4d16f3['aniName'] = 'DJ Hyena';
                    break;
                case 0xca:
                    _0x4d16f3['aniName'] = 'Anubis Hyena';
                    break;
            }
            return _0x4d16f3['aniCol'] = '#FF9000', _0x4d16f3['skinName'] = this['getSkinName'](), _0x4d16f3['upgradeText'] = 'UPGRADED to ' + _0x4d16f3['aniName'] + '!\x0aHyenas have a very loud and scary laugh!\x0aPress W to Laugh.', _0x4d16f3;
        }, _0x3c6c67['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/hyena' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x3c6c67['prototype']['getSkinPath'] = function() {
            return 'desert/hyena/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x3c6c67['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x3c6c67['prototype']['biteStart'] = 0x0, _0x3c6c67['prototype']['flapAmount'] = 0x3, _0x3c6c67['prototype']['flapDur'] = 0x1, _0x3c6c67['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0xe37de = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/hyena_head.png'),
                        _0x21a8ef = (_0x476319 - this['biteStart']) / 0x3e8,
                        _0x329c90 = this['skinScale'] * 1.1,
                        _0x298175 = this['skinRad'];
                    if (_0xe37de) {
                        frame = 0x0;
                        !this['flag_flying'] && (frame = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x21a8ef, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                        _0x4597c4['save']();
                        var _0x298175 = this['rad'];
                        _0x4597c4['drawImage'](_0xe37de, -_0x298175 * _0x329c90, (-_0x298175 + _0x298175 * 0.1) * _0x329c90 + frame, 0x2 * _0x298175 * _0x329c90, 0x2 * _0x298175 * _0x329c90), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x3c6c67['prototype']['getAbilityInfo'] = function(_0x4fc6a1) {
            var _0x575ae8 = {};
            return _0x575ae8['abilName'] = 'Laughs!', _0x575ae8['abilImg'] = 'skins/' + this['getSkinPath']() + '/hyena2.png', _0x575ae8['skinThemeID'] = this['skinThemeID'], _0x575ae8['mopeSeasonID'] = this['mopeSeasonID'], _0x575ae8;
        }, _0x3c6c67['prototype']['getSkinImageObj'] = function(_0x3efe83) {
            var _0x3aaa70 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x3efe83, _0x3aaa70);
        };

        function _0x3c6c67() {
            _0x3c6c67['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3c6c67, _0x269668, _0x502a88);
        var _0x498438 = _0x2c3abb,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x2c3abb['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x2c3abb['prototype']['customDraw'] = function(_0x3d9bfa) {
            _0x4597c4['save']();
            var _0x2164a4 = this['getSkinImageObj']('skins/desert/hyena/' + this['speciesType'] + '/laugh.png');
            if (_0x2164a4) {
                var _0x3a9e00 = _0x476319 - this['spawnTime'],
                    _0x41285f = _0x3a9e00 / 0x3e8,
                    _0x5c7e9a = 0x2,
                    _0x1a6739 = 1.5;
                rShift = _0x1a6739 * Math['sin'](0x2 * Math['PI'] / _0x5c7e9a * _0x41285f);
                var _0x5a58c9 = _0x5b9e97(_0x41285f, 5.1, 0x1, 0x1);
                _0x5a58c9 = _0x34fd15(_0x5a58c9, 0x0, 0x1), _0x4597c4['globalAlpha'] = _0x5a58c9;
                var _0x398381 = 0x1,
                    _0x186d0c = this['rad'];
                _0x4597c4['rotate'](this['angle'] + _0x4c4686(-0x5a)), _0x4597c4['drawImage'](_0x2164a4, -_0x186d0c * _0x398381, -_0x186d0c * _0x398381, 0x2 * _0x186d0c * _0x398381, 0x2 * _0x186d0c * _0x398381);
            }
            _0x4597c4['restore'](), this['drawChat']();
        }, _0x2c3abb['prototype']['drawChat'] = function() {
            if (this['aLine'] == null) return;
            _0x4597c4['save'](), _0x4597c4['font'] = '10px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle';
            var _0x85bd5 = this['aLine'],
                _0x2aac5f = _0x476319 > _0x85bd5['chatFadeT'] ? 0x0 : 0x1;
            _0x85bd5['chatA'] += (_0x2aac5f - _0x85bd5['chatA']) * 0.1, _0x4597c4['shadowOffsetX'] = 0x0, _0x4597c4['shadowOffsetY'] = 0x0;
            _0x85bd5['chatA'] < 0.02 && (this['aLine'] = null);
            var _0x9a517f = _0x4597c4['measureText'](_0x85bd5['chatTxt'])['width'],
                _0x1f932c = 0xa,
                _0x5ccd3b = 0x1,
                _0x2a8575 = 0x1;
            _0x4597c4['globalAlpha'] = 0.8 * _0x85bd5['chatA'], _0x4597c4['fillStyle'] = _0x46d432(this['curBiome']), _0x4597c4['fillRect'](this['x'] - _0x5ccd3b - _0x9a517f / 0x2, this['y'] - this['rad'] - _0x1f932c / 0x2 - _0x2a8575, _0x9a517f + _0x5ccd3b * 0x2, _0x1f932c + _0x2a8575 * 0x2), _0x4597c4['fillStyle'] = '#F1C34C', !(_0x3aa021 == _0x243dd0) && (_0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black'), _0x4597c4['globalAlpha'] = _0x85bd5['chatA'], _0x4597c4['fillText'](_0x85bd5['chatTxt'], this['x'], this['y'] - this['rad']), _0x4597c4['restore']();
        };

        function _0x2c3abb() {
            _0x2c3abb['superClass']['call'](this);
        }
        _0x2c3abb['prototype']['aLine'] = null, _0x2c3abb['prototype']['readCustomData_onNewlyVisible'] = function(_0x324f43) {
            _0x2c3abb['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x324f43), this['aLine'] = {
                'chatTxt': this['speciesType'] == 0xc9 ? 'Oh yeah!' : 'Hehehe',
                'chatFadeT': _0x476319 + 0xfa0,
                'chatA': 0x0
            };
        }, _0x2c3abb['prototype']['getSkinImageObj'] = function(_0x53498a) {
            var _0x577706 = this['speciesType'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x53498a, _0x577706);
        }, _0x5ddf8d['setCustomClassForGameObjType'](_0x2c3abb, _0x4fbd16, _0x2fc161);
        var _0x4d8447 = _0x5502af;
        _0x45afe6['prototype'] = Object['create'](_0x4d8447['prototype']), _0x45afe6['prototype']['constructor'] = _0x45afe6, _0x45afe6['superClass'] = _0x4d8447, _0x45afe6['prototype']['animalInfo'] = function() {
            var _0x49f8b2 = {};
            _0x49f8b2['aniCol'] = '#FF9000';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x49f8b2['aniName'] = 'Rattle Snake';
                    break;
                case 0x6f:
                    _0x49f8b2['aniName'] = 'Classic Rattle Snake';
                    break;
                case 0x70:
                    _0x49f8b2['aniName'] = 'Gold-trim Rattle Snake';
                    break;
                case 0x64:
                    _0x49f8b2['aniName'] = 'Gummy Viper';
                    break;
            }
            return _0x49f8b2['upgradeText'] = 'UPGRADED to ' + _0x49f8b2['aniName'] + '!\x0aThe ' + _0x49f8b2['aniName'] + ' is a very dangerous animal. \x0aHOLD W to Rattle.', _0x49f8b2['skinName'] = this['getSkinName'](), _0x49f8b2;
        }, _0x45afe6['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/rattlesnake' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x45afe6['prototype']['getSkinPath'] = function() {
            return 'desert/rattlesnake/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x45afe6['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x45afe6['prototype']['biteStart'] = 0x0, _0x45afe6['prototype']['drawUnderSkinImg'] = function() {
            if (!this['flag_usingAbility']) {
                var _0x48d6c6 = this['rad'] - this['outlineW'],
                    _0x5a930d = 0x1f4 / 0x154,
                    _0xa00ec = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
                    _0x41a44e = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x21700f = _0x3aa021 == _0x243dd0 ? 0x0 : _0x5b9e97(_0x41a44e, 0.7, 0x6, 0.5),
                    _0xb73083 = _0x3aa021 == _0x243dd0 ? 0x0 : 0x5;
                _0xa00ec && _0x4597c4['drawImage'](_0xa00ec, -_0x48d6c6 * _0x5a930d, -(_0x48d6c6 + _0xb73083 + _0x21700f) * _0x5a930d, 0x2 * _0x48d6c6 * _0x5a930d, 0x2 * _0x48d6c6 * _0x5a930d);
            }
        }, _0x45afe6['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x41290b = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattlesnake_head.png'),
                        _0x1d79b7 = this['skinScale'] * 0x1,
                        _0x114f4d = this['skinRad'];
                    if (_0x41290b) {
                        _0x4597c4['save']();
                        var _0x114f4d = this['rad'];
                        _0x4597c4['drawImage'](_0x41290b, -_0x114f4d * _0x1d79b7, -_0x114f4d * 1.2 * _0x1d79b7, 0x2 * _0x114f4d * _0x1d79b7, 0x2 * _0x114f4d * _0x1d79b7), _0x4597c4['restore']();
                    }
                }
                var _0x15e058 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x3044c1 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x15e058, 0.1, 0.2, 0x2) : 0x0,
                    _0x114f4d = this['rad'] * 1.3,
                    _0x29bec6 = 0x0,
                    _0x415cd6 = 0x0,
                    _0xfffed = 0x0,
                    _0x2f7acc = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/rattle.png');
                if (_0x2f7acc) {
                    _0x4597c4['save']();
                    var _0x56ef11 = -(-_0x415cd6 + _0x3044c1) * _0x4c4686(-(_0x29bec6 - 0x5)),
                        _0x1d79b7 = this['skinScale'] * 1.2;
                    _0x4597c4['rotate'](_0x4c4686(-_0xfffed) + _0x56ef11), _0x4597c4['drawImage'](_0x2f7acc, -_0x114f4d * _0x1d79b7, -_0x114f4d * 0.7 * _0x1d79b7, 0x2 * _0x114f4d * _0x1d79b7, 0x2 * _0x114f4d * _0x1d79b7), _0x4597c4['restore']();
                }
            }
        }, _0x45afe6['prototype']['getAbilityInfo'] = function(_0x32489f) {
            var _0x20500f = {};
            return _0x20500f['abilName'] = 'Rattle!', _0x20500f['abilImg'] = 'skins/' + this['getSkinPath']() + '/rattlesnake.png', _0x20500f['skinThemeID'] = this['skinThemeID'], _0x20500f['mopeSeasonID'] = this['mopeSeasonID'], _0x20500f;
        };

        function _0x45afe6() {
            _0x45afe6['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x45afe6, _0x269668, _0x483b9e);
        var _0x498438 = _0x6c8ed5,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x6c8ed5['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x6c8ed5['prototype']['customDraw'] = function(_0x4e2df4) {
            _0x4597c4['save']();
            var _0x365079 = this['getSkinImageObj']('skins/desert/rattlesnake/' + this['speciesType'] + '/circle.png');
            if (_0x365079) {
                var _0x2bde6d = _0x476319 - this['spawnTime'],
                    _0x59895a = _0x2bde6d / 0x3e8,
                    _0x3090a8 = 0x2,
                    _0x18fd83 = 1.5;
                rShift = _0x18fd83 * Math['sin'](0x2 * Math['PI'] / _0x3090a8 * _0x59895a);
                var _0x4bed64 = _0x5b9e97(_0x59895a, 5.1, 0x1, 0x1);
                _0x4bed64 = _0x34fd15(_0x4bed64, 0x0, 0x1), _0x4597c4['globalAlpha'] = _0x4bed64;
                var _0x51d06f = 0x1,
                    _0x41fb03 = this['rad'] * 0.8;
                _0x4597c4['drawImage'](_0x365079, -_0x41fb03 * _0x51d06f, -_0x41fb03 * _0x51d06f, 0x2 * _0x41fb03 * _0x51d06f, 0x2 * _0x41fb03 * _0x51d06f);
            }
            _0x4597c4['restore']();
        }, _0x6c8ed5['prototype']['getSkinImageObj'] = function(_0x11c43e) {
            var _0x56b690 = this['speciesType'] === 0x64 ? 0x1 : this['mopeSeasonID'],
                _0x485832 = './assets/s/' + _0x56b690 + '/' + _0x11c43e;
            return this['skinThemeID'] > 0x0 && (_0x485832 = './assets/t/' + this['skinThemeID'] + '/' + _0x11c43e), _0x5e7a48(_0x485832, function(_0xd3d2c1) {
                console['log'](_0xd3d2c1['src']);
            });
        };

        function _0x6c8ed5() {
            _0x6c8ed5['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x6c8ed5, _0x4fbd16, _0x1ae09a);
        var _0x4d8447 = _0x5502af;
        _0xf177aa['prototype'] = Object['create'](_0x4d8447['prototype']), _0xf177aa['prototype']['constructor'] = _0xf177aa, _0xf177aa['superClass'] = _0x4d8447, _0xf177aa['prototype']['getSkinName2'] = function() {
            var _0x3cfda8 = this['getSkinPath']() + '/vulture';
            return _0x3cfda8;
        }, _0xf177aa['prototype']['getSkinName'] = function() {
            let _0x5f2683 = this['getSkinPath']() + '/vulture';
            if (this['flag_flying'] && this['flag_usingAbility']) _0x5f2683 += 0x2;
            else _0x5f2683 += this['specType'] == 0x0 ? '' : this['specType'];
            return _0x5f2683;
        }, _0xf177aa['prototype']['getSkinPath'] = function() {
            return 'desert/vulture/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0xf177aa['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0xf177aa['prototype']['getAbilityInfo'] = function(_0x15a9b4) {
            var _0xdc31c1 = {};
            return _0xdc31c1['abilName'] = 'Fly/ Pickup Bones', _0xdc31c1['abilImg'] = 'skins/' + this['getSkinPath']() + '/vulture.png', _0xdc31c1['skinThemeID'] = this['skinThemeID'], _0xdc31c1['mopeSeasonID'] = this['mopeSeasonID'], _0xdc31c1;
        }, _0xf177aa['prototype']['animalInfo'] = function() {
            var _0x420ee8 = {};
            _0x420ee8['aniName'] = 'Vulture';
            switch (this['animalSpecies']) {
                case 0x1:
                    _0x420ee8['aniName'] = 'Argentavis';
                    break;
                case 0x64:
                    _0x420ee8['aniName'] = 'Vulgeist';
                    break;
                case 0x6f:
                    _0x420ee8['aniName'] = 'Classic Vulture';
                    break;
                case 0x70:
                    _0x420ee8['aniName'] = 'Gold-trim Vulture';
                    break;
                case 0xcc:
                    _0x420ee8['aniName'] = 'Acid Husk';
                    break;
            }
            return _0x420ee8['aniCol'] = '#FF9000', _0x420ee8['skinName'] = this['getSkinName'](), _0x420ee8['upgradeText'] = 'UPGRADED to ' + (this['animalSpecies'] == 0x1 ? 'Rare ' : '') + _0x420ee8['aniName'] + '!\x0aPress W to Grab/Drop bones' + (this['animalSpecies'] == 0x1 ? ' and animals' : '') + ' on other animals,\x0a Try Eating bones too!', _0x420ee8;
        }, _0xf177aa['prototype']['getHead'] = function(_0x476c6e, _0xdc25c5) {
            var _0x393125 = this['flag_flying'] ? '1' : '1',
                _0xc07264 = 'skins/' + this['getSkinName2']() + '_head' + _0x393125 + '.png';
            return _0xc07264;
        }, _0xf177aa['prototype']['getWing'] = function(_0xd12669, _0x37b10e, _0x27d50c) {
            var _0x564f38 = 'skins/' + this['getSkinName2']() + '_wing' + _0x37b10e + '.png';
            return _0x564f38;
        }, _0xf177aa['prototype']['flaps'] = 0x0, _0xf177aa['prototype']['flapsMod'] = 0x3, _0xf177aa['prototype']['countFlap'] = !![], _0xf177aa['prototype']['canFlap'] = !(_0x3aa021 == _0x243dd0), _0xf177aa['prototype']['resumeFlapT'] = 0x0, _0xf177aa['prototype']['lastFlapFrame'] = 0x0, _0xf177aa['prototype']['sF'] = -0x1, _0xf177aa['prototype']['wF'] = 0x1, _0xf177aa['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0xd14010 = 'skins';
            if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                if (!this['canFlap'] && this['flag_flying'] && _0x476319 > this['resumeFlapT']) this['canFlap'] = !![];
            } else this['canFlap'] = ![];
            {
                var _0x1533f0 = 0x1f4 / 0x154;
                _0x4597c4['save']();
                var _0x414d7d = this['flag_flying'] ? 0x2d : 0x2f,
                    _0x27bd5f = this['flag_flying'] ? 0x5a : 0x2d,
                    _0x4f50a7 = this['flag_flying'] ? 0.2 : 0.001,
                    _0x4f27bf = this['flag_flying'] ? 2.5 : 2.3,
                    _0xc934b0 = this['flag_flying'] ? 2.2 : 2.7,
                    _0x3dec4f = this['flag_flying'] ? 1.2 : 0x1,
                    _0x21b7d2 = this['flag_flying'] ? 0.35 : 0.2,
                    _0xb02da5 = this['flag_flying'] ? '' : '2',
                    _0x125f46 = (_0x476319 - this['resumeFlapT']) / 0x3e8,
                    _0x36c85d = this['canFlap'] ? _0x5b9e97(_0x125f46, _0x3dec4f, _0x21b7d2, 0x2) : this['birdNoAnimationFlyWingAngle'];
                if (this['flag_flying'] && _0x36c85d < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x36c85d, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
                else _0x36c85d > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
                if (!this['canFlap']) _0x36c85d = this['lastFlapFrame'];
                _0x4f27bf += this['sF'] * _0x36c85d, _0xc934b0 += this['wF'] * _0x36c85d;
                var _0x86fd68 = this['getSkinImageObj'](this['getWing']('vulture', _0xb02da5 + 0x1, ![]));
                if (_0x86fd68) {
                    _0x4597c4['save']();
                    var _0xb316ae = 0x1;
                    _0xb316ae = -(-_0x4f50a7 + _0x36c85d);
                    var _0x2ce35e = _0xb316ae * _0x4c4686(_0x27bd5f),
                        _0x1b1048 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(_0x414d7d) + _0x2ce35e);
                    var _0x4cf6e9 = 0x0,
                        _0x89bc9f = this['rad'],
                        _0x3dd99c = _0x1b1048 * _0xc934b0 * 0.62,
                        _0x5a55ce = _0x1b1048 * _0x4f27bf,
                        _0x57ac84 = 0.2,
                        _0x511bc6 = 1.7;
                    _0x4597c4['drawImage'](_0x86fd68, _0x4cf6e9 + _0x3dd99c * -_0x57ac84, _0x89bc9f + _0x5a55ce * -_0x511bc6, _0x3dd99c, _0x5a55ce), _0x4597c4['restore']();
                }
                var _0x86fd68 = this['getSkinImageObj'](this['getWing']('vulture', _0xb02da5 + 0x2, ![]));
                if (_0x86fd68) {
                    _0x4597c4['save']();
                    var _0xb316ae = 0x1;
                    _0xb316ae = -(-_0x4f50a7 + _0x36c85d);
                    var _0x2ce35e = _0xb316ae * _0x4c4686(-_0x27bd5f),
                        _0x1b1048 = this['rad'] * 0.8;
                    _0x4597c4['rotate'](_0x4c4686(-_0x414d7d) + _0x2ce35e);
                    var _0x4cf6e9 = 0x0,
                        _0x89bc9f = this['rad'],
                        _0x3dd99c = _0x1b1048 * _0xc934b0 * 0.62,
                        _0x5a55ce = _0x1b1048 * _0x4f27bf,
                        _0x57ac84 = 0.8,
                        _0x511bc6 = 1.7;
                    _0x4597c4['drawImage'](_0x86fd68, _0x4cf6e9 + _0x3dd99c * -_0x57ac84, _0x89bc9f + _0x5a55ce * -_0x511bc6, _0x3dd99c, _0x5a55ce), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x3c3b21 = this['getSkinImageObj'](this['getHead']('vulture', ![]));
                    if (_0x3c3b21) {
                        var _0x1b1048 = this['rad'],
                            _0x473f7c = 0x0;
                        if (this['flag_flying']) _0x473f7c = (-_0x1b1048 + _0x1b1048 * 0.4) * _0x1533f0;
                        else _0x473f7c = (-_0x1b1048 + _0x1b1048 * 0.1) * _0x1533f0;
                        _0x4597c4['save'](), _0x4597c4['drawImage'](_0x3c3b21, -_0x1b1048 * _0x1533f0, _0x473f7c, 0x2 * _0x1b1048 * _0x1533f0, 0x2 * _0x1b1048 * _0x1533f0), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0xf177aa() {
            _0xf177aa['superClass']['call'](this, _0x269668);
            if (this['resumeFlapT'] == 0x0) this['resumeFlapT'] = +new Date();
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xf177aa, _0x269668, _0x242003);
        var _0x4d8447 = _0x5d11ac;
        _0xb90d7f['prototype'] = Object['create'](_0x4d8447['prototype']), _0xb90d7f['prototype']['constructor'] = _0xb90d7f, _0xb90d7f['superClass'] = _0x4d8447, _0xb90d7f['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0xb90d7f['prototype']['customDraw'] = function(_0x2b8ee9) {
            var _0x20f9c8 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
                _0x1ff700 = this['getSkinImageObj'](_0x20f9c8);
            if (_0x1ff700) {
                _0x4597c4['save']();
                var _0x14e865 = this['rad'] * 0x1;
                _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x4597c4['drawImage'](_0x1ff700, -_0x14e865, -_0x14e865, _0x14e865 * 0x2, _0x14e865 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0xb90d7f() {
            _0xb90d7f['superClass']['call'](this, _0x4cef04);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xb90d7f, _0x4cef04);
        var _0x4d8447 = _0x5502af;
        _0x14f71d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x14f71d['prototype']['constructor'] = _0x14f71d, _0x14f71d['superClass'] = _0x4d8447, _0x14f71d['prototype']['animalInfo'] = function() {
            var _0x9f2ede = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x9f2ede['aniName'] = 'Bison';
                    break;
                case 0x6f:
                    _0x9f2ede['aniName'] = 'Classic Bison';
                    break;
                case 0x70:
                    _0x9f2ede['aniName'] = 'Gold-trim Bison';
                    break;
                case 0xc8:
                    _0x9f2ede['aniName'] = 'Titan Bison';
                    break;
                case 0xca:
                    _0x9f2ede['aniName'] = 'Minotaur';
                    break;
            }
            return _0x9f2ede['aniCol'] = '#FF9000', _0x9f2ede['skinName'] = this['getSkinName'](), _0x9f2ede['upgradeText'] = 'UPGRADED to ' + _0x9f2ede['aniName'] + '!\x0aHold W to charge and toss opponent in air.', _0x9f2ede;
        }, _0x14f71d['prototype']['getSpeciesPath'] = function(_0x56b293) {
            return 'desert/' + _0x56b293 + '/' + this['animalSpecies'];
        }, _0x14f71d['prototype']['getAbilityInfo'] = function(_0x3e8a39) {
            var _0x5a8719 = {};
            return _0x5a8719['abilName'] = 'Gores!', _0x5a8719['abilImg'] = 'skins/desert/bison/' + this['animalSpecies'] + this['getSubSpecies']() + '/bison_ability.png', _0x5a8719['skinThemeID'] = this['skinThemeID'], _0x5a8719['mopeSeasonID'] = this['mopeSeasonID'], _0x5a8719;
        }, _0x14f71d['prototype']['getSkinName'] = function() {
            return this['getSkin']() + '/bison' + (this['specType'] == 0x0 ? '' : 0x1);
        }, _0x14f71d['prototype']['getSkin'] = function() {
            return 'desert/bison/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x14f71d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x14f71d['prototype']['drawUnderSkinImgOutline'] = function() {
            _0x14f71d['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this), this['flag_usingAbility'] && this['isHitingAnimal'] && this['showBackLeg']();
        }, _0x14f71d['prototype']['isHitingAnimal'] = ![], _0x14f71d['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility']) {
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    if (!this['isHitingAnimal'] && this['specType'] == 0x2) this['isHitingAnimal'] = !![];
                    {
                        var _0x307f69 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/body_front.png'),
                            _0x158d42 = this['skinScale'] * 0x1,
                            _0x28c5d6 = this['skinRad'];
                        if (_0x307f69) {
                            frame = 0x0, _0x4597c4['save']();
                            var _0x28c5d6 = this['rad'];
                            _0x4597c4['drawImage'](_0x307f69, -_0x28c5d6 * _0x158d42, -_0x28c5d6 * _0x158d42, 0x2 * _0x28c5d6 * _0x158d42, 0x2 * _0x28c5d6 * _0x158d42), _0x4597c4['restore']();
                        }
                    }
                    var _0x307f69 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/bison_head' + this['specType'] + '.png'),
                        _0x158d42 = this['skinScale'] * 1.01,
                        _0x28c5d6 = this['skinRad'];
                    if (_0x307f69) {
                        frame = 0x0, _0x4597c4['save']();
                        var _0x28c5d6 = this['rad'];
                        _0x4597c4['drawImage'](_0x307f69, -_0x28c5d6 * _0x158d42, (-_0x28c5d6 + _0x28c5d6 * 0.2) * _0x158d42 + frame, 0x2 * _0x28c5d6 * _0x158d42, 0x2 * _0x28c5d6 * _0x158d42), _0x4597c4['restore']();
                    }
                }
            } else this['legYAnchorF'] = 0x0, this['legHeightF'] = 0x0, this['isHitingAnimal'] = ![];
        }, _0x14f71d['prototype']['legYAnchorF'] = 2.3, _0x14f71d['prototype']['legStretchW'] = 1.3, _0x14f71d['prototype']['legStretchH'] = 0x1, _0x14f71d['prototype']['legHeightF'] = 0x14, _0x14f71d['prototype']['showBackLeg'] = function() {
            var _0x16c662 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x3db4bd = _0x5b9e97(_0x16c662, 0.3, 0x1, 0.5),
                _0x2edfa8 = 'front';
            if (_0x3db4bd <= 0.5 && _0x3db4bd > 0.1) _0x2edfa8 = 'front', this['legYAnchorF'] = 0x1, this['legHeightF'] = 0x14;
            else _0x3db4bd > 0.5 && (_0x2edfa8 = 'back', this['legYAnchorF'] = 2.3, this['legHeightF'] = -0x5);
            _0x4597c4['save']();
            var _0x46fca0 = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = 0.1 * _0x46fca0, _0x4096ce(0x0, 0x0, this['rad'], '#755A2A'), _0x4597c4['globalAlpha'] = 0x1 * _0x46fca0;
            var _0x21f1b4 = this['getSkinImageObj']('skins/' + this['getSkin']() + '/' + _0x2edfa8 + '_legs.png');
            if (_0x21f1b4) {
                var _0x8237a3 = _0x3db4bd,
                    _0x314c8f = this['rad'] * 0.6,
                    _0x498b92 = 0x0,
                    _0x2f7c84 = this['rad'],
                    _0x251c6b = _0x314c8f * 0x2 * this['legStretchW'],
                    _0x2f5b5f = _0x314c8f * 0x2 * _0x8237a3,
                    _0x55d477 = 0.5,
                    _0x28829b = 0.95;
                _0x4597c4['drawImage'](_0x21f1b4, _0x498b92 + _0x251c6b * -_0x55d477, _0x2f7c84 + (_0x2f5b5f + this['legHeightF']) * (-_0x28829b * this['legYAnchorF']), _0x251c6b, _0x2f5b5f * this['legStretchH']);
            }
            _0x4597c4['restore']();
        };

        function _0x14f71d() {
            _0x14f71d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x14f71d, _0x269668, _0x456e24);
        var _0x4d8447 = _0x5502af;
        _0x501b4d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x501b4d['prototype']['constructor'] = _0x501b4d, _0x501b4d['superClass'] = _0x4d8447, _0x501b4d['prototype']['animalInfo'] = function() {
            var _0x34a42c = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x34a42c['aniName'] = 'Komodo Dragon';
                    break;
                case 0x1:
                    _0x34a42c['aniName'] = 'Golden Komodo';
                    break;
                case 0x2:
                    _0x34a42c['aniName'] = 'Night Komodo';
                    break;
                case 0x6f:
                    _0x34a42c['aniName'] = 'Classic Komodo Dragon';
                    break;
                case 0xc8:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x34a42c['aniName'] = 'Dowager Varande';
                            break;
                        case 0x1:
                            _0x34a42c['aniName'] = 'Emperor Varande';
                            break;
                    }
                    break;
                case 0xca:
                    _0x34a42c['aniName'] = 'Galaxy Komodo Dragon';
                    break;
            }
            return _0x34a42c['aniCol'] = '#FF9000', _0x34a42c['skinName'] = this['getSkinName'](), _0x34a42c['upgradeText'] = 'UPGRADED to ' + _0x34a42c['aniName'] + '!\x0a' + _0x34a42c['aniName'] + ' have very poisonous bite. Press W to bite! Also eat bones.', _0x34a42c;
        }, _0x501b4d['prototype']['getAbilityInfo'] = function(_0x1a3909) {
            var _0x11ca7e = {};
            return _0x11ca7e['abilName'] = 'Poison Bite\x0a(Sweat Prey)', _0x11ca7e['abilImg'] = 'skins/' + this['getSkinPath']() + '/komododragon_ability.png', _0x11ca7e['skinThemeID'] = this['skinThemeID'], _0x11ca7e['mopeSeasonID'] = this['mopeSeasonID'], _0x11ca7e;
        }, _0x501b4d['prototype']['getSkinName'] = function() {
            return this['getSkinPath']() + '/komododragon';
        }, _0x501b4d['prototype']['getSkinPath'] = function() {
            return 'desert/komododragon/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x501b4d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] == 0xc8 ? '/' + this['animalSubSpecies'] : '';
        }, _0x501b4d['prototype']['updateZ'] = function() {
            if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
            else {
                if (this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
                else {
                    if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
                        this['z'] = 0x2710;
                        if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                        else this['z'] += this['rad'];
                    } else this['z'] = this['rad'];
                }
            }
        }, _0x501b4d['prototype']['straightTongueOffsetY'] = -0.45, _0x501b4d['prototype']['straightTongueScaleF'] = 1.8, _0x501b4d['prototype']['drawUnderSkinImg'] = function() {
            if (this['specType'] != 0x0) return;
            this['setSkinScale']();
            if (+new Date() < this['spawnTime'] + 0x1388) return;
            if (!this['flag_usingAbility'] && !this['wasLicking'] && +new Date() > this['nextShowT']) {
                var _0x353b9d = this['skinScale'] * this['straightTongueScaleF'],
                    _0x50bd87 = this['skinRad'],
                    _0x5d8680 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue.png'),
                    _0x45c7f4 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x2c46ae = _0x5b9e97(_0x45c7f4, 0.7, 0xc, 0.5);
                _0x5d8680 && _0x4597c4['drawImage'](_0x5d8680, -_0x50bd87 * _0x353b9d, (-_0x50bd87 + _0x50bd87 * this['straightTongueOffsetY']) * _0x353b9d + _0x2c46ae, 0x2 * _0x50bd87 * _0x353b9d, 0x2 * _0x50bd87 * _0x353b9d);
            }
        }, _0x501b4d['prototype']['tongueAnimationDur'] = 0x1, _0x501b4d['prototype']['tongueScaleF'] = 1.5, _0x501b4d['prototype']['tongueAncherY'] = -0.21, _0x501b4d['prototype']['showTongue'] = !![], _0x501b4d['prototype']['nextShowT'] = 0x0, _0x501b4d['prototype']['lastLickSide'] = 0x0, _0x501b4d['prototype']['wasLicking'] = ![], _0x501b4d['prototype']['isLicking'] = ![], _0x501b4d['prototype']['lickFaceOffsetY'] = -0.3, _0x501b4d['prototype']['biteStart'] = 0x0;
        var _0x5049e1 = 0x0,
            _0x6c2224 = 1.2;
        _0x501b4d['prototype']['drawSkinCustomization'] = function() {
            this['setSkinScale']();
            var _0x55616c = -0.15;
            if (this['flag_usingAbility']) {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                if (this['specType'] == 0x1) {
                    {
                        var _0x2f460a = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_neck.png');
                        if (_0x2f460a) {
                            var _0x2cae06 = (_0x476319 - this['biteStart']) / 0x3e8,
                                _0x278d82 = 0x5,
                                _0x5b3ef2 = 0x1,
                                _0x430162 = _0x5b9e97(_0x2cae06, _0x5b3ef2, _0x278d82, 0x1);
                            _0x4597c4['save']();
                            var _0x54e057 = this['rad'],
                                _0x32f3ad = this['skinScale'] * 0x1;
                            _0x4597c4['drawImage'](_0x2f460a, -_0x54e057 * _0x32f3ad, (-_0x54e057 + _0x54e057 * -0.05) * _0x32f3ad + _0x430162, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad), _0x4597c4['restore']();
                        }
                    } {
                        if (!this['flag_underWater']) {
                            var _0x2f2936 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
                                _0x18c8c6 = this['getSkinImageObj'](_0x2f2936);
                            if (_0x18c8c6) {
                                var _0x32f3ad = this['skinScale'] * _0x6c2224,
                                    _0x54e057 = this['skinRad'];
                                _0x4597c4['drawImage'](_0x18c8c6, -_0x54e057 * _0x32f3ad, (-_0x54e057 + _0x54e057 * _0x5049e1) * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad);
                            }
                        }
                    } {
                        var _0x2fa785 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
                            _0x32f3ad = this['skinScale'] * 0x1,
                            _0x54e057 = this['skinRad'],
                            _0x278d82 = 0xc,
                            _0x5b3ef2 = 0.9,
                            _0x430162 = _0x5b9e97(_0x2cae06, _0x5b3ef2, _0x278d82, 0x1);
                        _0x2fa785 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x2fa785, -_0x54e057 * _0x32f3ad, -_0x54e057 * _0x32f3ad + _0x430162, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad), _0x4597c4['restore']());
                    }
                }
            }
            if (this['specType'] == 0x0) {
                if (!this['flag_underWater']) {
                    var _0x2f2936 = 'skins/' + this['getSkinPath']() + '/komododragon_tail.png',
                        _0x18c8c6 = this['getSkinImageObj'](_0x2f2936);
                    if (_0x18c8c6) {
                        var _0x32f3ad = this['skinScale'] * _0x6c2224,
                            _0x54e057 = this['skinRad'];
                        _0x4597c4['drawImage'](_0x18c8c6, -_0x54e057 * _0x32f3ad, (-_0x54e057 + _0x54e057 * _0x5049e1) * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad);
                    }
                    var _0x2fa785 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/komododragon_attack.png'),
                        _0x32f3ad = this['skinScale'] * 0x1,
                        _0x54e057 = this['skinRad'],
                        _0x278d82 = 0xc,
                        _0x5b3ef2 = 0.9,
                        _0x430162 = _0x5b9e97(_0x2cae06, _0x5b3ef2, _0x278d82, 0x1);
                    _0x2fa785 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x2fa785, -_0x54e057 * _0x32f3ad, -_0x54e057 * _0x32f3ad + _0x430162, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad), _0x4597c4['restore']());
                    _0x4597c4['save']();
                    var _0x2f2936 = 'skins/' + this['getSkinPath']() + '/licked_face.png',
                        _0x18c8c6 = this['getSkinImageObj'](_0x2f2936);
                    if (_0x18c8c6) {
                        var _0x254520 = this['lickedAmt'] / 0x64;
                        _0x4597c4['globalAlpha'] = _0x254520, _0x4597c4['drawImage'](_0x18c8c6, -_0x54e057 * _0x32f3ad, (-_0x54e057 + _0x54e057 * _0x55616c) * _0x32f3ad + _0x430162, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad);
                    }
                    _0x4597c4['restore'](), _0x4597c4['save']();
                    var _0x2f2936 = 'skins/' + this['getSkinPath']() + '/komododragon_head.png',
                        _0x18c8c6 = this['getSkinImageObj'](_0x2f2936);
                    if (_0x18c8c6) {
                        var _0x32f3ad = this['skinScale'],
                            _0x54e057 = this['skinRad'];
                        _0x4597c4['drawImage'](_0x18c8c6, -_0x54e057 * _0x32f3ad, -_0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad);
                    }
                    _0x4597c4['restore']();
                }
                if (this['wasLicking']) {
                    if (+new Date() > this['nextShowT'] && !this['showTongue']) this['showTongue'] = !![];
                    if (this['showTongue']) {
                        var _0x2cae06 = (_0x476319 - this['nextShowT']) / 0x3e8,
                            _0x430162 = _0x5b9e97(_0x2cae06, this['tongueAnimationDur'], 0xd, 0.5);
                        _0x430162 = Math['round'](_0x430162);
                        if (_0x430162 < 0x0) return;
                        _0x430162 == 0xd && (this['nextShowT'] = +new Date() + 0xbb8 + Math['random']() * 0x5 * 0x3e8, this['showTongue'] = ![], this['lastLickSide'] = this['lickSide'], this['wasLicking'] = ![]);
                        if (!this['showTongue']) return;
                        var _0x18c8c6 = this['getSkinImageObj']('skins/' + this['getSkinPath']() + '/tongue' + _0x430162 + '.png');
                        if (_0x18c8c6) {
                            var _0x32f3ad = this['skinScale'] * this['tongueScaleF'],
                                _0x54e057 = this['skinRad'];
                            _0x4597c4['save']();
                            if (this['lastLickSide'] == 0x1) _0x4597c4['scale'](-0x1, 0x1);
                            _0x4597c4['drawImage'](_0x18c8c6, -_0x54e057 * _0x32f3ad, (-_0x54e057 + _0x54e057 * this['tongueAncherY']) * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad, 0x2 * _0x54e057 * _0x32f3ad), _0x4597c4['restore']();
                        }
                    }
                }
            }
        }, _0x501b4d['prototype']['lickSide'] = 0x0, _0x501b4d['prototype']['lickedAmt'] = 0x0, _0x501b4d['prototype']['readCustomData_onNewlyVisible'] = function(_0x181455) {
            _0x501b4d['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x181455);
            var _0x5d61b6 = _0x181455['readUInt8']() == 0x1;
            this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x5d61b6, this['lickSide'] = _0x181455['readUInt8'](), this['lickedAmt'] = _0x181455['readUInt8']();
        }, _0x501b4d['prototype']['customUpdatedProperty'] = function(_0x424451, _0x4cece7) {
            if (_0x424451 == _0x90e780) {
                var _0x40435e = _0x4cece7['readUInt8']() == 0x1;
                this['nextShowT'] = +new Date() + 0xbb8, this['isLicking'] = _0x40435e;
                if (!this['wasLicking'] && this['isLicking']) this['wasLicking'] = !![];
            } else {
                if (_0x424451 == _0x340581) this['lickedAmt'] = _0x4cece7['readUInt8']();
                else _0x424451 == _0x5ca59b && (this['lickSide'] = _0x4cece7['readUInt8']());
            }
        };

        function _0x501b4d() {
            _0x501b4d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x501b4d, _0x269668, _0x4a2a55);
        var _0x4d8447 = _0x5d11ac;
        _0x48cce0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x48cce0['prototype']['constructor'] = _0x48cce0, _0x48cce0['superClass'] = _0x4d8447, _0x48cce0['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x48cce0['prototype']['customDraw'] = function(_0x33dc1c) {
            _0x4597c4['save'](), this['drawOutlinedCircle']('', _0x3d267b), _0x4597c4['restore']();
        };

        function _0x48cce0() {
            _0x48cce0['superClass']['call'](this, _0x1f41d7);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x48cce0, _0x1f41d7);
        var _0x4d8447 = _0x5d11ac;
        _0x918617['prototype'] = Object['create'](_0x4d8447['prototype']), _0x918617['prototype']['constructor'] = _0x918617, _0x918617['superClass'] = _0x4d8447, _0x918617['prototype']['updateZ'] = function() {
            this['z'] = -0x9a;
        }, _0x918617['prototype']['customDraw'] = function(_0x54c59b) {
            _0x4597c4['save'](), this['rPer'] = 0x0;
            var _0x4e3dc5 = _0x3d267b;
            this['drawOutlinedCircle']('', _0x4e3dc5);
            var _0x3dd578 = 0x1;
            if (!(_0x3aa021 == 0x2)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
            var _0x4bb6aa = 0x0,
                _0x6b0fe3 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x510ac0 = 0x7,
                _0x1788d7 = 0x4;
            _0x4bb6aa = _0x1788d7 * Math['sin'](0x2 * Math['PI'] / _0x510ac0 * _0x6b0fe3), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x3dd578 + _0x4bb6aa), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == 0x2) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x3dd578 + _0x4bb6aa), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4bb6aa), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4bb6aa), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4bb6aa), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4bb6aa), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), this['rad'] > 0x32 && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']())), _0x4597c4['restore']();
        };

        function _0x918617() {
            _0x918617['superClass']['call'](this, _0x2441c8);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x918617, _0x2441c8);
        var _0x4d8447 = _0x5502af;
        _0x568af1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x568af1['prototype']['constructor'] = _0x568af1, _0x568af1['superClass'] = _0x4d8447, _0x568af1['prototype']['updateZ'] = function() {
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_isInArena']) this['z'] = 0x2710 + this['rad'];
                else {
                    if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                    else this['z'] = 0x4b0 + this['rad'];
                }
            }
        }, _0x568af1['prototype']['animalInfo'] = function() {
            var _0xdd3a87 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xdd3a87['aniName'] = 'Giant Scorpion';
                    break;
                case 0x1:
                    _0xdd3a87['aniName'] = 'Golden Scorpion';
                    break;
                case 0x2:
                    _0xdd3a87['aniName'] = 'Carnelian Scorpion';
                    break;
                case 0x6f:
                    _0xdd3a87['aniName'] = 'Classic Giant Scorpion';
                    break;
                case 0xcc:
                    _0xdd3a87['aniName'] = 'Selamorph Scorpion';
                    break;
                case 0xdc:
                    _0xdd3a87['aniName'] = 'Nebuladon Scorpion';
                    break;
            }
            return _0xdd3a87['aniCol'] = '#FF9000', _0xdd3a87['skinName'] = 'scorpion', _0xdd3a87['upgradeText'] = 'UPGRADED to ' + _0xdd3a87['aniName'] + '!\x0aSting and Shiver your prey to death.\x0a(Press W to Sting)', _0xdd3a87['skinName'] = this['getSkinName'](), _0xdd3a87;
        }, _0x568af1['prototype']['getAbilityInfo'] = function(_0x119d41) {
            var _0x2fd69c = {};
            return _0x2fd69c['abilName'] = 'Sting!\x0a(Shivers Prey)', _0x2fd69c['abilImg'] = 'skins/desert/scorpion/' + this['animalSpecies'] + '/scorpion_ability.png', _0x2fd69c['skinThemeID'] = this['skinThemeID'], _0x2fd69c['mopeSeasonID'] = this['mopeSeasonID'], _0x2fd69c;
        }, _0x568af1['prototype']['getSkinName'] = function() {
            var _0x4888e9 = 'desert/scorpion/' + this['animalSpecies'] + '/scorpion';
            return _0x4888e9 += this['specType'] == 0x0 ? '' : this['specType'], _0x4888e9;
        }, _0x568af1['prototype']['stingerScaleF'] = 0.7, _0x568af1['prototype']['stingerOffsetY'] = -0.6, _0x568af1['prototype']['poison'] = 0x32, _0x568af1['prototype']['clawAnimation'] = null, _0x568af1['prototype']['stingAnimation'] = null, _0x568af1['prototype']['stingerTailNormal'] = null, _0x568af1['prototype']['stingerTail'] = null, _0x568af1['prototype']['stingerAttack'] = null, _0x568af1['prototype']['stingerAttackFull'] = null, _0x568af1['prototype']['stingerNormal'] = null, _0x568af1['prototype']['stingerNormalFull'] = null, _0x568af1['prototype']['isUsingAbility'] = ![], _0x568af1['prototype']['drawSkinCustomization'] = function() {
            !this['flag_usingAbility'] && (this['clawAnimation'] = null, this['stingAnimation'] = null, this['isUsingAbility'] = ![]);
            !this['isUsingAbility'] && this['flag_eff_aniInClaws'] && (this['isUsingAbility'] = !![], this['stingAnimation'] = null);
            this['isUsingAbility'] && !this['flag_usingDiveAbility'] && (this['stingAnimation'] == null && (this['stingAnimation'] = new _0x504c7a(this, 0x1, _0x504c7a['bow'], {
                'v1': 0x5
            }), this['stingAnimation']['onFrameEntered'] = function(_0x1648ee) {
                _0x4597c4['save']();
                var _0x163dd2 = this['forObj']['skinScale'] * this['forObj']['stingerScaleF'],
                    _0x50bcec = this['forObj']['rad'];
                if (this['forObj']['stingerTailAttack']) _0x4597c4['drawImage'](this['forObj']['stingerTailAttack'], -_0x50bcec * _0x163dd2, (-_0x50bcec + _0x50bcec * this['forObj']['stingerOffsetY']) * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2, 0x2 * (_0x50bcec + _0x50bcec * _0x1648ee) * _0x163dd2);
                if (this['forObj']['stingerTail']) _0x4597c4['drawImage'](this['forObj']['stingerTail'], -_0x50bcec * _0x163dd2, (-_0x50bcec + _0x50bcec * _0x1648ee) * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2);
                if (this['forObj']['stingerAttack']) _0x4597c4['drawImage'](this['forObj']['stingerAttack'], -_0x50bcec * _0x163dd2, (-_0x50bcec + _0x50bcec * _0x1648ee) * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2);
                var _0x1d1fb9 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x10df8c = _0x5b9e97(_0x1d1fb9, 0x5, 0x1, 0x1),
                    _0xf37689 = Math['max'](0x0, _0x10df8c);
                _0x4597c4['globalAlpha'] = _0xf37689 * Math['max'](0x0, this['poison'] / 0x64);
                if (this['forObj']['stingerAttackFull']) _0x4597c4['drawImage'](this['forObj']['stingerAttackFull'], -_0x50bcec * _0x163dd2, (-_0x50bcec + _0x50bcec * _0x1648ee) * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2, 0x2 * _0x50bcec * _0x163dd2);
                _0x4597c4['restore']();
            }), this['stingAnimation'] && this['stingAnimation']['run']());
            if (this['stingAnimation'] == null || this['stingAnimation']['hasStopped']) {
                if (!this['flag_underWater'] && !this['flag_usingDiveAbility']) {
                    if (this['stingerTailNormal'] != null && this['stingerNormalFull'] != null) {
                        var _0x1cd455 = this['skinScale'] * this['stingerScaleF'],
                            _0x456723 = this['skinRad'],
                            _0x126940 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x2fe734 = 0x3,
                            _0x165a1f = 1.5,
                            _0x12f4a1 = 0x0,
                            _0x20a8e4 = 0x0;
                        !_0x9ffe4d && !(_0x3aa021 == _0x243dd0) && (_0x12f4a1 = _0x5b9e97(_0x126940, _0x165a1f, _0x2fe734, 0x2), _0x20a8e4 = _0x5b9e97(_0x126940, _0x165a1f, 0x1, 0x2));
                        _0x4597c4['save']();
                        var _0x456723 = this['rad'] - _0x12f4a1 * 0.5;
                        _0x4597c4['drawImage'](this['stingerTailNormal'], -_0x456723 * _0x1cd455, (-_0x456723 + _0x456723 * this['stingerOffsetY']) * _0x1cd455 + _0x12f4a1 * -_0x20a8e4, 0x2 * _0x456723 * _0x1cd455, 0x2 * _0x456723 * _0x1cd455);
                        var _0x126940 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x4159a0 = _0x5b9e97(_0x126940, 0x5, 0x1, 0x1),
                            _0x47464b = Math['max'](0x0, _0x4159a0);
                        _0x4597c4['globalAlpha'] = _0x47464b * Math['max'](0x0, this['poison'] / 0x64), _0x4597c4['drawImage'](this['stingerNormalFull'], -_0x456723 * _0x1cd455, (-_0x456723 + _0x456723 * this['stingerOffsetY']) * _0x1cd455 + _0x12f4a1 * -_0x20a8e4, 0x2 * _0x456723 * _0x1cd455, 0x2 * _0x456723 * _0x1cd455), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x568af1['prototype']['tailOffsetY'] = -0.25, _0x568af1['prototype']['tailScaleF'] = 1.2;
        var _0x44cde2 = 0x4,
            _0x983fc3 = 0.1;
        _0x568af1['prototype']['drawUnderSkinImg'] = function() {
            var _0x15e0e9 = 'skins/desert/scorpion/' + this['animalSpecies'] + '/tail_back.png',
                _0x16c168 = this['getSkinImageObj'](_0x15e0e9);
            if (_0x16c168) {
                var _0x2de266 = 0x0;
                if (this['stingAnimation']) {
                    if (this['stingAnimation']['frame'] < 0.5) _0x2de266 = -this['stingAnimation']['frame'] * 0.3;
                }
                var _0x73b9d7 = this['skinScale'] * this['tailScaleF'],
                    _0x37fc60 = this['skinRad'];
                _0x4597c4['drawImage'](_0x16c168, -_0x37fc60 * _0x73b9d7, (-_0x37fc60 + _0x37fc60 * this['tailOffsetY']) * _0x73b9d7, 0x2 * _0x37fc60 * _0x73b9d7, 0x2 * (_0x37fc60 + _0x37fc60 * _0x2de266) * _0x73b9d7);
            }
            if (this['flag_usingAbility'] && !this['flag_underWater']) {
                this['clawAnimation'] == null && (this['clawAnimation'] = new _0x504c7a(this, 0.9, _0x504c7a['bow'], {
                    'v1': _0x44cde2
                }), this['clawAnimation']['keepLastFrame'] = !![], this['clawAnimation']['onFrameEntered'] = function(_0x3e52fc) {
                    var _0x8a848e = 0x0;
                    if (_0x3e52fc < 0.5) _0x8a848e = -_0x3e52fc;
                    var _0x48856d = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms.png';
                    this['forObj']['flag_eff_aniInClaws'] && (_0x48856d = 'skins/desert/scorpion/' + this['forObj']['animalSpecies'] + '/arms-grabbed.png');
                    var _0x451aac = this['forObj']['getSkinImageObj'](_0x48856d);
                    if (_0x451aac) {
                        var _0x40cb25 = this['forObj']['skinScale'] * this['forObj']['tailScaleF'],
                            _0x18e39c = this['forObj']['skinRad'];
                        !this['hasStopped'] && this['timePassed'] < 0.75 ? (_0x983fc3 = _0x8a848e, _0x4597c4['drawImage'](_0x451aac, -_0x18e39c * _0x40cb25, (-_0x18e39c + _0x18e39c * _0x8a848e) * _0x40cb25, 0x2 * _0x18e39c * _0x40cb25, 0x2 * _0x18e39c * _0x40cb25)) : _0x4597c4['drawImage'](_0x451aac, -_0x18e39c * _0x40cb25, (-_0x18e39c + _0x18e39c * _0x983fc3) * _0x40cb25, 0x2 * _0x18e39c * _0x40cb25, 0x2 * _0x18e39c * _0x40cb25);
                    }
                });
                if (this['clawAnimation'] != null) this['clawAnimation']['run']();
            }
        }, _0x568af1['prototype']['readCustomData_onNewlyVisible'] = function(_0x482b6a) {
            _0x568af1['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x482b6a), this['poison'] = _0x482b6a['readUInt8']();
        }, _0x568af1['prototype']['customUpdatedProperty'] = function(_0xe784b4, _0xcdbfa9) {
            _0xe784b4 == _0x340581 && (this['poison'] = _0xcdbfa9['readUInt8']());
        };

        function _0x568af1() {
            _0x568af1['superClass']['call'](this, _0x269668);
        }
        _0x568af1['prototype']['preLoad'] = function() {
            this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/scorpion1.png'), this['stingerTailNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_normal.png'), this['stingerTail'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/stinger_tail.png'), this['stingerTailAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_tail.png'), this['stingerAttack'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_dull.png'), this['stingerAttackFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/attack_stinger_full.png'), this['stingerNormal'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_dull.png'), this['stingerNormalFull'] = this['getSkinImageObj']('skins/desert/scorpion/' + this['animalSpecies'] + '/normal_stinger_full.png');
        }, _0x5ddf8d['setCustomClassForGameObjType'](_0x568af1, _0x269668, _0x582280);
        var _0x4d8447 = _0x5502af;
        _0x472706['prototype'] = Object['create'](_0x4d8447['prototype']), _0x472706['prototype']['constructor'] = _0x472706, _0x472706['superClass'] = _0x4d8447, _0x472706['prototype']['updateZ'] = function() {
            if (this['flag_usingAbility'] && this['webState'] > 0x2) this['z'] = 0x3e8;
            else {
                if (this['flag_eff_isOnSpiderWeb']) this['z'] = 0x3e8 + this['rad'];
                else this['z'] = 0x3e8 + this['rad'];
            }
        }, _0x472706['prototype']['animalInfo'] = function() {
            var _0x150dc8 = {};
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x150dc8['aniName'] = 'Blackwidow Spider';
                            break;
                        case 0x6f:
                            _0x150dc8['aniName'] = 'Classic Blackwidow Spider';
                            break;
                    }
                    break;
                case 0x1:
                    _0x150dc8['aniName'] = 'Goldenwidow Spider';
                    break;
                case 0x2:
                    _0x150dc8['aniName'] = 'Queen Blackwidow';
                    break;
                case 0xcc:
                    _0x150dc8['aniName'] = 'Blood Widow Spider!';
                    break;
                case 0x7e7:
                    _0x150dc8['aniName'] = 'Bot X-303';
                    break;
            }
            return _0x150dc8['aniCol'] = '#FF9000', _0x150dc8['skinName'] = this['getSkinName'](), _0x150dc8['upgradeText'] = 'UPGRADED to ' + _0x150dc8['aniName'] + '!\x0aBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\x0aPress W to spin and throw web.', _0x150dc8;
        }, _0x472706['prototype']['getAbilityInfo'] = function(_0x44b35d) {
            var _0x4f9d41 = {};
            return _0x4f9d41['abilName'] = 'Spin Web & Bite\x0a(Sweat Prey)', _0x4f9d41['abilImg'] = 'skins/desert/blackwidow/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/blackwidow.png', _0x4f9d41['skinThemeID'] = this['skinThemeID'], _0x4f9d41['mopeSeasonID'] = this['mopeSeasonID'], _0x4f9d41;
        }, _0x472706['prototype']['readCustomData_onNewlyVisible'] = function(_0x1be509) {
            _0x472706['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1be509), this['customUpdatedProperty'](_0x1a6685, _0x1be509);
        }, _0x472706['prototype']['webX'] = 0x0, _0x472706['prototype']['webY'] = 0x0, _0x472706['prototype']['spiderX'] = 0x0, _0x472706['prototype']['spiderY'] = 0x0, _0x472706['prototype']['webState'] = 0x0, _0x472706['prototype']['customUpdatedProperty'] = function(_0x21b6cf, _0x41a3d1) {
            _0x21b6cf == _0x1a6685 && (this['webState'] = _0x41a3d1['readUInt8']());
        }, _0x472706['prototype']['setStealth'] = function() {
            if (_0x524bb8 == _0x31e908 && this['flag_usingAbility'] && (this['flag_stealth'] || this['flag_inHidingHole'] || this['flag_eff_isUnderTree'])) this['idealOp'] = 0.01;
            else _0x472706['superClass']['prototype']['setStealth']['call'](this);
        }, _0x472706['prototype']['readUpdatedPropertyItem'] = function(_0x4dff79, _0x29c554) {
            _0x472706['superClass']['prototype']['readUpdatedPropertyItem']['call'](this, _0x4dff79, _0x29c554);
            if (_0x4dff79 == _0x1e294e) {
                this['webState'] == 0x0 && (this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y']);
                var _0x97e407 = _0x29c554['readUInt8']() == 0x1;
                if (_0x97e407) {
                    var _0x398f97 = _0x29c554['readUInt16']() / 0x4,
                        _0x234602 = _0x29c554['readUInt16']() / 0x4;
                    this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x398f97, this['web_ny'] = _0x234602;
                    var _0x35fcea = _0x29c554['readUInt16']() / 0x4,
                        _0x3dcfbe = _0x29c554['readUInt16']() / 0x4;
                    this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x35fcea, this['spider_ny'] = _0x3dcfbe;
                }
            }
        }, _0x472706['prototype']['onLerpUpdate'] = function(_0x1fa121) {
            this['webState'] > 0x0 && (this['webX'] = _0x1fa121 * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x1fa121 * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x1fa121 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x1fa121 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
        }, _0x472706['prototype']['afterCustomDraw'] = function(_0x1bd278) {
            this['webState'] > 0x0 && _0x59b0bc == this['id'] && this['flag_usingAbility'] && (_0x4597c4['save'](), _0x4597c4['strokeStyle'] = this['animalSpecies'] == 0x1 ? 'gold' : 'white', _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['webX'], this['webY']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore']());
        }, _0x472706['prototype']['getSkinName'] = function() {
            return 'desert/blackwidow/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/blackwidow' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x472706['prototype']['drawSkinCustomization'] = function() {
            if (this['webState'] == 0x0 && this['flag_usingAbility']) {
                var _0x9d23b4 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x75c7e = 0.75,
                    _0x49f2e0 = 0x1,
                    _0x7c2ee6 = _0x49f2e0 * Math['sin'](0x2 * Math['PI'] / _0x75c7e * _0x9d23b4);
                _0x4597c4['globalAlpha'] = 0.3;
                var _0x481b01 = this['animalSpecies'] == 0x1 ? 'gold' : '#f2f2f2';
                _0x4096ce(0x0, -this['rad'] * 1.07, this['rad'] * 0.07, _0x481b01), _0x4597c4['globalAlpha'] = 0.8 - 0.2 * _0x7c2ee6, _0x4096ce(0x0, -this['rad'] * 1.07, this['rad'] * 0.07 + (0.05 + _0x7c2ee6), _0x481b01);
            }
        };

        function _0x472706() {
            _0x472706['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x472706, _0x269668, _0x4bbe45);
        var _0x498438 = _0x124dbd,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x124dbd['prototype']['updateZ'] = function() {
            this['z'] = 0x2710;
        }, _0x124dbd['prototype']['webAlpha'] = 0.5, _0x124dbd['prototype']['customDraw'] = function(_0x473508) {
            _0x4597c4['save']();
            if (this['state'] > 0x0) {
                var _0x2030cb = this['getSkinImageObj']('img/web/' + this['webType'] + '/spiderWeb.png'),
                    _0x43cb5c = this['rad'];
                _0x2030cb && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['webAlpha'], _0x4597c4['drawImage'](_0x2030cb, -_0x43cb5c, -_0x43cb5c, 0x2 * _0x43cb5c, 0x2 * _0x43cb5c), _0x4597c4['restore']());
            }
            _0x4597c4['restore']();
        }, _0x124dbd['prototype']['state'] = 0x0, _0x124dbd['prototype']['spiderX'] = 0x0, _0x124dbd['prototype']['spiderY'] = 0x0, _0x124dbd['prototype']['readUpdatedProperty'] = function(_0x570888, _0x565014) {
            if (_0x570888 == _0x1a6685) this['state'] = _0x565014['readUInt8']();
            else {
                if (_0x570888 == _0x3ed126) {
                    var _0x20591e = _0x565014['readUInt8']() / 0x64;
                    if (_0x20591e < this['webAlpha']) this['webAlpha'] = _0x20591e;
                }
            }
        }, _0x124dbd['prototype']['readCustomData_onNewlyVisible'] = function(_0x2fda22) {
            _0x124dbd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2fda22), this['state'] = _0x2fda22['readUInt8']();
            var _0x2570b9 = _0x2fda22['readUInt8']() / 0x64;
            if (_0x2570b9 < this['webAlpha']) this['webAlpha'] = _0x2570b9;
            this['webType'] = _0x2fda22['readUInt8']();
        };

        function _0x124dbd() {
            _0x124dbd['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x124dbd, _0x4fbd16, _0x381068);
        var _0x4d8447 = _0x5502af;
        _0x12c6a3['prototype'] = Object['create'](_0x4d8447['prototype']), _0x12c6a3['prototype']['constructor'] = _0x12c6a3, _0x12c6a3['superClass'] = _0x4d8447, _0x12c6a3['prototype']['skinFolder'] = function() {
            return 'desert/';
        }, _0x12c6a3['prototype']['animalInfo'] = function() {
            var _0xbcc8f0 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xbcc8f0['aniName'] = 'Pterodactyl';
                    break;
                case 0x1:
                    _0xbcc8f0['aniName'] = 'Golden Pterodactyl';
                    break;
                case 0x2:
                    _0xbcc8f0['aniName'] = 'Emerald Pterodactyl';
                    break;
                case 0x64:
                    _0xbcc8f0['aniName'] = 'Carnageodactyl';
                    break;
                case 0x6f:
                    _0xbcc8f0['aniName'] = 'Classic Pterodactyl';
                    break;
            }
            return _0xbcc8f0['aniCol'] = '#FF9000', _0xbcc8f0['skinName'] = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl', _0xbcc8f0['upgradeText'] = 'UPGRADED to ' + _0xbcc8f0['aniName'] + '!\x0aFly and dive onto prey to pick it up.', _0xbcc8f0;
        }, _0x12c6a3['prototype']['getHead'] = function(_0x54681f, _0x29fbb3) {
            var _0x5c8137 = '',
                _0x40db71 = 'skins/' + this['skinFolder']() + '/' + _0x54681f + '/' + this['animalSpecies'] + '/' + _0x54681f + '_head' + _0x5c8137 + '.png';
            return _0x40db71;
        }, _0x12c6a3['prototype']['getSkinName'] = function() {
            var _0x5ce2e4 = this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl';
            if (this['specType'] == 0x4) _0x5ce2e4 += '4';
            else _0x5ce2e4 += this['specType'] == 0x0 ? '' : 0x1;
            return _0x5ce2e4;
        }, _0x12c6a3['prototype']['getWing'] = function(_0x1eb7da, _0x2d02a9) {
            if (!this['flag_flying']) _0x2d02a9 = _0x2d02a9 + '' + _0x2d02a9;
            var _0x147754 = 'skins/' + this['skinFolder']() + '/' + _0x1eb7da + '/' + this['animalSpecies'] + '/' + _0x1eb7da + '_wing' + _0x2d02a9 + '_nohand.png';
            return _0x147754;
        }, _0x12c6a3['prototype']['getWingBone'] = function(_0x4bf089, _0x14e32a) {
            if (!this['flag_flying']) _0x14e32a = _0x14e32a + '' + _0x14e32a;
            var _0x304738 = 'skins/' + this['skinFolder']() + '/' + _0x4bf089 + '/' + this['animalSpecies'] + '/' + _0x4bf089 + '_wing' + _0x14e32a + '_bones.png';
            return _0x304738;
        }, _0x12c6a3['prototype']['getHand'] = function(_0x32eb85, _0x4d78f5) {
            if (!this['flag_flying']) _0x4d78f5 = _0x4d78f5 + '' + _0x4d78f5;
            if (this['isGliding']) _0x4d78f5 = _0x4d78f5 + '3';
            var _0x47d9f7 = 'skins/' + this['skinFolder']() + '/' + _0x32eb85 + '/' + this['animalSpecies'] + '/' + _0x32eb85 + '_hand' + _0x4d78f5 + '.png';
            return _0x47d9f7;
        }, _0x12c6a3['prototype']['biteStart'] = 0x0, _0x12c6a3['prototype']['flaps'] = 0x0, _0x12c6a3['prototype']['flapsMod'] = 0x5, _0x12c6a3['prototype']['countFlap'] = !![], _0x12c6a3['prototype']['canFlap'] = !(_0x3aa021 == _0x243dd0), _0x12c6a3['prototype']['resumeFlapT'] = 0x0, _0x12c6a3['prototype']['lastFlapFrame'] = 0x0, _0x12c6a3['prototype']['flapSpeed'] = 0x1, _0x12c6a3['prototype']['flapAmount'] = 0.2, _0x12c6a3['prototype']['r'] = 22.5, _0x12c6a3['prototype']['ax'] = 0x0, _0x12c6a3['prototype']['ay'] = 0x1, _0x12c6a3['prototype']['ww'] = 0x4, _0x12c6a3['prototype']['wh'] = 2.5, _0x12c6a3['prototype']['ax2'] = 0x1, _0x12c6a3['prototype']['rf'] = -0x2, _0x12c6a3['prototype']['erf'] = 11.5, _0x12c6a3['prototype']['erf_gliding'] = 0x1e, _0x12c6a3['prototype']['lx'] = -0.05, _0x12c6a3['prototype']['famt'] = 0.5, _0x12c6a3['prototype']['yf'] = 0.15, _0x12c6a3['prototype']['xf'] = -0.2, _0x12c6a3['prototype']['legScale'] = 1.15, _0x12c6a3['prototype']['handPerc'] = 0.9, _0x12c6a3['prototype']['handWF'] = 0x0, _0x12c6a3['prototype']['set'] = ![], _0x12c6a3['prototype']['wOffset'] = 0.1, _0x12c6a3['prototype']['headF'] = 0.5, _0x12c6a3['prototype']['headFDisp'] = -0.6, _0x12c6a3['prototype']['headScale'] = 0.8, _0x12c6a3['prototype']['headX'] = 0.225, _0x12c6a3['prototype']['drawLegs'] = function() {
            var _0x5e2191 = 0x1f4 / 0x154,
                _0x44171a = this['flag_eff_aniInClaws'] ? 'legs2' : 'legs',
                _0x1390e2 = this['getSkinImageObj']('skins/' + this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/' + _0x44171a + '.png');
            if (_0x1390e2) {
                _0x4597c4['save']();
                var _0x21fd0f = this['rad'];
                _0x5e2191 *= this['legScale'], _0x4597c4['drawImage'](_0x1390e2, -_0x21fd0f * _0x5e2191, (-_0x21fd0f + _0x21fd0f * this['lx']) * _0x5e2191, 0x2 * _0x21fd0f * _0x5e2191, 0x2 * _0x21fd0f * _0x5e2191), _0x4597c4['restore']();
            }
        }, _0x12c6a3['prototype']['drawUnderSkinImg'] = function() {
            this['flag_usingAbility'] && (this['drawWing'](this['frame'], 0x1), this['drawWing'](this['frame'], 0x2));
            if (this['specType'] == 0x2) this['drawLegs']();
        }, _0x12c6a3['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility']) {
                this['drawBone'](this['frame'], 0x1), this['drawBone'](this['frame'], 0x2), this['drawHand'](this['frame'], 0x1), this['drawHand'](this['frame'], 0x2);
                var _0x29e733 = 0x1f4 / 0x154,
                    _0x28adde = this['getHead']('pterodactyl', ![]),
                    _0x4c919d = this['getSkinImageObj'](_0x28adde);
                if (_0x4c919d) {
                    _0x4597c4['save'](), _0x29e733 += -(0.1 * this['headF']) * this['frame'];
                    var _0x21ef28 = this['rad'];
                    _0x4597c4['drawImage'](_0x4c919d, -_0x21ef28 * _0x29e733, (-_0x21ef28 + _0x21ef28 * (0.3 + this['headFDisp'] * (this['frame'] / 0xa)) + this['headF'] * this['frame']) * _0x29e733, 0x2 * _0x21ef28 * _0x29e733, 0x2 * _0x21ef28 * _0x29e733), _0x4597c4['restore']();
                }
            } else {
                if (this['animalSpecies'] == 0x64) {
                    var _0x355e62 = _0x476319 - this['nextJawAnimT'],
                        _0x13895b = Math['trunc'](_0x355e62 / _0x452dd9) % 0x10;
                    if (_0x476319 < this['nextJawAnimT']) _0x13895b = 0x0;
                    _0x13895b >= 0xf && (this['nextJawAnimT'] = _0x476319 + 0x1388);
                    var _0x231d17 = this['getSkinImageObj']('skins/desert/pterodactyl/100/mouth/pterodactyl_head' + _0x13895b + '.png');
                    if (_0x231d17) {
                        var _0x29e733 = 0x1f4 / 0x154 * this['headScale'];
                        _0x4597c4['save']();
                        var _0x21ef28 = this['rad'];
                        _0x4597c4['drawImage'](_0x231d17, -_0x21ef28 * _0x29e733, (-_0x21ef28 + _0x21ef28 * this['headX']) * _0x29e733, 0x2 * _0x21ef28 * _0x29e733, 0x2 * _0x21ef28 * _0x29e733), _0x4597c4['restore']();
                    }
                } else {
                    var _0x28adde = this['getHead']('pterodactyl', ![]),
                        _0x4c919d = this['getSkinImageObj'](_0x28adde);
                    if (_0x4c919d) {
                        var _0x29e733 = 0x1f4 / 0x154 * this['headScale'];
                        _0x4597c4['save']();
                        var _0x21ef28 = this['rad'];
                        _0x4597c4['drawImage'](_0x4c919d, -_0x21ef28 * _0x29e733, (-_0x21ef28 + _0x21ef28 * this['headX']) * _0x29e733, 0x2 * _0x21ef28 * _0x29e733, 0x2 * _0x21ef28 * _0x29e733), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x12c6a3['prototype']['nextJawAnimT'] = 0x0;
        var _0x452dd9 = 0x46;
        _0x12c6a3['prototype']['drawWing'] = function(_0x2939ac, _0x11108a) {
            var _0xdc3be6 = _0x11108a == 0x1 ? 0x1 : -0x1,
                _0x18290d = this['getSkinImageObj'](this['getWing']('pterodactyl', _0x11108a));
            if (_0x18290d) {
                var _0x371011 = -(-0.2 + _0x2939ac) * _0x4c4686(_0xdc3be6 * this['r']),
                    _0x34ccc5 = this['rad'] * 0.8,
                    _0x166a0d = 0x0,
                    _0x40f1ba = this['rad'],
                    _0x4da337 = _0x34ccc5 * this['ww'],
                    _0x4e8a42 = _0x34ccc5 * this['wh'],
                    _0x21d72c = _0x11108a == 0x1 ? this['ax'] : this['ax2'],
                    _0x5450ee = this['ay'] + this['yf'] * _0x2939ac;
                _0x4597c4['save'](), _0x371011 *= this['rf'];
                var _0x4464e0 = this['isGliding'] ? this['erf_gliding'] : this['erf'];
                _0x4597c4['rotate'](_0x4c4686(_0xdc3be6 * _0x4464e0) + _0x371011);
                var _0x486ddf = _0x2939ac * _0x4da337 * _0xdc3be6 * this['wOffset'];
                _0x4597c4['drawImage'](_0x18290d, _0x166a0d + _0x4da337 * -_0x21d72c + _0x486ddf, _0x40f1ba + _0x4e8a42 * -_0x5450ee, _0x4da337, _0x4e8a42), _0x4597c4['restore']();
            }
        }, _0x12c6a3['prototype']['drawBone'] = function(_0x7d013a, _0x4f86eb) {
            var _0x3bea57 = this['getSkinImageObj'](this['getWingBone']('pterodactyl', _0x4f86eb)),
                _0x3a5cc7 = _0x4f86eb == 0x1 ? 0x1 : -0x1;
            if (_0x3bea57) {
                var _0x3df666 = -(-0.2 + _0x7d013a) * _0x4c4686(_0x3a5cc7 * this['r']),
                    _0x165d34 = this['rad'] * 0.8,
                    _0x5a203f = 0x0,
                    _0xfeb34b = this['rad'],
                    _0x2d5c4d = _0x165d34 * this['ww'],
                    _0x5cfb6e = _0x165d34 * this['wh'],
                    _0x2c46ec = _0x4f86eb == 0x1 ? this['ax'] : this['ax2'],
                    _0x535ad5 = this['ay'] + this['yf'] * _0x7d013a;
                _0x4597c4['save'](), _0x3df666 *= this['rf'];
                var _0x10232a = this['isGliding'] ? this['erf_gliding'] : this['erf'];
                _0x4597c4['rotate'](_0x4c4686(_0x3a5cc7 * _0x10232a) + _0x3df666);
                var _0x3c87f3 = _0x7d013a * _0x2d5c4d * _0x3a5cc7 * this['wOffset'];
                _0x4597c4['drawImage'](_0x3bea57, _0x5a203f + _0x2d5c4d * -_0x2c46ec + _0x3c87f3, _0xfeb34b + _0x5cfb6e * -_0x535ad5, _0x2d5c4d, _0x5cfb6e), _0x4597c4['restore']();
            }
        };
        var _0x31a2a8 = 0x0;
        _0x12c6a3['prototype']['drawHand'] = function(_0x5e76c0, _0x5f135c) {
            var _0x1c819c = _0x5f135c == 0x1 ? 0x1 : -0x1,
                _0x1823ca = this['getSkinImageObj'](this['getHand']('pterodactyl', _0x5f135c));
            if (_0x1823ca) {
                var _0x401bac = -(-0.2 + _0x5e76c0) * _0x4c4686(_0x1c819c * this['r']),
                    _0x25c0e9 = this['rad'] * 0.8,
                    _0x4c5dc3 = 0x0,
                    _0x1bdf14 = this['rad'],
                    _0x588158 = _0x25c0e9 * this['ww'],
                    _0x3377cc = _0x25c0e9 * this['wh'] + (!this['flag_flying'] ? this['wh'] * _0x31a2a8 : 0x0),
                    _0x24560f = _0x1c819c == 0x1 ? this['ax'] : this['ax2'],
                    _0x5bdb6f = _0x24560f + _0x1c819c * this['xf'] * _0x5e76c0,
                    _0x32e9df = this['ay'] + this['yf'] * _0x5e76c0;
                _0x401bac *= this['rf'];
                var _0x161678 = this['isGliding'] ? this['erf_gliding'] : this['erf'];
                _0x4597c4['save'](), this['drawImage'](_0x1823ca, _0x4c5dc3 + _0x588158 * -_0x5bdb6f, _0x1bdf14 + _0x3377cc * -_0x32e9df, _0x588158 + _0x588158 * _0x1c819c * this['handWF'], _0x3377cc, _0x4c4686(_0x1c819c * _0x161678) + _0x401bac), _0x4597c4['restore']();
            }
        }, _0x12c6a3['prototype']['frame'] = 0x0, _0x12c6a3['prototype']['lastFlapFrame'] = 0x0, _0x12c6a3['prototype']['getFrame'] = function() {
            if (!this['canFlap'] && this['flag_flying'] && _0x476319 > this['resumeFlapT']) this['canFlap'] = !![];
            var _0x377f7a = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x1d0f13 = !(_0x3aa021 == _0x243dd0) && this['canFlap'] ? _0x5b9e97(_0x377f7a, this['flapSpeed'], this['flapAmount'] * this['handPerc'], 0x2) : this['birdNoAnimationFlyWingAngle'];
            if (this['flag_flying'] && _0x1d0f13 < 0x0 && this['countFlap']) this['countFlap'] = ![], this['flaps']++, this['flaps'] % this['flapsMod'] == 0x0 && (this['lastFlapFrame'] = _0x1d0f13, this['canFlap'] = ![], this['resumeFlapT'] = +new Date() + 0x5dc);
            else _0x1d0f13 > 0x0 && !this['countFlap'] && (this['countFlap'] = !![]);
            if (!this['canFlap']) _0x1d0f13 = this['lastFlapFrame'];
            else this['lastFlapFrame'] = _0x1d0f13;
            return _0x1d0f13;
        }, _0x12c6a3['prototype']['beforeCustomDraw'] = function() {
            if (!this['flag_usingAbility']) return;
            !this['flag_flying'] && !this['set'] ? (this['set'] = !![], this['r'] = 11.25, this['erf'] = 5.75, this['ww'] = 3.5) : this['flag_flying'] && this['set'] && (this['set'] = ![], this['r'] = 22.5, this['erf'] = 11.5, this['ww'] = 4.5), this['isGliding'] ? this['flapAmount'] = 0x0 : this['flapAmount'] = this['famt'], this['frame'] = this['getFrame']();
        }, _0x12c6a3['prototype']['updateZ'] = function() {
            if (this['flag_eff_grabbedByFlytrap']) this['z'] = 0x44c + this['rad'];
            else {
                if (!this['flag_flying'] && this['flag_usingAbility'] && !this['flag_underWater']) this['z'] = 0x4b0 + this['rad'];
                else {
                    if (this['flag_flying'] || this['flag_eff_tossedInAir']) {
                        this['z'] = 0x1adb0;
                        if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                        else this['z'] += this['rad'];
                        if (this['flag_eff_aniInClaws']) this['z'] += 0x64;
                    } else this['z'] = 0x3e8 + this['rad'];
                }
            }
        }, _0x12c6a3['prototype']['getAbilityInfo'] = function(_0x3df687) {
            var _0x303972 = {};
            return _0x303972['abilName'] = 'Dive Attack\x0a(Fly with Prey)', _0x303972['abilImg'] = 'skins/' + this['skinFolder']() + '/pterodactyl/' + this['animalSpecies'] + '/pterodactyl' + '_ability.png', _0x303972['skinThemeID'] = this['skinThemeID'], _0x303972['mopeSeasonID'] = this['mopeSeasonID'], _0x303972;
        }, _0x12c6a3['prototype']['readCustomData_onNewlyVisible'] = function(_0x4a87da) {
            _0x12c6a3['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x4a87da), this['isGliding'] = _0x4a87da['readUInt8']() == 0x1;
        }, _0x12c6a3['prototype']['customUpdatedProperty'] = function(_0x50cbb9, _0x1df9a) {
            this['isGliding'] = _0x1df9a['readUInt8']() == 0x1;
        };

        function _0x12c6a3() {
            _0x12c6a3['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x12c6a3, _0x269668, _0x5e24a5);
        var _0x4d8447 = _0x5502af;
        _0x215ce5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x215ce5['prototype']['constructor'] = _0x215ce5, _0x215ce5['superClass'] = _0x4d8447, _0x215ce5['prototype']['animalInfo'] = function() {
            var _0x2e87ca = {};
            return _0x2e87ca['aniName'] = 'Bullet Ant', _0x2e87ca['aniCol'] = '#FF9000', _0x2e87ca['skinName'] = 'desert/bulletant/0/bulletant', _0x2e87ca['upgradeText'] = 'UPGRADED to ' + _0x2e87ca['aniName'] + '!\x0aHold \'W\' to pick anything and take to your Anthill.', _0x2e87ca;
        };
        var _0x52f8f6 = 0x1;
        _0x215ce5['prototype']['drawSkinCustomization'] = function() {
            var _0x203614 = 'skins/desert/bulletant/' + this['animalSpecies'] + '/head.png',
                _0x705b92 = this['getSkinImageObj'](_0x203614);
            if (_0x705b92) {
                var _0x30a81f = this['skinScale'] * 1.2,
                    _0x3565ab = this['skinRad'];
                _0x4597c4['drawImage'](_0x705b92, -_0x3565ab * _0x30a81f, (-_0x3565ab + _0x3565ab * 0.3) * _0x30a81f, 0x2 * _0x3565ab * _0x30a81f, 0x2 * _0x3565ab * _0x30a81f);
            }
        };
        var _0x21bc1a = -0.7;
        _0x215ce5['prototype']['drawUnderSkinImg'] = function() {
            var _0x324a3c = 'skins/desert/bulletant/' + this['animalSpecies'] + '/abdomen.png',
                _0x4c8718 = this['getSkinImageObj'](_0x324a3c);
            if (_0x4c8718) {
                var _0x22f165 = this['skinScale'] * 0.9,
                    _0x2efdea = this['skinRad'];
                _0x4597c4['drawImage'](_0x4c8718, -_0x2efdea * _0x22f165, (-_0x2efdea + _0x2efdea * _0x21bc1a) * _0x22f165, 0x2 * _0x2efdea * _0x22f165, 0x2 * _0x2efdea * _0x22f165);
            }
        }, _0x215ce5['prototype']['getSkinName'] = function() {
            var _0x5da3e8 = 'desert/bulletant/' + this['animalSpecies'] + '/body';
            return _0x5da3e8;
        };

        function _0x215ce5() {
            _0x215ce5['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x215ce5, _0x269668, _0x120535);
        var _0x4d8447 = _0x5d11ac;
        _0x52d9e5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x52d9e5['prototype']['constructor'] = _0x52d9e5, _0x52d9e5['superClass'] = _0x4d8447, _0x52d9e5['prototype']['FlytrapType'] = 0x0, _0x52d9e5['prototype']['updateZ'] = function() {
            this['z'] = 0x64;
        }, _0x52d9e5['prototype']['getSkinFolder'] = function(_0x5a7969) {
            return 'desert/flytrap';
        }, _0x52d9e5['prototype']['customDraw'] = function(_0x7c7484) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            var _0x48f63f = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/base.png');
            if (_0x48f63f) {
                var _0x424533 = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x48f63f, -_0x424533, -_0x424533, 0x2 * _0x424533, 0x2 * _0x424533);
            }
            _0x4597c4['restore']();
        };

        function _0x52d9e5() {
            _0x52d9e5['superClass']['call'](this, _0x2dd8a7), this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x52d9e5, _0x2dd8a7);
        var _0x4d8447 = _0x5d11ac;
        _0x263fb4['prototype'] = Object['create'](_0x4d8447['prototype']), _0x263fb4['prototype']['constructor'] = _0x263fb4, _0x263fb4['superClass'] = _0x4d8447, _0x263fb4['prototype']['FlytrapMouthType'] = 0x0, _0x263fb4['prototype']['updateZ'] = function() {
            this['z'] = 0x44c + this['rad'];
        };
        var _0x1fa682 = 0x8c,
            _0x29ebac = 1.25,
            _0x58cf30 = 2.5,
            _0x4018a9 = 1.25,
            _0x3c2795 = 1.5,
            _0x41f713 = 0xb4,
            _0x5b8ef1 = 1.5,
            _0x356873 = 0x1,
            _0xb05ec1 = 0x1,
            _0xced38b = 0x0,
            _0x500304 = 0x0,
            _0x32ea1a = -0xa0,
            _0x51fbe7 = 0x1,
            _0x24386d = 0x0;
        _0x263fb4['prototype']['topA'] = 0xb4, _0x263fb4['prototype']['botA'] = 0xb4, _0x263fb4['prototype']['distBeforeAttack'] = 0x0, _0x263fb4['prototype']['maxDist'] = 0x0, _0x263fb4['prototype']['distCovered'] = 0x0, _0x263fb4['prototype']['isAttacking'] = ![], _0x263fb4['prototype']['isMouthClosed'] = ![], _0x263fb4['prototype']['grabbedAni'] = ![], _0x263fb4['prototype']['getSkinFolder'] = function(_0x34b545) {
            return 'desert/flytrap';
        }, _0x263fb4['prototype']['beforeCustomDraw'] = function(_0x42744c) {
            if (!this['dead']) {
                var _0x36b619 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/stem.png');
                if (_0x36b619) {
                    var _0x53d9de = this['rad'];
                    _0x4597c4['save'](), _0x4597c4['translate'](this['anchor_x'], this['anchor_y']), _0x4597c4['rotate'](this['angle'] - _0x4c4686(_0x41f713));
                    var _0x2ecae8 = _0x1d0d57({
                        'x': this['x'],
                        'y': this['y']
                    }, {
                        'x': this['anchor_x'],
                        'y': this['anchor_y']
                    });
                    _0x4597c4['drawImage'](_0x36b619, -_0x53d9de * _0x29ebac, -_0x53d9de, 0x2 * _0x53d9de * _0x4018a9, 0x2 * _0x53d9de + _0x2ecae8), _0x4597c4['restore']();
                }
            }
        }, _0x263fb4['prototype']['customDraw'] = function(_0x44a612) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            var _0x4aeec3 = 'bottom' + (this['isKillable'] ? '_e' : ''),
                _0x5a8e05 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x4aeec3 + '.png');
            if (_0x5a8e05) {
                var _0x38fa5d = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] - _0x4c4686(this['botA'])), _0x4597c4['drawImage'](_0x5a8e05, -_0x38fa5d * _0xb05ec1, -_0x38fa5d * _0xb05ec1, 0x2 * _0x38fa5d, 0x2 * _0x38fa5d), _0x4597c4['restore']();
            }
            if (!this['grabbedAni']) {
                var _0x11c3ae = this['isMouthClosed'] ? 'closed' : 'top',
                    _0x5a8e05 = this['getSkinImageObj']('img/' + this['getSkinFolder']() + '/mouth/' + _0x11c3ae + '.png');
                if (_0x5a8e05) {
                    var _0x38fa5d = this['rad'];
                    {
                        _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] - _0x4c4686(this['topA'])), _0x4597c4['drawImage'](_0x5a8e05, -_0x38fa5d * _0x356873, -_0x38fa5d * _0x356873, 0x2 * _0x38fa5d, 0x2 * _0x38fa5d), _0x4597c4['restore']();
                    }
                }
            }
            _0x4597c4['restore']();
        }, _0x263fb4['prototype']['isAttacking'] = ![], _0x263fb4['prototype']['isMouthClosed'] = ![], _0x263fb4['prototype']['grabbedAni'] = ![], _0x263fb4['prototype']['readCustomData_onNewlyVisible'] = function(_0x3410d8) {
            _0x263fb4['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3410d8);
            var _0x509e38 = _0x3410d8['readBitGroup']();
            this['isAttacking'] = _0x509e38['getBool'](), this['isMouthClosed'] = _0x509e38['getBool'](), this['grabbedAni'] = _0x509e38['getBool'](), this['anchor_x'] = _0x3410d8['readUInt16']() / 0x4, this['anchor_y'] = _0x3410d8['readUInt16']() / 0x4;
        }, _0x263fb4['prototype']['readUpdatedProperty'] = function(_0x17a3b2, _0x5dfe3e) {
            _0x17a3b2 == _0x403e1d && (this['isAttacking'] = _0x5dfe3e['readUInt8']() == 0x1), _0x17a3b2 == _0x19a275 && (this['isMouthClosed'] = _0x5dfe3e['readUInt8']() == 0x1), _0x17a3b2 == _0xa42268 && (this['grabbedAni'] = _0x5dfe3e['readUInt8']() == 0x1);
        };

        function _0x263fb4() {
            _0x263fb4['superClass']['call'](this, _0x577399), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x263fb4, _0x577399);
        var _0x4d8447 = _0x5d11ac;
        _0x21b25a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x21b25a['prototype']['constructor'] = _0x21b25a, _0x21b25a['superClass'] = _0x4d8447, _0x21b25a['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x21b25a['prototype']['customDraw'] = function(_0x3fedc4) {
            var _0x54cbc6 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x52faa0 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x54cbc6 + '.png');
            if (_0x52faa0) {
                _0x4597c4['save']();
                var _0x1919b6 = this['rad'] * 1.2;
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x52faa0, -_0x1919b6, -_0x1919b6, _0x1919b6 * 0x2, _0x1919b6 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x21b25a() {
            _0x21b25a['superClass']['call'](this, _0x25ff82), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x21b25a, _0x25ff82);
        var _0x4d8447 = _0x5d11ac;
        _0xf1f676['prototype'] = Object['create'](_0x4d8447['prototype']), _0xf1f676['prototype']['constructor'] = _0xf1f676, _0xf1f676['superClass'] = _0x4d8447, _0xf1f676['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0xf1f676['prototype']['customDraw'] = function(_0x511772) {
            var _0x2c6de0 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x2e4601 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x2c6de0 + '.png');
            if (_0x2e4601) {
                _0x4597c4['save']();
                var _0x4ca734 = this['rad'] * 1.15;
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x2e4601, -_0x4ca734, -_0x4ca734, _0x4ca734 * 0x2, _0x4ca734 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0xf1f676() {
            _0xf1f676['superClass']['call'](this, _0x10798a), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xf1f676, _0x10798a);
        var _0x4d8447 = _0x5d11ac;
        _0x364de0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x364de0['prototype']['constructor'] = _0x364de0, _0x364de0['superClass'] = _0x4d8447, _0x364de0['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x364de0['prototype']['customDraw'] = function(_0x224e9e) {
            var _0x59787c = this['isEdibleOutlined']() ? 'e' : '0',
                _0x369c9b = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x59787c + '.png');
            if (_0x369c9b) {
                _0x4597c4['save']();
                var _0x10ac4a = this['rad'] * 1.15;
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x369c9b, -_0x10ac4a, -_0x10ac4a, _0x10ac4a * 0x2, _0x10ac4a * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x364de0() {
            _0x364de0['superClass']['call'](this, _0x3f6af9), this['doesDrawEffectScale'] = this['drawEffectScale_Slow'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x364de0, _0x3f6af9);
        var _0x4d8447 = _0x5d11ac;
        _0x37f964['prototype'] = Object['create'](_0x4d8447['prototype']), _0x37f964['prototype']['constructor'] = _0x37f964, _0x37f964['superClass'] = _0x4d8447, _0x37f964['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x37f964['prototype']['customDraw'] = function(_0x16b7cc) {
            var _0xc43b57 = this['isEdibleOutlined']() ? 'cactuspear_e' : 'cactuspear';
            _0xc43b57 = 'gameobj/' + this['oType'] + '/' + _0xc43b57 + '.png';
            var _0x2b35ca = this['getSkinImageObj'](_0xc43b57);
            if (_0x2b35ca) {
                _0x4597c4['save']();
                var _0x2b43b7 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x2b35ca, -_0x2b43b7, -_0x2b43b7, _0x2b43b7 * 0x2, _0x2b43b7 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x37f964() {
            _0x37f964['superClass']['call'](this, _0x3f803f), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x37f964, _0x3f803f);
        var _0x4d8447 = _0x5d11ac;
        _0x406b86['prototype'] = Object['create'](_0x4d8447['prototype']), _0x406b86['prototype']['constructor'] = _0x406b86, _0x406b86['superClass'] = _0x4d8447, _0x406b86['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x406b86['prototype']['customDraw'] = function(_0x4561ad) {
            var _0x3aa3a8 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x355cb5 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x3aa3a8 + '.png');
            if (_0x355cb5) {
                _0x4597c4['save']();
                var _0x57ccf3 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x355cb5, -_0x57ccf3, -_0x57ccf3, _0x57ccf3 * 0x2, _0x57ccf3 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x406b86() {
            _0x406b86['superClass']['call'](this, _0x44243d), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x406b86, _0x44243d);
        var _0x4d8447 = _0x5d11ac;
        _0x584efa['prototype'] = Object['create'](_0x4d8447['prototype']), _0x584efa['prototype']['constructor'] = _0x584efa, _0x584efa['superClass'] = _0x4d8447, _0x584efa['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x584efa['prototype']['customDraw'] = function(_0x12a168) {
            var _0x21f25a = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x1167b6 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['specType'] + '/' + _0x21f25a + '.png');
            if (_0x1167b6) {
                _0x4597c4['save']();
                var _0x1d69d7 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x1167b6, -_0x1d69d7, -_0x1d69d7, _0x1d69d7 * 0x2, _0x1d69d7 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x584efa() {
            _0x584efa['superClass']['call'](this, _0x188f09), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x584efa, _0x188f09);
        var _0x4d8447 = _0x5d11ac;
        _0x39a5a7['prototype'] = Object['create'](_0x4d8447['prototype']), _0x39a5a7['prototype']['constructor'] = _0x39a5a7, _0x39a5a7['superClass'] = _0x4d8447, _0x39a5a7['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x39a5a7['prototype']['customDraw'] = function(_0xb131f4) {
            var _0x3679a6 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x412ffd = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x3679a6 + '.png');
            if (_0x412ffd) {
                _0x4597c4['save']();
                var _0x560e9a = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x412ffd, -_0x560e9a, -_0x560e9a, _0x560e9a * 0x2, _0x560e9a * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x39a5a7() {
            _0x39a5a7['superClass']['call'](this, _0x7db0f7), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x39a5a7, _0x7db0f7);
        var _0x4d8447 = _0x5d11ac;
        _0x1bc135['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1bc135['prototype']['constructor'] = _0x1bc135, _0x1bc135['superClass'] = _0x4d8447, _0x1bc135['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x1bc135['prototype']['customDraw'] = function(_0x2c7b85) {
            var _0x2ebbe6 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x18315e = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x2ebbe6 + '.png');
            if (_0x18315e) {
                _0x4597c4['save']();
                var _0xeabab8 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x18315e, -_0xeabab8, -_0xeabab8, _0xeabab8 * 0x2, _0xeabab8 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x1bc135() {
            _0x1bc135['superClass']['call'](this, _0x3c1704), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1bc135, _0x3c1704);
        var _0x4d8447 = _0x5d11ac;
        _0x57e824['prototype'] = Object['create'](_0x4d8447['prototype']), _0x57e824['prototype']['constructor'] = _0x57e824, _0x57e824['superClass'] = _0x4d8447, _0x57e824['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x57e824['prototype']['customDraw'] = function(_0x51e94b) {
            var _0x4a3f35 = this['isEdibleOutlined']() ? 'e' : this['oType'],
                _0x4b99b2 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x4a3f35 + '.png');
            if (_0x4b99b2) {
                _0x4597c4['save']();
                var _0x227db0 = this['rad'];
                _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x4b99b2, -_0x227db0, -_0x227db0, _0x227db0 * 0x2, _0x227db0 * 0x2), _0x4597c4['restore']();
            }
        }, _0x57e824['prototype']['updateZ'] = function() {
            this['z'] = 0x3e8 + this['rad'];
        };

        function _0x57e824() {
            _0x57e824['superClass']['call'](this, _0x1d1ace), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x57e824, _0x1d1ace);
        var _0x4d8447 = _0x5d11ac;
        _0x1da1ef['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1da1ef['prototype']['constructor'] = _0x1da1ef, _0x1da1ef['superClass'] = _0x4d8447, _0x1da1ef['prototype']['updateZ'] = function() {
            this['z'] = -0x9e;
        }, _0x1da1ef['prototype']['customDraw'] = function(_0x1f28f1) {
            _0x4597c4['save']();
            if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
            var _0x4a2536 = 0x0,
                _0x4ab67f = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x2ec84c = 0x6,
                _0x2a0427 = 1.5;
            _0x4a2536 = _0x2a0427 * Math['sin'](0x2 * Math['PI'] / _0x2ec84c * _0x4ab67f);
            var _0x10b444 = 0x4;
            _0x1f28f1 ? (_0x4597c4['fillStyle'] = '#b0a13b', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill']()) : (_0x4597c4['fillStyle'] = '#bdae47', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x10b444 + _0x4a2536), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4a2536), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x4a2536), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x4a2536), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x4a2536), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), this['rad'] > 0x32 && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()))), _0x4597c4['restore']();
        };

        function _0x1da1ef() {
            _0x1da1ef['superClass']['call'](this, _0x20c79b), this['animateRadOnSpawn'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1da1ef, _0x20c79b);
        var _0x4d8447 = _0x5d11ac;
        _0x162678['prototype'] = Object['create'](_0x4d8447['prototype']), _0x162678['prototype']['constructor'] = _0x162678, _0x162678['superClass'] = _0x4d8447, _0x162678['prototype']['updateZ'] = function() {
            this['z'] = -0x9e;
        }, _0x162678['prototype']['customDraw'] = function(_0x54b800) {
            var _0x55329d = 0x4;
            _0x4597c4['save']();
            if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
            var _0x657242 = 0x0,
                _0x2782ad = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x29ddd8 = 0x6,
                _0x36e833 = 1.5;
            _0x657242 = _0x36e833 * Math['sin'](0x2 * Math['PI'] / _0x29ddd8 * _0x2782ad);
            if (this['isOasisWater'] && _0x54b800) _0x4597c4['fillStyle'] = '#AE9F43', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
            else {
                var _0x102c23 = '#3881C4',
                    _0x55329d = 0x4;
                _0x4597c4['fillStyle'] = this['isOasisWater'] ? _0x102c23 : '#AE9F43', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = this['isOasisWater'] ? _0x102c23 : '#bdae47', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x55329d + _0x657242), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x657242), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x657242), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x657242), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x657242), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), this['rad'] > 0x32 && (_0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()));
            }
            _0x4597c4['restore']();
        }, _0x162678['prototype']['afterCustomDraw'] = function() {};

        function _0x162678() {
            _0x162678['superClass']['call'](this, _0x4018aa), this['animateRadOnSpawn'] = ![];
        }
        _0x162678['prototype']['readCustomData_onNewlyVisible'] = function(_0x3fbee0) {
            _0x162678['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3fbee0), this['isOasisWater'] = _0x3fbee0['readUInt8']() == 0x1;
            if (this['isOasisWater']) {
                var _0x186870 = _0x3fbee0['readUInt16']() / 0xa;
                this['setNewRad'](_0x186870);
            }
        }, _0x162678['prototype']['readUpdatedProperty'] = function(_0x4488e8, _0x30871a) {
            if (_0x4488e8 == _0x3d763f) {
                var _0xc760c4 = _0x30871a['readUInt16']() / 0xa;
                this['setNewRad'](_0xc760c4);
            }
        }, _0x162678['prototype']['circles'] = new Array(), _0x162678['prototype']['isOasisWater'] = ![], _0x5ddf8d['setCustomClassForGameObjType'](_0x162678, _0x4018aa);
        var _0x4d8447 = _0x5502af;
        _0x8285d2['prototype'] = Object['create'](_0x4d8447['prototype']), _0x8285d2['prototype']['constructor'] = _0x8285d2, _0x8285d2['superClass'] = _0x4d8447, _0x8285d2['prototype']['getSkinName'] = function() {
            let _0x22550a = this['getSpeciesPath']() + '/lion';
            return _0x22550a += this['specType'] == 0x0 ? '' : this['specType'], _0x22550a;
        }, _0x8285d2['prototype']['getSpeciesPath'] = function() {
            return 'land/lion/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x8285d2['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            var _0x303d29 = '';
            if (this['animalSpecies'] == 0x1 || this['animalSpecies'] == 0x2 || this['animalSpecies'] == 0xc8) _0x303d29 = '/' + this['animalSubSpecies'];
            return _0x303d29;
        }, _0x8285d2['prototype']['getAbilityInfo'] = function(_0x35b432) {
            var _0x1cbbdb = {};
            _0x1cbbdb['abilName'] = 'Loud ' + (this['animalSpecies'] == 0x2 ? 'Meow' : 'Noise');
            if (this['animalSpecies'] == 0x1 || this['animalSpecies'] == 0x2 && this['animalSubSpecies'] == 0x2) _0x1cbbdb['abilName'] += '\x0a& Camouflage';
            var _0x5eaf72 = this['getSubSpecies']();
            return _0x1cbbdb['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/lion_roar.png', _0x1cbbdb['skinThemeID'] = this['skinThemeID'], _0x1cbbdb['mopeSeasonID'] = this['mopeSeasonID'], _0x1cbbdb;
        }, _0x8285d2['prototype']['animalInfo'] = function() {
            var _0x1968f8 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1968f8['aniName'] = 'Lion';
                    break;
                case 0x1:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x1968f8['aniName'] = 'Lioness';
                            break;
                        case 0x1:
                            _0x1968f8['aniName'] = 'White Lioness';
                            break;
                        case 0x2:
                            _0x1968f8['aniName'] = 'Black Lioness';
                            break;
                    }
                    break;
                case 0x2:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x1968f8['aniName'] = 'Lion Cub';
                            break;
                        case 0x1:
                            _0x1968f8['aniName'] = 'White Lion Cub';
                            break;
                        case 0x2:
                            _0x1968f8['aniName'] = 'Black Lion Cub';
                            break;
                    }
                    break;
                case 0x3:
                    _0x1968f8['aniName'] = 'Black-Maned\x0aLion';
                    break;
                case 0x4:
                    _0x1968f8['aniName'] = 'White Lion';
                    break;
                case 0x5:
                    _0x1968f8['aniName'] = 'Black Lion';
                    break;
                case 0x64:
                    _0x1968f8['aniName'] = 'The Mantalian';
                    break;
                case 0xc8:
                    if (this['animalSubSpecies'] == 0x0) _0x1968f8['aniName'] = 'Clowoud Lion';
                    else {
                        if (this['animalSubSpecies'] == 0x1) _0x1968f8['aniName'] = 'Sunset Clowoud Lion';
                        else {
                            if (this['animalSubSpecies'] == 0x2) _0x1968f8['aniName'] = 'Storm Clowoud Lion';
                        }
                    }
                    break;
                case 0x6f:
                    _0x1968f8['aniName'] = 'Classic Lion';
                    break;
                case 0x70:
                    _0x1968f8['aniName'] = 'Gold-trim Lion';
                    break;
                case 0xca:
                    _0x1968f8['aniName'] = 'Chimera Lion';
                    break;
                case 0xdc:
                    _0x1968f8['aniName'] = 'Ghastly Jade Lion';
                    break;
            }
            _0x1968f8['aniDesc'] = '';
            if (this['animalSpecies'] == 0x1) _0x1968f8['upgradeText'] = 'UPGRADED to ' + _0x1968f8['aniName'] + '!\x0a Lioness are fast and can launch an ambush attack. (Stop moving to camouflage!)';
            else {
                if (this['animalSpecies'] == 0x2) _0x1968f8['upgradeText'] = 'UPGRADED to ' + _0x1968f8['aniName'] + '!\x0a Press W to release a mighty MEOW!', this['animalSubSpecies'] == 0x2 && (_0x1968f8['upgradeText'] += ' (Stop moving to camouflage!)');
                else _0x1968f8['upgradeText'] = 'UPGRADED to ' + _0x1968f8['aniName'] + '!\x0a Press W to release a mighty ROAR (Rawr!)';
            }
            return _0x1968f8['aniCol'] = '#FF9000', _0x1968f8['skinName'] = this['getSkinName'](), _0x1968f8;
        }, _0x8285d2['prototype']['setStealth'] = function() {
            _0x8285d2['superClass']['prototype']['setStealth']['call'](this);
            if (this['flag_stealth']) {
                if (this['animalSpecies'] == 0x1) this['idealOp'] = _0x59b0bc == this['id'] ? 0.1 : 0x0;
            }
        }, _0x8285d2['prototype']['biteStart'] = 0x0, _0x8285d2['prototype']['flapAmount'] = 0x3, _0x8285d2['prototype']['flapDur'] = 1.5, _0x8285d2['prototype']['roarStartT'] = -0x1f4;
        var _0x38db3c = 0x1,
            _0x4d27c9 = 0x1;
        _0x8285d2['prototype']['drawSkinCustomization'] = function() {
            this['setSkinScale']();
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319 + this['roarStartT']);
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x21d69c = 'skins/' + this['getSpeciesPath']() + '/lion_head1.png',
                        _0x319e09 = this['getSkinImageObj'](_0x21d69c),
                        _0x25e1ea = (_0x476319 - this['biteStart']) / 0x3e8,
                        _0x36f916 = this['skinScale'] * 1.07,
                        _0x17c032 = this['skinRad'];
                    if (_0x319e09) {
                        var _0x2b327d = 0x0,
                            _0x4115cd = this['flapAmount'] - (this['animalSpecies'] == 0x2 ? 0.5 : 0x0);
                        _0x2b327d = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x25e1ea, this['flapDur'], _0x4115cd, 0x2) : this['flapAmount'], _0x4597c4['save']();
                        var _0x17c032 = this['rad'];
                        _0x4597c4['drawImage'](_0x319e09, -_0x17c032 * _0x36f916, (-_0x17c032 + _0x17c032 * 0.1) * _0x36f916 - _0x2b327d, 0x2 * _0x17c032 * _0x36f916, 0x2 * _0x17c032 * _0x36f916), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x8285d2['prototype']['drawNickName'] = function(_0x12b753) {
            if (this['flag_stealth']) _0x12b753 = 0x0;
            _0x8285d2['superClass']['prototype']['drawNickName']['call'](this, _0x12b753);
        };

        function _0x8285d2() {
            _0x8285d2['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x8285d2, _0x269668, _0x178278);
        var _0x4d8447 = _0x5502af;
        _0x288151['prototype'] = Object['create'](_0x4d8447['prototype']), _0x288151['prototype']['constructor'] = _0x288151, _0x288151['superClass'] = _0x4d8447, _0x288151['prototype']['animalInfo'] = function() {
            var _0x4ac879 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4ac879['aniName'] = 'Rhino';
                    break;
                case 0x1:
                    _0x4ac879['aniName'] = 'White Rhino';
                    break;
                case 0x2:
                    _0x4ac879['aniName'] = 'Black Rhino';
                    break;
                case 0x3:
                    _0x4ac879['aniName'] = 'Woolly Rhino';
                    break;
                case 0x6f:
                    _0x4ac879['aniName'] = 'Classic Rhino';
                    break;
                case 0x70:
                    _0x4ac879['aniName'] = 'Gold-trim Rhino';
                    break;
                case 0xc9:
                    _0x4ac879['aniName'] = 'Shrub Rhino';
                    break;
                case 0xca:
                    _0x4ac879['aniName'] = 'Cotton Candy Rhino';
                    break;
                case 0xcc:
                    _0x4ac879['aniName'] = 'Acuti Rhino';
                    break;
                case 0xdc:
                    _0x4ac879['aniName'] = 'Ink Rhino';
                    break;
            }
            return _0x4ac879['skinName'] = this['getSkinName'](), _0x4ac879['aniDesc'] = '', _0x4ac879['upgradeText'] = 'UPGRADED to ' + _0x4ac879['aniName'] + '!\x0a Press W to CHARGE with your mighty horn!', _0x4ac879['aniCol'] = '#94a3a9', _0x4ac879;
        }, _0x288151['prototype']['getAbilityInfo'] = function(_0x4775e7) {
            var _0x29d8c2 = {};
            return _0x29d8c2['abilName'] = 'Charge!', _0x29d8c2['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/rhino_charge.png', _0x29d8c2['skinThemeID'] = this['skinThemeID'], _0x29d8c2['mopeSeasonID'] = this['mopeSeasonID'], _0x29d8c2;
        }, _0x288151['prototype']['getSkinName'] = function() {
            let _0x37b467 = this['getSpeciesPath']() + '/rhino';
            return _0x37b467 += this['specType'] == 0x0 ? '' : 0x1, _0x37b467;
        }, _0x288151['prototype']['getSpeciesPath'] = function() {
            return 'land/rhino/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x288151['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };
        var _0x52f8f6 = 0.1;
        _0x288151['prototype']['drawOnTopOfSkinImg'] = function() {
            if (_0x1b2a4b) _0x288151['superClass']['prototype']['drawOnTopOfSkinImg']['call'](this);
        }, _0x288151['prototype']['drawSkinCustomization'] = function() {
            if (_0x1b2a4b) _0x288151['superClass']['prototype']['drawSkinCustomization']['call'](this);
            else {
                if (this['flag_usingAbility']) {
                    var _0x5f0f36 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rhino_head1.png'),
                        _0xe1c494 = this['skinScale'] * 0.98,
                        _0x9d3f10 = this['skinRad'];
                    if (_0x5f0f36) {
                        frame = 0x0, _0x4597c4['save']();
                        var _0x9d3f10 = this['rad'];
                        _0x4597c4['drawImage'](_0x5f0f36, -_0x9d3f10 * _0xe1c494, (-_0x9d3f10 + _0x9d3f10 * _0x52f8f6) * _0xe1c494 + frame, 0x2 * _0x9d3f10 * _0xe1c494, 0x2 * _0x9d3f10 * _0xe1c494), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x288151() {
            _0x288151['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x288151, _0x269668, _0x3f35f1);
        var _0x4d8447 = _0x5502af;
        _0x374f9a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x374f9a['prototype']['constructor'] = _0x374f9a, _0x374f9a['superClass'] = _0x4d8447, _0x374f9a['prototype']['animalInfo'] = function() {
            var _0x2cb20d = {};
            _0x2cb20d['skinName'] = 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']() + '/pig', _0x2cb20d['aniName'] = 'Pig';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2cb20d['aniName'] = 'Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0x1:
                    _0x2cb20d['aniName'] = 'Pinky Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0x6f:
                    _0x2cb20d['aniName'] = 'Classic Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0x70:
                    _0x2cb20d['aniName'] = 'Gold-trim Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                    break;
                case 0xc9:
                    _0x2cb20d['aniName'] = 'Floaty Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0xcc:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x2cb20d['aniName'] = 'Butcher Pig';
                            break;
                        case 0x1:
                            _0x2cb20d['aniName'] = 'Hot Dog Pig';
                    }
                    _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0x2: {
                    _0x2cb20d['aniName'] = 'Stinky Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a ' + _0x2cb20d['aniName'] + ' dives through MUD (can use stink everywhere!)';
                }
                break;
                case 0xca:
                    _0x2cb20d['aniName'] = 'Piggy Bank', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
                case 0xdc:
                    _0x2cb20d['aniName'] = 'Fumigator Pig', _0x2cb20d['upgradeText'] = 'UPGRADED to ' + _0x2cb20d['aniName'] + '!\x0a  Pigs move FAST through MUD! (Can use \'stink\' on mud/ hiding holes!)';
                    break;
            }
            return _0x2cb20d['aniCol'] = '#DD6BD4', _0x2cb20d;
        }, _0x374f9a['prototype']['getAbilityInfo'] = function(_0x3baa0d) {
            var _0xd3c5f3 = {};
            return _0xd3c5f3['abilName'] = 'Stink cloud', _0xd3c5f3['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/pig.png', _0xd3c5f3['skinThemeID'] = this['skinThemeID'], _0xd3c5f3['mopeSeasonID'] = this['mopeSeasonID'], _0xd3c5f3;
        }, _0x374f9a['prototype']['getSkinName'] = function() {
            let _0x47f4e3 = this['getSpeciesPath']() + '/pig';
            return _0x47f4e3;
        }, _0x374f9a['prototype']['getSpeciesPath'] = function() {
            return 'land/pig/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x374f9a['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
        }, _0x374f9a['prototype']['animalDiveColor'] = function() {
            if (this['flag_underWater']) {
                if (this['flag_eff_isInMud']) return '#7E6A35';
                else return '#4E71C3';
            }
            return '';
        }, _0x374f9a['prototype']['animalDivesInMud'] = function() {
            return !![];
        };

        function _0x374f9a() {
            _0x374f9a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x374f9a, _0x269668, _0xceb64c);
        var _0x4d8447 = _0x5502af;
        _0x5d8276['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5d8276['prototype']['constructor'] = _0x5d8276, _0x5d8276['superClass'] = _0x4d8447, _0x5d8276['prototype']['animalInfo'] = function() {
            var _0xc58e4d = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0xc58e4d['aniName'] = 'Deer';
                    break;
                case 0x1:
                    _0xc58e4d['aniName'] = 'Doe';
                    break;
                case 0x2:
                    _0xc58e4d['aniName'] = 'Marsh Deer';
                    break;
                case 0x64:
                    _0xc58e4d['aniName'] = 'The Wendigo';
                    break;
                case 0x6f:
                    _0xc58e4d['aniName'] = 'Classic Deer';
                    break;
                case 0x70:
                    _0xc58e4d['aniName'] = 'Gold-trim Deer';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0xc58e4d['aniName'] = 'Mezavor';
                            break;
                        case 0x1:
                            _0xc58e4d['aniName'] = 'Divine Deer';
                    }
                    break;
            }
            return _0xc58e4d['aniDesc'] = '', _0xc58e4d['upgradeText'] = 'UPGRADED to ' + _0xc58e4d['aniName'] + '! \x0aPress W to dig up food! \x0aDig in mud for better food!', _0xc58e4d['aniCol'] = '#C4773E', _0xc58e4d['skinName'] = this['getSkinName'](), _0xc58e4d;
        }, _0x5d8276['prototype']['getSkinName'] = function() {
            let _0x3b9d47 = this['getSpeciesPath']() + '/deer';
            return _0x3b9d47;
        }, _0x5d8276['prototype']['getSpeciesPath'] = function() {
            return 'land/deer/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x5d8276['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x5d8276['prototype']['getAbilityInfo'] = function(_0x4aa3a5) {
            var _0x5817b2 = {};
            return _0x5817b2['abilName'] = 'Dig Food!', _0x5817b2['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/deer.png', _0x5817b2['skinThemeID'] = this['skinThemeID'], _0x5817b2['mopeSeasonID'] = this['mopeSeasonID'], _0x5817b2;
        }, _0x5d8276['prototype']['moveF'] = 0.08, _0x5d8276['prototype']['jumpAnim'] = null, _0x5d8276['prototype']['frame'] = 0x0, _0x5d8276['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility']) {
                if (this['animalType'] == _0x474e8d || this['animalType'] == _0x538056) {
                    var _0x16b6ea = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x53431f = 1.5,
                        _0x1c22e8 = 0x1,
                        _0x3c8f69 = _0x1c22e8 * Math['sin'](0x2 * Math['PI'] / _0x53431f * _0x16b6ea),
                        _0x5965e1 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] *= 0.8, _0x4096ce(0x0, this['rad'] * 0.3, this['rad'] * (0.9 + 0.12 * _0x3c8f69), '#7F582B'), _0x4096ce(0x0, -this['rad'] * 0.3, this['rad'] * (1.05 + 0.09 * _0x3c8f69), '#7F582B'), _0x4597c4['globalAlpha'] = _0x5965e1;
                }
            }
        };

        function _0x5d8276() {
            _0x5d8276['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5d8276, _0x269668, _0x474e8d);
        var _0x4d8447 = _0x5502af;
        _0x1ad4e1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1ad4e1['prototype']['constructor'] = _0x1ad4e1, _0x1ad4e1['superClass'] = _0x4d8447, _0x1ad4e1['prototype']['animalInfo'] = function() {
            var _0x2078ad = {};
            _0x2078ad['aniCol'] = '#755A2A';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2078ad['aniName'] = 'Donkey', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
                case 0x1:
                    _0x2078ad['aniName'] = 'Jackass', _0x2078ad['aniCol'] = '#000', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents.\x0a(Keep mouse close to your animal along with boosting to become a mad donkey!)';
                    break;
                case 0x2:
                    _0x2078ad['aniName'] = 'Zonkey', _0x2078ad['aniCol'] = '#755A2A', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
                case 0x64:
                    _0x2078ad['aniName'] = 'Equusthulhu', _0x2078ad['aniCol'] = '#755A2A', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
                case 0x6f:
                    _0x2078ad['aniName'] = 'Classic Donkey', _0x2078ad['aniCol'] = '#755A2A', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
                case 0x70:
                    _0x2078ad['aniName'] = 'Gold-trim Donkey', _0x2078ad['aniCol'] = '#755A2A', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
                case 0xca:
                    _0x2078ad['aniName'] = 'Headless Mule', _0x2078ad['upgradeText'] = 'UPGRADED to ' + _0x2078ad['aniName'] + '!\x0aPress \'W\' to give RARE kick and stun your opponents';
                    break;
            }
            return _0x2078ad['skinName'] = this['getSkinName'](), _0x2078ad['aniDesc'] = '', _0x2078ad;
        }, _0x1ad4e1['prototype']['getAbilityInfo'] = function(_0x3123c2) {
            var _0x46d680 = {};
            return _0x46d680['abilName'] = 'Back Kick!', _0x46d680['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/donkey.png', _0x46d680['skinThemeID'] = this['skinThemeID'], _0x46d680['mopeSeasonID'] = this['mopeSeasonID'], _0x46d680;
        }, _0x1ad4e1['prototype']['getSkinName'] = function() {
            let _0x3050a1 = this['getSpeciesPath']() + '/donkey';
            if (this['specType'] != 0x0) {
                if (this['specType'] > 0x2) _0x3050a1 += 0x3;
                else _0x3050a1 += this['specType'];
            }
            return _0x3050a1;
        }, _0x1ad4e1['prototype']['getSpeciesPath'] = function() {
            return 'land/donkey/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x1ad4e1['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x1ad4e1['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility'] && this['biteStart'] > 0x0) {
                _0x4597c4['save']();
                var _0x18e51a = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] = 0x1 * _0x18e51a;
                var _0x41cd0a = 'skins/' + this['getSpeciesPath']() + '/legs.png',
                    _0x2dbc60 = this['getSkinImageObj'](_0x41cd0a);
                if (_0x2dbc60) {
                    var _0x570374 = Math['min'](0x1, (_0x476319 - this['biteStart']) / 0x546),
                        _0x43e83c = this['rad'],
                        _0x1e1875 = 0x0,
                        _0x3caa76 = this['rad'] * 0x1,
                        _0x89107b = _0x43e83c * 0x2,
                        _0x3ea824 = _0x43e83c * 0x2 * _0x570374,
                        _0x5a25ea = 0.5,
                        _0x36c362 = 2.5;
                    _0x4597c4['drawImage'](_0x2dbc60, _0x1e1875 + _0x89107b * -_0x5a25ea, _0x3caa76 + _0x3ea824 * -_0x36c362, _0x89107b, _0x3ea824);
                }
                _0x4597c4['restore']();
            }
        }, _0x1ad4e1['prototype']['biteStart'] = 0x0, _0x1ad4e1['prototype']['flapAmount'] = 0.3, _0x1ad4e1['prototype']['flapDur'] = 0x1, _0x1ad4e1['prototype']['roarStartT'] = -0x1f4, _0x1ad4e1['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                if (this['specType'] == 0x0) return;
                var _0x40adf = this['specType'] - 0x2,
                    _0x3c292d = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + _0x40adf + '.png'),
                    _0x3b7896 = this['skinRad'];
                if (_0x3c292d) {
                    _0x4597c4['save']();
                    var _0x3b7896 = this['rad'] * 1.3,
                        _0x348d71 = 0x0,
                        _0x5d5795 = this['rad'],
                        _0x2b5e42 = 0x1,
                        _0x35a67a = _0x3b7896 * 0x2 * _0x2b5e42,
                        _0xa1c16e = _0x3b7896 * 0x2 * _0x2b5e42,
                        _0x4a4d3e = 0.5,
                        _0x16bfd2 = 0.7;
                    _0x4597c4['drawImage'](_0x3c292d, _0x348d71 + _0x35a67a * -_0x4a4d3e, _0x5d5795 + _0xa1c16e * -_0x16bfd2, _0x35a67a, _0xa1c16e), _0x4597c4['restore']();
                }
            } else {
                if (this['biteStart'] == 0x0) this['biteStart'] = _0x476319 + this['roarStartT'];
                var _0x3fcfda = (_0x476319 - this['biteStart']) / 0x3e8,
                    _0x232188 = 0x0;
                _0x232188 = _0x5b9e97(_0x3fcfda, this['flapDur'], this['flapAmount'], 0x2);
                var _0x3c292d = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/donkey_head' + this['specType'] + '.png'),
                    _0x3b7896 = this['skinRad'];
                if (_0x3c292d) {
                    _0x4597c4['save']();
                    var _0x2b5e42 = 0x0,
                        _0x433ce9 = 0x1,
                        _0x1b7bb8 = 0.85,
                        _0x5c3210 = 1.2;
                    if (this['specType'] == 0x1) _0x2b5e42 = -0x19, _0x433ce9 = 1.2 - _0x232188 * 0.3, _0x1b7bb8 = 0.8 + _0x232188 * 0.3, _0x5c3210 = 1.4 - _0x232188 * 0.3;
                    else this['specType'] == 0x2 && (_0x2b5e42 = 0x19, _0x433ce9 = 0.8 - _0x232188 * 0.3, _0x1b7bb8 = 0.8 + _0x232188 * 0.3, _0x5c3210 = 1.4 - _0x232188 * 0.3, _0x232188 *= -0x1);
                    var _0x3b7896 = this['rad'] * 0x1,
                        _0x348d71 = 0x0,
                        _0x5d5795 = this['rad'],
                        _0x35a67a = _0x3b7896 * 0x2 * _0x5c3210,
                        _0xa1c16e = _0x3b7896 * 0x2 * _0x5c3210,
                        _0x4a4d3e = 0.5 * _0x433ce9,
                        _0x16bfd2 = 0x1 * _0x1b7bb8;
                    _0x4597c4['rotate'](_0x4c4686(_0x2b5e42) + _0x232188), _0x4597c4['drawImage'](_0x3c292d, _0x348d71 + _0x35a67a * -_0x4a4d3e, _0x5d5795 + _0xa1c16e * -_0x16bfd2, _0x35a67a, _0xa1c16e), _0x4597c4['restore']();
                }
            }
        };

        function _0x1ad4e1() {
            _0x1ad4e1['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1ad4e1, _0x269668, _0x1bb5dc);
        var _0x4d8447 = _0x5502af;
        _0x260e9d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x260e9d['prototype']['constructor'] = _0x260e9d, _0x260e9d['superClass'] = _0x4d8447, _0x260e9d['prototype']['animalInfo'] = function() {
            var _0x1c3b1d = {};
            _0x1c3b1d['aniCol'] = '#755A2A';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1c3b1d['aniName'] = 'Zebra';
                    break;
                case 0x1:
                    _0x1c3b1d['aniName'] = 'Okapi';
                    break;
                case 0x2:
                    _0x1c3b1d['aniName'] = 'Okapi';
                    break;
                case 0x64:
                    _0x1c3b1d['aniName'] = 'Unicornze';
                    break;
                case 0x6f:
                    _0x1c3b1d['aniName'] = 'Classic Zebra';
                    break;
                case 0x70:
                    _0x1c3b1d['aniName'] = 'Gold-trim Zebra';
                    break;
                case 0xc9:
                    _0x1c3b1d['aniName'] = 'Playground Zebra';
                    break;
                case 0xca:
                    _0x1c3b1d['aniName'] = 'Synth Zebra';
                    break;
            }
            return _0x1c3b1d['aniCol'] = '#000', _0x1c3b1d['skinName'] = this['getSkinName'](), _0x1c3b1d['upgradeText'] = 'UPGRADED to ' + _0x1c3b1d['aniName'] + '!\x0a Press \'W\' to give RARE kick and stun your opponents', _0x1c3b1d['aniDesc'] = '', _0x1c3b1d;
        }, _0x260e9d['prototype']['getSkinImageObj'] = function(_0x230249) {
            var _0x2afdd0 = this['animalSpecies'] === 0xc9 || this['animalSpecies'] === 0x2 || this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x64 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x230249, _0x2afdd0);
        }, _0x260e9d['prototype']['getAbilityInfo'] = function(_0x56090b) {
            var _0x445575 = {};
            return _0x445575['abilName'] = 'Side Kick!', _0x445575['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0x445575['skinThemeID'] = this['skinThemeID'], _0x445575['mopeSeasonID'] = this['mopeSeasonID'], _0x445575;
        }, _0x260e9d['prototype']['getSkinName'] = function() {
            let _0x149cb6 = this['getSpeciesPath']() + '/zebra';
            return _0x149cb6;
        }, _0x260e9d['prototype']['getSpeciesPath'] = function() {
            return 'land/zebra/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x260e9d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x260e9d() {
            _0x260e9d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x260e9d, _0x269668, _0x5ae0eb);
        var _0x4d8447 = _0x5502af;
        _0x274269['prototype'] = Object['create'](_0x4d8447['prototype']), _0x274269['prototype']['constructor'] = _0x274269, _0x274269['superClass'] = _0x4d8447, _0x274269['prototype']['objSkinSpotsCanvas'] = null, _0x274269['prototype']['animalInfo'] = function() {
            var _0x33109e = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x33109e['aniName'] = 'Mouse';
                    break;
                case 0x1:
                    _0x33109e['aniName'] = 'Golden Mouse';
                    break;
                case 0x2:
                    _0x33109e['aniName'] = 'Purple Mouse';
                    break;
                case 0x64:
                    _0x33109e['aniName'] = 'Robo Mouse';
                    break;
                case 0x70:
                    _0x33109e['aniName'] = 'Gold-trim Mouse';
                    break;
                case 0xc9:
                    _0x33109e['aniName'] = 'Bubbly Mouse';
                    break;
                case 0x6f:
                    _0x33109e['aniName'] = 'Classic Mouse';
                    break;
                case 0xca:
                    _0x33109e['aniName'] = 'Super Mouse';
                    break;
                case 0xcc:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x33109e['aniName'] = 'Dark Plague Rat';
                            break;
                        case 0x1:
                            _0x33109e['aniName'] = 'Light Plague Rat';
                    }
                    break;
                case 0xfa:
                    _0x33109e['aniName'] = 'Sample Mouse';
                    break;
            }
            return _0x33109e['upgradeText'] = 'You\'re a tiny ' + _0x33109e['aniName'] + '- Eat food to grow!', _0x33109e['aniCol'] = 'gray', _0x33109e['skinName'] = 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse', _0x33109e;
        }, _0x274269['prototype']['getSkinName'] = function() {
            return 'land/mouse/' + this['animalSpecies'] + this['getSubSpecies']() + '/mouse';
        }, _0x274269['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xcc ? '/' + this['animalSubSpecies'] : '';
        };

        function _0x274269() {
            _0x274269['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x274269, _0x269668, _0x19eca4);
        var _0x4d8447 = _0x5502af;
        _0x2978fd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2978fd['prototype']['constructor'] = _0x2978fd, _0x2978fd['superClass'] = _0x4d8447, _0x2978fd['prototype']['objSkinSpotsCanvas'] = null, _0x2978fd['prototype']['getSkinName'] = function() {
            let _0x1a629f = this['getSpeciesPath']() + '/bear';
            return _0x1a629f;
        }, _0x2978fd['prototype']['getSpeciesPath'] = function() {
            return 'land/bear/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        }, _0x2978fd['prototype']['animalInfo'] = function() {
            var _0x1bbc07 = {},
                _0x54caa3 = '';
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x1bbc07['aniName'] = 'Bear', _0x1bbc07['upgradeText'] = 'UPGRADED to BEAR!\x0a Bears climb through green hills! (Press W to use your claw!)', _0x1bbc07['aniCol'] = '#99591C', _0x54caa3 = 'bear';
                            break;
                        case 0x6f:
                            _0x1bbc07['aniName'] = 'Classic Bear', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)';
                            break;
                        case 0x70:
                            _0x1bbc07['aniName'] = 'Gold-trim Bear', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)';
                            break;
                    }
                    break;
                case 0x1:
                    _0x1bbc07['aniName'] = 'Panda', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x1bbc07['aniCol'] = '#99591C', _0x54caa3 = 'bear';
                    break;
                case 0xca:
                    _0x1bbc07['aniName'] = 'Beekeeper Bear', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)';
                    break;
                case 0x7e7:
                    _0x1bbc07['aniName'] = 'Spooky Bear', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)';
                    break;
                case 0xcc:
                    _0x1bbc07['aniName'] = 'Mr. Teddy', _0x1bbc07['upgradeText'] = 'UPGRADED to ' + _0x1bbc07['aniName'] + '!\x0a ' + _0x1bbc07['aniName'] + ' climb through green hills! (Press W to use your claw!)', _0x1bbc07['aniCol'] = '#99591C', _0x54caa3 = 'mr_teddy';
                    break;
            }
            return _0x1bbc07['aniCol'] = '#CAC05B', _0x1bbc07['skinName'] = this['getSkinName'](), _0x1bbc07;
        }, _0x2978fd['prototype']['getAbilityInfo'] = function(_0x234235) {
            var _0x1b0aa7 = {};
            return _0x1b0aa7['abilName'] = 'Claw Slash!', _0x1b0aa7['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/slash.png', _0x1b0aa7['skinThemeID'] = this['skinThemeID'], _0x1b0aa7['mopeSeasonID'] = this['mopeSeasonID'], _0x1b0aa7;
        };

        function _0x2978fd() {
            _0x2978fd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2978fd, _0x269668, _0x59b412);
        var _0x4d8447 = _0x5502af;
        _0x550a89['prototype'] = Object['create'](_0x4d8447['prototype']), _0x550a89['prototype']['constructor'] = _0x550a89, _0x550a89['superClass'] = _0x4d8447, _0x550a89['prototype']['objSkinSpotsCanvas'] = null, _0x550a89['prototype']['animalInfo'] = function() {
            var _0xded26c = {};
            switch (this['animalSubSpecies']) {
                case 0x0:
                    _0xded26c['aniName'] = 'Crocodile', _0xded26c['aniCol'] = '#30F51C';
                    break;
                case 0x1:
                    _0xded26c['aniName'] = 'Giant Crocodile', _0xded26c['aniCol'] = '#757e71';
                    break;
                case 0x64:
                    _0xded26c['aniName'] = 'Uncle Sam', _0xded26c['aniCol'] = '#757e71';
                    break;
                case 0xc9:
                    _0xded26c['aniName'] = 'Big Hoss', _0xded26c['aniCol'] = '#757e71';
                    break;
                case 0xca:
                    _0xded26c['aniName'] = 'Croczilla';
                    break;
                case 0xcb:
                    _0xded26c['aniName'] = 'Ammit';
                    break;
                case 0x7e7:
                    _0xded26c['aniName'] = 'Sharkzilla';
                    break;
            }
            if (this['animalSpecies'] == 0x6f) _0xded26c['aniName'] = 'Classic Crocodile';
            if (this['animalSpecies'] == 0x70) _0xded26c['aniName'] = 'Gold-trim Crocodile';
            return _0xded26c['upgradeText'] = 'UPGRADED to ' + _0xded26c['aniName'] + '!\x0a Press W to bite and drag around animals! \x0a+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!', _0xded26c['skinName'] = this['getSkinName'](), _0xded26c;
        }, _0x550a89['prototype']['getSkinName'] = function() {
            let _0x24387b = this['getSpeciesPath']() + '/croc';
            return _0x24387b;
        }, _0x550a89['prototype']['getSpeciesPath'] = function() {
            return 'land/croc/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        }, _0x550a89['prototype']['setStealth'] = function() {
            _0x550a89['superClass']['prototype']['setStealth']['call'](this), this['isCamouflage'] && (this['idealOp'] = _0x59b0bc == this['id'] ? 0.1 : 0x0);
        }, _0x550a89['prototype']['isCamouflage'] = ![], _0x550a89['prototype']['drawUnderSkinTail'] = function(_0x42766b) {
            if (!this['isCamouflage']) _0x550a89['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x42766b);
        }, _0x550a89['prototype']['drawHealthBar'] = function() {
            if (!this['isCamouflage']) _0x550a89['superClass']['prototype']['drawHealthBar']['call'](this);
        }, _0x550a89['prototype']['customUpdatedProperty'] = function(_0x3f6bbb, _0x5a25a9) {
            _0x3f6bbb == _0x89b16 && (this['isCamouflage'] = _0x5a25a9['readUInt8']() == 0x1, this['setStealth']());
        }, _0x550a89['prototype']['readCustomData_onNewlyVisible'] = function(_0x3d9089) {
            _0x550a89['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3d9089), this['isCamouflage'] = _0x3d9089['readUInt8']() == 0x1, this['setStealth']();
        }, _0x550a89['prototype']['getAbilityInfo'] = function(_0x435b98) {
            var _0x109de6 = {};
            return _0x109de6['abilName'] = 'Bite Grab!', _0x109de6['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/croc.png', _0x109de6['skinThemeID'] = this['skinThemeID'], _0x109de6['mopeSeasonID'] = this['mopeSeasonID'], _0x109de6;
        };

        function _0x550a89() {
            _0x550a89['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x550a89, _0x269668, _0x590076);
        var _0x4d8447 = _0x5502af;
        _0x44afba['prototype'] = Object['create'](_0x4d8447['prototype']), _0x44afba['prototype']['constructor'] = _0x44afba, _0x44afba['superClass'] = _0x4d8447, _0x44afba['prototype']['updateZ'] = function() {
            this['z'] = 0x186a0;
        }, _0x44afba['prototype']['canUseTailslap'] = ![], _0x44afba['prototype']['tailState'] = 0x0, _0x44afba['prototype']['lava'] = 0x64, _0x44afba['prototype']['getSkinName'] = function() {
            var _0x5d85e8 = _0x9ffe4d || _0x3aa021 == _0x243dd0 ? 'kingdragon' : 'kingdragon_body';
            return 'volcano/kingdragon/' + this['animalSpecies'] + '/' + _0x5d85e8;
        }, _0x44afba['prototype']['customUpdatedProperty'] = function(_0xc621d4, _0x4c3690) {
            if (_0xc621d4 == _0x171ea3) this['canUseTailslap'] = _0x4c3690['readUInt8']() == 0x1;
            else _0xc621d4 == _0x3618d7 && (this['tailState'] = _0x4c3690['readUInt16']() / 0x64);
        }, _0x44afba['prototype']['leftWingAnim'] = null, _0x44afba['prototype']['flapAngleDiff'] = 0x3, _0x44afba['prototype']['flapAngle'] = 0x3, _0x44afba['prototype']['flapF'] = 0.1, _0x44afba['prototype']['flapDur'] = 0x2, _0x44afba['prototype']['sF'] = 0.02, _0x44afba['prototype']['drawWings'] = function() {
            if (_0x3aa021 == _0x243dd0 || _0x9ffe4d) return;
            this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0x504c7a(this, this['flapDur'], _0x504c7a['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function(_0x3c1981) {
                this['forObj']['frame1'] = _0x3c1981;
            });
            this['leftWingAnim'] != null && this['leftWingAnim']['run']();
            var _0x1fad49 = this['rad'] - this['outlineW'],
                _0xc59757 = this['frame1'] * this['sF'] * _0x1fad49,
                _0x3e9d34 = -(-this['flapF'] + this['frame1']),
                _0x3801a8 = _0x3e9d34 * _0x4c4686(this['flapAngle']),
                _0x3ef125 = 0x1f4 / 0x154,
                _0x4735a4 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing.png'),
                _0x195f64 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing.png');
            if (_0x4735a4 && _0x195f64) {
                _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(this['flapAngleDiff']) + _0x3801a8), _0x4597c4['drawImage'](_0x4735a4, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['rotate'](-(_0x4c4686(this['flapAngleDiff']) + _0x3801a8)), _0x4597c4['drawImage'](_0x195f64, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore']();
                if (this['animalSpecies'] == 0x4) {
                    let _0x2765c7 = _0x38f4be('kd', this['spawnTime']);
                    _0x2765c7 !== undefined && _0x2765c7 != null && (this['theFrame'] = _0x2765c7);
                    let _0xda6566 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = Math['max'](0x0, _0xda6566);
                    var _0x1a7303 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing_tips.png'),
                        _0x44d790 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing_tips.png');
                    _0x1a7303 && _0x44d790 && (_0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(this['flapAngleDiff']) + _0x3801a8), _0x4597c4['drawImage'](_0x1a7303, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['rotate'](-(_0x4c4686(this['flapAngleDiff']) + _0x3801a8)), _0x4597c4['drawImage'](_0x44d790, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore']()), _0x4597c4['restore']();
                }
            }
            var _0x211213 = this['lava'],
                _0x22071c = 0x32;
            if (_0x211213 < _0x22071c) {
                var _0x1a1652 = _0x211213 / _0x22071c,
                    _0x55f7cd = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/left_wing1.png'),
                    _0x17d549 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/right_wing2.png');
                _0x55f7cd && _0x17d549 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - _0x1a1652, _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(this['flapAngleDiff']) + _0x3801a8), _0x4597c4['drawImage'](_0x55f7cd, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['rotate'](-(_0x4c4686(this['flapAngleDiff']) + _0x3801a8)), _0x4597c4['drawImage'](_0x17d549, -_0x1fad49 * _0x3ef125, -_0x1fad49 * _0x3ef125 + _0xc59757, 0x2 * _0x1fad49 * _0x3ef125, 0x2 * _0x1fad49 * _0x3ef125 + _0xc59757 * 1.5), _0x4597c4['restore'](), _0x4597c4['restore']());
            }
        }, _0x44afba['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_underWater']) return;
            if (_0x3aa021 == _0x243dd0 || _0x9ffe4d) return;
            var _0x58ec3a = 0x1f4 / 0x154;
            let _0x5a45f8 = _0x38f4be('kd', this['spawnTime']);
            _0x5a45f8 !== undefined && _0x5a45f8 != null && (this['theFrame'] = _0x5a45f8);
            let _0x117e3d = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'];
            var _0x11ff06 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/nostrils.png');
            if (_0x11ff06) {
                _0x4597c4['save']();
                var _0x19c77f = this['lava'],
                    _0x24e962 = 0x64,
                    _0x2ce10a = _0x19c77f / _0x24e962;
                _0x4597c4['globalAlpha'] = Math['max'](0x0, _0x117e3d) * _0x2ce10a;
                var _0x28174f = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x11ff06, -_0x28174f * _0x58ec3a, -_0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a), _0x4597c4['restore']();
            }
            if (!this['canUseTailslap']) {
                var _0x1847c1 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone1.png');
                if (_0x1847c1) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                    var _0x28174f = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x1847c1, -_0x28174f * _0x58ec3a, -_0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a), _0x4597c4['restore']();
                }
                var _0x313a43 = 0x0;
                if (this['tailState'] < 0xb && this['tailState'] > 0x5) {
                    var _0x953c3e = this['tailState'] - 0x5;
                    _0x313a43 = _0x953c3e / 0x6;
                } else this['tailState'] <= 0x3 && (_0x313a43 = this['tailState'] / 0x3);
                var _0x5bfc35 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone3.png');
                if (this['tailState'] < 0xb) {
                    if (_0x5bfc35) {
                        _0x4597c4['save']();
                        if (this['tailState'] > 0x5) _0x4597c4['globalAlpha'] = 0x1 - _0x313a43;
                        else _0x4597c4['globalAlpha'] = 0x1;
                        var _0x28174f = this['rad'] - this['outlineW'];
                        _0x4597c4['drawImage'](_0x5bfc35, -_0x28174f * _0x58ec3a, -_0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a), _0x4597c4['restore']();
                    }
                }
                var _0x26dbc1 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
                if (this['tailState'] < 0x3) {
                    if (_0x26dbc1) {
                        _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - _0x313a43;
                        var _0x28174f = this['rad'] - this['outlineW'];
                        _0x4597c4['drawImage'](_0x26dbc1, -_0x28174f * _0x58ec3a, -_0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a), _0x4597c4['restore']();
                    }
                }
            } else {
                var _0x26dbc1 = this['getSkinImageObj']('skins/volcano/kingdragon/' + this['animalSpecies'] + '/bone2.png');
                if (_0x26dbc1) {
                    _0x4597c4['save']();
                    var _0x3b1961 = Math['max'](0.3, _0x117e3d);
                    _0x4597c4['globalAlpha'] = _0x3b1961;
                    var _0x28174f = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x26dbc1, -_0x28174f * _0x58ec3a, -_0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a, 0x2 * _0x28174f * _0x58ec3a), _0x4597c4['restore']();
                }
            }
            this['drawWings']();
        }, _0x44afba['prototype']['drawLowWaterDrop'] = function() {
            if (this['flag_underWater']) return;
            if (this['flag_lowWat']) {
                var _0x5aac3d = 1.2,
                    _0x4b30e6 = 0.2,
                    _0x5b6188 = 0.8,
                    _0x133972 = 0.5 * (_0x5b6188 - _0x4b30e6),
                    _0x36d84d = _0x4b30e6 + _0x133972 + _0x133972 * Math['sin'](0x2 * Math['PI'] / _0x5aac3d * (_0x476319 / 0x3e8));
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x36d84d, _0x4597c4['fillStyle'] = _0x1c0746, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, this['rad'] + 0x5, 0x5, 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
        }, _0x44afba['prototype']['animalInfo'] = function() {
            var _0x5d1b96 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5d1b96['aniName'] = 'King Dragon';
                    break;
                case 0x1:
                    _0x5d1b96['aniName'] = 'Golden King Dragon';
                    break;
                case 0x2:
                    _0x5d1b96['aniName'] = 'King Ripper';
                    break;
                case 0x3:
                    _0x5d1b96['aniName'] = 'King Stan';
                    break;
                case 0x4:
                    _0x5d1b96['aniName'] = 'King Shah';
                    break;
                case 0x5:
                    _0x5d1b96['aniName'] = 'Queen Scarlet';
                    break;
                case 0x6:
                    _0x5d1b96['aniName'] = 'Queen Celeste';
                    break;
                case 0x8:
                    _0x5d1b96['aniName'] = 'King Mistik';
                    break;
                case 0xd:
                    _0x5d1b96['aniName'] = 'Birthday Mistik';
                    break;
                case 0x6f:
                    _0x5d1b96['aniName'] = 'Classic King Dragon';
                    break;
                case 0xc8:
                    _0x5d1b96['aniName'] = 'Queen Flame';
                    break;
                case 0xca:
                    _0x5d1b96['aniName'] = 'King Graveyard';
                    break;
            }
            return _0x5d1b96['aniCol'] = '#FF9000', _0x5d1b96['skinName'] = this['getSkinName'](), _0x5d1b96['upgradeText'] = 'UPGRADED to ' + _0x5d1b96['aniName'], _0x5d1b96['upgradeText'] += '!\x0aYou got firestream that burns your victim alive! Watch your tail and slap them hard.', _0x5d1b96['aniCol'] = 'black', _0x5d1b96;
        }, _0x44afba['prototype']['getAbilityInfo'] = function(_0x223d38) {
            var _0x1e3855 = {};
            _0x1e3855['abilName'] = 'Firestream\x0a& Tail slap';
            var _0x2d4f81 = 0x0;
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2d4f81 = 0x1;
                    break;
                case 0x1:
                    _0x2d4f81 = 0x2;
                    break;
                case 0x2:
                    _0x2d4f81 = 0x4;
                    break;
                case 0x3:
                    _0x2d4f81 = 0x5;
                    break;
                case 0x4:
                    _0x2d4f81 = 0x6;
                    break;
                case 0x5:
                    _0x2d4f81 = 0x9;
                    break;
                case 0x6:
                    _0x2d4f81 = 0x8;
                    break;
                case 0xd:
                    _0x2d4f81 = 0x1f;
                    break;
            }
            return _0x1e3855['speciesType'] = _0x2d4f81, _0x1e3855['abilImg'] = 'img/fire/' + _0x2d4f81 + '/0.png', _0x1e3855['skinThemeID'] = this['skinThemeID'], _0x1e3855['mopeSeasonID'] = this['mopeSeasonID'], _0x1e3855;
        };

        function _0x44afba() {
            this['lava'] = 0x64, _0x44afba['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x44afba, _0x269668, _0xf8f210);
        var _0x4d8447 = _0x5502af;
        _0x5298dd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5298dd['prototype']['constructor'] = _0x5298dd, _0x5298dd['superClass'] = _0x4d8447, _0x5298dd['prototype']['animalInfo'] = function() {
            var _0x29e0b5 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x29e0b5['aniName'] = 'The Yeti!';
                    break;
                case 0x1:
                    _0x29e0b5['aniName'] = 'Golden Yeti!';
                    break;
                case 0x2:
                    _0x29e0b5['aniName'] = 'Emerald Yeti!';
                    break;
                case 0x3:
                    _0x29e0b5['aniName'] = 'Aqua Yeti';
                    break;
                case 0x6f:
                    _0x29e0b5['aniName'] = 'Classic Yeti';
                    break;
                case 0xc9:
                    _0x29e0b5['aniName'] = 'Squishy Yeti';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x29e0b5['aniName'] = 'Lovely Yeti';
                            break;
                        case 0x1:
                            _0x29e0b5['aniName'] = 'Frosty Eye Demon';
                    }
                    break;
                case 0xcc:
                    _0x29e0b5['aniName'] = 'Frost Wolf';
                    break;
                case 0xdc:
                    _0x29e0b5['aniName'] = 'Glacial Demon';
                    break;
            }
            return _0x29e0b5['skinName'] = this['getSkinName'](), _0x29e0b5['aniDesc'] = '', _0x29e0b5['upgradeText'] = 'UPGRADED to ' + _0x29e0b5['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, press W to freeeeeze!', _0x29e0b5['aniCol'] = '#839eb5', _0x29e0b5;
        }, _0x5298dd['prototype']['getAbilityInfo'] = function(_0x448912) {
            var _0x207e1e = {};
            return _0x207e1e['abilName'] = 'Yeti Roar' + (this['animalSpecies'] == 0x3 ? ' &\x0a Ice Statue' : '') + '', _0x207e1e['abilImg'] = 'skins/arctic/yeti/' + this['animalSpecies'] + this['getSubSpecies']() + '/ability.png', _0x207e1e['skinThemeID'] = this['skinThemeID'], _0x207e1e['mopeSeasonID'] = this['mopeSeasonID'], _0x207e1e;
        }, _0x5298dd['prototype']['getSkinName'] = function() {
            var _0x137e08 = this['specType'] == 0x0 ? '' : 0x1;
            return this['getSpeciesPath']('yeti') + '/yeti' + _0x137e08;
        }, _0x5298dd['prototype']['getSubSpecies'] = function() {
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x5298dd['prototype']['getSpeciesPath'] = function(_0x1360b2) {
            return 'arctic/' + _0x1360b2 + '/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x5298dd['prototype']['drawOnTopOfSkinImg'] = function() {}, _0x5298dd['prototype']['isTransforming'] = ![], _0x5298dd['prototype']['readCustomData_onNewlyVisible'] = function(_0x2cce9f) {
            _0x5298dd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2cce9f), this['isTransforming'] = _0x2cce9f['readUInt8']() == 0x1;
        }, _0x5298dd['prototype']['customUpdatedProperty'] = function(_0x5eabe5, _0x3a7b84) {
            _0x5eabe5 == _0x211511 && (this['isTransforming'] = _0x3a7b84['readUInt8']() == 0x1);
        }, _0x5298dd['prototype']['getIdealOpacity'] = function() {
            var _0x5d95a0 = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
            return _0x5d95a0;
        }, _0x5298dd['prototype']['biteStart'] = 0x0, _0x5298dd['prototype']['flapAmount'] = 0x3, _0x5298dd['prototype']['flapDur'] = 1.5, _0x5298dd['prototype']['roarStartT'] = -0x1f4, _0x5298dd['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility'] && this['isTransforming']) {
                if (this['isTransforming']) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                    var _0x10182e = this['getSkinImageObjForSeason']('img/snowball.png', _0x5149df);
                    if (_0x10182e) {
                        var _0x2982d3 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x10182e, -_0x2982d3, -_0x2982d3, 0x2 * _0x2982d3, 0x2 * _0x2982d3);
                    } else this['drawOutlinedCircle']('', 'white');
                    _0x4597c4['restore']();
                }
            } else {
                if (this['animalSpecies'] == 0x4) return;
                this['setSkinScale']();
                if (!this['flag_usingAbility']) {
                    this['biteStart'] = 0x0;
                    return;
                } else {
                    this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319 + this['roarStartT']);
                    if (this['specType'] != 0x0 && this['specType'] != undefined) {
                        var _0x5ce512 = 'skins/arctic/yeti/' + this['animalSpecies'] + '/yeti_head1.png',
                            _0x21f622 = this['getSkinImageObj'](_0x5ce512),
                            _0x1639af = (_0x476319 - this['biteStart']) / 0x3e8,
                            _0x1f6c72 = this['skinScale'] * 1.07,
                            _0x2982d3 = this['skinRad'];
                        if (_0x21f622) {
                            var _0x41a16b = 0x0,
                                _0x2e9f14 = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                            _0x41a16b = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x1639af, this['flapDur'], _0x2e9f14, 0x2) : this['flapAmount'], _0x4597c4['save']();
                            var _0x2982d3 = this['rad'];
                            _0x4597c4['drawImage'](_0x21f622, -_0x2982d3 * _0x1f6c72, (-_0x2982d3 + _0x2982d3 * 0.1) * _0x1f6c72 - _0x41a16b, 0x2 * _0x2982d3 * _0x1f6c72, 0x2 * _0x2982d3 * _0x1f6c72), _0x4597c4['restore']();
                        }
                    }
                }
            }
        };

        function _0x5298dd() {
            _0x5298dd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5298dd, _0x269668, _0x36fcdc);
        var _0x4d8447 = _0x5502af;
        _0x48f887['prototype'] = Object['create'](_0x4d8447['prototype']), _0x48f887['prototype']['constructor'] = _0x48f887, _0x48f887['superClass'] = _0x4d8447, _0x48f887['prototype']['animalInfo'] = function() {
            var _0x7fb040 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0xdf:
                            _0x7fb040['aniName'] = 'Valentine Mammoth';
                            break;
                        case 0x0:
                        default:
                            _0x7fb040['aniName'] = 'Mammoth!';
                            break;
                    }
                    break;
                case 0x1:
                    _0x7fb040['aniName'] = 'Golden Mammoth!';
                    break;
                case 0x6f:
                    _0x7fb040['aniName'] = 'Classic Mammoth';
                    break;
                case 0x2:
                    _0x7fb040['aniName'] = 'Black Mammoth!';
                    break;
                case 0xc9:
                    _0x7fb040['aniName'] = 'Lost Tourist!';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x7fb040['aniName'] = 'Acid Mammoth';
                            break;
                        case 0x1:
                            _0x7fb040['aniName'] = 'Crystal Golem';
                    }
                    break;
                case 0xdc:
                    _0x7fb040['aniName'] = ' Golem Mammoth';
                    break;
            }
            return _0x7fb040['skinName'] = this['getSkinName'](), _0x7fb040['aniDesc'] = '', _0x7fb040['upgradeText'] = 'UPGRADED to ' + _0x7fb040['aniName'] + '\x0a Press W to roll snowballs with your trunk!\x0a The bigger the snowball gets, the longer the freeze!', _0x7fb040['aniCol'] = '#9d4717', _0x7fb040;
        }, _0x48f887['prototype']['getAbilityInfo'] = function(_0x28b811) {
            var _0x4ce1c4 = {};
            return _0x4ce1c4['abilName'] = 'Roll snow', _0x4ce1c4['abilImg'] = 'img/snowball.png', _0x4ce1c4['skinThemeID'] = this['skinThemeID'], _0x4ce1c4['mopeSeasonID'] = this['mopeSeasonID'], _0x4ce1c4;
        }, _0x48f887['prototype']['getSkinName'] = function() {
            var _0x15bea4 = this['specType'] == 0x0 ? '' : 0x1;
            return 'arctic/mammoth/' + this['animalSpecies'] + this['getSubSpecies']() + '/mammoth' + _0x15bea4;
        }, _0x48f887['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        };

        function _0x48f887() {
            _0x48f887['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x48f887, _0x269668, _0x5ed897);
        var _0x4d8447 = _0x5502af;
        _0x2a7892['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2a7892['prototype']['constructor'] = _0x2a7892, _0x2a7892['superClass'] = _0x4d8447, _0x2a7892['prototype']['animalInfo'] = function() {
            var _0x23d355 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x23d355['aniName'] = 'Sabertooth Tiger!';
                    break;
                case 0x1:
                    _0x23d355['aniName'] = 'Golden Tiger!';
                    break;
                case 0x2:
                    _0x23d355['aniName'] = 'Margala Sabertooth!';
                    break;
                case 0x6f:
                    _0x23d355['aniName'] = 'Classic Sabertooth';
                    break;
                case 0xc8:
                    _0x23d355['aniName'] = 'Techno Saber!';
                    break;
                case 0xc9:
                    _0x23d355['aniName'] = 'Strawbertooth!';
                    break;
                case 0xca:
                    _0x23d355['aniName'] = 'Ice-Fang Sabertooth';
                    break;
                case 0xcc:
                    _0x23d355['aniName'] = 'Shadow Sabeertooth!';
                    break;
            }
            return _0x23d355['skinName'] = this['getSkinName'](), _0x23d355['aniDesc'] = '', _0x23d355['upgradeText'] = 'UPGRADED to ' + _0x23d355['aniName'] + '\x0aSabertooth Tigers can slash their opponents and prey.', _0x23d355['aniCol'] = '#945A99', _0x23d355;
        }, _0x2a7892['prototype']['getAbilityInfo'] = function(_0x2b7d20) {
            var _0xdb130c = {};
            return _0xdb130c['abilName'] = 'Claw Slash!', _0xdb130c['abilImg'] = 'skins/arctic/sabertooth/' + this['animalSpecies'] + this['getSubSpecies']() + '/sabertooth.png', _0xdb130c['skinThemeID'] = this['skinThemeID'], _0xdb130c['mopeSeasonID'] = this['mopeSeasonID'], _0xdb130c;
        }, _0x2a7892['prototype']['getSkinName'] = function() {
            return 'arctic/sabertooth/' + this['animalSpecies'] + this['getSubSpecies']() + '/sabertooth' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x2a7892['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x2a7892() {
            _0x2a7892['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2a7892, _0x269668, _0x3ccf08);
        var _0x4d8447 = _0x5502af;
        _0x3d3d02['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3d3d02['prototype']['constructor'] = _0x3d3d02, _0x3d3d02['superClass'] = _0x4d8447, _0x3d3d02['prototype']['animalInfo'] = function() {
            var _0x384761 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x384761['aniName'] = 'Penguin';
                    break;
                case 0x6f:
                    _0x384761['aniName'] = 'Classic Penguin';
                    break;
                case 0x70:
                    _0x384761['aniName'] = 'Gold-trim Penguin';
                    break;
                case 0xc9:
                    _0x384761['aniName'] = 'Surfer Penguin';
                    break;
                case 0xca:
                    _0x384761['aniName'] = 'UFO Pigeon';
                    break;
            }
            return _0x384761['skinName'] = this['getSkinName'](), _0x384761['aniDesc'] = '', _0x384761['upgradeText'] = 'UPGRADED to ' + _0x384761['aniName'] + '!\x0a Left-click to run!\x0a (HOLD W to slide FAST on ice)!', _0x384761['aniCol'] = '#FFFFFF', _0x384761;
        }, _0x3d3d02['prototype']['getAbilityInfo'] = function(_0x2c12aa) {
            var _0x5e30a2 = {};
            return _0x5e30a2['abilName'] = 'Slide on ice', _0x5e30a2['abilImg'] = 'skins/arctic/penguin/' + this['animalSpecies'] + this['getSubSpecies']() + '/penguin1.png', _0x5e30a2['skinThemeID'] = this['skinThemeID'], _0x5e30a2['mopeSeasonID'] = this['mopeSeasonID'], _0x5e30a2;
        }, _0x3d3d02['prototype']['getSkinName'] = function() {
            return 'arctic/penguin/' + this['animalSpecies'] + this['getSubSpecies']() + '/penguin' + (this['specType'] == 0x0 ? '' : 0x1);
        }, _0x3d3d02['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x3d3d02() {
            _0x3d3d02['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3d3d02, _0x269668, _0x3bf4c4);
        var _0x4d8447 = _0x5502af;
        _0x33d549['prototype'] = Object['create'](_0x4d8447['prototype']), _0x33d549['prototype']['constructor'] = _0x33d549, _0x33d549['superClass'] = _0x4d8447, _0x33d549['prototype']['animalInfo'] = function() {
            var _0x3b22c8 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x3b22c8['aniName'] = 'Seal';
                    break;
                case 0x6f:
                    _0x3b22c8['aniName'] = 'Classic Seal';
                    break;
                case 0x70:
                    _0x3b22c8['aniName'] = 'Gold-trim Seal';
                    break;
                case 0xc9:
                    _0x3b22c8['aniName'] = 'Hawaiian Monk';
                    break;
                case 0xca:
                    _0x3b22c8['aniName'] = 'Soapy Seal';
                    break;
            }
            return _0x3b22c8['skinName'] = this['getSkinName'](), _0x3b22c8['aniDesc'] = '', _0x3b22c8['upgradeText'] = 'UPGRADED to ' + _0x3b22c8['aniName'] + '!\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x3b22c8['aniCol'] = '#633838', _0x3b22c8;
        }, _0x33d549['prototype']['getAbilityInfo'] = function(_0x3bf62f) {
            var _0x37b75d = {};
            return _0x37b75d['abilName'] = 'Slide on ice', _0x37b75d['abilImg'] = 'skins/arctic/seal/' + this['animalSpecies'] + this['getSubSpecies']() + '/seal1.png', _0x37b75d['skinThemeID'] = this['skinThemeID'], _0x37b75d['mopeSeasonID'] = this['mopeSeasonID'], _0x37b75d;
        }, _0x33d549['prototype']['getSkinName'] = function() {
            return 'arctic/seal/' + this['animalSpecies'] + this['getSubSpecies']() + '/seal' + (this['specType'] == 0x0 ? '' : 0x1);
        }, _0x33d549['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x33d549() {
            _0x33d549['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x33d549, _0x269668, _0x51d33b);
        var _0x4d8447 = _0x5502af;
        _0x25d449['prototype'] = Object['create'](_0x4d8447['prototype']), _0x25d449['prototype']['constructor'] = _0x25d449, _0x25d449['superClass'] = _0x4d8447, _0x25d449['prototype']['animalInfo'] = function() {
            var _0x3539b2 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x3539b2['aniName'] = 'Walrus!';
                            break;
                        case 0xdf:
                            _0x3539b2['aniName'] = 'Valentine Walrus!';
                            break;
                    }
                    break;
                case 0x64:
                    _0x3539b2['aniName'] = 'Candy Rus!';
                    break;
                case 0x6f:
                    _0x3539b2['aniName'] = 'Classic Walrus';
                    break;
                case 0x70:
                    _0x3539b2['aniName'] = 'Gold-trim Walrus';
                    break;
                case 0xc9:
                    _0x3539b2['aniName'] = 'Walrusmelon!';
                    break;
                case 0xca:
                    _0x3539b2['aniName'] = 'Potato Walrus';
                    break;
            }
            return _0x3539b2['skinName'] = this['getSkinName'](), _0x3539b2['aniDesc'] = '', _0x3539b2['upgradeText'] = 'UPGRADED to ' + _0x3539b2['aniName'] + '\x0a You can slide on ice (Hold W) + can climb hills (rocks too!)', _0x3539b2['aniCol'] = '#633838', _0x3539b2;
        }, _0x25d449['prototype']['getAbilityInfo'] = function(_0x1ea630) {
            var _0x47e480 = {};
            return _0x47e480['abilName'] = 'Slide on ice', _0x47e480['abilImg'] = 'skins/arctic/walrus/' + this['animalSpecies'] + this['getSubSpecies']() + '/walrus1.png', _0x47e480['skinThemeID'] = this['skinThemeID'], _0x47e480['mopeSeasonID'] = this['mopeSeasonID'], _0x47e480;
        }, _0x25d449['prototype']['getSkinName'] = function() {
            return 'arctic/walrus/' + this['animalSpecies'] + this['getSubSpecies']() + '/walrus' + (this['specType'] == 0x0 ? '' : 0x1);
        }, _0x25d449['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x25d449() {
            _0x25d449['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x25d449, _0x269668, _0x44a111);
        var _0x4d8447 = _0x5502af;
        _0x4669a8['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4669a8['prototype']['constructor'] = _0x4669a8, _0x4669a8['superClass'] = _0x4d8447, _0x4669a8['prototype']['animalInfo'] = function() {
            var _0x4bf237 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4bf237['aniName'] = 'Wolf!';
                    break;
                case 0x6f:
                    _0x4bf237['aniName'] = 'Classic Wolf';
                    break;
                case 0x70:
                    _0x4bf237['aniName'] = 'Gold-trim Wolf';
                    break;
                case 0xc9:
                    _0x4bf237['aniName'] = 'Pineapple Wolf!';
                    break;
                case 0xdc:
                    _0x4bf237['aniName'] = 'Okami Wolf';
                    break;
            }
            return _0x4bf237['skinName'] = this['getSkinName'](), _0x4bf237['upgradeText'] = 'UPGRADED to ' + _0x4bf237['aniName'] + '\x0a Wolf paws turn very well on ice!\x0a Press W to howl!', _0x4bf237['aniCol'] = '#6B6B6B', _0x4bf237;
        }, _0x4669a8['prototype']['getAbilityInfo'] = function(_0x41dbf8) {
            var _0x569765 = {};
            return _0x569765['abilName'] = 'Howl!', _0x569765['abilImg'] = 'skins/arctic/wolf/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolf1.png', _0x569765['skinThemeID'] = this['skinThemeID'], _0x569765['mopeSeasonID'] = this['mopeSeasonID'], _0x569765;
        }, _0x4669a8['prototype']['getSkinName'] = function() {
            var _0x22efa1 = this['specType'] == 0x0 ? '' : 0x1;
            return 'arctic/wolf/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolf' + _0x22efa1;
        }, _0x4669a8['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x4669a8() {
            _0x4669a8['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4669a8, _0x269668, _0x3d9765);
        var _0x4d8447 = _0x5502af;
        _0xc911d['prototype'] = Object['create'](_0x4d8447['prototype']), _0xc911d['prototype']['constructor'] = _0xc911d, _0xc911d['superClass'] = _0x4d8447, _0xc911d['prototype']['animalInfo'] = function() {
            var _0x29a0f3 = {};
            _0x29a0f3['aniName'] = 'Wolverine!';
            switch (this['animalSpecies']) {
                case 0x6f:
                    _0x29a0f3['aniName'] = 'Classic Wolverine';
                    break;
                case 0xca:
                    _0x29a0f3['aniName'] = 'Floral Wolverine';
                    break;
                case 0x70:
                    _0x29a0f3['aniName'] = 'Gold-trim Wolverine';
                    break;
                case 0xdc:
                    _0x29a0f3['aniName'] = 'Summoner Wolverine';
                    break;
            }
            return this['animalSubSpecies'] == 0xdf && (_0x29a0f3['aniName'] = 'Valentine Wolverine'), _0x29a0f3['skinName'] = this['getSkinName'](), _0x29a0f3['upgradeText'] = 'UPGRADED to ' + _0x29a0f3['aniName'] + '!\x0a Press W to Let out a Powerful GROWL! (Knocks back prey!)', _0x29a0f3['aniCol'] = '#843A0F', _0x29a0f3;
        }, _0xc911d['prototype']['getAbilityInfo'] = function(_0x5b8a11) {
            var _0x19f40d = {};
            return _0x19f40d['abilName'] = 'Roar!', _0x19f40d['abilImg'] = 'skins/arctic/wolverine/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolverine1.png', _0x19f40d['skinThemeID'] = this['skinThemeID'], _0x19f40d['mopeSeasonID'] = this['mopeSeasonID'], _0x19f40d;
        }, _0xc911d['prototype']['getSkinName'] = function() {
            return 'arctic/wolverine/' + this['animalSpecies'] + this['getSubSpecies']() + '/wolverine' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0xc911d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0xc911d() {
            _0xc911d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xc911d, _0x269668, _0x55fd3d);
        var _0x4d8447 = _0x5502af;
        _0x4e8901['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4e8901['prototype']['constructor'] = _0x4e8901, _0x4e8901['superClass'] = _0x4d8447, _0x4e8901['prototype']['animalInfo'] = function() {
            var _0x54d1a4 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x54d1a4['aniName'] = 'Muskox!';
                    break;
                case 0x6f:
                    _0x54d1a4['aniName'] = 'Classic Muskox';
                    break;
                case 0x70:
                    _0x54d1a4['aniName'] = 'Gold-trim Muskox';
                    break;
                case 0xc8:
                    _0x54d1a4['aniName'] = 'Brazen Bull!';
                    break;
                case 0xc9:
                    _0x54d1a4['aniName'] = 'Fireworks Ox!';
                    break;
                case 0xca:
                    _0x54d1a4['aniName'] = 'Monitor Muskox';
                    break;
            }
            return _0x54d1a4['skinName'] = this['getSkinName'](), _0x54d1a4['aniDesc'] = '', _0x54d1a4['upgradeText'] = 'UPGRADED to ' + _0x54d1a4['aniName'] + '\x0a Press W to charge with your horns! \x0aPlus move decently on ice!', _0x54d1a4['aniCol'] = '#231f18', _0x54d1a4;
        }, _0x4e8901['prototype']['getAbilityInfo'] = function(_0x4b32e6) {
            var _0xde60a1 = {};
            return _0xde60a1['abilName'] = 'Charge!', _0xde60a1['abilImg'] = 'skins/arctic/muskox/' + this['animalSpecies'] + '/muskox2.png', _0xde60a1['skinThemeID'] = this['skinThemeID'], _0xde60a1['mopeSeasonID'] = this['mopeSeasonID'], _0xde60a1;
        }, _0x4e8901['prototype']['getSkinName'] = function() {
            return 'arctic/muskox/' + this['animalSpecies'] + this['getSubSpecies']() + '/muskox' + (this['flag_usingAbility'] ? '2' : '');
        }, _0x4e8901['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x4e8901() {
            _0x4e8901['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4e8901, _0x269668, _0x33ea21);
        var _0x4d8447 = _0x5502af;
        _0x11420c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x11420c['prototype']['constructor'] = _0x11420c, _0x11420c['superClass'] = _0x4d8447, _0x11420c['prototype']['animalInfo'] = function() {
            var _0x50e60c = {};
            if (this['animalSpecies'] == 0x1) _0x50e60c['aniName'] = 'The Snowman', _0x50e60c['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
            else this['animalSpecies'] == 0x2 && (_0x50e60c['aniName'] = 'The Snowgirl', _0x50e60c['skinName'] = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl');
            return _0x50e60c['aniDesc'] = '', _0x50e60c['upgradeText'] = 'UPGRADED to ' + _0x50e60c['aniName'] + '!\x0a So it really exists... \x0a Hold W to turn into snow, press W to freeeeeze!', _0x50e60c['aniCol'] = '#839eb5', _0x50e60c;
        }, _0x11420c['prototype']['getAbilityInfo'] = function(_0x5a9252) {
            var _0x4ea2d3 = {};
            return _0x4ea2d3['abilName'] = 'Freeze Prey!', _0x4ea2d3['abilImg'] = 'skins/arctic/snowman/' + this['animalSpecies'] + '/ability.png', _0x4ea2d3['skinThemeID'] = this['skinThemeID'], _0x4ea2d3['mopeSeasonID'] = this['mopeSeasonID'], _0x4ea2d3;
        }, _0x11420c['prototype']['getSkinName'] = function() {
            var _0x18470b = '';
            if (this['animalSpecies'] == 0x2) _0x18470b = 'arctic/snowman/' + this['animalSpecies'] + '/snowgirl';
            else _0x18470b = 'arctic/snowman/' + this['animalSpecies'] + '/snowman';
            return _0x18470b += this['specType'] == 0x0 ? '' : 0x1, _0x18470b;
        }, _0x11420c['prototype']['drawUnderSkinTail'] = function(_0x431692) {
            if (!this['isCamouflage']) _0x11420c['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x431692);
        }, _0x11420c['prototype']['drawHealthBar'] = function() {
            if (!this['isCamouflage']) _0x11420c['superClass']['prototype']['drawHealthBar']['call'](this);
        }, _0x11420c['prototype']['isTransforming'] = ![], _0x11420c['prototype']['isCamouflage'] = ![], _0x11420c['prototype']['carrotAlpha'] = 0x0, _0x11420c['prototype']['getIdealOpacity'] = function() {
            var _0x40e216 = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
            return _0x40e216;
        }, _0x11420c['prototype']['biteStart'] = 0x0, _0x11420c['prototype']['flapAmount'] = 0x3, _0x11420c['prototype']['flapDur'] = 1.5, _0x11420c['prototype']['roarStartT'] = -0x1f4, _0x11420c['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility'] && this['isTransforming']) {
                if (this['isTransforming']) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                    var _0x4794b0 = this['getSkinImageObj']('img/snowball.png');
                    if (_0x4794b0) {
                        var _0x42b240 = this['rad'];
                        _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x4794b0, -_0x42b240, -_0x42b240, 0x2 * _0x42b240, 0x2 * _0x42b240);
                    } else this['drawOutlinedCircle']('', 'white');
                    _0x4597c4['restore']();
                }
            } else {
                this['setSkinScale']();
                if (!this['flag_usingAbility'] && !this['isCamouflage']) {
                    if (this['carrotAlpha'] > 0x0) {
                        var _0x168a16 = this['getSkinImageObj']('skins/arctic/snowman/' + this['animalSpecies'] + '/carrot_nose.png'),
                            _0x115457 = this['skinScale'],
                            _0x42b240 = this['skinRad'];
                        if (_0x168a16) {
                            _0x4597c4['save']();
                            var _0x42b240 = this['rad'];
                            _0x4597c4['globalAlpha'] = this['carrotAlpha'], _0x4597c4['drawImage'](_0x168a16, -_0x42b240 * _0x115457, -_0x42b240 * _0x115457, 0x2 * _0x42b240 * _0x115457, 0x2 * _0x42b240 * _0x115457), _0x4597c4['restore']();
                        }
                    }
                    this['biteStart'] = 0x0;
                    return;
                } else {
                    this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319 + this['roarStartT']);
                    if (this['specType'] != 0x0 && this['specType'] != undefined) {
                        var _0x55e8be = this['animalSpecies'] == 0x2 ? 'snowgirl' : 'snowman',
                            _0x1e0a48 = 'skins/arctic/snowman/' + this['animalSpecies'] + '/' + _0x55e8be + '_head1.png',
                            _0x168a16 = this['getSkinImageObj'](_0x1e0a48),
                            _0x393a8a = (_0x476319 - this['biteStart']) / 0x3e8,
                            _0x115457 = this['skinScale'] * 1.07,
                            _0x42b240 = this['skinRad'];
                        if (_0x168a16) {
                            var _0x2c7987 = 0x0,
                                _0x42c2fd = this['flapAmount'] - (this['animalSpecies'] == 0x1 ? 0.5 : 0x0);
                            _0x2c7987 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x393a8a, this['flapDur'], _0x42c2fd, 0x2) : this['flapAmount'], _0x4597c4['save']();
                            var _0x42b240 = this['rad'];
                            _0x4597c4['drawImage'](_0x168a16, -_0x42b240 * _0x115457, (-_0x42b240 + _0x42b240 * 0.1) * _0x115457 - _0x2c7987, 0x2 * _0x42b240 * _0x115457, 0x2 * _0x42b240 * _0x115457), _0x4597c4['restore']();
                        }
                    }
                }
            }
        }, _0x11420c['prototype']['customUpdatedProperty'] = function(_0x1f891b, _0x1fae45) {
            if (_0x1f891b == _0x211511) this['isTransforming'] = _0x1fae45['readUInt8']() == 0x1;
            else {
                if (_0x1f891b == _0x89b16) this['isCamouflage'] = _0x1fae45['readUInt8']() == 0x1;
                else {
                    if (_0x1f891b == _0x57d3a5) this['carrotAlpha'] = _0x1fae45['readUInt16']() / 0x3e8;
                    else _0x1f891b == _0x2b737e && (this['lights'] = _0x1fae45['readUInt8']());
                }
            }
        }, _0x11420c['prototype']['readCustomData_onNewlyVisible'] = function(_0x569d0c) {
            _0x11420c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x569d0c), this['isTransforming'] = _0x569d0c['readUInt8']() == 0x1, this['isCamouflage'] = _0x569d0c['readUInt8']() == 0x1, this['carrotAlpha'] = _0x569d0c['readUInt16']() / 0x3e8, this['lights'] = _0x569d0c['readUInt8']();
        };

        function _0x11420c() {
            _0x11420c['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x11420c, _0x269668, _0x1323b9);
        var _0x4d8447 = _0x5502af;
        _0x5a735a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5a735a['prototype']['constructor'] = _0x5a735a, _0x5a735a['superClass'] = _0x4d8447, _0x5a735a['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
            if (this['flag_underWater']) this['z'] = -0x64;
            else {
                if (this['flag_eff_tossedInAir']) this['z'] = 0x4b0 + this['rad'];
                else {
                    if (this['flag_flying']) {
                        this['z'] = 0x186a0;
                        if (this['flag_isGrabbed']) this['z'] -= this['rad'];
                    } else {
                        if (this['flag_canClimbHill']) this['z'] = 0x3eb;
                        else this['z'] = this['rad'];
                    }
                }
            }
        }, _0x5a735a['prototype']['animalInfo'] = function() {
            var _0x45cdab = {};
            _0x45cdab['aniName'] = 'Markhor';
            switch (this['animalSpecies']) {
                case 0xcc:
                    switch (this['animalSubSpecies']) {
                        case 0x2:
                            _0x45cdab['aniName'] = 'Golden Devil Goat';
                            break;
                    }
                    break;
                case 0x6f:
                    _0x45cdab['aniName'] = 'Classic Markhor';
                    break;
                case 0x70:
                    _0x45cdab['aniName'] = 'Gold-trim Markhor';
                    break;
                case 0xc9:
                    switch (this['animalSubSpecies']) {
                        case 0x1:
                            _0x45cdab['aniName'] = 'Fruity Ice Markhor';
                            break;
                    }
                    break;
                case 0x1:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x45cdab['aniName'] = 'Markhor';
                            break;
                    }
                    break;
                case 0x2:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x45cdab['aniName'] = 'Big Goat';
                    }
                    break;
            }
            return _0x45cdab['aniCol'] = '#FF9000', _0x45cdab['skinName'] = this['getSkinName'](), _0x45cdab['upgradeText'] = 'UPGRADED to ' + _0x45cdab['aniName'] + '!\x0aPress \'W\' to Jump High from hills. Ram in the preys on land.', _0x45cdab;
        }, _0x5a735a['prototype']['moveF'] = 0.08, _0x5a735a['prototype']['jumpAnim'] = null, _0x5a735a['prototype']['frame'] = 0x0, _0x5a735a['prototype']['getSkinImageObj'] = function(_0x341abf) {
            var _0x249375 = this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x341abf, _0x249375);
        }, _0x5a735a['prototype']['getAbilityInfo'] = function(_0x4dcf4c) {
            var _0x168bfe = {};
            return _0x168bfe['abilImg'] = 'skins/' + this['getSpeciesPath']('markhor') + '/ability.png', _0x168bfe['abilName'] = 'Head Butt', _0x168bfe['skinThemeID'] = this['skinThemeID'], _0x168bfe['mopeSeasonID'] = this['mopeSeasonID'], _0x168bfe;
        }, _0x5a735a['prototype']['getSpeciesPath'] = function(_0x13f91c) {
            var _0x473962 = '/' + this['animalSubSpecies'];
            return 'arctic/' + _0x13f91c + '/' + this['animalSpecies'] + _0x473962;
        }, _0x5a735a['prototype']['moveF'] = 0.08, _0x5a735a['prototype']['jumpAnim'] = null, _0x5a735a['prototype']['frame'] = 0x0, _0x5a735a['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility'] && this['specType'] > 0x2) {
                var _0x51d340 = 0x1;
                this['jumpAnim'] == null && (this['jumpAnim'] = new _0x504c7a(this, 0.5, _0x504c7a['halfWave']), this['jumpAnim']['keepLastFrame'] = !![], this['jumpAnim']['loop'] = !![], this['jumpAnim']['onFrameEntered'] = function(_0x13fcde) {
                    this['forObj']['frame'] = _0x13fcde;
                }, this['jumpAnim']['onStop'] = function() {});
                this['jumpAnim'] != null && this['jumpAnim']['run']();
                var _0x1ef858 = this['rad'] - this['outlineW'],
                    _0x3023ab = 0x1f4 / 0x154;
                this['setSkinScale']();
                var _0x1d3936 = 'skins/' + this['getSpeciesPath']('markhor') + '/front_legs.png',
                    _0x2fe611 = 'skins/' + this['getSpeciesPath']('markhor') + '/back_legs.png',
                    _0x59b8a0 = this['getSkinImageObj'](_0x1d3936),
                    _0x2d870f = this['getSkinImageObj'](_0x2fe611);
                if (_0x59b8a0 && _0x2d870f) {
                    var _0x3023ab = this['skinScale'] + this['skinScale'] * 0.15 * this['frame'],
                        _0x1ef858 = this['skinRad'];
                    this['specType'] == 0x3 ? (_0x4597c4['drawImage'](_0x59b8a0, -_0x1ef858 * _0x3023ab, -_0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab), _0x4597c4['drawImage'](_0x2d870f, -_0x1ef858 * _0x3023ab, (-_0x1ef858 - _0x1ef858 * this['moveF'] * this['frame']) * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab)) : (_0x4597c4['drawImage'](_0x2d870f, -_0x1ef858 * _0x3023ab, -_0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab), _0x4597c4['drawImage'](_0x59b8a0, -_0x1ef858 * _0x3023ab, (-_0x1ef858 + _0x1ef858 * this['moveF'] * this['frame']) * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab, 0x2 * _0x1ef858 * _0x3023ab));
                }
            } else this['jumpAnim'] = null;
        }, _0x5a735a['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x1e0a4a = 0x1f4 / 0x154,
                _0x455701 = 0.1;
            if (this['specType'] > 0x2) _0x455701 = 0.2 * this['frame'];
            {
                var _0x3f64f6 = this['getSkinImageObj'](this['getHead']('markhor', !![]));
                if (_0x3f64f6) {
                    _0x4597c4['save']();
                    var _0x4e40c6 = this['rad'];
                    _0x4597c4['drawImage'](_0x3f64f6, -_0x4e40c6 * _0x1e0a4a, (-_0x4e40c6 + _0x4e40c6 * _0x455701) * _0x1e0a4a, 0x2 * _0x4e40c6 * _0x1e0a4a, 0x2 * _0x4e40c6 * _0x1e0a4a), _0x4597c4['restore']();
                }
            }
        }, _0x5a735a['prototype']['getHead'] = function(_0x215959, _0x5d8236) {
            var _0x1ce9c7 = 'skins/' + (_0x5d8236 ? this['getSpeciesPath'](_0x215959) + '/' : _0x215959 + '/');
            return _0x1ce9c7 += _0x215959 + '_head', this['specType'] == 0x2 && (_0x1ce9c7 += '_charging'), _0x1ce9c7 += '.png', _0x1ce9c7;
        }, _0x5a735a['prototype']['getSkinName'] = function() {
            var _0xa41a50 = this['getSpeciesPath']('markhor') + '/markhor';
            return _0xa41a50 += this['specType'] == 0x0 ? '' : 0x1, _0xa41a50;
        };

        function _0x5a735a() {
            _0x5a735a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5a735a, _0x269668, _0x2a0d7d);
        var _0x4d8447 = _0x5502af;
        _0x1ccbf7['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1ccbf7['prototype']['constructor'] = _0x1ccbf7, _0x1ccbf7['superClass'] = _0x4d8447, _0x1ccbf7['prototype']['animalInfo'] = function() {
            var _0x1be889 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1be889['aniName'] = 'Reindeer';
                    break;
                case 0x1:
                    _0x1be889['aniName'] = 'Musk Deer';
                    break;
                case 0x6f:
                    _0x1be889['aniName'] = 'Classic Reindeer';
                    break;
                case 0x70:
                    _0x1be889['aniName'] = 'Gold-trim Reindeer';
                    break;
                case 0xc9:
                    _0x1be889['aniName'] = 'Sunburn Reindeer';
                    break;
                case 0xca:
                    _0x1be889['aniName'] = 'Piebald Cosmos';
                    break;
                case 0xcc:
                    _0x1be889['aniName'] = 'Spideer';
                    break;
            }
            return _0x1be889['aniDesc'] = '', _0x1be889['upgradeText'] = 'UPGRADED to ' + _0x1be889['aniName'] + '!\x0a Press W to dig up food! \x0a Your sharp hooves let you turn very well on ice!', _0x1be889['aniCol'] = '#a68976', _0x1be889['skinName'] = this['getSkinName'](), _0x1be889;
        }, _0x1ccbf7['prototype']['getAbilityInfo'] = function(_0x38b4cd) {
            var _0x6dfb56 = {};
            return _0x6dfb56['abilName'] = 'Dig Food!', _0x6dfb56['abilImg'] = 'skins/arctic/reindeer/' + this['animalSpecies'] + this['getSubSpecies']() + '/reindeer.png', _0x6dfb56['skinThemeID'] = this['skinThemeID'], _0x6dfb56['mopeSeasonID'] = this['mopeSeasonID'], _0x6dfb56;
        }, _0x1ccbf7['prototype']['getSkinName'] = function() {
            return 'arctic/reindeer/' + this['animalSpecies'] + this['getSubSpecies']() + '/reindeer';
        }, _0x1ccbf7['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x1ccbf7() {
            _0x1ccbf7['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1ccbf7, _0x269668, _0x538056);
        var _0x4d8447 = _0x5502af;
        _0xea2df5['prototype'] = Object['create'](_0x4d8447['prototype']), _0xea2df5['prototype']['constructor'] = _0xea2df5, _0xea2df5['superClass'] = _0x4d8447, _0xea2df5['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']('trex') + '/trex';
        }, _0xea2df5['prototype']['animalInfo'] = function() {
            var _0x3717f9 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x3717f9['aniName'] = 'The T.Rex';
                    break;
                case 0x1:
                    _0x3717f9['aniName'] = 'Golden T.Rex';
                    break;
                case 0x2:
                    _0x3717f9['aniName'] = 'Ember T.Rex';
                    break;
                case 0x64:
                    _0x3717f9['aniName'] = 'Mr. Dollar';
                    break;
                case 0x6f:
                    _0x3717f9['aniName'] = 'Classic T.Rex';
                    break;
                case 0xc8:
                    _0x3717f9['aniName'] = 'Kaiju Rex';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x3717f9['aniName'] = 'Hyporevenant Rex';
                            break;
                    }
                    break;
                case 0xcc:
                    _0x3717f9['aniName'] = 'Tartarus Rex';
                    break;
                case 0xdc:
                    _0x3717f9['aniName'] = 'Bio Mutant T-rex';
                    break;
            }
            return _0x3717f9['skinName'] = this['getSkinName'](), _0x3717f9['upgradeText'] = 'UPGRADED to ' + _0x3717f9['aniName'] + ' The Dinosaur!\x0a This ancient dinosaur has powerful jaws that can drag prey around!!', _0x3717f9['aniCol'] = '#862A2A', _0x3717f9;
        }, _0xea2df5['prototype']['getSubSpecies'] = function() {
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0xea2df5['prototype']['getSpeciesPath'] = function(_0x3eb010) {
            return 'land/' + _0x3eb010 + '/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0xea2df5['prototype']['getAbilityInfo'] = function(_0x4bfe20) {
            var _0x4e7def = {};
            return _0x4e7def['abilName'] = 'Jaws Bite', _0x4e7def['abilImg'] = 'skins/' + this['getSkinName']() + '.png', _0x4e7def['skinThemeID'] = this['skinThemeID'], _0x4e7def['mopeSeasonID'] = this['mopeSeasonID'], _0x4e7def;
        }, _0xea2df5['prototype']['getAniRadius'] = function(_0x5bdb4d) {
            return _0x5bdb4d;
        }, _0xea2df5['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x583aa0 = this['mopeSeasonID'] < 0x2 ? 0x0 : 1.5,
                _0x1e4675 = this['skinScale'],
                _0x3f7093 = this['getAniRadius'](this['skinRad']);
            if (this['loadedSkinImg']) {
                var _0x43f071 = _0x3f7093 / 0x2;
                _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x3f7093 - _0x43f071 + _0x583aa0, -_0x3f7093 - _0x43f071 + _0x583aa0, 0x2 * _0x3f7093 * _0x1e4675, 0x2 * _0x3f7093 * (_0x1e4675 * 1.2));
            }
        };

        function _0xea2df5() {
            _0xea2df5['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xea2df5, _0x269668, _0x366af5);
        var _0x4d8447 = _0x5502af;
        _0x7044d9['prototype'] = Object['create'](_0x4d8447['prototype']), _0x7044d9['prototype']['constructor'] = _0x7044d9, _0x7044d9['superClass'] = _0x4d8447, _0x7044d9['prototype']['getSkinName'] = function() {
            var _0x552f2c = 'land/dragon/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/dragon';
            return _0x552f2c;
        }, _0x7044d9['prototype']['animalInfo'] = function() {
            var _0x15c8f4 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x15c8f4['aniName'] = 'Dragon!';
                            break;
                        case 0x7e7:
                            _0x15c8f4['aniName'] = 'Storm Dragon';
                            break;
                    }
                    break;
                case 0x1:
                    _0x15c8f4['aniName'] = 'Golden Dragon!';
                    break;
                case 0x2:
                    _0x15c8f4['aniName'] = 'Knight Dragon!';
                    break;
                case 0x3:
                    _0x15c8f4['aniName'] = 'Boss Dragon!';
                    break;
                case 0x64:
                    _0x15c8f4['aniName'] = 'The Gargon!';
                    break;
                case 0x6f:
                    _0x15c8f4['aniName'] = 'Classic Dragon';
                    break;
                case 0xca:
                    _0x15c8f4['aniName'] = 'Aberrant Dragon';
                    break;
                case 0xcb:
                    _0x15c8f4['aniName'] = 'Ghoul Dragon';
                    break;
                case 0xcc:
                    _0x15c8f4['aniName'] = 'Magma Dragon!';
                    break;
                case 0xc8:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x15c8f4['aniName'] = 'Goofy Dragon!';
                            break;
                        case 0x1:
                            _0x15c8f4['aniName'] = 'Desert Dragon!';
                            break;
                        case 0x2:
                            _0x15c8f4['aniName'] = 'Forge Dragon!';
                            break;
                        case 0x3:
                            _0x15c8f4['aniName'] = 'Mythical Serpent!';
                            break;
                        case 0x4:
                            _0x15c8f4['aniName'] = 'Fiery Dragon!';
                            break;
                    }
                    break;
                case 0xc9:
                    _0x15c8f4['aniName'] = 'Squishy Dragon!';
                    break;
                case 0xce:
                    _0x15c8f4['aniName'] = 'AG Dragon!';
                    break;
                case 0xdc:
                    _0x15c8f4['aniName'] = 'Behemoth Hive Dragon';
                    break;
                case 0xe0:
                    _0x15c8f4['aniName'] = 'Astral Dragon';
                    break;
                case 0xe1:
                    _0x15c8f4['aniName'] = 'Rose Dragon';
                    break;
                case 0xe2:
                    _0x15c8f4['aniName'] = 'Purple Haze';
                    break;
                case 0xfe:
                    _0x15c8f4['aniName'] = 'Santa Dragon!';
                    break;
            }
            return _0x15c8f4['aniCol'] = '#FF9000', _0x15c8f4['skinName'] = this['getSkinName'](), _0x15c8f4['upgradeText'] = 'UPGRADED to ' + _0x15c8f4['aniName'] + '\x0a (You\'re amazing!) \x0aFly over everything, Hold W to shoot fire!', _0x15c8f4['aniCol'] = '#22FF8A', _0x15c8f4;
        }, _0x7044d9['prototype']['getAbilityInfo'] = function(_0x5c21ff) {
            var _0x251e48 = {};
            return _0x251e48['abilName'] = 'Fire', _0x251e48['abilImg'] = this['getSkinName']() + '.png', _0x251e48['speciesType'] = this['animalSpecies'] == 0x1 ? 0x2 : 0x0, _0x251e48['skinThemeID'] = this['skinThemeID'], _0x251e48['mopeSeasonID'] = this['mopeSeasonID'], _0x251e48;
        }, _0x7044d9['prototype']['diveColor1'] = '#64a034', _0x7044d9['prototype']['diveColor2'] = '#598b30', _0x7044d9['prototype']['onAnimalSpeciesSet'] = function() {
            switch (this['animalSpecies']) {
                case 0x1:
                    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
                    break;
                case 0x2:
                    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
                    break;
            }
        };

        function _0x7044d9() {
            _0x7044d9['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x7044d9, _0x269668, _0x31f937);
        var _0x4d8447 = _0x5502af;
        _0x1ef92b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1ef92b['prototype']['constructor'] = _0x1ef92b, _0x1ef92b['superClass'] = _0x4d8447, _0x1ef92b['prototype']['animalInfo'] = function() {
            var _0xae636e = {};
            _0xae636e['skinName'] = 'land/elephant/' + this['animalSpecies'] + '/elephant';
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0xae636e['aniName'] = 'Elephant!';
                            break;
                        case 0x6f:
                            _0xae636e['aniName'] = 'Classic Elephant!';
                            break;
                    }
                    break;
                case 0x7e7:
                    _0xae636e['aniName'] = 'Carnival Elephant!';
                    break;
                case 0x1:
                    _0xae636e['aniName'] = 'Golden Elephant!';
                    break;
                case 0x2:
                    _0xae636e['aniName'] = 'Albino Elephant!';
                    break;
                case 0xc9:
                    _0xae636e['aniName'] = 'Leiphant!';
                    break;
                case 0xca:
                    _0xae636e['aniName'] = 'Ice Wizard Elephant';
                    break;
                case 0xdc:
                    _0xae636e['aniName'] = 'Lightwave Elephant';
                    break;
            }
            return _0xae636e['skinName'] = 'land/elephant/' + this['animalSpecies'] + '/' + this['animalSubSpecies'] + '/elephant', _0xae636e['aniDesc'] = '', _0xae636e['upgradeText'] = 'UPGRADED to ' + _0xae636e['aniName'] + '\x0a Use your long trunk to attack and eat food!', _0xae636e['aniCol'] = '#945A99', _0xae636e;
        }, _0x1ef92b['prototype']['getAbilityInfo'] = function(_0x26c32d) {
            var _0x3b71b8 = {};
            return _0x3b71b8['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/elephant.png', _0x3b71b8['abilName'] = 'Trunk Hit', _0x3b71b8['skinThemeID'] = this['skinThemeID'], _0x3b71b8['mopeSeasonID'] = this['mopeSeasonID'], _0x3b71b8;
        }, _0x1ef92b['prototype']['getSkinName'] = function() {
            let _0x244067 = this['getSpeciesPath']() + '/elephant';
            return _0x244067 += this['specType'] == 0x0 ? '' : 0x1, _0x244067;
        }, _0x1ef92b['prototype']['getSpeciesPath'] = function() {
            return 'land/elephant/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x1ef92b['prototype']['getSubSpecies'] = function() {
            return '/' + this['animalSubSpecies'];
        };

        function _0x1ef92b() {
            _0x1ef92b['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1ef92b, _0x269668, _0x1d892b);
        var _0x4d8447 = _0x5502af;
        _0x16f304['prototype'] = Object['create'](_0x4d8447['prototype']), _0x16f304['prototype']['constructor'] = _0x16f304, _0x16f304['superClass'] = _0x4d8447, _0x16f304['prototype']['animalInfo'] = function() {
            var _0x1b9308 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1b9308['aniName'] = 'Hippo!';
                    break;
                case 0x1:
                    _0x1b9308['aniName'] = 'Golden Hippo!';
                    break;
                case 0x2:
                    _0x1b9308['aniName'] = 'Pygmy Hippo!';
                    break;
                case 0x64:
                    _0x1b9308['aniName'] = 'Swampster!';
                    break;
                case 0x6f:
                    _0x1b9308['aniName'] = 'Classic Hippo';
                    break;
                case 0xca:
                    _0x1b9308['aniName'] = 'Planet Hippo';
                    break;
                case 0xcc:
                    _0x1b9308['aniName'] = 'Sun Hippo!';
                    break;
            }
            return _0x1b9308['skinName'] = this['getSkinName'](), _0x1b9308['upgradeText'] = 'UPGRADED to ' + _0x1b9308['aniName'] + '!\x0aHippos are great swimmers, dominate the Lakes/Oceans/Mud!', _0x1b9308['aniCol'] = '#945A99', _0x1b9308;
        }, _0x16f304['prototype']['getAbilityInfo'] = function(_0x23523f) {
            var _0x4bf8e9 = {};
            return _0x4bf8e9['abilName'] = 'Loud Grown!', _0x4bf8e9['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/hippo1.png', _0x4bf8e9['skinThemeID'] = this['skinThemeID'], _0x4bf8e9['mopeSeasonID'] = this['mopeSeasonID'], _0x4bf8e9;
        }, _0x16f304['prototype']['getSkinName'] = function() {
            let _0x8fd2a4 = this['getSpeciesPath']() + '/hippo';
            return _0x8fd2a4 += this['specType'] == 0x0 ? '' : 0x1, _0x8fd2a4;
        }, _0x16f304['prototype']['getSpeciesPath'] = function() {
            return 'land/hippo/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x16f304['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x16f304() {
            _0x16f304['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x16f304, _0x269668, _0x1b196d);
        var _0x4d8447 = _0x5502af;
        _0x100e7b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x100e7b['prototype']['constructor'] = _0x100e7b, _0x100e7b['superClass'] = _0x4d8447, _0x100e7b['prototype']['animalInfo'] = function() {
            var _0x1dd9a2 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1dd9a2['aniName'] = 'Giant Spider!';
                    break;
                case 0x1:
                    _0x1dd9a2['aniName'] = 'Golden Spider!';
                    break;
                case 0x2:
                    _0x1dd9a2['aniName'] = 'Goliath Spider!';
                    break;
                case 0x6f:
                    _0x1dd9a2['aniName'] = 'Classic Giant Spider';
                    break;
                case 0xca:
                    _0x1dd9a2['aniName'] = 'Sapphire Cave Spider';
                    break;
                case 0xcc:
                    _0x1dd9a2['aniName'] = 'Smile Spider!';
                    break;
            }
            return _0x1dd9a2['skinName'] = this['getSkinName'](), _0x1dd9a2['upgradeText'] = 'UPGRADED to ' + _0x1dd9a2['aniName'] + '!\x0a Place web around the game to catch prey!', _0x1dd9a2['aniCol'] = 'black', _0x1dd9a2;
        }, _0x100e7b['prototype']['getAbilityInfo'] = function(_0x16e887) {
            var _0x3dd710 = {};
            return _0x3dd710['abilName'] = 'Spin Web!', _0x3dd710['abilImg'] = 'img/web/0/spiderWeb.png', _0x3dd710['skinThemeID'] = this['skinThemeID'], _0x3dd710['mopeSeasonID'] = this['mopeSeasonID'], _0x3dd710;
        }, _0x100e7b['prototype']['getSkinName'] = function() {
            let _0x303144 = this['getSpeciesPath']() + '/giantspider';
            return _0x303144;
        }, _0x100e7b['prototype']['getSpeciesPath'] = function() {
            return 'land/giantspider/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x100e7b['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x100e7b() {
            _0x100e7b['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x100e7b, _0x269668, _0x471528);
        var _0x4d8447 = _0x5502af;
        _0x252de4['prototype'] = Object['create'](_0x4d8447['prototype']), _0x252de4['prototype']['constructor'] = _0x252de4, _0x252de4['superClass'] = _0x4d8447, _0x252de4['prototype']['animalInfo'] = function() {
            var _0x2033e5 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2033e5['aniName'] = 'Boa Constrictor!';
                    break;
                case 0x1:
                    _0x2033e5['aniName'] = 'Golden Boa!';
                    break;
                case 0x2:
                    _0x2033e5['aniName'] = 'Tree Boa!';
                    break;
                case 0x6f:
                    _0x2033e5['aniName'] = 'Classic Boa';
                    break;
            }
            return _0x2033e5['skinName'] = this['getSkinName'](), _0x2033e5['aniDesc'] = '', _0x2033e5['upgradeText'] = 'UPGRADED to ' + _0x2033e5['aniName'] + '!\x0a Coil and suffocate other animals!', _0x2033e5['aniCol'] = 'black', _0x2033e5;
        }, _0x252de4['prototype']['getSkinName'] = function() {
            let _0x40c8ab = this['getSpeciesPath']() + '/boaconstrictor';
            return _0x40c8ab;
        }, _0x252de4['prototype']['getSpeciesPath'] = function() {
            return 'land/boaconstrictor/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x252de4['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x252de4['prototype']['getAbilityInfo'] = function(_0x3f6bde) {
            var _0x6fd20f = {};
            return _0x6fd20f['abilName'] = 'Suffocate prey', _0x6fd20f['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/constrict.png', _0x6fd20f['skinThemeID'] = this['skinThemeID'], _0x6fd20f['mopeSeasonID'] = this['mopeSeasonID'], _0x6fd20f;
        }, _0x252de4['prototype']['getSkinName'] = function() {
            var _0x3386b0 = this['getSpeciesPath']('boaconstrictor') + '/boaconstrictor';
            if (this['flag_usingAbility'] && this['specType'] == 0x1) _0x3386b0 += '2';
            else _0x3386b0 += this['specType'] == 0x0 ? '' : 0x1;
            return _0x3386b0;
        }, _0x252de4['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility']) return;
            var _0x5bb630 = this['rad'] - this['outlineW'],
                _0x3eb405 = 0x1f4 / 0x154,
                _0x11091f = this['getSkinImageObj']('skins/' + this['getSpeciesPath']('boaconstrictor') + '/tongue.png'),
                _0x404684 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x10f50b = _0x3aa021 == _0x243dd0 ? 0x0 : _0x5b9e97(_0x404684, 0.5, 0x5, 0.5),
                _0x1a3497 = _0x3aa021 == _0x243dd0 ? 0x0 : 0x5;
            _0x11091f && _0x4597c4['drawImage'](_0x11091f, -_0x5bb630 * _0x3eb405, -(_0x5bb630 + _0x1a3497 + _0x10f50b) * _0x3eb405, 0x2 * _0x5bb630 * _0x3eb405, 0x2 * _0x5bb630 * _0x3eb405);
        }, _0x252de4['prototype']['getSkinImageObj'] = function(_0x1c3e2d) {
            var _0x40b49e = this['animalSpecies'] === 0x1 || this['animalSpecies'] === 0x2 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x1c3e2d, _0x40b49e);
        };

        function _0x252de4() {
            _0x252de4['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x252de4, _0x269668, _0x2982a0);
        var _0x4d8447 = _0x5502af;
        _0x2d7c54['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2d7c54['prototype']['constructor'] = _0x2d7c54, _0x2d7c54['superClass'] = _0x4d8447, _0x2d7c54['prototype']['animalInfo'] = function() {
            var _0x39ae46 = {};
            _0x39ae46['aniName'] = 'Gorilla!';
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x6f:
                            _0x39ae46['aniName'] = 'Classic Gorilla';
                            break;
                        case 0x70:
                            _0x39ae46['aniName'] = 'Gold-trim Gorilla';
                            break;
                    }
                    break;
                case 0x7e7:
                    _0x39ae46['aniName'] = 'Mafia Gorilla';
                    break;
                case 0x64:
                    _0x39ae46['aniName'] = 'Grim Reaper';
                    break;
                case 0xc9:
                    _0x39ae46['aniName'] = 'Explorer Ape';
                    break;
                case 0xca:
                    _0x39ae46['aniName'] = 'Kongrilla';
                    break;
                case 0xdf:
                    _0x39ae46['aniName'] = 'Valentine Gorilla';
                    break;
                case 0xcc:
                    _0x39ae46['aniName'] = 'Phantom Gorilla';
                    break;
            }
            return _0x39ae46['skinName'] = this['getSkinName'](), _0x39ae46['upgradeText'] = 'UPGRADED to ' + _0x39ae46['aniName'] + '!\x0a' + _0x39ae46['aniName'] + 's are very fast on hills/trees!\x0a Press W to throw bananas! (from trees)', _0x39ae46['aniCol'] = '#945A99', _0x39ae46;
        }, _0x2d7c54['prototype']['getAbilityInfo'] = function(_0x1b114a) {
            var _0x2d64e7 = {};
            return _0x2d64e7['abilName'] = 'Fruit Throw!', _0x2d64e7['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/gorilla.png', _0x2d64e7['skinThemeID'] = this['skinThemeID'], _0x2d64e7['mopeSeasonID'] = this['mopeSeasonID'], _0x2d64e7;
        }, _0x2d7c54['prototype']['getSkinName'] = function() {
            let _0x340b2b = this['getSpeciesPath']() + '/gorilla';
            return _0x340b2b;
        }, _0x2d7c54['prototype']['getSpeciesPath'] = function() {
            return 'land/gorilla/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        }, _0x2d7c54['prototype']['drawSkinCustomization'] = function() {
            this['setSkinScale']();
            if (this['animalSubSpecies'] == 0xcc) {
                var _0x56c34f = 'skins/' + this['getSpeciesPath'](),
                    _0x503ab6 = this['skinScale'] * 1.07,
                    _0x199e0c = this['skinRad'],
                    _0x32ebc5 = 0x1 + Math['trunc'](_0x476319 / 0x78) % 0x7,
                    _0x29a1e4 = this['getSkinImageObj'](_0x56c34f + '/gorilla_head.png');
                if (_0x29a1e4) {
                    var _0x16c306 = 0x0,
                        _0x5d7e41 = this['getSkinImageObj'](_0x56c34f + '/fire' + _0x32ebc5 + '.png');
                    _0x5d7e41 && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x5d7e41, -_0x199e0c * _0x503ab6, (-_0x199e0c + _0x199e0c * 0.05) * _0x503ab6 - _0x16c306, 0x2 * _0x199e0c * _0x503ab6, 0x2 * _0x199e0c * _0x503ab6), _0x4597c4['restore']());
                    _0x4597c4['save']();
                    var _0x199e0c = this['rad'];
                    _0x4597c4['drawImage'](_0x29a1e4, -_0x199e0c * _0x503ab6, (-_0x199e0c + _0x199e0c * 0.05) * _0x503ab6 - _0x16c306, 0x2 * _0x199e0c * _0x503ab6, 0x2 * _0x199e0c * _0x503ab6), _0x4597c4['restore']();
                }
            }
        };

        function _0x2d7c54() {
            _0x2d7c54['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2d7c54, _0x269668, _0x248ce4);
        var _0x4d8447 = _0x5502af;
        _0x186f20['prototype'] = Object['create'](_0x4d8447['prototype']), _0x186f20['prototype']['constructor'] = _0x186f20, _0x186f20['superClass'] = _0x4d8447, _0x186f20['prototype']['animalInfo'] = function() {
            var _0x4c071e = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x4c071e['aniName'] = 'The Kraken!';
                            break;
                        case 0x7e7:
                            _0x4c071e['aniName'] = ' Beach Battle Kraken!';
                            break;
                    }
                    break;
                case 0x1:
                    _0x4c071e['aniName'] = 'Golden Kraken!';
                    break;
                case 0x2:
                    _0x4c071e['aniName'] = 'Chromatic Kraken!';
                    break;
                case 0x6f:
                    _0x4c071e['aniName'] = 'Classic Kraken';
                    break;
                case 0xc9:
                    _0x4c071e['aniName'] = 'Squishy Kraken!';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x4c071e['aniName'] = 'Giant Squid';
                            break;
                        case 0x1:
                            _0x4c071e['aniName'] = 'Hydrothoth Kraken';
                            break;
                    }
                    break;
                case 0xcc:
                    _0x4c071e['aniName'] = 'Cthulhu Kraken!';
                    break;
                case 0xdc:
                    _0x4c071e['aniName'] = 'Dr. Brainiopod';
                    break;
                case 0xde:
                    _0x4c071e['aniName'] = 'Gingerbread Kraken';
                    break;
            }
            return _0x4c071e['aniCol'] = '#FF9000', _0x4c071e['skinName'] = this['getSkinName'](), _0x4c071e['upgradeText'] = 'UPGRADED to THE ' + _0x4c071e['aniName'] + '!\x0a Terrorize the oceans, and be feared by all!\x0a (Release W to use whirlpool ability!)', _0x4c071e['aniCol'] = '#64a034', _0x4c071e;
        }, _0x186f20['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']('kraken') + '/kraken';
        }, _0x186f20['prototype']['getSubSpecies'] = function() {
            return this['animalSpecies'] === 0xca || this['animalSpecies'] === 0x0 || this['animalSpecies'] === 0x6f ? '/' + this['animalSubSpecies'] : '';
        }, _0x186f20['prototype']['getSpeciesPath'] = function(_0x4dd2ba) {
            return 'ocean/' + _0x4dd2ba + '/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x186f20['prototype']['getAbilityInfo'] = function(_0x13039a) {
            var _0x5ae9d7 = {};
            return _0x5ae9d7['abilName'] = 'Whirlpool', _0x5ae9d7['abilImg'] = 'skins/' + this['getSpeciesPath']('kraken') + '/kraken.png', _0x5ae9d7['skinThemeID'] = this['skinThemeID'], _0x5ae9d7['mopeSeasonID'] = this['mopeSeasonID'], _0x5ae9d7;
        }, _0x186f20['prototype']['diveColor1'] = '#64a034', _0x186f20['prototype']['diveColor2'] = '#598b30', _0x186f20['prototype']['onAnimalSpeciesSet'] = function() {
            switch (this['animalSpecies']) {
                case 0x1:
                    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
                    break;
                case 0x2:
                    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
                    break;
            }
        };

        function _0x186f20() {
            _0x186f20['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x186f20, _0x269668, _0x9038c6);
        var _0x4d8447 = _0x5502af;
        _0x2c00c7['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2c00c7['prototype']['constructor'] = _0x2c00c7, _0x2c00c7['superClass'] = _0x4d8447, _0x2c00c7['prototype']['animalInfo'] = function() {
            var _0x239f8b = {};
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x239f8b['aniName'] = 'Bluewhale!';
                            break;
                        case 0x6f:
                            _0x239f8b['aniName'] = 'Classic Blue Whale';
                            break;
                    }
                    break;
                case 0x1:
                    _0x239f8b['aniName'] = 'Golden Whale!';
                    break;
                case 0x2:
                    _0x239f8b['aniName'] = 'Albino Whale!';
                    break;
                case 0xc9:
                    _0x239f8b['aniName'] = 'Mermaid Whale!';
                    break;
                case 0xca:
                    _0x239f8b['aniName'] = 'Whale Boat';
                    break;
                case 0xcb:
                    _0x239f8b['aniName'] = 'Ancient Island Monster';
                    break;
                case 0xdc:
                    _0x239f8b['aniName'] = 'Sailor Whale';
                    break;
                case 0xdf:
                    _0x239f8b['aniName'] = 'Valentine Whale';
                    break;
                case 0x7e7:
                    _0x239f8b['aniName'] = 'Molten Frost Whale';
                    break;
            }
            return _0x239f8b['skinName'] = this['getSkinName'](), _0x239f8b['aniDesc'] = '', _0x239f8b['upgradeText'] = 'UPGRADED to ' + _0x239f8b['aniName'] + '\x0a Smash with your powerful tail!', _0x239f8b['aniCol'] = '#945A99', _0x239f8b;
        }, _0x2c00c7['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + '/bluewhale' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x2c00c7['prototype']['getSpeciesPath'] = function() {
            return 'ocean/bluewhale/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        }, _0x2c00c7['prototype']['getAbilityInfo'] = function(_0x59dcb2) {
            var _0x5edfa2 = {};
            return _0x5edfa2['abilName'] = 'Tail Slap', _0x5edfa2['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability_whaleTailHit.png', _0x5edfa2['skinThemeID'] = this['skinThemeID'], _0x5edfa2['mopeSeasonID'] = this['mopeSeasonID'], _0x5edfa2;
        };

        function _0x2c00c7() {
            _0x2c00c7['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2c00c7, _0x269668, _0x52a058);
        var _0x4d8447 = _0x5502af;
        _0x583040['prototype'] = Object['create'](_0x4d8447['prototype']), _0x583040['prototype']['constructor'] = _0x583040, _0x583040['superClass'] = _0x4d8447, _0x583040['prototype']['animalInfo'] = function() {
            var _0x3c3bdd = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x3c3bdd['aniName'] = 'King Crab!';
                    break;
                case 0x1:
                    _0x3c3bdd['aniName'] = 'Golden Crab!';
                    break;
                case 0x2:
                    _0x3c3bdd['aniName'] = 'Amethyst Crab!';
                    break;
                case 0x6f:
                    _0x3c3bdd['aniName'] = 'Classic King Crab!';
                    break;
                case 0xca:
                    _0x3c3bdd['aniName'] = 'Abyssal King Crab';
                    break;
                case 0xcc:
                    _0x3c3bdd['aniName'] = 'Plasma-core King Crab!';
                    break;
                case 0xdc:
                    _0x3c3bdd['aniName'] = 'Star Crusher Crab';
                    break;
            }
            return _0x3c3bdd['skinName'] = 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab', _0x3c3bdd['aniDesc'] = '', _0x3c3bdd['upgradeText'] = 'UPGRADED to ' + _0x3c3bdd['aniName'] + '!\x0a Use your powerful arms to smack your prey!', _0x3c3bdd['aniCol'] = '#971f0e', _0x3c3bdd;
        }, _0x583040['prototype']['getSkinImageObj'] = function(_0x372dc9) {
            var _0x12f968 = this['mopeSeasonID'],
                _0x4bab39 = './assets/s/' + _0x12f968 + '/' + _0x372dc9;
            return this['skinThemeID'] > 0x0 && (_0x4bab39 = './assets/t/' + this['skinThemeID'] + '/' + _0x372dc9), _0x5e7a48(_0x4bab39, function(_0x310dbb) {
                console['log'](_0x310dbb['src']);
            });
        }, _0x583040['prototype']['getAbilityInfo'] = function(_0x259e08) {
            var _0x1628fb = {};
            return _0x1628fb['abilName'] = 'Arm Smash', _0x1628fb['abilImg'] = 'skins/ocean/kingcrab/' + this['animalSpecies'] + '/ability_crabSmashSkin.png', _0x1628fb['skinThemeID'] = this['skinThemeID'], _0x1628fb['mopeSeasonID'] = this['mopeSeasonID'], _0x1628fb;
        }, _0x583040['prototype']['getSkinName'] = function() {
            return 'ocean/kingcrab/' + this['animalSpecies'] + '/kingcrab';
        };

        function _0x583040() {
            _0x583040['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x583040, _0x269668, _0x38e413);
        var _0x4d8447 = _0x5502af;
        _0x47d081['prototype'] = Object['create'](_0x4d8447['prototype']), _0x47d081['prototype']['constructor'] = _0x47d081, _0x47d081['superClass'] = _0x4d8447, _0x47d081['prototype']['animalInfo'] = function() {
            var _0x2b9d3e = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                        default:
                            _0x2b9d3e['aniName'] = 'Killerwhale!';
                            break;
                        case 0xdf:
                            _0x2b9d3e['aniName'] = 'Valentine Orca';
                            break;
                    }
                    break;
                case 0x1:
                    _0x2b9d3e['aniName'] = 'Golden Orca!';
                    break;
                case 0x2:
                    _0x2b9d3e['aniName'] = 'Albino Orca!';
                    break;
                case 0x6f:
                    _0x2b9d3e['aniName'] = 'Classic Killerwhale!';
                    break;
                case 0xc9:
                    _0x2b9d3e['aniName'] = 'Lifeguard Orca!';
                    break;
                case 0xca:
                    _0x2b9d3e['aniName'] = 'Sea Angel Orca';
                    break;
            }
            return _0x2b9d3e['skinName'] = this['getSkinName'](), _0x2b9d3e['aniDesc'] = '', _0x2b9d3e['upgradeText'] = 'UPGRADED to ' + _0x2b9d3e['aniName'] + '\x0aWhales blow out water when diving! (And sometimes other loot!)', _0x2b9d3e['aniCol'] = '#141414', _0x2b9d3e;
        }, _0x47d081['prototype']['getAbilityInfo'] = function(_0x422544) {
            var _0x41a4c4 = {};
            return _0x41a4c4['abilName'] = 'Cause Wave', _0x41a4c4['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/killerwhale.png', _0x41a4c4['skinThemeID'] = this['skinThemeID'], _0x41a4c4['mopeSeasonID'] = this['mopeSeasonID'], _0x41a4c4;
        }, _0x47d081['prototype']['getSkinName'] = function() {
            let _0x2faa6a = this['getSpeciesPath']() + '/killerwhale';
            return _0x2faa6a += this['specType'] == 0x0 ? '' : 0x1, _0x2faa6a;
        }, _0x47d081['prototype']['getSpeciesPath'] = function() {
            return 'ocean/killerwhale/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x47d081['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x47d081() {
            _0x47d081['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x47d081, _0x269668, _0x26d386);
        var _0x4d8447 = _0x5502af;
        _0x22611c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x22611c['prototype']['constructor'] = _0x22611c, _0x22611c['superClass'] = _0x4d8447, _0x22611c['prototype']['animalInfo'] = function() {
            var _0x57891c = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x57891c['aniName'] = 'Jellyfish';
                    break;
                case 0x6f:
                    _0x57891c['aniName'] = 'Classic Jellyfish';
                    break;
                case 0x70:
                    _0x57891c['aniName'] = 'Gold-trim Jellyfish';
                    break;
                case 0xc9:
                    _0x57891c['aniName'] = 'Seafoam Jellyfish';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x57891c['aniName'] = 'Disco Jellyfish';
                            break;
                        case 0x1:
                            _0x57891c['aniName'] = 'Twisted Horror';
                    }
                    break;
            }
            return _0x57891c['skinName'] = this['getSkinName'](), _0x57891c['aniDesc'] = '', _0x57891c['upgradeText'] = 'UPGRADED to ' + _0x57891c['aniName'] + '!\x0a A slowly-turning animal that can grow quite large!', _0x57891c['aniCol'] = '#FDB9BA', _0x57891c;
        }, _0x22611c['prototype']['getAbilityInfo'] = function(_0x4e4296) {
            var _0x12cbfe = {};
            return _0x12cbfe['abilName'] = 'Touch prey to sting!', _0x12cbfe['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/jellyfish.png', _0x12cbfe['isPassive'] = !![], _0x12cbfe['skinThemeID'] = this['skinThemeID'], _0x12cbfe['mopeSeasonID'] = this['mopeSeasonID'], _0x12cbfe;
        }, _0x22611c['prototype']['getSkinName'] = function() {
            let _0xde36bb = this['getSpeciesPath']() + '/jellyfish';
            return _0xde36bb;
        }, _0x22611c['prototype']['getSpeciesPath'] = function() {
            return 'ocean/jellyfish/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x22611c['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x22611c['prototype']['getSkinImageObj'] = function(_0x18fb79) {
            var _0x18d43c = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x18fb79, _0x18d43c);
        }, _0x22611c['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x5b0081 = -0x0,
                _0x207507 = -0.3,
                _0x56821b = 0x1,
                _0x58700a = 1.2;
            this['animalSpecies'] == 0xc9 && (_0x207507 = -0.3, _0x56821b = 1.05);
            this['mopeSeasonID'] == 0x0 && (_0x207507 = 0x0, _0x56821b = 0x1, _0x58700a = 0x1);
            var _0x2589c9 = this['skinScale'] * _0x56821b,
                _0x903218 = this['skinRad'];
            this['loadedSkinImg'] && _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x903218 * _0x2589c9 + _0x903218 * _0x5b0081, -_0x903218 * _0x2589c9 + _0x903218 * _0x207507, 0x2 * _0x903218 * _0x2589c9, 0x2 * _0x903218 * _0x2589c9 * _0x58700a);
            if (this['animalSpecies'] == 0xca) {
                if (!(_0x3aa021 == _0x243dd0) && !_0x9ffe4d) {
                    var _0x517a10 = Math['trunc'](_0x476319 / 0x1f4) % 0x2;
                    if (_0x517a10 == 0x1) {
                        var _0x468c15 = this['getSkinImageObj']('skins/' + this['getSkinName']() + '_shine.png');
                        _0x468c15 && _0x4597c4['drawImage'](_0x468c15, -_0x903218 * _0x2589c9 + _0x903218 * _0x5b0081, -_0x903218 * _0x2589c9 + _0x903218 * _0x207507, 0x2 * _0x903218 * _0x2589c9, 0x2 * _0x903218 * (_0x2589c9 * 1.2));
                    }
                }
            }
        };

        function _0x22611c() {
            _0x22611c['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x22611c, _0x269668, _0x4a5a29);
        var _0x4d8447 = _0x5502af;
        _0x1d59bd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1d59bd['prototype']['constructor'] = _0x1d59bd, _0x1d59bd['superClass'] = _0x4d8447, _0x1d59bd['prototype']['animalInfo'] = function() {
            var _0x50c9b2 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        default:
                        case 0x0:
                            _0x50c9b2['aniName'] = 'Stingray!';
                            break;
                        case 0xdf:
                            _0x50c9b2['aniName'] = 'Valentine Stingray!';
                            break;
                    }
                    break;
                case 0x64:
                    _0x50c9b2['aniName'] = 'Phantom Ray!';
                    break;
                case 0x6f:
                    _0x50c9b2['aniName'] = 'Classic Stingray';
                    break;
                case 0x70:
                    _0x50c9b2['aniName'] = 'Gold-trim Stingray';
                    break;
                case 0xc9:
                    _0x50c9b2['aniName'] = 'Chocolate Ray!';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x50c9b2['aniName'] = 'Ether Stingray';
                            break;
                        case 0x1:
                            _0x50c9b2['aniName'] = 'Pancake Stingray';
                    }
                    break;
            }
            return _0x50c9b2['skinName'] = this['getSkinName'](), _0x50c9b2['upgradeText'] = 'UPGRADED to ' + _0x50c9b2['aniName'] + '\x0a Use electic shock (Release W key!) to shock animals! \x0a(Takes time to recharge)', _0x50c9b2['aniCol'] = '#164336', _0x50c9b2;
        }, _0x1d59bd['prototype']['getAbilityInfo'] = function(_0xbfdf6c) {
            var _0xc08510 = {};
            return _0xc08510['abilName'] = 'Shock!', _0xc08510['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0xc08510['skinThemeID'] = this['skinThemeID'], _0xc08510['mopeSeasonID'] = this['mopeSeasonID'], _0xc08510;
        }, _0x1d59bd['prototype']['getSkinName'] = function() {
            let _0x3d2461 = this['getSpeciesPath']() + '/stingray';
            return _0x3d2461;
        }, _0x1d59bd['prototype']['getSpeciesPath'] = function() {
            return 'ocean/stingray/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x1d59bd['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x1d59bd['prototype']['drawUnderSkinImg'] = function() {
            var _0x14882e = 1.6,
                _0x51c069 = 1.2,
                _0x5e9731 = 0.8,
                _0x1719d6 = 0x1f4 / 0x154,
                _0x28591e = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
            if (_0x28591e) {
                _0x4597c4['save']();
                var _0x5689cb = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x28591e, -_0x5689cb * _0x1719d6, -_0x5689cb * _0x14882e * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6), _0x4597c4['restore']();
            }
            if (this['animalSpecies'] == 0x64) {
                var _0x47431b = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x33393a = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x47431b, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'],
                    _0x28591e = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail2.png');
                if (_0x28591e) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = Math['max'](0x0, _0x33393a);
                    var _0x5689cb = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x28591e, -_0x5689cb * _0x1719d6, -_0x5689cb * _0x14882e * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6), _0x4597c4['restore']();
                }
                return;
            }
            var _0x28591e = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/leftwing.png');
            if (_0x28591e) {
                _0x4597c4['save']();
                var _0x27147b = 0x1,
                    _0x5689cb = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x28591e, -_0x5689cb * _0x51c069 * _0x1719d6, -_0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6), _0x4597c4['restore']();
            }
            var _0x28591e = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/rightwing.png');
            if (_0x28591e) {
                _0x4597c4['save']();
                var _0x27147b = 0x1,
                    _0x5689cb = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x28591e, -_0x5689cb * _0x5e9731 * _0x1719d6, -_0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6, 0x2 * _0x5689cb * _0x1719d6), _0x4597c4['restore']();
            }
        };

        function _0x1d59bd() {
            _0x1d59bd['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1d59bd, _0x269668, _0x31158f);
        var _0x4d8447 = _0x5502af;
        _0xa72eb6['prototype'] = Object['create'](_0x4d8447['prototype']), _0xa72eb6['prototype']['constructor'] = _0xa72eb6, _0xa72eb6['superClass'] = _0x4d8447, _0xa72eb6['prototype']['animalInfo'] = function() {
            var _0x4dc174 = {};
            _0x4dc174['aniName'] = 'Puffer Fish';
            switch (this['animalSpecies']) {
                case 0x2:
                    _0x4dc174['aniName'] = 'Demon Fish';
                    break;
                case 0x64:
                    _0x4dc174['aniName'] = 'Puffermace';
                    break;
                case 0x6f:
                    _0x4dc174['aniName'] = 'Classic Pufferfish';
                    break;
                case 0x70:
                    _0x4dc174['aniName'] = 'Gold-trim Pufferfish';
                    break;
                case 0xc9:
                    _0x4dc174['aniName'] = 'Omniball Puffer';
                    break;
                case 0xca:
                    _0x4dc174['aniName'] = 'Balloon Pufferfish';
                    break;
            }
            return _0x4dc174['skinName'] = this['getSkinName'](), _0x4dc174['aniDesc'] = '', _0x4dc174['upgradeText'] = 'UPGRADED to ' + _0x4dc174['aniName'] + '!\x0a(Hold W to inflate - become spiky, and dangerous to touch!)', _0x4dc174['aniCol'] = '#94a3a9', _0x4dc174;
        }, _0xa72eb6['prototype']['getAbilityInfo'] = function(_0x36fdfe) {
            var _0x113937 = {};
            return _0x113937['abilName'] = 'Puff!', _0x113937['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/pufferfish2.png', _0x113937['skinThemeID'] = this['skinThemeID'], _0x113937['mopeSeasonID'] = this['mopeSeasonID'], _0x113937;
        }, _0xa72eb6['prototype']['getSkinName'] = function() {
            let _0x14ccf9 = this['getSpeciesPath']() + '/pufferfish';
            if (this['flag_usingAbility']) _0x14ccf9 += '2';
            return _0x14ccf9;
        }, _0xa72eb6['prototype']['getSpeciesPath'] = function() {
            return 'ocean/pufferfish/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0xa72eb6['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0xa72eb6['prototype']['drawUnderSkinImg'] = function() {
            var _0x9d8f7f = 1.6,
                _0x293492 = 0x1f4 / 0x154,
                _0x52dc5e = '';
            if (this['animalSpecies'] == 0x64) {
                _0x52dc5e = '/100';
                var _0x4e55c9 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
                if (_0x4e55c9) {
                    _0x4597c4['save']();
                    var _0x55bcb2 = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x4e55c9, -_0x55bcb2 * _0x293492, -_0x55bcb2 * _0x9d8f7f * _0x293492, 0x2 * _0x55bcb2 * _0x293492, 0x2 * _0x55bcb2 * _0x293492), _0x4597c4['restore']();
                }
            }
        };

        function _0xa72eb6() {
            _0xa72eb6['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xa72eb6, _0x269668, _0x1dbdcd);
        var _0x4d8447 = _0x5502af;
        _0x5d93e0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5d93e0['prototype']['constructor'] = _0x5d93e0, _0x5d93e0['superClass'] = _0x4d8447, _0x5d93e0['prototype']['animalInfo'] = function() {
            var _0x5dfe70 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5dfe70['aniName'] = 'Squid';
                    break;
                case 0x6f:
                    _0x5dfe70['aniName'] = 'Classic Squid';
                    break;
                case 0x70:
                    _0x5dfe70['aniName'] = 'Gold-trim Squid';
                    break;
                case 0xc8:
                    _0x5dfe70['aniName'] = 'Cuttle Fish';
                    break;
                case 0xc9:
                    _0x5dfe70['aniName'] = 'Seacoast Squid';
                    break;
                case 0xca:
                    _0x5dfe70['aniName'] = 'Psychedelic Squid';
                    break;
                case 0xcc:
                    _0x5dfe70['aniName'] = 'Void Scuttling Squid';
                    break;
            }
            return _0x5dfe70['skinName'] = this['getSkinName'](), _0x5dfe70['aniDesc'] = '', _0x5dfe70['upgradeText'] = 'UPGRADED to ' + _0x5dfe70['aniName'] + '!\x0a ' + _0x5dfe70['aniName'] + ' can use INK when injured (press W!) \x0a+ you can hide in plankton bushes!', _0x5dfe70['aniCol'] = '#40dda4', _0x5dfe70;
        }, _0x5d93e0['prototype']['getSkinName'] = function() {
            let _0xffa062 = this['getSpeciesPath']() + '/squid';
            return _0xffa062 += this['specType'] == 0x0 ? '' : 0x1, _0xffa062;
        }, _0x5d93e0['prototype']['getSpeciesPath'] = function() {
            return 'ocean/squid/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x5d93e0['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x5d93e0['prototype']['getAbilityInfo'] = function(_0x41ba85) {
            var _0x2e8cf2 = {};
            return _0x2e8cf2['abilName'] = 'INK!', _0x2e8cf2['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0x2e8cf2['skinThemeID'] = this['skinThemeID'], _0x2e8cf2['mopeSeasonID'] = this['mopeSeasonID'], _0x2e8cf2;
        }, _0x5d93e0['prototype']['drawUnderSkinImg'] = function() {
            if (this['animalSpecies'] == 0x0 || this['animalSpecies'] == 0xc9) {
                var _0x5da6b5 = 0x1f4 / 0x154,
                    _0x181632 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/cape.png');
                if (_0x181632) {
                    _0x4597c4['save']();
                    var _0x3c4585 = 1.1,
                        _0x121757 = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x181632, -_0x121757 * _0x5da6b5, -_0x121757 * _0x3c4585 * _0x5da6b5, 0x2 * _0x121757 * _0x5da6b5, 0x2 * _0x121757 * _0x5da6b5), _0x4597c4['restore']();
                }
            }
        };

        function _0x5d93e0() {
            _0x5d93e0['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5d93e0, _0x269668, _0x4ef33a);
        var _0x4d8447 = _0x5502af;
        _0x178bf5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x178bf5['prototype']['constructor'] = _0x178bf5, _0x178bf5['superClass'] = _0x4d8447, _0x178bf5['prototype']['updateZ'] = function() {
            if (this['flag_underWater']) this['z'] = -0x97;
            else this['z'] = this['rad'];
        }, _0x178bf5['prototype']['animalInfo'] = function() {
            var _0x5a190e = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5a190e['aniName'] = 'Shark!';
                    break;
                case 0x1:
                    _0x5a190e['aniName'] = 'Tiger Shark!';
                    break;
                case 0x2:
                    _0x5a190e['aniName'] = 'Hammerhead Shark!';
                    break;
                case 0x6f:
                    _0x5a190e['aniName'] = 'Classic Shark';
                    break;
                case 0x70:
                    _0x5a190e['aniName'] = 'Gold-trim Shark';
                    break;
                case 0xc9:
                    _0x5a190e['aniName'] = 'Surfboard Chomper!';
                    break;
            }
            return _0x5a190e['skinName'] = this['getSkinName'](), _0x5a190e['upgradeText'] = 'UPGRADED to ' + _0x5a190e['aniName'] + '\x0a A vicious predator of the oceans!', _0x5a190e['aniCol'] = '#999fc6', _0x5a190e;
        }, _0x178bf5['prototype']['getAbilityInfo'] = function(_0x2bd0d9) {
            var _0xaf9418 = {};
            return _0xaf9418['abilName'] = 'Jaws Bite', _0xaf9418['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0xaf9418['skinThemeID'] = this['skinThemeID'], _0xaf9418['mopeSeasonID'] = this['mopeSeasonID'], _0xaf9418;
        }, _0x178bf5['prototype']['getSkinName'] = function() {
            let _0x454695 = this['getSpeciesPath']() + '/shark';
            return _0x454695;
        }, _0x178bf5['prototype']['getSpeciesPath'] = function() {
            return 'ocean/shark/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x178bf5['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x178bf5['prototype']['getSkinImageObj'] = function(_0x475ebd) {
            var _0x1e8452 = this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x475ebd, _0x1e8452);
        }, _0x178bf5['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_underWater']) return;
            var _0x3fe773 = 1.33,
                _0xe04cdb = 0x1,
                _0x116e41 = 0x1f4 / 0x154 * _0xe04cdb,
                _0x5b94ca = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
            if (_0x5b94ca) {
                _0x4597c4['save']();
                var _0x57d71d = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x5b94ca, -_0x57d71d * _0x116e41, -_0x57d71d * _0x3fe773 * _0x116e41, 0x2 * _0x57d71d * _0x116e41, 0x2 * _0x57d71d * _0x116e41), _0x4597c4['restore']();
            }
        };

        function _0x178bf5() {
            _0x178bf5['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x178bf5, _0x269668, _0x2e6e95);
        var _0x4d8447 = _0x5502af;
        _0x314491['prototype'] = Object['create'](_0x4d8447['prototype']), _0x314491['prototype']['constructor'] = _0x314491, _0x314491['superClass'] = _0x4d8447, _0x314491['prototype']['animalInfo'] = function() {
            var _0x4c8c6b = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4c8c6b['aniName'] = 'Turtle!';
                    break;
                case 0x6f:
                    _0x4c8c6b['aniName'] = 'Classic Turtle';
                    break;
                case 0x70:
                    _0x4c8c6b['aniName'] = 'Gold-trim Turtle';
                    break;
                case 0xc8:
                    _0x4c8c6b['aniName'] = 'Leather Back Turtle!';
                    break;
                case 0xc9:
                    _0x4c8c6b['aniName'] = 'Kiwi Turtle!';
                    break;
                case 0xca:
                    _0x4c8c6b['aniName'] = 'Molten Lava Turtle';
                    break;
            }
            return _0x4c8c6b['skinName'] = this['getSkinName'](), _0x4c8c6b['aniDesc'] = '', _0x4c8c6b['upgradeText'] = 'UPGRADED to ' + _0x4c8c6b['aniName'] + '\x0a Lives well on land & water! (On land, Press W to go into your shell!)', _0x4c8c6b['aniCol'] = '#502E1A', _0x4c8c6b;
        }, _0x314491['prototype']['getAbilityInfo'] = function(_0x263944) {
            var _0x338c22 = {};
            return _0x338c22['abilName'] = 'Hide in Shell!', _0x338c22['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/turtle2.png', _0x338c22['skinThemeID'] = this['skinThemeID'], _0x338c22['mopeSeasonID'] = this['mopeSeasonID'], _0x338c22;
        }, _0x314491['prototype']['getSkinName'] = function() {
            let _0x462dd1 = this['getSpeciesPath']() + '/turtle';
            if (this['flag_usingAbility']) _0x462dd1 += '2';
            else _0x462dd1 += this['specType'] == 0x0 ? '' : 0x1;
            return _0x462dd1;
        }, _0x314491['prototype']['getSpeciesPath'] = function() {
            return 'ocean/turtle/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x314491['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x314491['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                if (this['specType'] == 0x1) {
                    var _0x38783f = 0x1f4 / 0x154,
                        _0x1d617b = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/head.png');
                    if (_0x1d617b) {
                        var _0x57c000 = 0.88;
                        _0x4597c4['save']();
                        var _0x1d0ee7 = this['rad'] - this['outlineW'];
                        _0x4597c4['drawImage'](_0x1d617b, -_0x1d0ee7 * _0x38783f, -_0x1d0ee7 * _0x57c000 * _0x38783f, 0x2 * _0x1d0ee7 * _0x38783f, 0x2 * _0x1d0ee7 * _0x38783f), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x314491() {
            _0x314491['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x314491, _0x269668, _0x23c342);
        var _0x4d8447 = _0x5502af;
        _0x1d4282['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1d4282['prototype']['constructor'] = _0x1d4282, _0x1d4282['superClass'] = _0x4d8447, _0x1d4282['prototype']['getAniRadius'] = function(_0x3eb307) {
            return _0x3eb307;
        }, _0x1d4282['prototype']['animalInfo'] = function() {
            var _0x568fe2 = {};
            switch (this['animalSubSpecies']) {
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x568fe2['aniName'] = 'Swordfish!';
                            break;
                        case 0x6f:
                            _0x568fe2['aniName'] = 'Classic Swordfish!';
                            break;
                        case 0x70:
                            _0x568fe2['aniName'] = 'Gold-trim Swordfish!';
                            break;
                        case 0xc9:
                            _0x568fe2['aniName'] = 'Surfboardfish';
                            break;
                    }
                    break;
                case 0xca:
                    _0x568fe2['aniName'] = 'Rocket Swordfish';
                    break;
                case 0xcc:
                    _0x568fe2['aniName'] = 'Chainsaw Fish';
                case 0x7e7:
                    _0x568fe2['aniName'] = 'Soda Fish';
                    break;
            }
            return _0x568fe2['skinName'] = this['getSkinName'](), _0x568fe2['upgradeText'] = 'UPGRADED to ' + _0x568fe2['aniName'] + '\x0a (Press W to rush with your sharp nose!)', _0x568fe2['aniCol'] = '#689CD7', _0x568fe2;
        }, _0x1d4282['prototype']['getAbilityInfo'] = function(_0x1059ba) {
            var _0x2bf00d = {};
            return _0x2bf00d['abilName'] = 'Charge!', _0x2bf00d['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/ability.png', _0x2bf00d['skinThemeID'] = this['skinThemeID'], _0x2bf00d['mopeSeasonID'] = this['mopeSeasonID'], _0x2bf00d;
        }, _0x1d4282['prototype']['getSkinName'] = function() {
            let _0x482dd4 = this['getSpeciesPath']() + '/swordfish';
            if (this['flag_usingAbility']) _0x482dd4 += '2';
            else _0x482dd4 += this['specType'] == 0x0 ? '' : 0x1;
            return _0x482dd4;
        }, _0x1d4282['prototype']['getSpeciesPath'] = function() {
            return 'ocean/swordfish/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        }, _0x1d4282['prototype']['drawSkinCustomization'] = function() {}, _0x1d4282['prototype']['oldBasicDrawSkinImg'] = _0x1d4282['prototype']['basicDrawSkinImg'], _0x1d4282['prototype']['basicDrawSkinImg'] = function() {
            if (this['mopeSeasonID'] < 0x2) this['oldBasicDrawSkinImg']();
            else {
                this['setSkinScale']();
                var _0x2e6ec0 = this['skinScale'],
                    _0x4d9505 = this['rad'],
                    _0x5547b0 = 0x0,
                    _0x357547 = 1.2,
                    _0x52e0d7 = -_0x357547 / 0x4;
                this['loadedSkinImg'] && _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x4d9505 * _0x2e6ec0 + _0x4d9505 * _0x5547b0, -_0x4d9505 * _0x2e6ec0 + _0x4d9505 * _0x52e0d7, 0x2 * _0x4d9505 * _0x2e6ec0, 0x2 * _0x4d9505 * (_0x2e6ec0 * _0x357547));
            }
        }, _0x1d4282['prototype']['drawUnderSkinImg'] = function() {
            if (this['mopeSeasonID'] >= 0x2) return;
            var _0x4fd475 = 0.7,
                _0x33789f = 1.15,
                _0x4cc0e0 = 0x1f4 / 0x154,
                _0x4caae0 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/nose.png');
            if (_0x4caae0) {
                _0x4597c4['save']();
                var _0x516c4c = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x4caae0, -_0x516c4c * _0x4cc0e0, -_0x516c4c * _0x4fd475 * _0x4cc0e0, 0x2 * _0x516c4c * _0x4cc0e0, 0x2 * _0x516c4c * _0x4cc0e0), _0x4597c4['restore']();
            }
            var _0x4caae0 = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/tail.png');
            if (_0x4caae0) {
                _0x4597c4['save']();
                var _0x516c4c = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x4caae0, -_0x516c4c * _0x4cc0e0, -_0x516c4c * _0x33789f * _0x4cc0e0, 0x2 * _0x516c4c * _0x4cc0e0, 0x2 * _0x516c4c * _0x4cc0e0), _0x4597c4['restore']();
            }
        }, _0x1d4282['prototype']['getSkinImageObj'] = function(_0x204c7d) {
            var _0x4e9807 = this['animalSpecies'] === 0xc9 ? 0x1 : this['mopeSeasonID'];
            return this['getSkinImageObjForSeason'](_0x204c7d, _0x4e9807);
        };

        function _0x1d4282() {
            _0x1d4282['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1d4282, _0x269668, _0x9918f2);
        var _0x4d8447 = _0x5502af;
        _0x15c0a0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x15c0a0['prototype']['constructor'] = _0x15c0a0, _0x15c0a0['superClass'] = _0x4d8447, _0x15c0a0['prototype']['animalInfo'] = function() {
            var _0x36cbea = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x36cbea['aniName'] = 'Crab!';
                    break;
                case 0x6f:
                    _0x36cbea['aniName'] = 'Classic Crab';
                    break;
                case 0x70:
                    _0x36cbea['aniName'] = 'Gold-trim Crab';
                    break;
                case 0xc8:
                    _0x36cbea['aniName'] = 'Metallic Crab!';
                    break;
                case 0xc9:
                    _0x36cbea['aniName'] = 'Coconut Crab!';
                    break;
                case 0xcc:
                    _0x36cbea['aniName'] = 'Dark Matter Crab!';
                    break;
            }
            return _0x36cbea['skinName'] = this['getSkinName'](), _0x36cbea['aniDesc'] = '', _0x36cbea['upgradeText'] = 'UPGRADED to ' + _0x36cbea['aniName'] + '\x0a Crabs can survive on dry land!\x0a (On land, Press W to go into your shell!)', _0x36cbea['aniCol'] = '#bf2408', _0x36cbea;
        }, _0x15c0a0['prototype']['getAbilityInfo'] = function(_0x4f021a) {
            var _0x404840 = {};
            return _0x404840['abilName'] = 'Hide in Shell!', _0x404840['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/crab2.png', _0x404840['skinThemeID'] = this['skinThemeID'], _0x404840['mopeSeasonID'] = this['mopeSeasonID'], _0x404840;
        }, _0x15c0a0['prototype']['getSkinName'] = function() {
            let _0x4b0d1b = this['getSpeciesPath']() + '/crab';
            if (this['flag_usingAbility']) _0x4b0d1b += '2';
            else _0x4b0d1b += this['specType'] == 0x0 ? '' : 0x1;
            return _0x4b0d1b;
        }, _0x15c0a0['prototype']['getSpeciesPath'] = function() {
            return 'ocean/crab/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x15c0a0['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x15c0a0['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x172eea = this['skinScale'],
                _0x1ba561 = this['skinRad'];
            _0x4597c4['save']();
            if (this['id'] > 0x0) _0x4597c4['rotate'](_0x4c4686(0x5a));
            if (this['loadedSkinImg']) {
                _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x1ba561 * _0x172eea, -_0x1ba561 * _0x172eea, 0x2 * _0x1ba561 * _0x172eea, 0x2 * _0x1ba561 * _0x172eea);
            } else _0x4597c4['fillStyle'] = this['skinNotLoadedColor'], _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - this['outlineW']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
            _0x4597c4['restore']();
        };

        function _0x15c0a0() {
            _0x15c0a0['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x15c0a0, _0x269668, _0x172231);
        var _0x4d8447 = _0x5502af;
        _0x1a005f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1a005f['prototype']['constructor'] = _0x1a005f, _0x1a005f['superClass'] = _0x4d8447, _0x1a005f['prototype']['animalInfo'] = function() {
            var _0x38a4c6 = {};
            return _0x38a4c6['aniName'] = 'Snail', _0x38a4c6['aniCol'] = '#FF9000', _0x38a4c6['skinName'] = 'ocean/snail/snail', _0x38a4c6['upgradeText'] = 'UPGRADED to ' + _0x38a4c6['aniName'] + '!\x0a Press W to hide in your shell!', _0x38a4c6;
        }, _0x1a005f['prototype']['getSkinName'] = function() {
            var _0x216787 = 'ocean/snail/snail';
            return _0x216787;
        }, _0x1a005f['prototype']['dir'] = 0x1, _0x1a005f['prototype']['snail_yOffset'] = 0.75, _0x1a005f['prototype']['wasUsingAbility'] = ![], _0x1a005f['prototype']['animateHead'] = ![], _0x1a005f['prototype']['animationIn'] = null, _0x1a005f['prototype']['animationOut'] = null, _0x1a005f['prototype']['offset'] = 0x0, _0x1a005f['prototype']['drawUnderSkinImg'] = function() {
            if (this['flag_usingAbility'] && !this['wasUsingAbility'] && this['animationIn'] == null) this['wasUsingAbility'] = !![], this['animationIn'] = new _0x504c7a(this, 0x1, _0x504c7a['arc']), this['animationIn']['keepLastFrame'] = !![], this['animationIn']['onFrameEntered'] = function(_0x556423) {
                if (!isNaN(_0x556423)) {
                    if (this['forObj']['offset'] < 0.35) this['forObj']['offset'] = 0.35 * _0x556423 * 0xa;
                }
            }, this['animationIn']['onStop'] = function() {
                this['forObj']['offset'] = 0.35, this['forObj']['wasUsingAbility'] = !![], this['forObj']['animationIn'] = null;
            };
            else !this['flag_usingAbility'] && this['wasUsingAbility'] && this['animationOut'] == null && (this['wasUsingAbility'] = !![], this['animationOut'] = new _0x504c7a(this, 0x3, _0x504c7a['halfWave']), this['animationOut']['keepLastFrame'] = !![], this['animationOut']['onFrameEntered'] = function(_0x47fed3) {
                !isNaN(_0x47fed3) && (this['forObj']['offset'] = 0.35 * (0x1 - _0x47fed3));
            }, this['animationOut']['onStop'] = function() {
                this['forObj']['offset'] = 0x0, this['forObj']['wasUsingAbility'] = ![], this['forObj']['animationOut'] = null;
            });
            this['animationIn'] && this['animationIn']['run']();
            this['animationOut'] && this['animationOut']['run']();
            if (this['animationIn'] == null && this['animationOut'] == null && !this['wasUsingAbility']) this['offset'] = 0x0;
            var _0xae22e3 = 0.75 + this['offset'],
                _0x10145e = 0x1f4 / 0x154,
                _0x57fe9e = this['getSkinImageObj']('skins/ocean/snail/snail_head.png');
            if (_0x57fe9e) {
                _0x4597c4['save']();
                var _0x11c1dc = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x57fe9e, -_0x11c1dc * _0x10145e, -_0x11c1dc * _0xae22e3 * _0x10145e, 0x2 * _0x11c1dc * _0x10145e, 0x2 * _0x11c1dc * _0x10145e), _0x4597c4['restore']();
            }
        };

        function _0x1a005f() {
            _0x1a005f['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1a005f, _0x269668, _0x3fb2b0);
        var _0x4d8447 = _0x5d11ac;
        _0x51ae0e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x51ae0e['prototype']['constructor'] = _0x51ae0e, _0x51ae0e['superClass'] = _0x4d8447, _0x51ae0e['prototype']['updateZ'] = function() {
            this['z'] = -0x8c;
        }, _0x51ae0e['prototype']['shiverF'] = 0.015, _0x51ae0e['prototype']['drawTranslate'] = function() {
            _0x4597c4['translate'](this['x'], this['y']), _0x4597c4['save']();
            if (this['eruption'] >= this['shakeStart'] && this['eruption'] <= this['shakeEnd'] + 0x1) {
                if (this['eruption'] >= this['shakeStart'] + 0x2) this['shiverF'] = 0.025;
                else this['shiverF'] = 0.015;
                var _0x2cb697 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x600ccd = 0.2,
                    _0x38c2d2 = this['rad'] * this['shiverF'];
                this['shakeOffsetX'] = _0x38c2d2 * Math['sin'](0x2 * Math['PI'] / _0x600ccd * _0x2cb697);
                var _0x600ccd = 0.3,
                    _0x38c2d2 = this['rad'] * this['shiverF'];
                this['shakeOffsetY'] = _0x38c2d2 * Math['sin'](0x2 * Math['PI'] / _0x600ccd * _0x2cb697), _0x4597c4['translate'](-this['shakeOffsetX'], -this['shakeOffsetY']);
            }
        }, _0x51ae0e['prototype']['drawHealthBar'] = function() {
            _0x4597c4['restore']();
        }, _0x51ae0e['prototype']['customDraw2'] = function(_0x580eae) {}, _0x51ae0e['prototype']['customDraw'] = function(_0x50d9ab) {
            if (this['curBiome'] == _0x11e4d4) _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#faf6f2'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.6), '#e0dbd5'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#9DDADE'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#9DDADE');
            else this['curBiome'] == _0x3e4ef7 ? (_0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#cebe58'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.75), '#b4a53e'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#ca6423'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#923c04')) : (_0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0x1), '#815427'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.6), '#6e4b29'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.5), '#543d28'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.45), '#3f3124'));
            var _0x390380 = 0x0;
            switch (Math['round'](this['erruption'])) {
                case 0x0:
                    _0x390380 = 0x0;
                    break;
                case 0x1:
                    _0x390380 = 0x0;
                    break;
                case 0x2:
                    _0x390380 = 0x1, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), _0x1c0746);
                    break;
                case 0x3:
                    _0x390380 = 0x2, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), _0x1c0746);
                    break;
                case 0x4:
                case 0x5:
                case 0x6:
                    _0x390380 = 0x3, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), _0x1c0746);
                    break;
                case 0x7:
                    _0x390380 = 0x2, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), _0x1c0746);
                    break;
                case 0x8:
                    _0x390380 = 0x1, _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), _0x1c0746);
                    break;
                case 0x9:
                    _0x390380 = 0x0;
                    break;
                case 0xa:
                    _0x390380 = 0x0;
                    break;
            }
            _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), '#241e19'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.25), '#120f0d'), _0x4096ce(0x0, 0x0, Math['max'](0x0, this['rad'] * 0.33), _0x1c0746);
            if (this['erruption'] > 0x1 && this['erruption'] < 0xa) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1 - this['underwaterA'];
                var _0x5d8210 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x47e2f2 = 1.5,
                    _0x18dc9a = 0x2,
                    _0x3f5951 = _0x18dc9a * Math['sin'](0x2 * Math['PI'] / _0x47e2f2 * _0x5d8210);
                _0x4597c4['fillStyle'] = 'yellow';
                var _0x20823b = Math['max'](0x0, this['rad'] * 0.2) * 0.15;
                _0x4597c4['beginPath']();
                var _0x283b27 = 0x1;
                for (i = 0x1; i <= _0x283b27; i++) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['rotate'](this['rPer'] * Math['PI'] * 0x2 * i), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x20823b * -0.35, _0x20823b * -0.33, Math['max'](0x0, _0x20823b + _0x3f5951), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x20823b * 0.35, _0x20823b * -0.32, Math['max'](0x0, _0x20823b - _0x3f5951), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x20823b * 0.35, _0x20823b * 0.36, Math['max'](0x0, _0x20823b + _0x3f5951), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x20823b * -0.35, _0x20823b * 0.35, Math['max'](0x0, _0x20823b - _0x3f5951), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            }
            if (this['curBiome'] == _0x11e4d4) {
                _0x4597c4['save']();
                var _0x34c59c = this['getSkinImageObj']('img/arcticano/' + _0x390380 + '.png');
                if (_0x34c59c) {
                    var _0x33284e = this['rad'] * 0.35;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x34c59c, -_0x33284e, -_0x33284e, 0x2 * _0x33284e, 0x2 * _0x33284e);
                }
                _0x4597c4['restore']();
            }
        }, _0x51ae0e['prototype']['readCustomData_onNewlyVisible'] = function(_0x3a4e4e) {
            _0x51ae0e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3a4e4e), this['maxLvl'] = _0x3a4e4e['readUInt8']() / 0xa, this['shakeStart'] = _0x3a4e4e['readUInt8']() / 0xa, this['shakeEnd'] = _0x3a4e4e['readUInt8']() / 0xa, this['eruption'] = _0x3a4e4e['readUInt16']() / 0x64, this['spitLevelMin'] = this['maxLvl'] * 0.2, this['spitLevelMax'] = this['maxLvl'] * 0.8;
        }, _0x51ae0e['prototype']['readUpdatedProperty'] = function(_0x595bd3, _0x5555df) {
            _0x595bd3 == _0x39b864 && (this['eruption'] = _0x5555df['readUInt16']() / 0x64);
        };

        function _0x51ae0e() {
            _0x51ae0e['superClass']['call'](this, _0x1a14e4);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x51ae0e, _0x1a14e4);
        var _0x498438 = _0x4cb9d9,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x4cb9d9['prototype']['customDraw'] = function(_0x69e7cd) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['globalAlpha'] = 0x1;
            var _0x2c776b = this['getSkinImageObj']('img/raindrop.png');
            if (_0x2c776b) {
                var _0x29b0c1 = this['rad'] * 0x2;
                _0x4597c4['drawImage'](_0x2c776b, -_0x29b0c1, -_0x29b0c1, 0x2 * _0x29b0c1, 0x2 * _0x29b0c1);
            }
            _0x4597c4['restore']();
        }, _0x4cb9d9['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 + this['rad'];
        };

        function _0x4cb9d9() {
            _0x4cb9d9['superClass']['call'](this), this['spawnTime'] = _0x476319;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4cb9d9, _0x5c1489);
        var _0x4d8447 = _0x5d11ac;
        _0x460a70['prototype'] = Object['create'](_0x4d8447['prototype']), _0x460a70['prototype']['constructor'] = _0x460a70, _0x460a70['superClass'] = _0x4d8447, _0x460a70['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0x460a70['prototype']['customDraw'] = function(_0x2cc91b) {
            if (!(_0x3aa021 == _0x243dd0)) {
                var _0x3d7a7a = 0x1,
                    _0x58c894 = 0.15,
                    _0x8b885c = 0.8,
                    _0x2143fd = 0.5 * (_0x8b885c - _0x58c894),
                    _0x255d39 = _0x58c894 + _0x2143fd + _0x2143fd * Math['sin'](0x2 * Math['PI'] / _0x3d7a7a * (_0x476319 / 0x3e8));
                _0x4597c4['save']();
                {
                    _0x4597c4['globalAlpha'] *= _0x255d39;
                }
                _0x4597c4['restore']();
                var _0x3d7a7a = 0x1,
                    _0x58c894 = 0.85,
                    _0x8b885c = 0x1,
                    _0x2143fd = 0.5 * (_0x8b885c - _0x58c894),
                    _0x54cb5e = _0x58c894 + _0x2143fd + _0x2143fd * Math['sin'](0x2 * Math['PI'] / _0x3d7a7a * (_0x476319 / 0x3e8)),
                    _0x5992cb = Math['trunc'](_0x476319 / 0x78) % 0x5,
                    _0x1325e8 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + _0x5992cb + '.png');
                if (_0x1325e8) {
                    var _0x1a6a39 = 0x0,
                        _0x67143 = this['rad'] * 0.4,
                        _0x4dec7c = this['rad'] * 0x2 * (0x2 + _0x54cb5e * 0x2) / 0x3,
                        _0x412f9f = this['rad'] * 3.5 * _0x54cb5e,
                        _0x148109 = 0.5,
                        _0x19b9f3 = 0.95;
                    _0x4597c4['save']();
                    {
                        _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x54cb5e, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x1325e8, _0x1a6a39 + _0x4dec7c * -_0x148109, _0x67143 + _0x412f9f * -_0x19b9f3, _0x4dec7c, _0x412f9f);
                    }
                    _0x4597c4['restore']();
                } else {}
            } else {
                var _0x1325e8 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/0.png');
                if (_0x1325e8) {
                    var _0x3d7a7a = 0x1,
                        _0x58c894 = 0.85,
                        _0x8b885c = 0x1,
                        _0x2143fd = 0.5 * (_0x8b885c - _0x58c894),
                        _0x54cb5e = _0x58c894 + _0x2143fd + _0x2143fd * Math['sin'](0x2 * Math['PI'] / _0x3d7a7a * (_0x476319 / 0x3e8)),
                        _0x1a6a39 = 0x0,
                        _0x67143 = this['rad'] * 0.4,
                        _0x4dec7c = this['rad'] * 0x2 * (0x2 + _0x54cb5e * 0x2) / 0x3,
                        _0x412f9f = this['rad'] * 3.5 * _0x54cb5e,
                        _0x148109 = 0.5,
                        _0x19b9f3 = 0.95;
                    _0x4597c4['save']();
                    {
                        _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x1325e8, _0x1a6a39 + _0x4dec7c * -_0x148109, _0x67143 + _0x412f9f * -_0x19b9f3, _0x4dec7c, _0x412f9f);
                    }
                    _0x4597c4['restore']();
                }
            }
        };

        function _0x460a70() {
            _0x460a70['superClass']['call'](this, _0x44519b);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x460a70, _0x44519b);
        var _0x4d8447 = _0x5502af;
        _0x17b290['prototype'] = Object['create'](_0x4d8447['prototype']), _0x17b290['prototype']['constructor'] = _0x17b290, _0x17b290['superClass'] = _0x4d8447, _0x17b290['prototype']['animalInfo'] = function() {
            var _0x34ab0e = {};
            switch (this['animalSpecies']) {
                default:
                    _0x34ab0e['aniName'] = 'The BigFoot';
                    break;
            }
            return _0x34ab0e['skinName'] = 'land/bigfoot/' + this['animalSpecies'] + '/bigfoot', _0x34ab0e['aniDesc'] = '', _0x34ab0e['upgradeText'] = 'UPGRADED to ' + _0x34ab0e['aniName'] + '! So it really exists... \x0a Right click/W to throw Spears. \x0aHold to make a fire (every 11s)', _0x34ab0e['aniCol'] = '#839eb5', _0x34ab0e;
        }, _0x17b290['prototype']['getAbilityInfo'] = function(_0x210e10) {
            var _0x16cc94 = {};
            return _0x16cc94['abilName'] = 'Throw Spear\x0a (Hold for fire!)', _0x16cc94['abilImg'] = 'skins/land/bigfoot/' + this['animalSpecies'] + '/ability.png', _0x16cc94['skinThemeID'] = this['skinThemeID'], _0x16cc94['mopeSeasonID'] = this['mopeSeasonID'], _0x16cc94;
        }, _0x17b290['prototype']['getSkinName'] = function() {
            var _0x2739ae = '';
            _0x2739ae = 'land/bigfoot/' + this['animalSpecies'] + '/';
            if (this['flag_underWater'] || this['flag_isInArena']) _0x2739ae += 'thebigfoot';
            else _0x2739ae += 'bigfoot';
            return _0x2739ae;
        }, _0x17b290['prototype']['drawUnderSkinTail'] = function(_0x5c53b0) {
            if (!this['isCamouflage']) _0x17b290['superClass']['prototype']['drawUnderSkinTail']['call'](this, _0x5c53b0);
        }, _0x17b290['prototype']['drawHealthBar'] = function() {
            if (!this['isCamouflage']) _0x17b290['superClass']['prototype']['drawHealthBar']['call'](this);
        }, _0x17b290['prototype']['isTransforming'] = ![], _0x17b290['prototype']['isCamouflage'] = ![], _0x17b290['prototype']['carrotAlpha'] = 0x0, _0x17b290['prototype']['getIdealOpacity'] = function() {
            var _0x111c8f = this['flag_underWater'] || this['flag_usingAbility'] && this['isTransforming'] || this['isCamouflage'] ? 0x0 : 0x1;
            return _0x111c8f;
        }, _0x17b290['prototype']['biteStart'] = 0x0, _0x17b290['prototype']['flapAmount'] = 0x3, _0x17b290['prototype']['flapDur'] = 1.5, _0x17b290['prototype']['roarStartT'] = -0x1f4, _0x17b290['prototype']['spearThrow'] = function() {
            _0x4597c4['save']();
            var _0x43bad3 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
            if (_0x43bad3) {
                var _0x6f82bb = Math['min'](0x1, (_0x476319 - this['biteStart']) / 0xc8),
                    _0x73f847 = _0x34fd15((_0x476319 - this['biteStart']) / 0x12c, 0x0, 0x1),
                    _0x4eda30 = -_0x73f847 * _0x197fc1;
                _0x4597c4['rotate'](this['angle'] + _0x4eda30);
                var _0x3d8a64 = -this['rad'] * 1.75,
                    _0x1bbc83 = this['rad'] / 0x2,
                    _0x559c10 = this['rad'],
                    _0x535985 = _0x3d8a64 * 0x2,
                    _0x43fa11 = _0x3d8a64 * 0x2 * _0x6f82bb,
                    _0x37974b = 0.3,
                    _0x43c5aa = 0.8;
                _0x4597c4['drawImage'](_0x43bad3, _0x1bbc83 + _0x535985 * -_0x37974b, _0x559c10 + _0x43fa11 * -_0x43c5aa + _0x3d8a64, _0x535985, _0x43fa11);
            }
            _0x4597c4['restore']();
        }, _0x17b290['prototype']['showSpear'] = ![], _0x17b290['prototype']['showHand'] = !![], _0x17b290['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_underWater'] || this['flag_isInArena']) return;
            this['setSkinScale']();
            !this['flag_usingAbility'] && (this['biteStart'] = 0x0);
            if (this['showSpear']) this['spearHandAnimation'](0x0);
            else {
                if (this['showHand'] || this['id'] == 0x0) this['leftHandAnimation'](0x0);
            }
            this['rightHandAnimation'](0x0), this['bigfootHead'](0x0);
            if (!this['flag_usingAbility'] && !this['flag_inHidingHole']) this['oogaBoogaAnimation'](0x0);
        }, _0x17b290['prototype']['oogaBoogaNextT'] = +new Date() + 0x3a98, _0x17b290['prototype']['oogaBoogaFrame'] = 0x0, _0x17b290['prototype']['oogaBoogaFrameT'] = 0x0, _0x17b290['prototype']['oogaBoogaAnimation'] = function(_0x4e4955) {
            if (_0x476319 > this['oogaBoogaNextT']) {
                if (_0x476319 > this['oogaBoogaFrameT']) {
                    this['oogaBoogaFrameT'] = _0x476319 + 0x12c, this['oogaBoogaFrame'] += 0x1;
                    if (this['oogaBoogaFrame'] == 0x1) this['gotChat']('OOGA!');
                    else {
                        if (this['oogaBoogaFrame'] == 0x3) this['gotChat']('BOOGA!');
                    }
                }
                this['oogaBoogaFrame'] > 0x4 && (this['oogaBoogaFrame'] = 0x0, this['oogaBoogaNextT'] = +new Date() + 0x3a98);
            }
            if (this['oogaBoogaFrame'] > 0x0) {
                var _0x1e6088 = 0x0,
                    _0x4484e5 = 0x1f4 / 0x154,
                    _0x5a48c7 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/mouth' + this['oogaBoogaFrame'] + '.png');
                if (_0x5a48c7) {
                    _0x4597c4['save']();
                    var _0x229322 = this['rad'];
                    _0x4597c4['drawImage'](_0x5a48c7, -_0x229322 * _0x4484e5, (-_0x229322 + _0x229322 * _0x1e6088) * _0x4484e5, 0x2 * _0x229322 * _0x4484e5, 0x2 * _0x229322 * _0x4484e5), _0x4597c4['restore']();
                }
            }
        }, _0x17b290['prototype']['spearInHand'] = ![], _0x17b290['prototype']['canCreateFire'] = ![], _0x17b290['prototype']['readCustomData_onUpdate'] = function(_0x526100) {
            _0x17b290['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x526100);
            var _0x1fc897 = _0x526100['readBitGroup']();
            this['showHand'] = _0x1fc897['getBool'](), this['showSpear'] = this['showHand'] && _0x1fc897['getBool'](), this['canCreateFire'] = _0x1fc897['getBool']();
        };
        var _0x42ada2 = 0.84,
            _0x5bed6a = 0.47,
            _0x11e7da = 0x2d,
            _0x58d56b = -0x1e,
            _0x2cb778 = 1.3,
            _0xc11951 = 1.5,
            _0x5875f0 = 0.3;
        _0x17b290['prototype']['bigfootHead'] = function(_0x326ff3) {
            var _0x4a3dfe = 0x0,
                _0x4569f4 = 0x1f4 / 0x154,
                _0xb9ca7d = this['flag_usingAbility'] ? 'head2' : 'head';
            if (!this['flag_usingAbility']) _0x4a3dfe = 0x0;
            var _0x47ca9d = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/' + _0xb9ca7d + '.png');
            if (_0x47ca9d) {
                _0x4597c4['save']();
                var _0x1ba75b = this['rad'];
                _0x4597c4['drawImage'](_0x47ca9d, -_0x1ba75b * _0x4569f4, (-_0x1ba75b + _0x1ba75b * _0x4a3dfe) * _0x4569f4, 0x2 * _0x1ba75b * _0x4569f4, 0x2 * _0x1ba75b * _0x4569f4), _0x4597c4['restore']();
            }
        }, _0x17b290['prototype']['spearHandAnimation'] = function(_0x20dec5) {
            var _0x188d56 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x1c774c = 0x0;
            if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) _0x1c774c = _0x5b9e97(_0x188d56, _0xc11951, _0x5875f0, 0x2);
            var _0x1a5c3f = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2.png');
            if (_0x1a5c3f) {
                _0x4597c4['save']();
                var _0x4c0368 = -(-0.2 + _0x1c774c) * _0x4c4686(_0x11e7da),
                    _0x231d83 = this['rad'] * _0x2cb778;
                _0x4597c4['rotate'](_0x4c4686(_0x58d56b) + _0x4c0368);
                var _0xc2e94 = 0x0,
                    _0x3ae7bb = this['rad'],
                    _0xd83af6 = _0x231d83 * 0x2,
                    _0x37925d = _0x231d83 * 0x2,
                    _0x4ac5b2 = _0x5bed6a,
                    _0x3d281d = _0x42ada2;
                _0x4597c4['drawImage'](_0x1a5c3f, _0xc2e94 + _0xd83af6 * -_0x4ac5b2, _0x3ae7bb + _0x37925d * -_0x3d281d, _0xd83af6, _0x37925d);
                if (this['canCreateFire']) {
                    var _0x1f342d = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm2-fire.png');
                    if (_0x1f342d) {
                        var _0x188d56 = (_0x476319 - this['spawnTime']) / 0x3e8,
                            _0x1c774c = _0x5b9e97(_0x188d56, 0x5, 0x1, 0x1);
                        _0x4597c4['globalAlpha'] = Math['max'](0x0, _0x1c774c), _0x4597c4['drawImage'](_0x1f342d, _0xc2e94 + _0xd83af6 * -_0x4ac5b2, _0x3ae7bb + _0x37925d * -_0x3d281d, _0xd83af6, _0x37925d);
                    }
                }
                _0x4597c4['restore']();
            }
        }, _0x17b290['prototype']['rightHandAnimation'] = function(_0xf9c73f) {
            var _0x43341e = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x11f489 = 0x0;
            if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) _0x11f489 = _0x5b9e97(_0x43341e, _0xc11951, _0x5875f0, 0x2);
            var _0x434326 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm1.png');
            if (_0x434326) {
                _0x4597c4['save']();
                var _0x180a5f = -_0x11f489 * _0x4c4686(-0xa),
                    _0x54b22d = this['rad'] * _0x2cb778;
                _0x4597c4['rotate'](_0x4c4686(-0x5) + _0x180a5f);
                var _0x4cbf36 = 0x0,
                    _0x2ef1d5 = this['rad'],
                    _0x415529 = _0x54b22d * 0x2,
                    _0x31b8ab = _0x54b22d * 0x2,
                    _0xbda4d6 = 0.55,
                    _0x23828c = 0.85;
                _0x4597c4['drawImage'](_0x434326, _0x4cbf36 + _0x415529 * -_0xbda4d6, _0x2ef1d5 + _0x31b8ab * -_0x23828c, _0x415529, _0x31b8ab), _0x4597c4['restore']();
            }
        }, _0x17b290['prototype']['leftHandAnimation'] = function(_0xce5dd7) {
            var _0x3cf426 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x5492d3 = 0x0;
            if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                if (!(this['id'] == _0x59b0bc && _0x9ffe4d)) _0x5492d3 = _0x5b9e97(_0x3cf426, _0xc11951, _0x5875f0, 0x2);
            }
            var _0x53c393 = this['getSkinImageObj']('skins/land/bigfoot/' + this['animalSpecies'] + '/arm21.png');
            if (_0x53c393) {
                _0x4597c4['save']();
                var _0x25f19c = -_0x5492d3 * _0x4c4686(-0xa),
                    _0x309dab = this['rad'] * _0x2cb778;
                _0x4597c4['rotate'](_0x4c4686(-0x5) + _0x25f19c);
                var _0x1f4176 = 0x0,
                    _0x24db48 = this['rad'],
                    _0x1cc032 = _0x309dab * 0x2,
                    _0xe541a8 = _0x309dab * 0x2,
                    _0x56826c = 0.47,
                    _0x3cbc91 = 0.8;
                _0x4597c4['drawImage'](_0x53c393, _0x1f4176 + _0x1cc032 * -_0x56826c, _0x24db48 + _0xe541a8 * -_0x3cbc91, _0x1cc032, _0xe541a8), _0x4597c4['restore']();
            }
        };

        function _0x17b290() {
            _0x17b290['superClass']['call'](this, _0x269668), this['oogaBoogaNextT'] = +new Date() + 0x3a98;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x17b290, _0x269668, _0x198193);
        var _0x498438 = _0x4d7cc8,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x4d7cc8['prototype']['victimID'] = 0x0, _0x4d7cc8['prototype']['updateZ'] = function() {
            if (this['effect_flying']) this['z'] = 0x186a0;
            else this['victimID'] == 0x0 && (this['z'] = 0x44c);
        };
        var _0x1c79fd = 0x1,
            _0x5ec5aa = 0x2,
            _0x3cde11 = 0x3;
        _0x4d7cc8['prototype']['customDraw'] = function(_0x56cd6f) {
            _0x4597c4['save']();
            if (this['spearState'] == _0x5ec5aa) {
                var _0x5e9036 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear.png');
                if (_0x5e9036) {
                    _0x4597c4['save']();
                    var _0x3065b7 = this['rad'] * 0x2;
                    _0x4597c4['rotate'](this['angle'] + _0x197fc1), _0x4597c4['drawImage'](_0x5e9036, -_0x3065b7 / 0x2, -_0x3065b7 / 0x2, _0x3065b7, _0x3065b7 * 0x4), _0x4597c4['restore']();
                }
            } else {
                if (this['spearState'] == _0x3cde11) {
                    _0x4597c4['save']();
                    var _0x5e9036 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/spear2.png');
                    if (_0x5e9036) {
                        var _0x3065b7 = this['rad'] * 0x2;
                        _0x4597c4['rotate'](this['angle'] + _0x197fc1), _0x4597c4['drawImage'](_0x5e9036, -_0x3065b7 / 0x2, -_0x3065b7 / 0x2, _0x3065b7, _0x3065b7 * 0x4);
                    }
                    _0x4597c4['restore']();
                } else {
                    if (this['spearState'] == _0x1c79fd) {
                        var _0x2e08d8 = this['spearState'],
                            _0x5e9036 = this['getSkinImageObj']('skins/land/bigfoot/' + this['speciesType'] + '/arm2.png');
                        if (_0x5e9036) {
                            var _0x592d96 = Math['min'](0x1, (_0x476319 - this['spawnTime']) / 0xc8),
                                _0x93f4ba = _0x34fd15((_0x476319 - this['spawnTime']) / 0x12c, 0x0, 0x1),
                                _0x3d99fa = -_0x93f4ba * _0x197fc1;
                            _0x4597c4['rotate'](this['angle'] + _0x3d99fa * (this['specType'] == 0x1 ? 0x1 : -0x1));
                            var _0x3065b7 = -this['rad'] * 1.5,
                                _0x50570e = this['rad'] / 0x2,
                                _0xc8d05d = this['rad'],
                                _0x3d9240 = _0x3065b7 * 0x2,
                                _0x1bdd39 = _0x3065b7 * 0x2 * _0x592d96,
                                _0x19441a = 0.3,
                                _0x17bb38 = 0.8;
                            _0x4597c4['drawImage'](_0x5e9036, _0x50570e + _0x3d9240 * -_0x19441a, _0xc8d05d + _0x1bdd39 * -_0x17bb38 + _0x3065b7, _0x3d9240, _0x1bdd39);
                        }
                    }
                }
            }
            _0x4597c4['restore']();
        }, _0x4d7cc8['prototype']['spearState'] = 0x0, _0x4d7cc8['prototype']['effect_flying'] = ![], _0x4d7cc8['prototype']['readUpdatedProperty'] = function(_0x36c442, _0x28631e) {
            if (_0x36c442 == _0xe917c) this['spearState'] = _0x28631e['readUInt8']();
            else {
                if (_0x36c442 == _0x5b657a) {
                    this['victimID'] = _0x28631e['readUInt32']();
                    if (this['victimID'] != 0x0) {
                        if (_0x4b4e0c[this['victimID']]) this['z'] = _0x4b4e0c[this['victimID']]['z'] + 0x1;
                    }
                } else _0x36c442 == _0x3dd208 && (this['effect_flying'] = _0x28631e['readUInt8']() == 0x1);
            }
        }, _0x4d7cc8['prototype']['readCustomData_onNewlyVisible'] = function(_0x2cf188) {
            _0x4d7cc8['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2cf188), this['spearState'] = _0x2cf188['readUInt8'](), this['victimID'] = _0x2cf188['readUInt32']();
            if (this['victimID'] != 0x0) {
                if (_0x4b4e0c[this['victimID']]) this['z'] = _0x4b4e0c[this['victimID']]['z'] + 0x1;
            }
            this['effect_flying'] = _0x2cf188['readUInt8']() == 0x1;
        };

        function _0x4d7cc8() {
            _0x4d7cc8['superClass']['call'](this), _0x4d7cc8['prototype']['easeAngleChanges'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4d7cc8, _0x4fbd16, _0x36ec77);
        var _0x4d8447 = _0x5d11ac;
        _0x1f88c6['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1f88c6['prototype']['constructor'] = _0x1f88c6, _0x1f88c6['superClass'] = _0x4d8447, _0x1f88c6['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x1f88c6['prototype']['setSkinPath'] = function() {
            this['objSkinPath'] = 'skins/land/bigfoot/' + this['speciesType'] + '/firewood.png';
        }, _0x1f88c6['prototype']['customDraw'] = function(_0x4e13ca) {
            _0x4597c4['save']();
            var _0x1702d8 = this['rad'] * 2.2,
                _0x2f286d = this['getSkinImageObj'](this['objSkinPath']);
            _0x2f286d && _0x4597c4['drawImage'](_0x2f286d, -_0x1702d8 / 0x2, -_0x1702d8 / 0x2, _0x1702d8, _0x1702d8), _0x4597c4['restore']();
        };
        var _0x44b84e = 0x79;

        function _0x1f88c6() {
            _0x1f88c6['superClass']['call'](this, _0x44b84e);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1f88c6, _0x44b84e);
        var _0x4d8447 = _0x5d11ac;
        _0x1f7359['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1f7359['prototype']['constructor'] = _0x1f7359, _0x1f7359['superClass'] = _0x4d8447, _0x1f7359['prototype']['updateZ'] = function() {
            this['z'] = 0x44c;
        }, _0x1f7359['prototype']['alpha'] = 0x1, _0x1f7359['prototype']['trunkW'] = 0.5, _0x1f7359['prototype']['customDraw'] = function(_0x5e5634) {
            _0x4597c4['save']();
            var _0x45a29a = 0x0,
                _0x4ae220 = 0x0;
            let _0xf0878d = _0x48e8d9[this['id']] == 0x1;
            var _0x98c12b = 0x1;
            try {
                _0xf0878d ? this['alpha'] += (0.4 - this['alpha']) * 0.1 : (this['alpha'] += (0x1 - this['alpha']) * 0.1, this['alpha'] > 0.99 && (this['alpha'] = 0x1));
            } catch (_0x275190) {}
            var _0x1c8236 = this['getTreeName']();
            if (!(_0x3aa021 == _0x243dd0)) {
                var _0x37fd09 = this['getSkinImageObj']('gameobj/101/' + _0x1c8236 + '/' + this['getTrunk']() + '.png');
                if (_0x37fd09) {
                    var _0x3e7145 = this['rad'] / 0x2,
                        _0x12d45a = this['rPer'] * Math['PI'] * 0x2;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x37fd09, -_0x3e7145, -_0x3e7145, 0x2 * _0x3e7145, 0x2 * _0x3e7145);
                }
            }
            if (this['canopy']) {
                var _0x4bcda2 = 'canopy';
                _0x1c8236 == 'default' && (_0x4bcda2 += this['curBiome']);
                var _0x3e7145 = (this['foodType'] == _0x3dbe5c ? this['rad'] * 1.25 : this['rad']) + _0x45a29a;
                if (this['eventType'] == 0x2 && this['treeType'] != 'default') this['drawEventDecorations'](_0x1c8236, _0x4bcda2, _0x3e7145, _0x12d45a);
                else {
                    if (this['xmasTree']) this['drawXmasProp'](_0x1c8236, _0x3e7145, _0x12d45a, 'ornament', _0x4ae220);
                    if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                        var _0x37fd09 = this['getSkinImageObj'](this['getCanopySkin'](_0x1c8236, _0x4bcda2));
                        if (_0x37fd09) _0x4597c4['save'](), _0x4597c4['globalAlpha'] *= this['alpha'], !(this['curBiome'] === _0x3e4ef7 && this['speciesType'] === 0x1) && _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x37fd09, -_0x3e7145 + _0x4ae220, -_0x3e7145 - _0x4ae220, 0x2 * _0x3e7145, 0x2 * _0x3e7145), _0x4597c4['restore']();
                        else {}
                    } else _0x4597c4['save'](), _0x4096ce(0x0, 0x0, this['rad'] * 0.2, 'brown'), this['drawNoImageTree'](this['rad']), _0x4597c4['restore']();
                    if (this['xmasTree']) this['drawXmasProps'](_0x1c8236, _0x3e7145, _0x12d45a, _0x4ae220);
                }
            }
            _0x4597c4['restore']();
        }, _0x1f7359['prototype']['drawNoImageTree'] = function(_0x3b7f93) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['alpha'];
            var _0x318d43 = this['getBiomeColors']();
            _0x4096ce(-_0x3b7f93 * 0.5, -_0x3b7f93 * 0.5, _0x3b7f93 * 0.65, _0x318d43['dark']), _0x4096ce(_0x3b7f93 * 0.5, -_0x3b7f93 * 0.5, _0x3b7f93 * 0.73, _0x318d43['dark']), _0x4096ce(_0x3b7f93 * 0.6, _0x3b7f93 * 0.4, Math['max'](0x0, _0x3b7f93 * 0.78), _0x318d43['dark']), _0x4096ce(-_0x3b7f93 * 0.5, _0x3b7f93 * 0.5, Math['max'](0x0, _0x3b7f93 * 0.6), _0x318d43['dark']), _0x4096ce(-_0x3b7f93 * 0.5, -_0x3b7f93 * 0.5, (_0x3b7f93 - 0x2) * 0.65, _0x318d43['light']), _0x4096ce(_0x3b7f93 * 0.5, -_0x3b7f93 * 0.5, (_0x3b7f93 - 0x2) * 0.73, _0x318d43['light']), _0x4096ce(_0x3b7f93 * 0.6, _0x3b7f93 * 0.4, (_0x3b7f93 - 0x2) * 0.78, _0x318d43['light']), _0x4096ce(-_0x3b7f93 * 0.5, _0x3b7f93 * 0.5, (_0x3b7f93 - 0x2) * 0.6, _0x318d43['light']), _0x4597c4['restore']();
            return;
            _0x4597c4['save'](), this['rPer'] = 0x0;
            var _0x1f1f82 = 0x0,
                _0x335c58 = '#45D157';
            _0x4597c4['fillStyle'] = color, _0x4597c4['globalAlpha'] = this['alpha'], _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x3b7f93 * 0.5, -_0x3b7f93 * 0.5, Math['max'](0x0, _0x3b7f93 * 0.73), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x3b7f93 * 0.6, _0x3b7f93 * 0.4, Math['max'](0x0, _0x3b7f93 * 0.78), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x3b7f93 * 0.5, _0x3b7f93 * 0.5, Math['max'](0x0, _0x3b7f93 * 0.6), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
        }, _0x1f7359['prototype']['lights'] = 0x0, _0x1f7359['prototype']['drawXmasProps'] = function(_0x43e6b6, _0x14f8d5, _0x268e5c, _0x36f169) {
            this['setChristmasLight'](), this['drawXmasProp'](_0x43e6b6, _0x14f8d5, _0x268e5c, 'decoration', _0x36f169);
            if (this['lights'] == 0x1 || this['lights'] == 0x3) this['drawXmasProp'](_0x43e6b6, _0x14f8d5, _0x268e5c, 'light', _0x36f169);
            if (this['lights'] == 0x2 || this['lights'] == 0x3) this['drawXmasProp'](_0x43e6b6, _0x14f8d5, _0x268e5c, 'light1', _0x36f169);
        }, _0x1f7359['prototype']['drawXmasProp'] = function(_0x3e3e94, _0x1f10ff, _0x2a4dae, _0x505982, _0x336039) {
            const _0x378dee = 'gameobj/101/' + _0x3e3e94 + '/xmas/' + _0x505982 + '.png';
            var _0x269887 = this['getSkinImageObj'](_0x378dee);
            _0x269887 && (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x269887, -_0x1f10ff + _0x336039, -_0x1f10ff - _0x336039, 0x2 * _0x1f10ff, 0x2 * _0x1f10ff), _0x4597c4['restore']());
        }, _0x1f7359['prototype']['drawEventDecorations'] = function(_0x26ca88, _0x5ec3ab, _0x40f5ad, _0x25cdcd) {
            let _0x38a0be = 'gameobj/101/' + _0x26ca88 + '/' + _0x5ec3ab + '_' + this['eventType'] + '.png';
            var _0x2019da = this['getSkinImageObj'](_0x38a0be);
            _0x2019da ? (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x2019da, -_0x40f5ad + _0x25cdcd, -_0x40f5ad - _0x25cdcd, 0x2 * _0x40f5ad, 0x2 * _0x40f5ad), _0x4597c4['restore']()) : console['log']('not found: ' + _0x38a0be);
        }, _0x1f7359['prototype']['drawEventDecorations'] = function(_0x57e49f, _0x90204f, _0xed7d99, _0xaf0232) {
            let _0x5e7783 = 'gameobj/101/' + _0x57e49f + '/' + _0x90204f + '_' + this['eventType'] + '.png';
            var _0x3765ac = this['getSkinImageObj'](_0x5e7783);
            console['log'](_0x5e7783), _0x3765ac && (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x3765ac, -_0xed7d99 + _0xaf0232, -_0xed7d99 - _0xaf0232, 0x2 * _0xed7d99, 0x2 * _0xed7d99), _0x4597c4['restore']());
        }, _0x1f7359['prototype']['getTreeName'] = function() {
            switch (this['foodType']) {
                case _0x3dbe5c:
                    return 'coco';
                case _0x48ab8f:
                    return 'banana';
                case _0x5ddf97:
                    return 'fir';
            }
            return 'default';
        }, _0x1f7359['prototype']['getBiomeColors'] = function() {
            var _0x5ea14e = {
                'dark': '#09992f',
                'light': '#1cba34'
            };
            switch (this['curBiome']) {
                case _0x11e4d4:
                    _0x5ea14e = {
                        'dark': '#808080',
                        'light': '#f7f7f7'
                    };
                    break;
                case _0x414053:
                case _0x3e4ef7:
                    _0x5ea14e = {
                        'dark': '#a59215',
                        'light': '#fffff'
                    };
                    break;
                case _0x1d8183:
                    _0x5ea14e = {
                        'dark': '#09992f',
                        'light': '#1cba34'
                    };
                    break;
                case _0x1114cb:
                    _0x5ea14e = {
                        'dark': '#09992f',
                        'light': 'limegreen'
                    };
                    break;
                case _0x1085db:
                    _0x5ea14e = {
                        'dark': '#1aae31',
                        'light': 'limegreen'
                    };
                    break;
                default:
            }
            return _0x5ea14e;
        }, _0x1f7359['prototype']['getTrunk'] = function() {
            return 'trunk';
        }, _0x1f7359['prototype']['foodType'] = 0x0, _0x1f7359['prototype']['canopy'] = !![], _0x1f7359['prototype']['readCustomStaticData'] = function(_0x2db626) {
            this['readCustomData_onNewlyVisible'](_0x2db626);
        }, _0x1f7359['prototype']['readCustomData_onNewlyVisible'] = function(_0x5b2438) {
            this['foodType'] = _0x5b2438['readUInt16'](), this['canopy'] = _0x5b2438['readUInt8']() == 0x1, this['eventType'] = _0x5b2438['readUInt8']();
        }, _0x1f7359['prototype']['readUpdatedProperty'] = function(_0x124f05, _0x4f57d6) {
            _0x124f05 == _0x308c62 && (this['lights'] = _0x4f57d6['readUInt8']());
        }, _0x1f7359['prototype']['setChristmasLight'] = function() {
            const _0x307fd4 = performance['now']();
            _0x307fd4 - this['lastLightChange'] > 0x3e8 && (this['lights'] = 0x1 + Math['round'](Math['random']()), this['lastLightChange'] = _0x307fd4 + Math['random']() * 0x64);
        }, _0x1f7359['prototype']['treeCanopySkin'] = null, _0x1f7359['prototype']['getCanopySkin'] = function(_0x751fa1, _0x2f2901) {
            return this['treeCanopySkin'] == null && (this['treeCanopySkin'] = 'gameobj/101/' + _0x751fa1 + '/' + _0x2f2901 + '.png'), this['treeCanopySkin'];
        };

        function _0x1f7359() {
            _0x1f7359['superClass']['call'](this, _0x42de22), this['lastLightChange'] = 0x0, this['xmasTree'] = Math['random']() > 0.33 && _0x4333ab, this['lights'] = 0x1;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1f7359, _0x42de22);
        var _0x498438 = _0x517723,
            _0x4d8447 = _0x5d11ac;
        _0x517723['prototype'] = Object['create'](_0x4d8447['prototype']), _0x517723['prototype']['constructor'] = _0x517723, _0x517723['superClass'] = _0x4d8447, _0x517723['prototype']['updateZ'] = function() {
            this['z'] = -0xd7;
        }, _0x517723['prototype']['customDraw'] = function(_0x35eace) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5;
            {
                _0x4597c4['fillStyle'] = _0x39b6af;
                var _0x49deda = -this['rectW'] / 0x2,
                    _0x5006de = this['rectW'] / 0x2,
                    _0x488f99 = -this['rectH'] / 0x2,
                    _0x12efe2 = this['rectH'] / 0x2;
                _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x49deda, _0x488f99);
                var _0x2dc078 = 0x14,
                    _0x476d6b = [-0xf, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                    _0xf6da70 = 0x2d,
                    _0x1c7de5 = 0x0,
                    _0x530110 = _0x6f4c47 - this['x'],
                    _0x260427 = 0x0 - this['x'],
                    _0x354a81 = _0x3be96e - this['y'],
                    _0x282150 = 0x0 - this['y'],
                    _0x305f89, _0x13411a = _0x49deda - _0x2dc078;
                for (_0x305f89 = _0x488f99; _0x305f89 < _0x12efe2; _0x305f89 += _0xf6da70) {
                    _0x4597c4['lineTo'](Math['min'](_0x530110, Math['max'](_0x260427, _0x13411a + _0x476d6b[_0x1c7de5])), _0x305f89), _0x1c7de5 = (_0x1c7de5 + 0x1) % _0x476d6b['length'];
                }
                _0x4597c4['lineTo'](_0x49deda, _0x12efe2), _0x305f89 = _0x12efe2 + _0x2dc078;
                for (_0x13411a = _0x49deda; _0x13411a < _0x5006de; _0x13411a += _0xf6da70) {
                    _0x4597c4['lineTo'](_0x13411a, Math['min'](_0x354a81, Math['max'](_0x282150, _0x305f89 + _0x476d6b[_0x1c7de5]))), _0x1c7de5 = (_0x1c7de5 + 0x1) % _0x476d6b['length'];
                }
                _0x4597c4['lineTo'](_0x5006de, _0x12efe2), _0x13411a = _0x5006de + _0x2dc078;
                for (_0x305f89 = _0x12efe2; _0x305f89 > _0x488f99; _0x305f89 -= _0xf6da70) {
                    _0x4597c4['lineTo'](Math['min'](_0x530110, Math['max'](_0x260427, _0x13411a + _0x476d6b[_0x1c7de5])), _0x305f89), _0x1c7de5 = (_0x1c7de5 + 0x1) % _0x476d6b['length'];
                }
                _0x4597c4['lineTo'](_0x5006de, _0x488f99), _0x305f89 = _0x488f99 - _0x2dc078;
                for (_0x13411a = _0x5006de; _0x13411a > _0x49deda; _0x13411a -= _0xf6da70) {
                    _0x4597c4['lineTo'](_0x13411a, Math['min'](_0x354a81, Math['max'](_0x282150, _0x305f89 + _0x476d6b[_0x1c7de5]))), _0x1c7de5 = (_0x1c7de5 + 0x1) % _0x476d6b['length'];
                }
                _0x4597c4['closePath'](), _0x4597c4['fill']();
            }
            _0x4597c4['restore']();
        }, _0x517723['prototype']['edge'] = function() {
            _0x4597c4['save']();
            var _0x48fd26 = 0xf;
            {
                _0x4597c4['fillStyle'] = 'red';
                var _0x111b7e = -this['rectW'] / 0x2,
                    _0x21b40f = this['rectW'] / 0x2,
                    _0x60751d = -this['rectH'] / 0x2 + 0x3,
                    _0x3c5890 = -this['rectH'] / 0x2 - _0x48fd26;
                _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x111b7e, _0x60751d);
                var _0x2e2012 = 0x0,
                    _0x278cbd = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                    _0x5454fb = 0x3c,
                    _0x3322b1 = 0x0,
                    _0x11b42e = _0x6f4c47 - this['x'],
                    _0x87406f = 0x0 - this['x'],
                    _0x5615b7 = _0x3be96e - this['y'],
                    _0x1329db = 0x0 - this['y'],
                    _0x3a2e23, _0x1231b4 = _0x111b7e - _0x2e2012;
                _0x4597c4['lineTo'](_0x111b7e, _0x3c5890), _0x3a2e23 = _0x3c5890 + _0x2e2012;
                for (_0x1231b4 = _0x111b7e; _0x1231b4 < _0x21b40f; _0x1231b4 += _0x5454fb) {
                    _0x4597c4['lineTo'](_0x1231b4, Math['min'](_0x5615b7, Math['max'](_0x1329db, _0x3a2e23 + _0x278cbd[_0x3322b1]))), _0x3322b1 = (_0x3322b1 + 0x1) % _0x278cbd['length'];
                }
                _0x4597c4['lineTo'](_0x21b40f, _0x3c5890), _0x4597c4['lineTo'](_0x21b40f, _0x60751d), _0x4597c4['closePath']();
            }
            _0x4597c4['restore']();
        };

        function _0x517723() {
            _0x517723['superClass']['call'](this, _0x58f80e);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x517723, _0x58f80e);
        var _0x4d8447 = _0x5d11ac;
        _0xfcdb14['prototype'] = Object['create'](_0x4d8447['prototype']), _0xfcdb14['prototype']['constructor'] = _0xfcdb14, _0xfcdb14['superClass'] = _0x4d8447, _0xfcdb14['prototype']['updateZ'] = function() {
            this['z'] = 0x3ed;
        }, _0xfcdb14['prototype']['customDraw'] = function(_0x51e50) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, _0x4096ce(0x0, 0x0, this['rad'], '#000'), _0x4597c4['restore']();
        };

        function _0xfcdb14() {
            _0xfcdb14['superClass']['call'](this, _0x2e6afc);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xfcdb14, _0x2e6afc);
        var _0x4d8447 = _0x5d11ac;
        _0x3c7c02['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3c7c02['prototype']['constructor'] = _0x3c7c02, _0x3c7c02['superClass'] = _0x4d8447, _0x3c7c02['prototype']['updateZ'] = function() {
            this['z'] = -0x9f, (this['specType'] == 0x0 || 0x1) && (this['z'] = -0x9e);
        }, _0x3c7c02['prototype']['currentWidth'] = 0x5a, _0x3c7c02['prototype']['currentPadding'] = 0x0, _0x3c7c02['prototype']['padding'] = 0x32, _0x3c7c02['prototype']['isFloatingRiver'] = ![], _0x3c7c02['prototype']['customDraw'] = function(_0x1ef20b) {
            _0x1ef20b ? this['jaggedSidesForRect'](_0x5cf340, this['getStreamMargin']()) : (this['drawStream'](_0x472dd6), this['drawCurrent'](this['isFloatingRiver'], this['riverSize']));
        }, _0x3c7c02['prototype']['drawCurrent'] = function(_0x18728b, _0x38906c) {
            if (!_0x18728b) return;
            const _0x53e665 = this['getSkinImageObj']('gameobj/40/current' + this['getDirectionName']() + '.png');
            if (!_0x53e665) return;
            this['currentPadding'] = this['padding'] * _0x38906c / 0x2;
            const _0x57015c = 0x3c,
                _0x5bd61c = 0x3e8,
                _0x2e52d2 = this['currentWidth'];
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            const _0x56cce6 = this['getFlowSpeed']() * (_0x2e52d2 / _0x57015c) * _0x5bd61c,
                _0x469ea9 = (_0x476319 - this['spawnTime']) % _0x56cce6 / _0x56cce6,
                _0x3af901 = _0x2e52d2,
                _0x56ee46 = this['riverStreamHeight'] * _0x38906c - 0x8,
                _0x3202e1 = this['isVertical']() ? this['rectH'] : this['rectW'],
                _0x2866cd = (_0x3202e1 / _0x2e52d2 | 0x0) - 0x1,
                _0x359fe1 = this['getStartPosition']();
            let _0x4fbf99 = _0x359fe1;
            for (let _0x4d7460 = 0x0; _0x4d7460 < _0x2866cd; _0x4d7460++) {
                const _0x56f944 = _0x4fbf99 + _0x3af901 * _0x469ea9;
                if (this['isVertical']()) {
                    if (_0x42aac5(this['x'] + this['currentPadding'] + -this['rectW'] * _0x38906c / 0x2, this['y'] + _0x56f944, _0x2e52d2 * _0x38906c) && _0x23d2c8(this['x'] + this['currentPadding'] + -this['rectW'] * _0x38906c / 0x2, this['y'] + _0x56f944, -_0x2e52d2 * _0x38906c)) _0x4597c4['drawImage'](_0x53e665, this['currentPadding'] + -this['rectW'] * _0x38906c / 0x2, _0x56f944, _0x56ee46, _0x2e52d2 * _0x38906c);
                    _0x4fbf99 += (this['specType'] === 0x2 ? 0x1 : -0x1) * _0x2e52d2;
                } else {
                    if (_0x42aac5(this['x'] + _0x56f944, this['y'] + this['currentPadding'] + -this['rectH'] * _0x38906c / 0x2, _0x2e52d2 * _0x38906c) && _0x23d2c8(this['x'] + _0x56f944, this['y'] + this['currentPadding'] + -this['rectH'] * _0x38906c / 0x2, -_0x2e52d2 * _0x38906c)) _0x4597c4['drawImage'](_0x53e665, _0x56f944, this['currentPadding'] + -this['rectH'] * _0x38906c / 0x2, _0x2e52d2 * _0x38906c, _0x56ee46);
                    _0x4fbf99 += (this['specType'] === 0x0 ? 0x1 : -0x1) * _0x2e52d2;
                }
            }
            _0x4597c4['restore']();
        }, _0x3c7c02['prototype']['isVertical'] = function() {
            return this['specType'] >= 0x2;
        }, _0x3c7c02['prototype']['getDirectionName'] = function() {
            const _0x120e7a = ['Right', 'Left', 'Down', 'Up'];
            return _0x120e7a[this['specType']];
        }, _0x3c7c02['prototype']['getFlowSpeed'] = function() {
            return this['isVertical']() ? this['speedY'] : this['speedX'];
        }, _0x3c7c02['prototype']['getStartPosition'] = function() {
            if (this['isVertical']()) return this['specType'] === 0x2 ? -this['rectH'] / 0x2 - 0x32 : this['rectH'] / 0x2 + 0x32;
            return this['specType'] === 0x0 ? -this['rectW'] / 0x2 + 0x32 : this['rectW'] / 0x2 - 0x64;
        }, _0x3c7c02['prototype']['getStreamMargin'] = function() {
            return this['margin'];
        }, _0x3c7c02['prototype']['getRectWidth'] = function() {
            var _0x5e8b7c = this['rectW'];
            return _0x5e8b7c;
        }, _0x3c7c02['prototype']['getRectHeight'] = function() {
            var _0xc9cdce = this['rectH'];
            return _0xc9cdce;
        }, _0x3c7c02['prototype']['jaggedSidesForRect'] = function(_0x628486, _0x514c86) {
            _0x4597c4['fillStyle'] = _0x628486;
            var _0x270c5f = ![];
            if (_0x514c86) _0x270c5f = !![];
            var _0x1cd32a = -this['getRectWidth']() / 0x2 + (_0x270c5f ? _0x514c86['x_min'] : 0x0),
                _0x59b2ae = this['getRectWidth']() / 0x2 + (_0x270c5f ? _0x514c86['x_max'] : 0x0),
                _0x19a171 = -this['getRectHeight']() / 0x2 + (_0x270c5f ? _0x514c86['y_min'] : 0x0),
                _0x8f08a = this['getRectHeight']() / 0x2 + (_0x270c5f ? _0x514c86['y_max'] : 0x0);
            _0x4597c4['save'](), _0x4597c4['fillStyle'] = _0x628486, this['drawRandomEdges'](_0x1cd32a, _0x19a171, _0x59b2ae, _0x8f08a), _0x4597c4['restore']();
        }, _0x3c7c02['prototype']['drawStream'] = function(_0x124ab7) {
            _0x4597c4['save'](), _0x4597c4['fillStyle'] = _0x124ab7;
            const _0x13bdd6 = this['isVertical']() ? -this['riverStreamHeight'] / 0x2 * this['riverSize'] : -this['rectW'] / 0x2,
                _0x32a110 = this['isVertical']() ? this['riverStreamHeight'] * this['riverSize'] : this['rectW'],
                _0x444ab0 = this['isVertical']() ? -this['rectH'] / 0x2 : -this['riverStreamHeight'] / 0x2 * this['riverSize'],
                _0x131bac = this['isVertical']() ? this['rectH'] : this['riverStreamHeight'] * this['riverSize'];
            this['drawRandomEdges'](_0x13bdd6, _0x444ab0, _0x32a110 / 0x2, _0x131bac / 0x2), _0x4597c4['restore']();
        }, _0x3c7c02['prototype']['drawRandomEdges'] = function(_0x2c59f7, _0x2533ca, _0x31c822, _0x3d7ca7) {
            const _0xb57266 = this['specType'] === 0x2 || this['specType'] === 0x3,
                _0x270868 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x2351db = _0x270868['length'],
                _0x11b935 = 0x96,
                _0x70b57d = 0xa;
            _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x2c59f7, _0x2533ca);
            let _0x2cda40 = 0x0;
            if (_0xb57266) {
                let _0x558a12 = _0x2533ca;
                const _0x245c55 = _0x2c59f7 - _0x70b57d;
                for (; _0x558a12 < _0x3d7ca7; _0x558a12 += _0x11b935) {
                    if (_0x42aac5(this['x'] + _0x245c55 + _0x270868[_0x2cda40], this['y'] + _0x558a12, _0x11b935 + _0x70b57d)) _0x4597c4['lineTo'](_0x245c55 + _0x270868[_0x2cda40], _0x558a12);
                    _0x2cda40 = (_0x2cda40 + 0x1) % _0x2351db;
                }
            }
            _0x4597c4['lineTo'](_0x2c59f7, _0x3d7ca7);
            if (!_0xb57266) {
                const _0x1a2df2 = _0x3d7ca7 + _0x70b57d;
                for (let _0x524738 = _0x2c59f7; _0x524738 < _0x31c822; _0x524738 += _0x11b935) {
                    if (_0x42aac5(this['x'] + _0x524738, this['y'] + _0x1a2df2 + _0x270868[_0x2cda40], _0x11b935 + _0x70b57d)) _0x4597c4['lineTo'](_0x524738, _0x1a2df2 + _0x270868[_0x2cda40]);
                    _0x2cda40 = (_0x2cda40 + 0x1) % _0x2351db;
                }
            }
            _0x4597c4['lineTo'](_0x31c822, _0x3d7ca7);
            if (_0xb57266) {
                const _0x510b4f = _0x31c822 + _0x70b57d;
                for (let _0xd16666 = _0x3d7ca7; _0xd16666 > _0x2533ca; _0xd16666 -= _0x11b935) {
                    if (_0x42aac5(this['x'] + _0x510b4f + _0x270868[_0x2cda40], this['y'] + _0xd16666, _0x11b935 + _0x70b57d)) _0x4597c4['lineTo'](_0x510b4f + _0x270868[_0x2cda40], _0xd16666);
                    _0x2cda40 = (_0x2cda40 + 0x1) % _0x2351db;
                }
            }
            _0x4597c4['lineTo'](_0x31c822, _0x2533ca);
            if (!_0xb57266) {
                const _0x30b69d = _0x2533ca - _0x70b57d;
                for (let _0x5359e7 = _0x31c822; _0x5359e7 > _0x2c59f7; _0x5359e7 -= _0x11b935) {
                    if (_0x42aac5(this['x'] + _0x5359e7, this['y'] + _0x30b69d + _0x270868[_0x2cda40], _0x11b935 + _0x70b57d)) _0x4597c4['lineTo'](_0x5359e7, _0x30b69d + _0x270868[_0x2cda40]);
                    _0x2cda40 = (_0x2cda40 + 0x1) % _0x2351db;
                }
            }
            _0x4597c4['closePath'](), _0x4597c4['fill']();
        }, _0x3c7c02['prototype']['drawBody'] = function(_0x5a306d, _0x3782e3, _0x7f9c1e) {
            var _0x32cd28 = _0x4597c4['globalAlpha'];
            {
                _0x4597c4['fillStyle'] = _0x5a306d;
                var _0x4b54fc = 0x0;
                _0x3782e3 > 0x1 && (_0x4b54fc = 0x64);
                _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['riverStreamHeight'] / 0x2 * _0x3782e3, this['rectW'], this['riverStreamHeight'] * _0x3782e3);
                var _0x4527de = 0xf;
                {
                    _0x4597c4['fillStyle'] = _0x5a306d;
                    var _0xa224b1 = -this['rectW'] / 0x2,
                        _0x2908da = this['rectW'] / 0x2,
                        _0x3b988b = (-this['riverStreamHeight'] / 0x2 + 0x3) * _0x3782e3,
                        _0x379fdc = (-this['riverStreamHeight'] / 0x2 - _0x4527de) * _0x3782e3;
                    _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0xa224b1, _0x3b988b);
                    var _0x49f2ed = 0x0,
                        _0x312ce5 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                        _0x2d8261 = 0x96,
                        _0x3815f7 = 0x0,
                        _0x393192 = _0x6f4c47 - this['x'],
                        _0x1a28cb = 0x0 - this['x'],
                        _0x217868 = _0x3be96e - this['y'],
                        _0xa51d81 = 0x0 - this['y'],
                        _0x3f7c3e, _0x426ed0 = _0xa224b1 - _0x49f2ed;
                    _0x4597c4['lineTo'](_0xa224b1, _0x379fdc), _0x3f7c3e = _0x379fdc + _0x49f2ed;
                    for (_0x426ed0 = _0xa224b1; _0x426ed0 < _0x2908da; _0x426ed0 += _0x2d8261) {
                        _0x4597c4['lineTo'](_0x426ed0, Math['min'](_0x217868, Math['max'](_0xa51d81, _0x3f7c3e + _0x312ce5[_0x3815f7]))), _0x3815f7 = (_0x3815f7 + 0x1) % _0x312ce5['length'];
                    }
                    _0x4597c4['lineTo'](_0x2908da, _0x379fdc), _0x4597c4['lineTo'](_0x2908da, _0x3b988b), _0x4597c4['closePath'](), _0x4597c4['fill']();
                } {
                    _0x4597c4['fillStyle'] = _0x5a306d;
                    var _0xa224b1 = -this['rectW'] / 0x2,
                        _0x2908da = this['rectW'] / 0x2,
                        _0x3b988b = (this['riverStreamHeight'] / 0x2 - 0x3) * _0x3782e3,
                        _0x379fdc = (this['riverStreamHeight'] / 0x2 + _0x4527de) * _0x3782e3;
                    _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0xa224b1, _0x3b988b);
                    var _0x49f2ed = 0x0,
                        _0x312ce5 = [-0xf, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                        _0x2d8261 = 0x96,
                        _0x3815f7 = 0x0,
                        _0x393192 = _0x6f4c47 - this['x'],
                        _0x1a28cb = 0x0 - this['x'],
                        _0x217868 = _0x3be96e - this['y'],
                        _0xa51d81 = 0x0 - this['y'],
                        _0x3f7c3e, _0x426ed0 = _0xa224b1 - _0x49f2ed;
                    _0x4597c4['lineTo'](_0xa224b1, _0x379fdc), _0x3f7c3e = _0x379fdc + _0x49f2ed;
                    for (_0x426ed0 = _0xa224b1; _0x426ed0 < _0x2908da; _0x426ed0 += _0x2d8261) {
                        _0x4597c4['lineTo'](_0x426ed0, Math['min'](_0x217868, Math['max'](_0xa51d81, _0x3f7c3e + _0x312ce5[_0x3815f7]))), _0x3815f7 = (_0x3815f7 + 0x1) % _0x312ce5['length'];
                    }
                    _0x4597c4['lineTo'](_0x2908da, _0x379fdc), _0x4597c4['lineTo'](_0x2908da, _0x3b988b), _0x4597c4['closePath'](), _0x4597c4['fill']();
                }
            }
            if (_0x7f9c1e && _0x3782e3 > 0.3) {
                var _0x5219c4 = this['getSkinImageObj']('gameobj/40/currentRight.png');
                if (_0x5219c4) {
                    var _0x3cca50 = -this['rectW'] / 0x2,
                        _0x58969f = 0x64;
                    _0x4597c4['save'](), _0x4597c4['fillStyle'] = 'yellow', _0x4597c4['globalAlpha'] = 0x1;
                    var _0x150fdf = 0x3c;
                    for (i = 0x0; i < 0x50; i++) {
                        var _0x218047 = this['speedX'] * (_0x58969f / _0x150fdf) * 0x3e8,
                            _0x590aff = (_0x476319 - this['spawnTime']) % _0x218047 / _0x218047,
                            _0x591ff4 = _0x58969f,
                            _0x275833 = _0x3cca50 + _0x591ff4 * _0x590aff;
                        _0x4597c4['drawImage'](_0x5219c4, _0x275833, 0xf + -this['rectH'] * _0x3782e3 / 0x2, _0x58969f * _0x3782e3, this['riverStreamHeight'] * _0x3782e3 - 0x8), _0x3cca50 += _0x58969f;
                    }
                    _0x4597c4['restore']();
                }
            }
        }, _0x3c7c02['prototype']['speedX'] = 0x1, _0x3c7c02['prototype']['speedY'] = 0x1, _0x3c7c02['prototype']['onLerpUpdate'] = function(_0x560824) {
            this['riverSize'] = _0x560824 * (this['n_riverSize'] - this['o_riverSize']) + this['o_riverSize'];
        }, _0x3c7c02['prototype']['readUpdatedProperty'] = function(_0x36c681, _0xd46226) {
            _0x36c681 == _0x54b817 && (this['n_riverSize'] = _0xd46226['readUInt16']() / 0x3e8, this['o_riverSize'] = this['riverSize']);
        }, _0x3c7c02['prototype']['worldUpd_readMsgNewlyVisible'] = function(_0x379d1a, _0x751268, _0x28fc35) {
            this['setObjTypes'](_0x751268, _0x28fc35), this['id'] = _0x379d1a['readUInt32']();
            var _0xc2ce9d = _0x379d1a['readUInt16']() / 0x4,
                _0x58ecc4 = _0x379d1a['readUInt16']() / 0x4;
            this['rectW'] = _0x379d1a['readUInt16'](), this['rectH'] = _0x379d1a['readUInt16'](), this['curBiome'] = _0x379d1a['readUInt8'](), this['clientBatchDrawID'] = _0x379d1a['readUInt16'](), this['specType'] = _0x379d1a['readUInt8'](), this['riverStreamHeight'] = _0x379d1a['readUInt16'](), this['isRectangle'] = !![], this['ox'] = this['x'] = this['nx'] = _0xc2ce9d, this['oy'] = this['y'] = this['ny'] = _0x58ecc4, this['clientBatchDraw'] = !![], this['isFloatingRiver'] = _0x379d1a['readUInt8']() == 0x1;
            if (this['specType'] == 0x1) this['speedX'] = -0x1;
            if (this['specType'] == 0x3) this['speedY'] = -0x1;
            this['riverSize'] = this['o_riverSize'] = this['n_riverSize'] = _0x379d1a['readUInt16']() / 0x3e8;
            var _0x30c850 = 0x0,
                _0x2e804c = 0x0,
                _0x32c193 = 0x0,
                _0x3cf404 = 0x0;
            if (this['specType'] == 0x2) _0x3cf404 = -0x64;
            else this['specType'] == 0x3 ? _0x32c193 = 0x64 : (_0x30c850 = 0x64, _0x2e804c = -0x64);
            this['margin'] = {
                'x_min': _0x30c850,
                'x_max': _0x2e804c,
                'y_min': _0x32c193,
                'y_max': _0x3cf404
            }, console['log'](this['margin']), this['mopeSeasonID'] = 0x1, this['generateTerrainFeatures']();
        }, _0x3c7c02['prototype']['biomePattern'] = null, _0x3c7c02['prototype']['generateTerrainFeatures'] = function() {
            var _0x3acb95 = [],
                _0x194a3a = 0x12c,
                _0x46810a = 1.5;
            if (this['specType'] == 0x2 || this['specType'] == 0x3) {
                var _0x5bda1d = 0x0,
                    _0x49ab31 = -this['rectH'] / 0x2;
                for (; _0x49ab31 + _0x194a3a < this['rectH'] / 0x2;) {
                    _0x5bda1d = -_0x194a3a / 0x2;
                    var _0x55867e = Math['max'](0x0, Math['round'](_0x4ec95c(0x0, 0x3)) - 0x1);
                    _0x3acb95['push']({
                        'x': _0x5bda1d,
                        'y': _0x49ab31,
                        'w': _0x194a3a,
                        'h': _0x194a3a,
                        'img': _0x55867e,
                        'r': _0x4ec95c(0x0, 0xb4)
                    }), _0x49ab31 += _0x194a3a * _0x46810a;
                }
            } else {
                var _0x49ab31 = 0x0,
                    _0x5bda1d = _0x194a3a / 0x4 - this['rectW'] / 0x2;
                for (; _0x5bda1d + _0x194a3a < this['rectW'] / 0x2;) {
                    _0x49ab31 = -_0x194a3a / 0x2;
                    var _0x55867e = Math['max'](0x0, Math['round'](_0x4ec95c(0x0, 0x3)) - 0x1);
                    _0x3acb95['push']({
                        'x': _0x5bda1d,
                        'y': _0x49ab31,
                        'w': _0x194a3a,
                        'h': _0x194a3a,
                        'img': _0x55867e,
                        'r': _0x4ec95c(0x0, 0xb4)
                    }), _0x5bda1d += _0x194a3a * _0x46810a;
                }
            }
            this['biomePattern'] = _0x3acb95;
        }, _0x3c7c02['prototype']['drawTerrainFeatures'] = function() {}, _0x3c7c02['prototype']['drawBox'] = function(_0x3c0324, _0x26e5d1, _0x22406f, _0x2d70f8) {
            _0x4597c4['beginPath'](), _0x4597c4['fillStyle'] = 'red', _0x4597c4['moveTo'](_0x3c0324, _0x26e5d1), _0x4597c4['lineTo'](_0x3c0324, _0x2d70f8), _0x4597c4['lineTo'](_0x22406f, _0x2d70f8), _0x4597c4['lineTo'](_0x22406f, _0x26e5d1), _0x4597c4['closePath'](), _0x4597c4['fill']();
        };

        function _0x3c7c02() {
            _0x3c7c02['superClass']['call'](this, _0x45adaa), this['clientBatchDraw'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3c7c02, _0x45adaa);
        var _0x4d8447 = _0x5d11ac;
        _0x40d4da['prototype'] = Object['create'](_0x4d8447['prototype']), _0x40d4da['prototype']['constructor'] = _0x40d4da, _0x40d4da['superClass'] = _0x4d8447, _0x40d4da['prototype']['LakeSize'] = 0x1, _0x40d4da['prototype']['isEmptyLake'] = ![], _0x40d4da['prototype']['isDeathLake'] = ![], _0x40d4da['prototype']['updateZ'] = function() {
            if (this['isEmptyLake']) this['z'] = -0x9d;
            else this['z'] = -0xa0;
        }, _0x40d4da['prototype']['customDraw'] = function(_0x5a8fa6) {
            if (this['isDeathLake']) _0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), this['poisonBody'](_0x472dd6, this['LakeSize'], this['poison']);
            else this['drawBody'](_0x472dd6, 0x1);
        }, _0x40d4da['prototype']['poisonBody'] = function(_0x272210, _0x4c7181, _0x2b8f75) {
            {
                var _0x1a52c3 = '#547d24',
                    _0x587952 = this['rad'] * _0x4c7181;
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                var _0x23c96d = _0x476319 - this['spawnTime'],
                    _0x3dfbed = _0x3d5dd9['lake'][_0x23c96d % _0x3d5dd9['lake']['length']];
                _0x3dfbed !== undefined && _0x3dfbed != null && (this['theFrame'] = _0x3dfbed, rShift = this['theFrame']);
                var _0x490fca = 0x4;
                _0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, _0x587952, 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['fillStyle'] = _0x272210;
                var _0x2c553f = _0x587952 * 0.45,
                    _0x15d1eb = _0x587952 * 0.45 + 0xf * this['rPer'],
                    _0x3b2484 = _0x587952 * 0.5,
                    _0x2ca793 = _0x587952 * 0.5 + 0xf * this['rPer'],
                    _0x49dc33 = -_0x587952 * 0.55 * 0.707,
                    _0x2ad6fa = +_0x587952 * 0.55 * 0.707 + 0xf * this['rPer'],
                    _0x10e0a6 = -_0x587952 * 0.75,
                    _0x76f28c = -_0x587952 * 0.35 + 0xf * this['rPer'],
                    _0x589b1f = _0x587952 + 0xa * this['rPer'],
                    _0x3caa83 = 0x32 * this['rPer'],
                    _0x593786 = _0x587952 - 0x14 * this['rPer'],
                    _0x1db76a = 0x32 * this['rPer'];
                _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, _0x587952 - _0x490fca + rShift), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['save'](), _0x4597c4['fillStyle'] = _0x1a52c3, _0x4597c4['globalAlpha'] = _0x2b8f75, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, _0x587952 - _0x490fca + rShift), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['restore'](), _0x4597c4['restore']();
            }
        }, _0x40d4da['prototype']['drawBody'] = function(_0x523c40, _0x263547, _0x44bc71) {
            {
                var _0x2ff32a = this['rad'] * _0x263547;
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x44bc71;
                if (!_0x9ffe4d) {
                    if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
                }
                var _0x3bd531 = 0x0;
                if (!_0x9ffe4d && !this['isEmptyLake']) {
                    var _0x1c3d9f = _0x476319 - this['spawnTime'];
                    _0x3bd531 = _0x3d5dd9['lake'][_0x1c3d9f % _0x3d5dd9['lake']['length']];
                }
                var _0x20168d = 0x4;
                !this['isEmptyLake'] && (_0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, _0x2ff32a, 0x0, Math['PI'] * 0x2), _0x4597c4['fill']());
                if (this['curBiome'] == _0x11e4d4) _0x4597c4['fillStyle'] = '#8da0d6';
                else _0x4597c4['fillStyle'] = _0x472dd6;
                _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, _0x2ff32a - _0x20168d + _0x3bd531), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x9ffe4d && _0x3aa021 == _0x243dd0) && (_0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2ff32a * 0.45, -_0x2ff32a * 0.45 + 0xf * this['rPer'], Math['max'](0x0, _0x2ff32a * 0.5 + _0x3bd531), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2ff32a * 0.5, _0x2ff32a * 0.5 + 0xf * this['rPer'], Math['max'](0x0, _0x2ff32a * 0.4 + _0x3bd531), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x2ff32a * 0.55 * 0.707, +_0x2ff32a * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, _0x2ff32a * 0.5 + _0x3bd531), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-_0x2ff32a * 0.75, -_0x2ff32a * 0.35 + 0xf * this['rPer'], Math['max'](0x0, _0x2ff32a * 0.3 + _0x3bd531), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2ff32a + 0xa * this['rPer'], 0x32 * this['rPer'], this['specType'] == 0x0 ? 0x8 : 0x4, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](_0x2ff32a - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()), _0x4597c4['restore']();
            }
        }, _0x40d4da['prototype']['onLerpUpdate'] = function(_0x385216) {
            this['LakeSize'] = _0x385216 * (this['n_LakeSize'] - this['o_LakeSize']) + this['o_LakeSize'];
        }, _0x40d4da['prototype']['readUpdatedProperty'] = function(_0x2632f3, _0x4aea8f) {
            if (_0x2632f3 == _0xc219e9) this['n_LakeSize'] = _0x4aea8f['readUInt16']() / 0x3e8, this['o_LakeSize'] = this['LakeSize'];
            else {
                if (_0x2632f3 == _0x69a368) this['poison'] = _0x4aea8f['readUInt16']() / 0x3e8;
                else _0x2632f3 == _0x20d431 && (this['isEmptyLake'] = _0x4aea8f['readUInt8']() == 0x1);
            }
        }, _0x40d4da['prototype']['readCustomData_onNewlyVisible'] = function(_0x1eba20) {
            this['isEmptyLake'] = _0x1eba20['readUInt8']() == 0x1, this['isDeathLake'] = _0x1eba20['readUInt8']() == 0x1, this['LakeSize'] = this['o_LakeSize'] = this['n_LakeSize'] = _0x1eba20['readUInt16']() / 0x3e8, this['isDeathLake'] && (this['poison'] = _0x1eba20['readUInt16']() / 0x3e8, this['LakeStream'] = _0x1eba20['readUInt16']());
        };

        function _0x40d4da() {
            _0x40d4da['superClass']['call'](this, _0x3a3371);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x40d4da, _0x3a3371);
        var _0x4d8447 = _0x5d11ac;
        _0x11e66a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x11e66a['prototype']['constructor'] = _0x11e66a, _0x11e66a['superClass'] = _0x4d8447, _0x11e66a['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2;
        }, _0x11e66a['prototype']['customDraw'] = function(_0x5af6f1) {
            var _0x5b2195 = 0x0,
                _0x1b669c = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x4932d9 = _0x5b9e97(_0x1b669c, 0x1, 0.3, 0x2),
                _0x599d91 = this['getSkinImageObj']('img/viralpandemic/virus.png');
            if (_0x599d91) {
                var _0x4cafed = this['rad'] * 1.2 + _0x4932d9;
                if (this['stickyVirus']) _0x4597c4['rotate'](this['angle']);
                else {
                    if (this['angleR'] == undefined) this['angleR'] = _0x5d7e18(0.01, 0.09);
                    this['angleR'] += 0.01, _0x4597c4['rotate'](this['angleR']);
                }
                _0x4597c4['drawImage'](_0x599d91, -_0x4cafed, -_0x4cafed, 0x2 * _0x4cafed, 0x2 * _0x4cafed);
            } else this['drawOutlinedCircle']('', 'white');
        }, _0x11e66a['prototype']['stickyVirus'] = ![], _0x11e66a['prototype']['readUpdatedProperty'] = function(_0x579b5f, _0x3945b1) {
            _0x579b5f == _0x57d6ba && (this['stickyVirus'] = _0x3945b1['readUInt8']() == 0x1);
        };

        function _0x11e66a() {
            _0x11e66a['superClass']['call'](this, _0x5a37b4), _0x11e66a['prototype']['easeAngleChanges'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x11e66a, _0x5a37b4);
        var _0x4d8447 = _0x5d11ac;
        _0x5768b3['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5768b3['prototype']['constructor'] = _0x5768b3, _0x5768b3['superClass'] = _0x4d8447, _0x5768b3['prototype']['foodType'] = 0x0, _0x5768b3['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x5768b3['prototype']['customDraw'] = function(_0x45f669) {
            _0x4597c4['save']();
            var _0x432f1f = this['getImmunityFoodName'](),
                _0x1649d5 = this['getSkinImageObj']('img/viralpandemic/' + _0x432f1f + '_e.png');
            if (_0x1649d5) {
                var _0x58a299 = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x1649d5, -_0x58a299, -_0x58a299, 0x2 * _0x58a299, 0x2 * _0x58a299), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x5768b3['prototype']['getImmunityFoodName'] = function() {
            var _0x37276c = 'cabbage';
            switch (this['foodType']) {
                case 0x1:
                    _0x37276c = 'cabbage';
                    break;
                case 0x2:
                    _0x37276c = 'dragonfruit';
                    break;
                case 0x3:
                    _0x37276c = 'onion';
                    break;
                case 0x4:
                    _0x37276c = 'papaya';
                    break;
                case 0x5:
                    _0x37276c = 'papayaslice';
                    break;
                case 0x6:
                    _0x37276c = 'peach';
                    break;
                case 0x7:
                    _0x37276c = 'peapod';
                    break;
                case 0x8:
                    _0x37276c = 'peapod1';
                    break;
            }
            return _0x37276c;
        }, _0x5768b3['prototype']['readCustomData_onNewlyVisible'] = function(_0x34c47a) {
            this['foodType'] = _0x34c47a['readUInt8']();
        };

        function _0x5768b3() {
            _0x5768b3['superClass']['call'](this, _0x2bbb1e), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5768b3, _0x2bbb1e);
        var _0x4d8447 = _0x5d11ac;
        _0x2b0230['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2b0230['prototype']['constructor'] = _0x2b0230, _0x2b0230['superClass'] = _0x4d8447;
        var _0x36f943 = 0x0,
            _0x1469e9 = 0x0;
        _0x2b0230['prototype']['updateZ'] = function() {
            this['z'] = 0x18706;
        }, _0x2b0230['prototype']['customDraw'] = function(_0x3e5c81) {
            _0x4597c4['save']();
            if (this['isEnabled']) _0x4597c4['globalAlpha'] = 0.4;
            else _0x4597c4['globalAlpha'] = 0.2;
            _0x4597c4['fillStyle'] = 'black', _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x4597c4['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']);
            if (this['isEnabled']) _0x4597c4['globalAlpha'] = this['opacity'] * 0.5;
            else _0x4597c4['globalAlpha'] = this['opacity'] * 0.2;
            _0x4597c4['fillStyle'] = this['color'], _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), _0x4597c4['lineWidth'] = '3';
            this['btnStroke'] > 0x0 && (_0x4597c4['globalAlpha'] = this['opacity'] * 0.9, _0x4597c4['strokeStyle'] = this['color'], _0x4597c4['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']));
            _0x4597c4['restore']();
            if (this['isEnabled']) {
                var _0x198619 = this['x'] - this['rectW'] / 0x2,
                    _0x52520d = this['x'] + this['rectW'] / 0x2,
                    _0x20b837 = this['y'] - this['rectH'] / 0x2,
                    _0x495e68 = this['y'] + this['rectH'] / 0x2,
                    _0x32c95b = ![];
                if (_0x3a4688 > _0x198619 && _0x3a4688 < _0x52520d && _0x1623d7 > _0x20b837 && _0x1623d7 < _0x495e68 || _0x51ac62 == this['hotkey']) _0x32c95b = !![], _0x1469e9 = _0x36f943 = this['id'], _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['opacity'], _0x4597c4['fillStyle'] = this['color'], _0x4597c4['fillRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH']), this['hoverStroke'] > 0x0 && (_0x4597c4['globalAlpha'] = 0x1, _0x4597c4['lineWidth'] = this['hoverStroke'], _0x4597c4['strokeStyle'] = _0x4155ab, _0x4597c4['strokeRect'](-this['rectW'] / 0x2, -this['rectH'] / 0x2, this['rectW'], this['rectH'])), _0x4597c4['restore']();
                else {
                    if (_0x1469e9 == this['id']) _0x36f943 = 0x0;
                }
            }
            null != this['txtLabel'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x32c95b ? 0x1 : 0.6, _0x32c95b ? (this['txtLabel']['setFontSize'](0xc), this['txtLabel']['setColor']('white'), this['txtLabel']['setStroke'](0x2)) : (this['txtLabel']['setColor'](this['isEnabled'] ? 'white' : 'black'), this['txtLabel']['setStroke'](0x0)), this['txtLabel']['draw'](), _0x4597c4['restore']());
            if (this['isEnabled'] && this['hotkey'] != '') {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['fillStyle'] = 'white';
                var _0x403853 = -this['rectW'] / 0x2 + 0x2,
                    _0x4461da = this['rectH'] / 0x2 - 0xc;
                _0x4597c4['fillRect'](_0x403853, _0x4461da, 0xa, 0xa), this['txtHotkey']['x'] = _0x403853 + 0x5, this['txtHotkey']['y'] = _0x4461da + 0x5, _0x4597c4['globalAlpha'] = 0.7, this['txtHotkey']['draw'](), _0x4597c4['restore']();
            }
        }, _0x2b0230['prototype']['optionID'] = 0x0, _0x2b0230['prototype']['optionType'] = 0x0, _0x2b0230['prototype']['label'] = 0x0, _0x2b0230['prototype']['highlight'] = 0x0, _0x2b0230['prototype']['txtLabel'] = null, _0x2b0230['prototype']['txtHotkey'] = null, _0x2b0230['prototype']['isEnabled'] = !![], _0x2b0230['prototype']['hotkey'] = '', _0x2b0230['prototype']['readCustomData_onNewlyVisible'] = function(_0x4d954a) {
            _0x51ac62 = null, _0x1ee82a = +new Date() + 0x3e8, this['optionID'] = _0x4d954a['readUInt32']();
            var _0xd3f450 = _0x4d954a['readString']();
            _0xd3f450 = _0xd3f450['replaceAll']('\x0a', 'newline'), console['log'](_0xd3f450);
            var _0x249b31 = JSON['parse'](_0xd3f450);
            this['label'] = _0x249b31['label']['replaceAll']('newline', '\x0a'), this['optionType'] = _0x249b31['value'], this['color'] = _0x249b31['color'], this['opacity'] = _0x249b31['opacity'] / 0x64, this['hoverStroke'] = _0x249b31['hoverStroke'], this['btnStroke'] = _0x249b31['btnStroke'], this['isEnabled'] = Number(_0x249b31['enabled']) == 0x1, this['hotkey'] = _0x249b31['hotkey'], !this['isEnabled'] && (this['opacity'] *= 0.5), null == this['txtLabel'] && (this['txtLabel'] = new _0x16040f(0xc, '#FFFFFF'), this['txtLabel']['x'] = 0x0, this['txtLabel']['y'] = 0x0, this['txtLabel']['strokeW'] = 0x0, this['txtLabel']['multiLine'] = !![], this['txtLabel']['renderScale'] = 0x2, this['txtLabel']['setText'](this['label'])), this['isEnabled'] && this['hotkey'] != '' && null == this['txtHotkey'] && (this['txtHotkey'] = new _0x16040f(0x8, '#FFFFFF'), this['txtHotkey']['x'] = 0x0, this['txtHotkey']['y'] = 0x0, this['txtHotkey']['strokeW'] = 0x0, this['txtHotkey']['multiLine'] = ![], this['txtHotkey']['renderScale'] = 0x2, this['txtHotkey']['setText'](this['hotkey']), this['txtHotkey']['setColor']('white'), this['txtHotkey']['setStroke'](0x0));
        };
        var _0xb045c4 = 0x81;

        function _0x2b0230() {
            _0x2b0230['superClass']['call'](this, _0xb045c4);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2b0230, _0xb045c4);
        var _0x4d8447 = _0x5d11ac;
        _0x4e5a1d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4e5a1d['prototype']['constructor'] = _0x4e5a1d, _0x4e5a1d['superClass'] = _0x4d8447, _0x4e5a1d['prototype']['updateZ'] = function() {
            this['z'] = 0x18706;
        }, _0x4e5a1d['prototype']['customDraw'] = function(_0x44b102) {
            _0x4597c4['save']();
            var _0x461a9d = this['rectW'],
                _0x16e9c5 = this['rectH'];
            _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['fillStyle'] = 'black', _0x4597c4['fillRect'](-_0x461a9d / 0x2, -_0x16e9c5 / 0x2, _0x461a9d, _0x16e9c5), _0x4597c4['globalAlpha'] = 0.15, _0x4597c4['fillStyle'] = 'white', _0x461a9d -= 0x3, _0x16e9c5 -= 0x3, _0x4597c4['fillRect'](-_0x461a9d / 0x2, -_0x16e9c5 / 0x2, _0x461a9d, _0x16e9c5), _0x4597c4['stroke'](), _0x4597c4['restore']();
            null != this['txtTitle'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, this['txtTitle']['setFontSize'](0x12), this['txtTitle']['setColor']('white'), this['txtTitle']['setStroke'](0x2), this['txtTitle']['draw'](), _0x4597c4['restore']());
            null != this['txtMessage'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, this['txtMessage']['draw'](), _0x4597c4['restore']());
            if (null != this['timerTxt']) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
                var _0x461a9d = 0x19,
                    _0x16e9c5 = 0x19;
                _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['fillStyle'] = 'red';
                var _0x39b43d = this['rectW'] / 0x2 - _0x461a9d - 1.5,
                    _0x3c61f4 = -this['rectH'] / 0x2 + 1.5;
                _0x4597c4['fillRect'](_0x39b43d, _0x3c61f4, _0x461a9d, _0x16e9c5), _0x4597c4['globalAlpha'] = 0x1, this['timerTxt']['setFontSize'](0x10), this['timerTxt']['setColor']('white'), this['timerTxt']['setStroke'](0x2);
                var _0x4f8264 = this['timeoutTime'] - Math['round']((+new Date() - this['spawnTime']) / 0x3e8);
                this['timerTxt']['setText'](_0x4f8264), this['timerTxt']['x'] = _0x39b43d + 12.5, this['timerTxt']['y'] = _0x3c61f4 + 12.5, this['timerTxt']['draw'](), _0x4597c4['restore']();
            }
            _0x4597c4['save'](), _0x1d43ed(this), _0x4597c4['restore']();
        }, _0x4e5a1d['prototype']['option1'] = null, _0x4e5a1d['prototype']['option2'] = null, _0x4e5a1d['prototype']['option3'] = null, _0x4e5a1d['prototype']['option4'] = null;

        function _0x1d43ed(_0x1ab79a) {
            var _0x4457de = _0x1ab79a['rectW'] * 0.5,
                _0x519dfe = _0x1ab79a['rectH'] * 0.35,
                _0x24248f = -_0x4457de / 0x2,
                _0x168a28 = -0x14;
            _0x4597c4['globalAlpha'] = 0.2, _0x4597c4['fillStyle'] = 'black', _0x4597c4['fillRect'](_0x24248f, _0x168a28, _0x4457de, _0x519dfe), _0x4597c4['globalAlpha'] = 0.7, _0x4597c4['fillStyle'] = 'limegreen', _0x4597c4['fillRect'](_0x24248f, _0x168a28, _0x4457de, 0x14), _0x3ca060('options', _0x1ab79a, _0x24248f, _0x168a28 + 2.5, _0x4457de, _0x519dfe, 'ARENA OPTIONS', 'white', 0x2), _0x4457de = 0x64, _0x519dfe = 0xf, _0x24248f = -_0x4457de / 0x2, _0x168a28 += 0x7, _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['fillStyle'] = 'green', _0x168a28 += _0x519dfe + 0x5, _0x4597c4['globalAlpha'] = 0.7, _0x3ca060('option2', _0x1ab79a, _0x24248f, _0x168a28, _0x4457de, _0x519dfe, (_0x1ab79a['data']['watr'] == Number(0x1) ? 'INFINITE' : 'LIMITED') + ' WATER', 'white', 0x0), _0x168a28 += _0x519dfe, _0x3ca060('option3', _0x1ab79a, _0x24248f, _0x168a28, _0x4457de, _0x519dfe, (_0x1ab79a['data']['hp'] == Number(0x1) ? 'ENABLE' : 'DISABLE') + ' HEALTH REGEN', 'white', 0x0), _0x168a28 += _0x519dfe, _0x3ca060('option4', _0x1ab79a, _0x24248f, _0x168a28, _0x4457de, _0x519dfe, 'TURN ' + (_0x1ab79a['data']['speed'] == Number(0x1) ? 'NORMAL' : 'FAST'), 'white', 0x0), _0x168a28 += _0x519dfe, _0x3ca060('option5', _0x1ab79a, _0x24248f, _0x168a28, _0x4457de, _0x519dfe, _0x1ab79a['data']['climax'] == Number(0x1) ? 'LAST MAN STANDING' : _0x1ab79a['data']['bites'] + ' BITES WINS', 'white', 0x0), _0x168a28 += _0x519dfe, _0x3ca060('option6', _0x1ab79a, _0x24248f, _0x168a28, _0x4457de, _0x519dfe, _0x1ab79a['data']['wall'] == Number(0x1) ? 'WALL DAMAGE' : 'NO WALL DAMAGE', 'white', 0x0);
        }

        function _0x3ca060(_0x2d4a07, _0x332057, _0x43d143, _0x4dcebd, _0x21e499, _0x147a08, _0x12b634, _0x2cf922, _0x260dd1) {
            if (_0x260dd1 == undefined) _0x260dd1 = 0x0;
            null == _0x332057[_0x2d4a07] ? (_0x332057[_0x2d4a07] = new _0x16040f(0xa, _0x2cf922), _0x332057[_0x2d4a07]['x'] = _0x43d143, _0x332057[_0x2d4a07]['y'] = _0x4dcebd, _0x332057[_0x2d4a07]['strokeW'] = 0x0, _0x332057[_0x2d4a07]['multiLine'] = !![], _0x332057[_0x2d4a07]['renderScale'] = 0x2, _0x332057[_0x2d4a07]['setStroke'](_0x260dd1), _0x332057[_0x2d4a07]['setText'](_0x12b634)) : (_0x332057[_0x2d4a07]['x'] = _0x43d143 + _0x21e499 / 0x2, _0x332057[_0x2d4a07]['y'] = _0x4dcebd + 0x7, _0x332057[_0x2d4a07]['draw']());
        }
        _0x4e5a1d['prototype']['timeoutTime'] = 0x0, _0x4e5a1d['prototype']['optionType'] = 0x0, _0x4e5a1d['prototype']['label'] = 0x0, _0x4e5a1d['prototype']['highlight'] = 0x0, _0x4e5a1d['prototype']['txtTitle'] = null, _0x4e5a1d['prototype']['txtMessage'] = null, _0x4e5a1d['prototype']['timerTxt'] = null, _0x4e5a1d['prototype']['screenMsg'] = null, _0x4e5a1d['prototype']['screenTitle'] = null, _0x4e5a1d['prototype']['invitee_id'] = null, _0x4e5a1d['prototype']['spiderX'] = null, _0x4e5a1d['prototype']['spiderY'] = null, _0x4e5a1d['prototype']['beforeCustomDraw'] = function(_0x743db0) {
            _0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'white', _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore']();
        }, _0x4e5a1d['prototype']['worldUpd_readMsgUpdate'] = function(_0x187dc6) {
            var _0x201949 = _0x187dc6['readUInt16']() / 0x4,
                _0x2f7c08 = _0x187dc6['readUInt16']() / 0x4;
            this['setMovedToPos'](_0x201949, _0x2f7c08);
            var _0x2363ea = _0x187dc6['readUInt32']() / 0x64,
                _0xb9b4fd = _0x187dc6['readUInt32']() / 0x64;
            this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x2363ea, this['spider_ny'] = _0xb9b4fd;
        }, _0x4e5a1d['prototype']['onLerpUpdate'] = function(_0x4f7165) {
            this['spiderX'] = _0x4f7165 * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x4f7165 * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
        }, _0x4e5a1d['prototype']['data'] = null, _0x4e5a1d['prototype']['readCustomData_onNewlyVisible'] = function(_0x57a078) {
            var _0x5645c4 = _0x57a078['readString'](),
                _0x45d7be = _0x57a078['readString'](),
                _0x1e7006 = _0x57a078['readUInt8'](),
                _0x1746af = _0x57a078['readBitGroup'](),
                _0x5750de = _0x1746af['getBool']() ? 0x1 : 0x0,
                _0x36a4e8 = _0x1746af['getBool']() ? 0x1 : 0x0,
                _0x2eb73d = _0x1746af['getBool']() ? 0x1 : 0x0,
                _0x55e48c = _0x1746af['getBool']() ? 0x1 : 0x0,
                _0x45cd05 = _0x1746af['getBool']() ? 0x1 : 0x0,
                _0x537682 = 0x0;
            if (!_0x45cd05) _0x537682 = _0x57a078['readUInt8']();
            var _0x5b335b = {
                'title': _0x5645c4,
                'invtedBy': _0x45d7be,
                'watr': _0x5750de,
                'hp': _0x36a4e8,
                'speed': _0x2eb73d,
                'climax': _0x45cd05,
                'wall': _0x55e48c,
                'time': _0x1e7006,
                'bites': _0x537682
            };
            this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
            var _0x1ad881 = '\x0a',
                _0x29615a = '-br-';
            this['data'] = _0x5b335b, this['timeoutTime'] = Number(_0x5b335b['time']);
            null == this['txtTitle'] && (this['txtTitle'] = new _0x16040f(0x12, '#FFFFFF'), this['txtTitle']['x'] = 0x0, this['txtTitle']['y'] = this['rectH'] / 0x2 * -0.85, this['txtTitle']['strokeW'] = 0x0, this['txtTitle']['multiLine'] = !![], this['txtTitle']['renderScale'] = 0x2, this['txtTitle']['setText'](this['data']['title']));
            if (null == this['txtMessage']) {
                this['txtMessage'] = new _0x16040f(0x10, '#FFFFFF'), this['txtMessage']['x'] = 0x0, this['txtMessage']['y'] = this['txtTitle']['y'] + 0x28, this['txtMessage']['strokeW'] = 0x0, this['txtMessage']['multiLine'] = !![], this['txtMessage']['renderScale'] = 0x2;
                if (this['data']['invtedBy'] == '') this['data']['invtedBy'] = 'mope.io';
                this['txtMessage']['setText'](this['data']['invtedBy'] + '\x0ainvites you for 1v1 fight!');
            }
            null == this['timerTxt'] && (this['timerTxt'] = new _0x16040f(0x10, '#FFFFFF'), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['strokeW'] = 0x0, this['timerTxt']['multiLine'] = ![], this['timerTxt']['renderScale'] = 0x2, this['timerTxt']['setText']('15'));
        };
        var _0x2b890f = 0x82;

        function _0x4e5a1d() {
            _0x4e5a1d['superClass']['call'](this, _0x2b890f);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4e5a1d, _0x2b890f);
        var _0x498438 = _0x8e6fcc,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x8e6fcc['prototype']['customType'] = 0x0, _0x8e6fcc['prototype']['updateZ'] = function() {
            this['z'] = 0x3e9;
        }, _0x8e6fcc['prototype']['customDraw'] = function(_0x141b68) {}, _0x8e6fcc['prototype']['setObjTypes'] = function(_0x2b83e1, _0x553095) {
            this['oType'] = _0x2b83e1, this['customType'] = _0x553095;
        }, _0x8e6fcc['prototype']['readCustomData_onNewlyVisible'] = function(_0x2b9a4a) {
            _0x8e6fcc['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x2b9a4a);
        }, _0x8e6fcc['prototype']['readCustomData_onUpdate'] = function(_0x125ed3) {
            _0x8e6fcc['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x125ed3);
        };
        var _0x1b2f8f = 0x80;

        function _0x8e6fcc() {
            _0x8e6fcc['superClass']['call'](this, _0x1b2f8f), _0x8e6fcc['prototype']['easeAngleChanges'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x8e6fcc, _0x1b2f8f), _0x5ddf8d['addCustomClassType'](_0x1b2f8f);
        var _0x498438 = _0x4fa75b,
            _0x4d8447 = _0x8e6fcc;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x4fa75b['prototype']['customDraw'] = function(_0x245c03) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.095, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = 'red', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
            var _0x567e96 = 0xf;
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(-0x5a));
            var _0x5c845f = this['getSkinImageObj']('img/custom/trunk2.png');
            if (_0x5c845f) {
                var _0x462b79 = 0x3c;
                _0x4597c4['save'](), _0x4597c4['drawImage'](_0x5c845f, -_0x462b79, this['rad'] - _0x462b79 + _0x567e96, 0x2 * _0x462b79, 0x2 * _0x462b79), _0x4597c4['restore']();
            }
            var _0x5c845f = this['getSkinImageObj']('img/custom/trunk1.png');
            if (_0x5c845f) {
                var _0x462b79 = 0x3c;
                _0x4597c4['save'](), _0x4597c4['drawImage'](_0x5c845f, -_0x462b79, -this['rad'] - _0x462b79 - _0x567e96, 0x2 * _0x462b79, 0x2 * _0x462b79), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x4fa75b['prototype']['readCustomData_onNewlyVisible'] = function(_0x31f19d) {
            _0x4fa75b['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x31f19d);
        };

        function _0x4fa75b() {
            _0x4fa75b['superClass']['call'](this);
        }
        var _0x384ca2 = 0x1;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4fa75b, _0x1b2f8f, _0x384ca2);
        var _0x498438 = _0x5c89fd,
            _0x4d8447 = _0x8e6fcc;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x5c89fd['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2 + this['rad'];
        }, _0x5c89fd['prototype']['customDraw'] = function(_0x2a78e4) {
            _0x4597c4['save']();
            var _0x2608a9 = this['getSkinImageObj']('img/custom/pad.png');
            if (_0x2608a9) {
                var _0x5f4841 = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(-0x5a)), _0x4597c4['drawImage'](_0x2608a9, -_0x5f4841, -_0x5f4841, 0x2 * _0x5f4841, 0x2 * _0x5f4841), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x5c89fd['prototype']['ropeMargin'] = 0x0, _0x5c89fd['prototype']['beforeCustomDraw'] = function(_0x50d834) {
            var _0x3620a4 = 0xa;
            _0x4597c4['save'](), _0x4597c4['strokeStyle'] = '#4f4f4f', _0x4597c4['lineWidth'] = _0x3620a4, _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['base1_X'], this['base1_Y']), _0x4597c4['stroke'](), _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['base2_X'], this['base2_Y']), _0x4597c4['stroke'](), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['strokeStyle'] = '#222222', _0x4597c4['lineWidth'] = _0x3620a4 * 0.6, _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['base1_X'], this['base1_Y']), _0x4597c4['stroke'](), _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['base2_X'], this['base2_Y']), _0x4597c4['stroke'](), _0x4597c4['restore']();
        }, _0x5c89fd['prototype']['readCustomData_onNewlyVisible'] = function(_0x5b3173) {
            _0x5c89fd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x5b3173), this['base1_ox'] = this['base1_X'] = this['base1_nx'] = this['x'], this['base1_oy'] = this['base1_Y'] = this['base1_ny'] = this['y'], this['base2_ox'] = this['base2_X'] = this['base2_nx'] = this['x'], this['base2_oy'] = this['base2_Y'] = this['base2_ny'] = this['y'], this['readBaseData'](_0x5b3173);
        }, _0x5c89fd['prototype']['readBaseData'] = function(_0xcf37f1) {
            var _0x1db637 = _0xcf37f1['readUInt32']() / 0x64,
                _0x29db94 = _0xcf37f1['readUInt32']() / 0x64,
                _0x212ab6 = _0xcf37f1['readUInt32']() / 0x64,
                _0xcd5159 = _0xcf37f1['readUInt32']() / 0x64;
            this['base1_ox'] = this['base1_X'], this['base1_oy'] = this['base1_Y'], this['base1_nx'] = _0x1db637, this['base1_ny'] = _0x29db94, this['base2_ox'] = this['base2_X'], this['base2_oy'] = this['base2_Y'], this['base2_nx'] = _0x212ab6, this['base2_ny'] = _0xcd5159;
        }, _0x5c89fd['prototype']['base1_X'] = 0x0, _0x5c89fd['prototype']['base1_Y'] = 0x0, _0x5c89fd['prototype']['base2_X'] = 0x0, _0x5c89fd['prototype']['base2_Y'] = 0x0, _0x5c89fd['prototype']['onLerpUpdate'] = function(_0x39fa4e) {
            this['base1_X'] = _0x39fa4e * (this['base1_nx'] - this['base1_ox']) + this['base1_ox'], this['base1_Y'] = _0x39fa4e * (this['base1_ny'] - this['base1_oy']) + this['base1_oy'], this['base2_X'] = _0x39fa4e * (this['base2_nx'] - this['base2_ox']) + this['base2_ox'], this['base2_Y'] = _0x39fa4e * (this['base2_ny'] - this['base2_oy']) + this['base2_oy'], this['base1_ox'] = this['base1_X'], this['base1_oy'] = this['base1_Y'], this['base2_ox'] = this['base2_X'], this['base2_oy'] = this['base2_Y'];
        };

        function _0x5c89fd() {
            _0x5c89fd['superClass']['call'](this);
        }
        var _0x99008b = 0x2;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5c89fd, _0x1b2f8f, _0x99008b);
        var _0x498438 = _0xc91dc9,
            _0x4d8447 = _0x8e6fcc;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0xc91dc9['prototype']['customDraw'] = function(_0x14ec76) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.095, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['rad'] * 0.9, 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = 'red', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
        };

        function _0xc91dc9() {
            _0xc91dc9['superClass']['call'](this);
        }
        var _0x2738d2 = 0x4;
        _0x5ddf8d['setCustomClassForGameObjType'](_0xc91dc9, _0x1b2f8f, _0x2738d2);
        var _0x498438 = _0x13112d,
            _0x4d8447 = _0x8e6fcc;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x13112d['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2 + this['rad'];
        }, _0x13112d['prototype']['customDraw'] = function(_0x1aa897) {
            this['drawLeg'](_0x2dace5), this['drawLeg'](_0x14dede), this['drawLeg'](_0x3840ba), this['drawLeg'](_0x1094ff), _0x4597c4['save']();
            var _0x928cef = this['getSkinImageObj']('img/custom/trampoline/rug_zebra.png');
            if (_0x928cef) {
                var _0xef0c34 = this['rad'] * (this['stretch'] / 0x64),
                    _0x25d849 = _0xef0c34 + _0x2f32d4;
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x928cef, -_0xef0c34, -_0x25d849, 0x2 * _0xef0c34, 0x2 * _0x25d849), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        };
        var _0x2f32d4 = 0xf,
            _0x2dace5 = -0x2b,
            _0x14dede = 0x32,
            _0x3840ba = 0x87,
            _0x1094ff = 0xe1,
            _0x3e86d4 = 0.4,
            _0x1849cb = 0x0;

        function _0x1339f5(_0x2709ae) {
            return 0x1 + (0x1 - _0x2709ae['stretch'] / 0x64);
        }
        _0x13112d['prototype']['drawLeg'] = function(_0x154143) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            var _0x429a4c = this['getSkinImageObj']('img/custom/trampoline/leg_zebra.png');
            if (_0x429a4c) {
                var _0x5f454c = this['rad'] * 0.3,
                    _0x162ce4 = 0x2 * this['rad'] * _0x3e86d4 * _0x1339f5(this);
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(_0x154143)), _0x4597c4['drawImage'](_0x429a4c, -_0x5f454c, this['rad'] * _0x1339f5(this), 0x2 * _0x5f454c, _0x162ce4), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x13112d['prototype']['readCustomData_onNewlyVisible'] = function(_0x380063) {
            _0x13112d['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x380063), this['o_stretch'] = this['nw_strech'] = this['n_strech'] = this['stretch'], this['readBaseData'](_0x380063);
        }, _0x13112d['prototype']['baseStrech'] = 0x0, _0x13112d['prototype']['readCustomData_onUpdate'] = function(_0x2b5bdb) {
            _0x13112d['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x2b5bdb), this['readBaseData'](_0x2b5bdb);
        }, _0x13112d['prototype']['stretch'] = 0x64, _0x13112d['prototype']['readBaseData'] = function(_0x48617d) {
            var _0x3c30f1 = _0x48617d['readUInt32']() / 0x64;
            this['o_stretch'] = this['stretch'], this['n_strech'] = _0x3c30f1;
        }, _0x13112d['prototype']['base1_X'] = 0x0, _0x13112d['prototype']['base1_Y'] = 0x0, _0x13112d['prototype']['base2_X'] = 0x0, _0x13112d['prototype']['base2_Y'] = 0x0, _0x13112d['prototype']['base3_X'] = 0x0, _0x13112d['prototype']['base3_Y'] = 0x0, _0x13112d['prototype']['base4_X'] = 0x0, _0x13112d['prototype']['base4_Y'] = 0x0, _0x13112d['prototype']['onLerpUpdate'] = function(_0x34ad4c) {
            this['stretch'] = _0x34ad4c * (this['n_strech'] - this['o_stretch']) + this['o_stretch'];
        };

        function _0x13112d() {
            _0x13112d['superClass']['call'](this);
        }
        var _0x442933 = 0x5;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x13112d, _0x1b2f8f, _0x442933);
        var _0x4d8447 = _0x5502af;
        _0x52bba7['prototype'] = Object['create'](_0x4d8447['prototype']), _0x52bba7['prototype']['constructor'] = _0x52bba7, _0x52bba7['superClass'] = _0x4d8447, _0x52bba7['prototype']['updateZ'] = function() {
            this['z'] = 0x186a0;
        }, _0x52bba7['prototype']['getSkinName'] = function() {
            var _0x368c45 = this['animalInfo']();
            if (this['animalSpecies'] == 0x8 || this['animalSpecies'] == 0x6) return _0x368c45['skinName'] + '_body';
            return _0x368c45['skinName'];
        }, _0x52bba7['prototype']['animalInfo'] = function() {
            var _0x491258 = {},
                _0x5883d5 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x5883d5 = 'jagga', _0x491258['aniName'] = 'Jagga';
                    break;
                case 0x1:
                    _0x5883d5 = 'bali', _0x491258['aniName'] = 'Bali';
                    break;
                case 0x2:
                    _0x5883d5 = 'jutt', _0x491258['aniName'] = 'Jutt';
                    break;
                case 0x3:
                    _0x5883d5 = 'bhollaa', _0x491258['aniName'] = 'Bhollaa';
                    break;
                case 0x4:
                    _0x5883d5 = 'butt', _0x491258['aniName'] = 'Butt';
                    break;
                case 0x5:
                    _0x5883d5 = 'khattak', _0x491258['aniName'] = 'Khattak';
                    break;
                case 0x6:
                    _0x5883d5 = 'chandyo/chandyo', _0x491258['aniName'] = 'Chandyo';
                    break;
                case 0x7:
                    _0x5883d5 = 'abysmal', _0x491258['aniName'] = 'Abysmal';
                    break;
                case 0x8:
                    _0x5883d5 = 'sultan/sultan', _0x491258['aniName'] = 'Sultan';
                    break;
                case 0x9:
                    _0x5883d5 = 'gujjar', _0x491258['aniName'] = 'Gujjar';
                    break;
            }
            return _0x491258['aniCol'] = '#FF9000', _0x491258['skinName'] = 'land/aiboss/' + _0x5883d5, _0x491258['upgradeText'] = 'UPGRADED to ' + _0x491258['aniName'] + ' the A.I BOSS!', _0x491258['aniCol'] = '#22FF8A', _0x491258;
        }, _0x52bba7['prototype']['getAbilityInfo'] = function(_0x347408) {
            var _0xaac8fa = {},
                _0x26fbee = this['animalInfo']();
            return _0xaac8fa['abilName'] = 'AI', _0xaac8fa['abilImg'] = 'skins/' + _0x26fbee['skinName'] + '.png', _0xaac8fa['speciesType'] = this['animalSpecies'], _0xaac8fa['skinThemeID'] = this['skinThemeID'], _0xaac8fa['mopeSeasonID'] = this['mopeSeasonID'], _0xaac8fa;
        }, _0x52bba7['prototype']['diveColor1'] = '#64a034', _0x52bba7['prototype']['diveColor2'] = '#598b30', _0x52bba7['prototype']['onAnimalSpeciesSet'] = function() {
            switch (this['animalSpecies']) {
                case 0x1:
                    this['diveColor1'] = '#dbb300', this['diveColor2'] = '#bf9d04';
                    break;
                case 0x2:
                    this['diveColor1'] = '#79c9a8', this['diveColor2'] = '#6fad9f';
                    break;
            }
        }, _0x52bba7['prototype']['leftWingAnim'] = null, _0x52bba7['prototype']['flapAngleDiff'] = 0x3, _0x52bba7['prototype']['flapAngle'] = 0x3, _0x52bba7['prototype']['flapF'] = 0.1, _0x52bba7['prototype']['flapDur'] = 0x2, _0x52bba7['prototype']['sF'] = 0.02, _0x52bba7['prototype']['drawWings'] = function() {
            this['leftWingAnim'] == null && (this['leftWingAnim'] = new _0x504c7a(this, this['flapDur'], _0x504c7a['wave']), this['leftWingAnim']['keepLastFrame'] = !![], this['leftWingAnim']['loop'] = !![], this['leftWingAnim']['onFrameEntered'] = function(_0x265993) {
                this['forObj']['frame1'] = _0x265993;
            });
            if (this['leftWingAnim'] != null) this['leftWingAnim']['run']();
            var _0x12789c = this['rad'] - this['outlineW'],
                _0x102789 = this['frame1'] * this['sF'] * _0x12789c,
                _0x2a7df6 = -(-this['flapF'] + this['frame1']),
                _0x163161 = _0x2a7df6 * _0x4c4686(this['flapAngle']),
                _0x232ec5 = 0x1f4 / 0x154,
                _0x56833c = this['getSkinImageObj']('skins/land/aiboss/sultan/left_wing.png'),
                _0x2dbb3e = this['getSkinImageObj']('skins/land/aiboss/sultan/right_wing.png');
            if (_0x56833c && _0x2dbb3e) {
                var _0x349329 = 0.2;
                _0x4597c4['save'](), _0x4597c4['rotate'](_0x4c4686(this['flapAngleDiff']) + _0x163161), _0x4597c4['drawImage'](_0x56833c, -_0x12789c * _0x232ec5 - _0x349329 * _0x12789c, -_0x12789c * _0x232ec5 + _0x102789, 0x2 * _0x12789c * _0x232ec5, 0x2 * _0x12789c * _0x232ec5 + _0x102789 * 1.5), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['rotate'](-(_0x4c4686(this['flapAngleDiff']) + _0x163161)), _0x4597c4['drawImage'](_0x2dbb3e, -_0x12789c * _0x232ec5 + _0x349329 * _0x12789c, -_0x12789c * _0x232ec5 + _0x102789, 0x2 * _0x12789c * _0x232ec5, 0x2 * _0x12789c * _0x232ec5 + _0x102789 * 1.5), _0x4597c4['restore']();
            }
        }, _0x52bba7['prototype']['drawSkinCustomization'] = function() {
            if (this['animalSpecies'] == 0x8) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x9ffe4d ? 0.5 : 0x1;
                var _0x58e69c = 0x1f4 / 0x154,
                    _0xd4d618 = this['getSkinImageObj']('skins/land/aiboss/sultan/sultan_head.png');
                if (_0xd4d618) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x9ffe4d ? 0.2 : 0x1;
                    var _0x403775 = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0xd4d618, -_0x403775 * _0x58e69c, -_0x403775 * _0x58e69c, 0x2 * _0x403775 * _0x58e69c, 0x2 * _0x403775 * _0x58e69c), _0x4597c4['restore']();
                }
                var _0x20d2e0 = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0xd31385 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x20d2e0, 0x5, 0x1, 0x1) : this['birdNoAnimationFlyWingAngle'];
                this['drawWings']();
                var _0x58f1f4 = -1.25,
                    _0x1d8525 = -0.1,
                    _0x1513c3 = 0x258 / 0x17c,
                    _0x4d35ba = 0.4,
                    _0x2f8f56 = this['getSkinImageObj']('skins/land/aiboss/sultan/tail.png');
                if (_0x2f8f56) {
                    _0x4597c4['save']();
                    var _0x403775 = this['rad'] - this['outlineW'];
                    _0x4597c4['drawImage'](_0x2f8f56, -_0x403775 * _0x4d35ba, -_0x403775 * _0x4d35ba + _0x58f1f4 * _0x403775, 0x2 * _0x403775 * _0x4d35ba, 0x2 * _0x403775 * _0x4d35ba), _0x4597c4['restore']();
                }
                _0x4597c4['restore']();
            } else {
                if (this['animalSpecies'] == 0x6) {
                    var _0x41fdab = 0x0,
                        _0xa775d6 = 0.42,
                        _0x57cab1 = 0x1f4 / 0x154,
                        _0x5704c7 = 0x1f4 / 0x154,
                        _0x2f8f56 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_back.png');
                    if (_0x2f8f56) {
                        _0x4597c4['save']();
                        var _0x403775 = this['rad'] - this['outlineW'];
                        _0x4597c4['drawImage'](_0x2f8f56, -_0x403775 * _0x5704c7, -_0x403775 * _0x5704c7 + _0x41fdab * _0x403775, 0x2 * _0x403775 * _0x5704c7, 0x2 * _0x403775 * _0x5704c7), _0x4597c4['restore']();
                    }
                    var _0xd4d618 = this['getSkinImageObj']('skins/land/aiboss/chandyo/chandyo_head.png');
                    if (_0xd4d618) {
                        _0x4597c4['save']();
                        var _0x403775 = this['rad'] - this['outlineW'];
                        _0x4597c4['drawImage'](_0xd4d618, -_0x403775 * _0x57cab1, -_0x403775 * _0x57cab1 + _0xa775d6 * _0x403775, 0x2 * _0x403775 * _0x57cab1, 0x2 * _0x403775 * _0x57cab1), _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x52bba7() {
            _0x52bba7['superClass']['call'](this, _0x269668);
        }
        var _0x4576a9 = 0x6b;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x52bba7, _0x269668, _0x4576a9);
        var _0x4d8447 = _0x5d11ac;
        _0x14d9d8['prototype'] = Object['create'](_0x4d8447['prototype']), _0x14d9d8['prototype']['constructor'] = _0x14d9d8, _0x14d9d8['superClass'] = _0x4d8447, _0x14d9d8['prototype']['mommyID'] = 0x0, _0x14d9d8['prototype']['updateZ'] = function() {
            this['z'] = 0x989680;
        }, _0x14d9d8['prototype']['isEdibleOutlined'] = function() {
            if (this['mommyID'] == _0x59b0bc) return ![];
            return _0x20b6fd['superClass']['prototype']['isEdibleOutlined']['call'](this);
        }, _0x14d9d8['prototype']['customDraw'] = function(_0x3efddf) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5;
            var _0x54b257 = this['getSkinImageObj']('img/camera.png');
            if (_0x54b257) {
                var _0x5babe7 = this['rad'] * 0x2;
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x54b257, -_0x5babe7, -_0x5babe7, 0x2 * _0x5babe7, 0x2 * _0x5babe7);
            }
            _0x4597c4['restore']();
        };
        var _0x3746fb = 0x7f;

        function _0x14d9d8() {
            _0x14d9d8['superClass']['call'](this, _0x3746fb), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x14d9d8, _0x3746fb);
        var _0x498438 = _0x5181d8,
            _0x4d8447 = _0x5d11ac;
        _0x5181d8['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5181d8['prototype']['constructor'] = _0x5181d8, _0x5181d8['superClass'] = _0x4d8447, _0x5181d8['prototype']['r'] = 0x0, _0x5181d8['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x5181d8['prototype']['customDraw'] = function(_0x538a84) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'] + 0x2, 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = '#32ff00', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.095, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = 'red', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore'](), _0x4597c4['save']();
            var _0x149c02 = 0x1,
                _0x58f497 = _0x149c02 * 0.1;
            this['r'] += _0x58f497, _0x4597c4['rotate'](_0x4c4686(-this['r'])), this['setTitle'](), _0x4597c4['restore']();
        }, _0x5181d8['prototype']['setTitle'] = function() {
            var _0x5ece57 = _0x5ece57 = 'SANDBOX\x0aARENA',
                _0x34cb98 = this['rad'] * 0.07;
            null == this['timerTxt'] ? (this['timerTxt'] = new _0x16040f(_0x34cb98, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0x5ece57)) : (this['timerTxt']['setFontSize'](_0x34cb98), this['timerTxt']['setText'](_0x5ece57)), this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'] * 0.9, this['timerTxt']['draw']();
        };
        var _0x5e82f8 = 0x7e;

        function _0x5181d8() {
            _0x5181d8['superClass']['call'](this, _0x5e82f8);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5181d8, _0x5e82f8);
        var _0x23a733 = function(_0x1b3368, _0x4f2f50) {
                window['setTimeout'](function() {
                    _0x1b3368 += 'r';
                    var _0x46d2fb = _0x55fe15 ? 0x1 : 0x0;
                    _0x4f2f50 = _0x46d2fb + '' + _0x4f2f50, _0x4f2f50 = _0x4f2f50 + '' + _0x46d2fb;
                    var _0x415088 = new _0x278eb3(0x2 + _0x4f2f50['length'] + 0x2);
                    _0x415088['writeUInt8'](0x3e), _0x415088['writeString'](_0x4f2f50), _0x5df395(_0x415088);
                }, 0x1388);
            },
            _0x41fa6b = '',
            _0x4d1bd7 = function() {
                console['log']('@@@@@@@@@@@@@@@@@@@ recaptcha called'), _0x41fa6b = '', grecaptcha['execute'](recaptcha_clientkey, {
                    'action': 'homepage'
                })['then'](function(_0x46bee9) {
                    _0x41fa6b = _0x46bee9 || 'error';
                    var _0x2ac1e9 = new _0x278eb3(0x2 + _0x41fa6b['length'] + 0x2);
                    _0x2ac1e9['writeUInt8'](_0x5e9c80), _0x2ac1e9['writeString'](_0x41fa6b), _0x5df395(_0x2ac1e9), _0x41fa6b == null && console['log']('error: rec token could not received!');
                })['catch'](function(_0x4dfba7) {
                    console['log']('Error loading recaptcha! Reason: ' + _0x4dfba7), _0x41fa6b = 'error';
                    var _0x54eb45 = new _0x278eb3(0x2 + _0x41fa6b['length'] + 0x2);
                    _0x54eb45['writeUInt8'](_0x5e9c80), _0x54eb45['writeString'](_0x41fa6b), _0x5df395(_0x54eb45);
                });
            },
            _0x4005af = function(_0x1b37ab, _0x2b9b24, _0x494d70) {
                window['setTimeout'](function() {
                    if (_0x2b9b24) {
                        _0x494d70 = eval(_0x1b37ab), _0x494d70 = _0x494d70 + '|' + _0x2b9b24;
                        var _0x4cb455 = new _0x278eb3(0x2 + _0x494d70['length'] + 0x2);
                        _0x4cb455['writeUInt8'](_0x35056e), _0x4cb455['writeString'](_0x494d70), _0x5df395(_0x4cb455);
                    }
                }, _0x4ec95c(0.5, 0.8) * 0x3e8);
            },
            _0x498438 = _0x48f308,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x48f308['prototype']['customDraw'] = function(_0x111dc6) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4));
            var _0x1c8d3b = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
            var _0x576a07 = this['getSkinImageObj']('img/disasters/coldwave.png');
            if (_0x576a07) {
                var _0xe0abd = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x576a07, -_0xe0abd, -_0xe0abd, 0x2 * _0xe0abd, 0x2 * _0xe0abd);
            }
            _0x4597c4['restore']();
        }, _0x48f308['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 - this['rad'];
        }, _0x48f308['prototype']['readCustomData_onNewlyVisible'] = function(_0x376b84) {
            this['alpha'] = _0x376b84['readUInt8']() / 0x64;
        }, _0x48f308['prototype']['readUpdatedProperty'] = function(_0x200d9e, _0xa583a8) {
            _0x200d9e == _0x297759 && (this['alpha'] = _0xa583a8['readUInt8']() / 0x64);
        };

        function _0x48f308() {
            _0x48f308['superClass']['call'](this), this['spawnTime'] = _0x476319;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x48f308, _0x4fbd16, _0x1339be);
        var _0x4d8447 = _0x5d11ac;
        _0x376294['prototype'] = Object['create'](_0x4d8447['prototype']), _0x376294['prototype']['constructor'] = _0x376294, _0x376294['superClass'] = _0x4d8447, _0x376294['prototype']['updateZ'] = function() {
            this['z'] = 0x3e8 + this['rad'];
        }, _0x376294['prototype']['customDraw'] = function(_0x23390e) {
            _0x4597c4['save']();
            var _0x35784f = 0x0,
                _0x470677 = _0x476319 - this['spawnTime'],
                _0x2997e2 = _0x470677 / 0x3e8,
                _0x80af5a = 0x2,
                _0x72b0a7 = 1.5;
            _0x35784f = _0x72b0a7 * Math['sin'](0x2 * Math['PI'] / _0x80af5a * _0x2997e2);
            var _0x59349f = 0.6,
                _0xb6c499 = _0x5b9e97(_0x2997e2, 0xa, 0x1, 0.5);
            _0xb6c499 = _0x34fd15(_0xb6c499, 0x0, 0x1);
            _0xb6c499 >= _0x59349f && (_0x59349f = _0x59349f - (_0xb6c499 - _0x59349f));
            var _0x3f2a1c = '#98803A';
            _0x4597c4['fillStyle'] = _0x3f2a1c, _0x4597c4['globalAlpha'] = _0x59349f, _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, -this['rad'] * 0.5 + 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.65 + _0x35784f), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, -this['rad'] * 0.5 - 0xa * this['rPer'], Math['max'](0x0, this['rad'] * 0.73 - _0x35784f), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.6, this['rad'] * 0.4, Math['max'](0x0, this['rad'] * 0.78 + _0x35784f), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.5, this['rad'] * 0.5, Math['max'](0x0, this['rad'] * 0.6 + this['rPer'] - _0x35784f), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['restore']();
        };

        function _0x376294() {
            _0x376294['superClass']['call'](this, _0x382989);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x376294, _0x382989);
        var _0x498438 = _0x1ca0a4,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x1ca0a4['prototype']['customDraw'] = function(_0x1cfb67) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4));
            var _0x101c3a = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
            var _0x10c285 = this['getSkinImageObj']('img/disasters/dustwave.png');
            if (_0x10c285) {
                var _0x584128 = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x10c285, -_0x584128, -_0x584128, 0x2 * _0x584128, 0x2 * _0x584128);
            }
            _0x4597c4['restore']();
        }, _0x1ca0a4['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 - this['rad'];
        }, _0x1ca0a4['prototype']['readCustomData_onNewlyVisible'] = function(_0x28aafb) {
            this['alpha'] = _0x28aafb['readUInt8']() / 0x64;
        }, _0x1ca0a4['prototype']['readUpdatedProperty'] = function(_0xb1d9e9, _0x11518c) {
            _0xb1d9e9 == _0x297759 && (this['alpha'] = _0x11518c['readUInt8']() / 0x64);
        };

        function _0x1ca0a4() {
            _0x1ca0a4['superClass']['call'](this), this['spawnTime'] = _0x476319, this['alpha'] = 0x0;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1ca0a4, _0x4fbd16, _0x416306);
        var _0x498438 = _0x1db5ba,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x1db5ba['prototype']['customDraw'] = function(_0x3d7e88) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4));
            var _0x20dc06 = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
            var _0x233e64 = this['getSkinImageObj']('img/disasters/heatwave.png');
            if (_0x233e64) {
                var _0x2d483c = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x233e64, -_0x2d483c, -_0x2d483c, 0x2 * _0x2d483c, 0x2 * _0x2d483c);
            }
            _0x4597c4['restore']();
        }, _0x1db5ba['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 - this['rad'];
        }, _0x1db5ba['prototype']['readCustomData_onNewlyVisible'] = function(_0x263900) {
            this['alpha'] = _0x263900['readUInt8']() / 0x64;
        }, _0x1db5ba['prototype']['readUpdatedProperty'] = function(_0x5007b5, _0x12d86f) {
            _0x5007b5 == _0x297759 && (this['alpha'] = _0x12d86f['readUInt8']() / 0x64);
        };

        function _0x1db5ba() {
            _0x1db5ba['superClass']['call'](this), this['spawnTime'] = _0x476319;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1db5ba, _0x4fbd16, _0x209c2d);
        var _0x4d8447 = _0x5d11ac;
        _0xa5d035['prototype'] = Object['create'](_0x4d8447['prototype']), _0xa5d035['prototype']['constructor'] = _0xa5d035, _0xa5d035['superClass'] = _0x4d8447, _0xa5d035['prototype']['updateZ'] = function() {
            this['z'] = 0xf4240;
        }, _0xa5d035['prototype']['customDraw'] = function(_0xf12b14) {
            var _0x431678 = (_0x476319 - this['spawnTime']) / 0x3e8;
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['globalAlpha'] = 0.1 + this['cloudOpacity'];
            var _0x16fa8c = this['getSkinImageObj']('img/disasters/cloud.png');
            if (_0x16fa8c) {
                var _0x19cd2f = this['rad'] * 0x2;
                _0x4597c4['drawImage'](_0x16fa8c, -_0x19cd2f, -_0x19cd2f, 0x2 * _0x19cd2f, 0x2 * _0x19cd2f);
            }
            var _0x55fbc1 = 0x0,
                _0x3b346f = 0x6,
                _0x23408f = 0xf;
            _0x55fbc1 = _0x23408f * Math['sin'](0x2 * Math['PI'] / _0x3b346f * _0x431678), _0x4597c4['globalAlpha'] = 0.1;
            var _0x16fa8c = this['getSkinImageObj']('img/disasters/cloud1.png');
            if (_0x16fa8c) {
                var _0x19cd2f = this['rad'] * 0x2;
                _0x19cd2f = Math['max'](0x0, _0x19cd2f - 0x5 + _0x55fbc1), _0x4597c4['drawImage'](_0x16fa8c, -_0x19cd2f, -_0x19cd2f, 0x2 * _0x19cd2f, 0x2 * _0x19cd2f);
            }
            _0x4597c4['restore']();
        }, _0xa5d035['prototype']['readUpdatedProperty'] = function(_0x3984d1, _0x4d9164) {
            _0x3984d1 == _0x297759 && (this['cloudOpacity'] = _0x4d9164['readUInt8']() / 0x64);
        };

        function _0xa5d035() {
            _0xa5d035['superClass']['call'](this, _0x25dd6c), this['cloudOpacity'] = 0.1;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xa5d035, _0x25dd6c);
        var _0x4d8447 = _0x5d11ac;
        _0x45a617['prototype'] = Object['create'](_0x4d8447['prototype']), _0x45a617['prototype']['constructor'] = _0x45a617, _0x45a617['superClass'] = _0x4d8447, _0x45a617['prototype']['updateZ'] = function() {
            this['z'] = 0xf4240;
        }, _0x45a617['prototype']['customDraw'] = function(_0x1ec152) {
            var _0x147ff3 = (_0x476319 - this['spawnTime']) / 0x3e8;
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['globalAlpha'] = 0.1 + this['alpha'];
            var _0x1445f2 = this['getSkinImageObj']('img/disasters/cloud.png');
            if (_0x1445f2) {
                var _0x2fdcba = this['rad'] * 0x2;
                _0x4597c4['drawImage'](_0x1445f2, -_0x2fdcba, -_0x2fdcba, 0x2 * _0x2fdcba, 0x2 * _0x2fdcba);
            }
            var _0x20dc83 = 0x0,
                _0x3dbd6a = 0x6,
                _0x48d6ea = 0xf;
            _0x20dc83 = _0x48d6ea * Math['sin'](0x2 * Math['PI'] / _0x3dbd6a * _0x147ff3), _0x4597c4['globalAlpha'] = 0.1;
            var _0x1445f2 = this['getSkinImageObj']('img/disasters/cloud1.png');
            if (_0x1445f2) {
                var _0x2fdcba = this['rad'] * 0x2;
                _0x2fdcba = Math['max'](0x0, _0x2fdcba - 0x5 + _0x20dc83), _0x4597c4['drawImage'](_0x1445f2, -_0x2fdcba, -_0x2fdcba, 0x2 * _0x2fdcba, 0x2 * _0x2fdcba);
            }
            _0x4597c4['restore']();
        }, _0x45a617['prototype']['readCustomData_onNewlyVisible'] = function(_0x40e507) {
            this['alpha'] = _0x40e507['readUInt8']() / 0x64;
        }, _0x45a617['prototype']['readUpdatedProperty'] = function(_0x28d485, _0x4cf1c6) {
            _0x28d485 == _0x297759 && (this['alpha'] = _0x4cf1c6['readUInt8']() / 0x64);
        };

        function _0x45a617() {
            _0x45a617['superClass']['call'](this, _0x2f8dda), this['alpha'] = 0.9;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x45a617, _0x2f8dda);
        var _0x4d8447 = _0x5d11ac;
        _0x559513['prototype'] = Object['create'](_0x4d8447['prototype']), _0x559513['prototype']['constructor'] = _0x559513, _0x559513['superClass'] = _0x4d8447, _0x559513['prototype']['updateZ'] = function() {
            this['z'] = 0x2710;
        }, _0x559513['prototype']['tornadoType'] = 'tornado', _0x559513['prototype']['customDraw'] = function(_0x182cf0) {
            this['setTornadoType']();
            var _0x7de1a2 = 'img/disasters/' + this['tornadoType'] + '.png',
                _0x48f0b3 = this['getSkinImageObj'](_0x7de1a2);
            if (_0x48f0b3) {
                var _0x202dc2 = this['rad'] * 0.8;
                if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                    var _0x3ee537 = 0x3c / 0x3c,
                        _0x46aa82 = 0x3e8 / _0x3ee537,
                        _0x13090d = (_0x476319 - this['spawnTime']) % _0x46aa82 / _0x46aa82,
                        _0x692b84 = _0x13090d * 0x2 * Math['PI'],
                        _0x3ee537 = 0x1e / 0x3c,
                        _0x46aa82 = 0x3e8 / _0x3ee537,
                        _0x13090d = (_0x476319 - this['spawnTime']) % _0x46aa82 / _0x46aa82,
                        _0x371eda = _0x13090d * 0x2 * Math['PI'];
                    _0x4597c4['save'](), _0x4597c4['rotate'](_0x692b84);
                    var _0x3e524b = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x3e524b;
                    var _0x548578 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x59718b = 2.2,
                        _0x3dee9b = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x59718b * _0x548578),
                        _0x35a6db = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x59718b * _0x548578);
                    _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['drawImage'](_0x48f0b3, -_0x202dc2 - _0x3dee9b / 2.2, -_0x202dc2, 0x2 * _0x202dc2, 0x2 * _0x202dc2), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.7, _0x4597c4['rotate'](_0x371eda), _0x4597c4['drawImage'](_0x48f0b3, -_0x202dc2 - _0x3dee9b / 2.2, -_0x202dc2, 0x2 * _0x202dc2, 0x2 * _0x202dc2), _0x4597c4['restore']();
                } else _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.7, _0x4597c4['drawImage'](_0x48f0b3, -_0x202dc2, -_0x202dc2, 0x2 * _0x202dc2, 0x2 * _0x202dc2), _0x4597c4['restore']();
                if (this['showDevilFace']) {
                    var _0x7de1a2 = 'img/disasters/' + this['tornadoFace'] + '.png',
                        _0x23148e = this['getSkinImageObj'](_0x7de1a2);
                    _0x23148e && (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['drawImage'](_0x23148e, -_0x202dc2, -_0x202dc2, 0x2 * _0x202dc2, 0x2 * _0x202dc2), _0x4597c4['restore']());
                }
            }
        }, _0x559513['prototype']['setTornadoType'] = function(_0x1c4c3a) {
            switch (this['specType']) {
                case 0x0:
                    this['tornadoType'] = 'tornado', this['tornadoFace'] = 'dustface';
                    break;
                case 0x1:
                    this['tornadoType'] = 'waterspout', this['tornadoFace'] = 'waterface';
                    break;
                case 0x2:
                    this['tornadoType'] = 'dustdevil', this['tornadoFace'] = 'dustface';
                    break;
                case 0x3:
                    this['tornadoType'] = 'arcticwhirl', this['tornadoFace'] = 'arcticface';
                    break;
                case 0x4:
                    this['tornadoType'] = 'firedevil', this['tornadoFace'] = 'fireface';
                    break;
                case 0x5:
                    this['tornadoType'] = 'deviltwister', this['tornadoFace'] = 'devilface';
                    break;
            }
        }, _0x559513['prototype']['readCustomData_onNewlyVisible'] = function(_0x3c07ee) {
            this['setTornadoType'](), this['showDevilFace'] = _0x3c07ee['readUInt8']() == 0x1;
        }, _0x559513['prototype']['showDevilFace'] = ![], _0x559513['prototype']['tornadoFace'] = null;

        function _0x559513() {
            _0x559513['superClass']['call'](this, _0x5e6d33), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x559513, _0x5e6d33);
        var _0x498438 = _0x39d4fc,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x39d4fc['prototype']['customDraw'] = function(_0x266051) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4));
            var _0x169f93 = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
            var _0x57474d = this['getSkinImageObj']('img/disasters/tsunami.png');
            if (_0x57474d) {
                var _0x2e15c4 = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x57474d, -_0x2e15c4, -_0x2e15c4, 0x2 * _0x2e15c4, 0x2 * _0x2e15c4);
            }
            _0x4597c4['restore']();
        }, _0x39d4fc['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 - this['rad'];
        }, _0x39d4fc['prototype']['readUpdatedProperty'] = function(_0x2f9c2b, _0x1868a4) {
            _0x2f9c2b == _0x297759 && (this['alpha'] = _0x1868a4['readUInt8']() / 0x64);
        }, _0x39d4fc['prototype']['readCustomData_onNewlyVisible'] = function(_0x5470a7) {
            this['alpha'] = _0x5470a7['readUInt8']() / 0x64;
        };

        function _0x39d4fc() {
            _0x39d4fc['superClass']['call'](this), this['spawnTime'] = _0x476319;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x39d4fc, _0x4fbd16, _0x21a38a);
        var _0x4d8447 = _0x5d11ac;
        _0x2e5543['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2e5543['prototype']['constructor'] = _0x2e5543, _0x2e5543['superClass'] = _0x4d8447, _0x2e5543['prototype']['lookAngle'] = 0x0, _0x2e5543['prototype']['frameNumber'] = 0x0, _0x2e5543['prototype']['isRolling'] = ![], _0x2e5543['prototype']['pumpkinType'] = ![], _0x2e5543['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea;
        }, _0x2e5543['prototype']['customDraw'] = function(_0x7b20e5) {
            var _0x5e17b1 = 0x1,
                _0x4dd17e = 0.15,
                _0x8b954c = 0.8,
                _0x5ea679 = 0.5 * (_0x8b954c - _0x4dd17e),
                _0x20d054 = _0x4dd17e + _0x5ea679 + _0x5ea679 * Math['sin'](0x2 * Math['PI'] / _0x5e17b1 * (_0x476319 / 0x3e8)),
                _0x5e17b1 = 0x1,
                _0x4dd17e = 0.85,
                _0x8b954c = 0x1,
                _0x5ea679 = 0.5 * (_0x8b954c - _0x4dd17e),
                _0x32f4e3 = 0x1;
            if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x476319 / 0x78) % 0x5;
            var _0x397aac = 'img/pumpkin/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png',
                _0x1f76c3 = this['getSkinImageObj'](_0x397aac);
            if (_0x1f76c3) {
                var _0x39e8b0 = 0x0,
                    _0x311592 = this['rad'],
                    _0x889d37 = this['rad'] * 2.5;
                imH = this['rad'] * 2.5;
                var _0x3b21b7 = 0.5,
                    _0x4c9770 = 0.95;
                _0x4597c4['save']();
                {
                    _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x32f4e3, _0x4597c4['rotate'](this['angle'] - _0x197fc1), _0x4597c4['drawImage'](_0x1f76c3, _0x39e8b0 + _0x889d37 * -_0x3b21b7, _0x311592 + imH * -_0x4c9770, _0x889d37, imH);
                }
                _0x4597c4['restore']();
            } else {}
        }, _0x2e5543['prototype']['isFloating'] = ![], _0x2e5543['prototype']['isRolling'] = ![], _0x2e5543['prototype']['readUpdatedProperty'] = function(_0x28ef8a, _0x1ce825) {
            if (_0x28ef8a == _0x21a49b) this['isFloating'] = _0x1ce825['readUInt8']() == 0x1;
            else _0x28ef8a == _0x26362d && (this['isRolling'] = _0x1ce825['readUInt8']() == 0x1);
        }, _0x2e5543['prototype']['readCustomData_onNewlyVisible'] = function(_0x2187df) {
            this['isRolling'] = _0x2187df['readUInt8']() == 0x1, this['pumpkinType'] = _0x2187df['readUInt8']();
        };

        function _0x2e5543() {
            _0x2e5543['superClass']['call'](this, _0x5bce71), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['isFloating'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        var _0x5bce71 = 0x83;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2e5543, _0x5bce71);
        var _0x498438 = _0x4a37d4,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x498438['prototype']['alltimeGoals'] = 0x0, _0x498438['prototype']['xpGained'] = 0x0, _0x498438['prototype']['goalScorer'] = '', _0x498438['prototype']['timerTxt'] = null, _0x498438['prototype']['timer'] = 0x0, _0x4a37d4['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x4a37d4['prototype']['customDraw'] = function(_0x1991b5) {
            this['updateTimer']();
            if (this['timer'] > 0x3) {
                _0x4597c4['save']();
                var _0x2e43f8 = _0x4597c4['globalAlpha'];
                _0x4597c4['globalAlpha'] = 0.25 * _0x2e43f8, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, 0x2 * Math['PI'], ![]), _0x4597c4['arc'](0x0, 0x0, this['rad'] - 0x14, 0x0, 0x2 * Math['PI'], !![]), _0x4597c4['fillStyle'] = '#ff9000', _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
            }
            this['timerTxt'] != null && (this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = -this['rad'], this['timerTxt']['draw']());
        }, _0x4a37d4['prototype']['readCustomData_onNewlyVisible'] = function(_0x23cea9) {
            _0x4a37d4['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x23cea9), this['alltimeGoals'] = _0x23cea9['readUInt16'](), this['goalScorer'] = _0x23cea9['readString'](), this['timer'] = _0x23cea9['readUInt8']();
        }, _0x4a37d4['prototype']['readUpdatedProperty'] = function(_0x5ed2ee, _0x39f210) {
            _0x5ed2ee == _0x183e17 && (this['timer'] = _0x39f210['readUInt8']());
        }, _0x4a37d4['prototype']['setTimer'] = function(_0x293c20) {
            var _0x4dd689 = _0x293c20,
                _0xe467c9 = 0x10;
            null == this['timerTxt'] ? (this['timerTxt'] = new _0x16040f(_0xe467c9, '#ffd800'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x3, this['timerTxt']['setText'](_0x4dd689)) : (this['timerTxt']['setFontSize'](_0xe467c9), this['timerTxt']['setText'](_0x4dd689));
        }, _0x4a37d4['prototype']['updateTimer'] = function() {
            this['timer'] = Math['round'](this['timer']);
            var _0x3a9e37 = this['timer'];
            switch (this['timer']) {
                case 0xa:
                case 0x9:
                case 0x8:
                    _0x3a9e37 = 'GOAAAAAL!!!';
                    break;
                case 0x7:
                case 0x6:
                case 0x5:
                    _0x3a9e37 = this['goalScorer'];
                    break;
                case 0x4:
                case 0x3:
                case 0x2:
                    _0x3a9e37 = 'TOTAL GOALS ' + this['alltimeGoals'];
                    break;
                default:
                    _0x3a9e37 = '';
                    break;
            }
            this['setTimer'](_0x3a9e37);
        };
        var _0xcc188d = 0x7d;

        function _0x4a37d4() {
            _0x4a37d4['superClass']['call'](this), this['hasAdLoaded'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4a37d4, _0x4fbd16, _0xcc188d);
        var _0x4d8447 = _0x5502af;
        _0x2d9d0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2d9d0['prototype']['constructor'] = _0x2d9d0, _0x2d9d0['superClass'] = _0x4d8447, _0x2d9d0['prototype']['animalInfo'] = function() {
            var _0x4f14b1 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x4f14b1['aniName'] = 'Raven';
                    break;
                case 0x6f:
                    _0x4f14b1['aniName'] = 'Classic Raven';
                    break;
                case 0xdc:
                    _0x4f14b1['aniName'] = 'Muscipula Raven';
                    break;
            }
            return _0x4f14b1['aniCol'] = '#FF9000', _0x4f14b1['skinName'] = this['getSkinName'](), _0x4f14b1['upgradeText'] = 'UPGRADED to ' + _0x4f14b1['aniName'] + '!\x0aHold W to fly around from Tress/Hills.\x0a(Hint: Use ability on land to scare animals) ', _0x4f14b1;
        }, _0x2d9d0['prototype']['getAbilityInfo'] = function(_0x275715) {
            var _0x5e13aa = {};
            return _0x5e13aa['abilName'] = 'Loud Caw!', _0x5e13aa['abilImg'] = 'skins/' + this['getSpeciesPath']() + this['getSubSpecies']() + '/ability.png', _0x5e13aa['skinThemeID'] = this['skinThemeID'], _0x5e13aa['mopeSeasonID'] = this['mopeSeasonID'], _0x5e13aa;
        }, _0x2d9d0['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/raven' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x2d9d0['prototype']['getSpeciesPath'] = function() {
            return 'forest/raven/' + this['animalSpecies'];
        }, _0x2d9d0['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x2d9d0['prototype']['getWing'] = function(_0x3e7044, _0x50e248, _0x6285e) {
            var _0xe089d2 = 'skins/' + this['getSpeciesPath']() + '/';
            return _0xe089d2 += _0x3e7044 + '_wing' + _0x50e248 + '.png', _0xe089d2;
        }, _0x2d9d0['prototype']['getHead'] = function(_0x41c7ec, _0x464e8a) {
            var _0x2a2873 = 'skins/' + this['getSpeciesPath']() + '/';
            return _0x2a2873 += _0x41c7ec + '_head.png', _0x2a2873;
        };
        var _0x2b95db = 0x0,
            _0xddb7c5 = 1.25,
            _0x2e5605 = 0x5,
            _0x32d631 = 0x1;
        _0x2d9d0['prototype']['biteStart'] = 0x0, _0x2d9d0['prototype']['flapAmount'] = 0x3, _0x2d9d0['prototype']['flapDur'] = 0.7, _0x2d9d0['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                if (!this['flag_flying']) {
                    this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                    if (this['specType'] != 0x0 && this['specType'] != undefined) {
                        var _0x53b29a = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/raven_head1.png'),
                            _0x46fe37 = (_0x476319 - this['biteStart']) / 0x3e8,
                            _0x47ee9f = this['skinScale'] * 1.1,
                            _0x566350 = this['skinRad'];
                        _0x5a9ff1 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x46fe37, this['flapDur'], 0.05, 0x2) : 0.05;
                        var _0x3bcd14 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
                        if (_0x3bcd14) {
                            _0x4597c4['save']();
                            var _0x4660b9 = -(-0.2 + _0x5a9ff1) * _0x197fc1,
                                _0x566350 = this['rad'] * 0.9;
                            _0x4597c4['rotate'](_0x4c4686(_0x2e5605) + _0x4660b9);
                            var _0x57cf0a = 0x0,
                                _0x2d2251 = this['rad'],
                                _0x423b3f = _0x566350 * 0x2 * 0.62,
                                _0x2b0e74 = _0x566350 * 2.5,
                                _0xbf0449 = _0x2b95db,
                                _0x1a76c3 = _0xddb7c5;
                            _0x4597c4['drawImage'](_0x3bcd14, _0x57cf0a + _0x423b3f * -_0xbf0449, _0x2d2251 + _0x2b0e74 * -_0x1a76c3, _0x423b3f, _0x2b0e74), _0x4597c4['restore']();
                        }
                        var _0x3bcd14 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
                        if (_0x3bcd14) {
                            _0x4597c4['save']();
                            var _0x4660b9 = -(-0.2 + _0x5a9ff1) * _0x4c4686(-0x5a),
                                _0x566350 = this['rad'] * 0.9;
                            _0x4597c4['rotate'](_0x4c4686(-_0x2e5605) + _0x4660b9);
                            var _0x57cf0a = 0x0,
                                _0x2d2251 = this['rad'],
                                _0x423b3f = _0x566350 * 0x2 * 0.62,
                                _0x2b0e74 = _0x566350 * 2.5,
                                _0xbf0449 = _0x32d631,
                                _0x1a76c3 = _0xddb7c5;
                            _0x4597c4['drawImage'](_0x3bcd14, _0x57cf0a + _0x423b3f * -_0xbf0449, _0x2d2251 + _0x2b0e74 * -_0x1a76c3, _0x423b3f, _0x2b0e74), _0x4597c4['restore']();
                        }
                        if (_0x53b29a) {
                            _0x5a9ff1 = 0x0;
                            !this['flag_flying'] && (_0x5a9ff1 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x46fe37, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                            _0x4597c4['save']();
                            var _0x566350 = this['rad'];
                            _0x4597c4['drawImage'](_0x53b29a, -_0x566350 * _0x47ee9f, (-_0x566350 + _0x566350 * 0.1) * _0x47ee9f + _0x5a9ff1, 0x2 * _0x566350 * _0x47ee9f, 0x2 * _0x566350 * _0x47ee9f), _0x4597c4['restore']();
                        }
                    }
                } else {
                    if (this['flag_flying']) {
                        var _0x47ee9f = 0x1f4 / 0x154;
                        if (this['flag_flying'] && !this['flag_isGrabbed']) {
                            _0x4597c4['save']();
                            var _0x46fe37 = (_0x476319 - this['spawnTime']) / 0x3e8,
                                _0x5a9ff1 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x46fe37, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                                _0x3bcd14 = this['getSkinImageObj'](this['getWing']('raven', 0x1, !![]));
                            if (_0x3bcd14) {
                                _0x4597c4['save']();
                                var _0x4660b9 = -(-0.2 + _0x5a9ff1) * _0x197fc1,
                                    _0x566350 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x4660b9);
                                var _0x57cf0a = 0x0,
                                    _0x2d2251 = this['rad'],
                                    _0x423b3f = _0x566350 * 0x2 * 0.62,
                                    _0x2b0e74 = _0x566350 * 2.5,
                                    _0xbf0449 = 0.2,
                                    _0x1a76c3 = 1.7;
                                _0x4597c4['drawImage'](_0x3bcd14, _0x57cf0a + _0x423b3f * -_0xbf0449, _0x2d2251 + _0x2b0e74 * -_0x1a76c3, _0x423b3f, _0x2b0e74), _0x4597c4['restore']();
                            }
                            var _0x3bcd14 = this['getSkinImageObj'](this['getWing']('raven', 0x2, !![]));
                            if (_0x3bcd14) {
                                _0x4597c4['save']();
                                var _0x4660b9 = -(-0.2 + _0x5a9ff1) * _0x4c4686(-0x5a),
                                    _0x566350 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x4660b9);
                                var _0x57cf0a = 0x0,
                                    _0x2d2251 = this['rad'],
                                    _0x423b3f = _0x566350 * 0x2 * 0.62,
                                    _0x2b0e74 = _0x566350 * 2.5,
                                    _0xbf0449 = 0.8,
                                    _0x1a76c3 = 1.7;
                                _0x4597c4['drawImage'](_0x3bcd14, _0x57cf0a + _0x423b3f * -_0xbf0449, _0x2d2251 + _0x2b0e74 * -_0x1a76c3, _0x423b3f, _0x2b0e74), _0x4597c4['restore']();
                            }
                            _0x4597c4['restore']();
                        }
                        if (this['specType'] != 0x0 && this['specType'] != undefined) {
                            var _0x53b29a = this['getSkinImageObj'](this['getHead']('raven', !![]));
                            if (_0x53b29a) {
                                _0x4597c4['save']();
                                var _0x566350 = this['rad'];
                                _0x4597c4['drawImage'](_0x53b29a, -_0x566350 * _0x47ee9f, (-_0x566350 + _0x566350 * 0.1) * _0x47ee9f, 0x2 * _0x566350 * _0x47ee9f, 0x2 * _0x566350 * _0x47ee9f), _0x4597c4['restore']();
                            }
                        }
                    }
                }
            }
        };

        function _0x2d9d0() {
            _0x2d9d0['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2d9d0, _0x269668, _0x1a5786);
        var _0x498438 = _0x5f5106,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x5f5106['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x5f5106['prototype']['customDraw'] = function(_0x398036) {
            _0x4597c4['save']();
            var _0x31e829 = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = 0.1 * _0x31e829, _0x4096ce(0x0, 0x0, this['rad'], '#755A2A'), _0x4597c4['restore'](), this['drawChat']();
        }, _0x5f5106['prototype']['drawChat'] = function() {
            if (this['aLine'] == null) return;
            _0x4597c4['save'](), _0x4597c4['font'] = '10px Arial', _0x4597c4['lineWidth'] = 0x1, _0x4597c4['textAlign'] = 'center', _0x4597c4['textBaseline'] = 'middle';
            var _0x255c78 = this['aLine'],
                _0x36a40a = _0x476319 > _0x255c78['chatFadeT'] ? 0x0 : 0x1;
            _0x255c78['chatA'] += (_0x36a40a - _0x255c78['chatA']) * 0.1, _0x4597c4['shadowOffsetX'] = 0x0, _0x4597c4['shadowOffsetY'] = 0x0;
            _0x255c78['chatA'] < 0.02 && (this['aLine'] = null);
            var _0x51b42a = _0x4597c4['measureText'](_0x255c78['chatTxt'])['width'],
                _0x3ba9d7 = 0xa,
                _0x26655e = 0x1,
                _0x56d981 = 0x1;
            _0x4597c4['globalAlpha'] = 0.8 * _0x255c78['chatA'], _0x4597c4['fillStyle'] = _0x46d432(this['curBiome']), _0x4597c4['fillRect'](this['x'] - _0x26655e - _0x51b42a / 0x2, this['y'] - this['rad'] - _0x3ba9d7 / 0x2 - _0x56d981, _0x51b42a + _0x26655e * 0x2, _0x3ba9d7 + _0x56d981 * 0x2), _0x4597c4['fillStyle'] = '#F1C34C', !(_0x3aa021 == _0x243dd0) && (_0x4597c4['shadowOffsetX'] = 0x1, _0x4597c4['shadowOffsetY'] = 0x1, _0x4597c4['shadowColor'] = 'black'), _0x4597c4['globalAlpha'] = _0x255c78['chatA'], _0x4597c4['fillText'](_0x255c78['chatTxt'], this['x'], this['y'] - this['rad']), _0x4597c4['restore']();
        };

        function _0x5f5106() {
            _0x5f5106['superClass']['call'](this);
        }
        _0x5f5106['prototype']['aLine'] = null, _0x5f5106['prototype']['readCustomData_onNewlyVisible'] = function(_0x30a9e9) {
            _0x5f5106['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x30a9e9), this['aLine'] = {
                'chatTxt': 'CAW!!!',
                'chatFadeT': _0x476319 + 0x7d0,
                'chatA': 0x0
            };
        }, _0x5ddf8d['setCustomClassForGameObjType'](_0x5f5106, _0x4fbd16, _0x3b9ce9);
        var _0x4d8447 = _0x5502af;
        _0x932660['prototype'] = Object['create'](_0x4d8447['prototype']), _0x932660['prototype']['constructor'] = _0x932660, _0x932660['superClass'] = _0x4d8447, _0x932660['prototype']['animalInfo'] = function() {
            var _0x41b4b1 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x41b4b1['aniName'] = 'Kakapo';
                    break;
                case 0x6f:
                    _0x41b4b1['aniName'] = 'Classic Kakapo';
                    break;
                case 0xca:
                    _0x41b4b1['aniName'] = 'Wind-up Kakapo';
                    break;
            }
            return _0x41b4b1['aniCol'] = '#FF9000', _0x41b4b1['skinName'] = this['getSkinName'](), _0x41b4b1['upgradeText'] = 'UPGRADED to ' + _0x41b4b1['aniName'] + '!\x0aHold W to hop around.\x0a(Hint: Use ability on prey to stun them) ', _0x41b4b1;
        }, _0x932660['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/kakapo' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x932660['prototype']['getSpeciesPath'] = function() {
            return 'forest/kakapo/' + this['animalSpecies'];
        }, _0x932660['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x932660['prototype']['getWing'] = function(_0x5ae262, _0x193c10, _0x150d92) {
            var _0xc85f5 = 'skins/' + this['getSpeciesPath']() + '/';
            return _0xc85f5 += _0x5ae262 + '_wing' + _0x193c10 + '.png', _0xc85f5;
        }, _0x932660['prototype']['getHead'] = function(_0x779371, _0x307f59) {
            var _0x33c71d = 'skins/' + this['getSpeciesPath']() + '/';
            return _0x33c71d += _0x779371 + '_head.png', _0x33c71d;
        };
        var _0x558ebb = 0x0,
            _0x2983d6 = 1.25,
            _0x57ba76 = 0x5,
            _0x3de30d = 0x1;
        _0x932660['prototype']['biteStart'] = 0x0, _0x932660['prototype']['flapAmount'] = 0x3, _0x932660['prototype']['flapDur'] = 0.7, _0x932660['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                this['biteStart'] = 0x0;
                return;
            } else {
                if (!this['flag_flying']) {
                    this['biteStart'] == 0x0 && (this['biteStart'] = _0x476319);
                    if (this['specType'] != 0x0 && this['specType'] != undefined) {
                        var _0x26581f = this['getSkinImageObj']('skins/' + this['getSpeciesPath']() + '/kakapo_head.png'),
                            _0x45887f = (_0x476319 - this['biteStart']) / 0x3e8,
                            _0x9bac5a = this['skinScale'] * 1.1,
                            _0x3be8a1 = this['skinRad'];
                        _0x75cab6 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x45887f, this['flapDur'], 0.05, 0x2) : 0.05;
                        var _0x3a3359 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
                        if (_0x3a3359) {
                            _0x4597c4['save']();
                            var _0x3b657b = -(-0.2 + _0x75cab6) * _0x197fc1,
                                _0x3be8a1 = this['rad'] * 0.9;
                            _0x4597c4['rotate'](_0x4c4686(_0x57ba76) + _0x3b657b);
                            var _0x32b4b9 = 0x0,
                                _0x1fb69b = this['rad'],
                                _0x470dbc = _0x3be8a1 * 0x2 * 0.62,
                                _0x4f781c = _0x3be8a1 * 2.5,
                                _0x1fc5b7 = _0x558ebb,
                                _0x371f8b = _0x2983d6;
                            _0x4597c4['drawImage'](_0x3a3359, _0x32b4b9 + _0x470dbc * -_0x1fc5b7, _0x1fb69b + _0x4f781c * -_0x371f8b, _0x470dbc, _0x4f781c), _0x4597c4['restore']();
                        }
                        var _0x3a3359 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
                        if (_0x3a3359) {
                            _0x4597c4['save']();
                            var _0x3b657b = -(-0.2 + _0x75cab6) * _0x4c4686(-0x5a),
                                _0x3be8a1 = this['rad'] * 0.9;
                            _0x4597c4['rotate'](_0x4c4686(-_0x57ba76) + _0x3b657b);
                            var _0x32b4b9 = 0x0,
                                _0x1fb69b = this['rad'],
                                _0x470dbc = _0x3be8a1 * 0x2 * 0.62,
                                _0x4f781c = _0x3be8a1 * 2.5,
                                _0x1fc5b7 = _0x3de30d,
                                _0x371f8b = _0x2983d6;
                            _0x4597c4['drawImage'](_0x3a3359, _0x32b4b9 + _0x470dbc * -_0x1fc5b7, _0x1fb69b + _0x4f781c * -_0x371f8b, _0x470dbc, _0x4f781c), _0x4597c4['restore']();
                        }
                        if (_0x26581f) {
                            _0x75cab6 = 0x0;
                            !this['flag_flying'] && (_0x75cab6 = !(_0x3aa021 == _0x243dd0) ? _0x5b9e97(_0x45887f, this['flapDur'], this['flapAmount'], 0x2) : this['flapAmount']);
                            _0x4597c4['save']();
                            var _0x3be8a1 = this['rad'];
                            _0x4597c4['drawImage'](_0x26581f, -_0x3be8a1 * _0x9bac5a, (-_0x3be8a1 + _0x3be8a1 * 0.1) * _0x9bac5a + _0x75cab6, 0x2 * _0x3be8a1 * _0x9bac5a, 0x2 * _0x3be8a1 * _0x9bac5a), _0x4597c4['restore']();
                        }
                    }
                } else {
                    if (this['flag_flying']) {
                        var _0x9bac5a = 0x1f4 / 0x154;
                        if (this['flag_flying'] && !this['flag_isGrabbed']) {
                            _0x4597c4['save']();
                            var _0x45887f = (_0x476319 - this['spawnTime']) / 0x3e8,
                                _0x75cab6 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x45887f, 0.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                                _0x3a3359 = this['getSkinImageObj'](this['getWing']('kakapo', 0x1, !![]));
                            if (_0x3a3359) {
                                _0x4597c4['save']();
                                var _0x3b657b = -(-0.2 + _0x75cab6) * _0x197fc1,
                                    _0x3be8a1 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x3b657b);
                                var _0x32b4b9 = 0x0,
                                    _0x1fb69b = this['rad'],
                                    _0x470dbc = _0x3be8a1 * 0x2 * 0.62,
                                    _0x4f781c = _0x3be8a1 * 2.5,
                                    _0x1fc5b7 = 0.2,
                                    _0x371f8b = 1.7;
                                _0x4597c4['drawImage'](_0x3a3359, _0x32b4b9 + _0x470dbc * -_0x1fc5b7, _0x1fb69b + _0x4f781c * -_0x371f8b, _0x470dbc, _0x4f781c), _0x4597c4['restore']();
                            }
                            var _0x3a3359 = this['getSkinImageObj'](this['getWing']('kakapo', 0x2, !![]));
                            if (_0x3a3359) {
                                _0x4597c4['save']();
                                var _0x3b657b = -(-0.2 + _0x75cab6) * _0x4c4686(-0x5a),
                                    _0x3be8a1 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x3b657b);
                                var _0x32b4b9 = 0x0,
                                    _0x1fb69b = this['rad'],
                                    _0x470dbc = _0x3be8a1 * 0x2 * 0.62,
                                    _0x4f781c = _0x3be8a1 * 2.5,
                                    _0x1fc5b7 = 0.8,
                                    _0x371f8b = 1.7;
                                _0x4597c4['drawImage'](_0x3a3359, _0x32b4b9 + _0x470dbc * -_0x1fc5b7, _0x1fb69b + _0x4f781c * -_0x371f8b, _0x470dbc, _0x4f781c), _0x4597c4['restore']();
                            }
                            _0x4597c4['restore']();
                        }
                        if (this['specType'] != 0x0 && this['specType'] != undefined) {
                            var _0x26581f = this['getSkinImageObj'](this['getHead']('kakapo', !![]));
                            if (_0x26581f) {
                                _0x4597c4['save']();
                                var _0x3be8a1 = this['rad'];
                                _0x4597c4['drawImage'](_0x26581f, -_0x3be8a1 * _0x9bac5a, (-_0x3be8a1 + _0x3be8a1 * 0.1) * _0x9bac5a, 0x2 * _0x3be8a1 * _0x9bac5a, 0x2 * _0x3be8a1 * _0x9bac5a), _0x4597c4['restore']();
                            }
                        }
                    }
                }
            }
        }, _0x932660['prototype']['getAbilityInfo'] = function(_0x1227ab) {
            var _0x4b01c1 = {};
            return _0x4b01c1['abilName'] = 'Hop!', _0x4b01c1['abilImg'] = 'skins/' + this['getSpeciesPath']() + this['getSubSpecies']() + '/kakapo.png', _0x4b01c1['skinThemeID'] = this['skinThemeID'], _0x4b01c1['mopeSeasonID'] = this['mopeSeasonID'], _0x4b01c1;
        };

        function _0x932660() {
            _0x932660['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x932660, _0x269668, _0x49ed0a);
        var _0x4d8447 = _0x5502af;
        _0x46225a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x46225a['prototype']['constructor'] = _0x46225a, _0x46225a['superClass'] = _0x4d8447, _0x46225a['prototype']['objSkinSpotsCanvas'] = null, _0x46225a['prototype']['animalInfo'] = function() {
            var _0x373edf = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x373edf['aniName'] = 'Mole';
                    break;
                case 0x64:
                    _0x373edf['aniName'] = 'Zombie Mole';
                    break;
                case 0x6f:
                    _0x373edf['aniName'] = 'Classic Mole';
                    break;
                case 0x70:
                    _0x373edf['aniName'] = 'Gold-trim Mole';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x373edf['aniName'] = 'Toxic Mole';
                            break;
                        case 0x1:
                            _0x373edf['aniName'] = 'Cytokinetic Mole';
                            break;
                    }
                    break;
            }
            return _0x373edf['aniDesc'] = '', _0x373edf['upgradeText'] = 'UPGRADED to ' + _0x373edf['aniName'] + '!\x0a Hold W to dig underground!\x0aGo under anything, do surprise attacks!', _0x373edf['aniCol'] = '#4C4A45', _0x373edf['skinName'] = this['getSkinName'](), _0x373edf;
        }, _0x46225a['prototype']['getSkinName'] = function() {
            return 'land/mole/' + this['animalSpecies'] + this['getSubSpecies']() + '/mole';
        }, _0x46225a['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x46225a['prototype']['getAbilityInfo'] = function(_0x27221c) {
            var _0x462b90 = {};
            return _0x462b90['abilName'] = 'Hold to Dig', _0x462b90['abilImg'] = 'skins/' + this['getSkinName']() + '.png', _0x462b90['skinThemeID'] = this['skinThemeID'], _0x462b90['mopeSeasonID'] = this['mopeSeasonID'], _0x462b90;
        };

        function _0x46225a() {
            _0x46225a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x46225a, _0x269668, _0xa5c3f5);
        var _0x4d8447 = _0x5d11ac;
        _0x417dae['prototype'] = Object['create'](_0x4d8447['prototype']), _0x417dae['prototype']['constructor'] = _0x417dae, _0x417dae['superClass'] = _0x4d8447, _0x417dae['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2;
        }, _0x417dae['prototype']['setSkinPath'] = function() {
            this['objSkinPath'] = 'img/coin/coin' + (this['isEdibleOutlined']() ? '_e' : '') + '.png';
        }, _0x417dae['prototype']['customDraw'] = function(_0x511e46) {
            var _0x2779de = this['getSkinImageObj'](this['objSkinPath']);
            if (_0x2779de) {
                var _0x5cf48c = this['rad'];
                _0x4597c4['drawImage'](_0x2779de, -_0x5cf48c, -_0x5cf48c, 0x2 * _0x5cf48c, 0x2 * _0x5cf48c);
            }
        };
        var _0x3c0843 = 0x84;

        function _0x417dae() {
            _0x417dae['superClass']['call'](this, _0x3c0843), _0x417dae['prototype']['easeAngleChanges'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x417dae, _0x3c0843);
        var _0x4d8447 = _0x5d11ac;
        _0xc09a4f['prototype'] = Object['create'](_0x4d8447['prototype']), _0xc09a4f['prototype']['constructor'] = _0xc09a4f, _0xc09a4f['superClass'] = _0x4d8447, _0xc09a4f['prototype']['color'] = 'limegreen', _0xc09a4f['prototype']['updateZ'] = function() {
            this['z'] = this['rad'] + 0xa98670;
        }, _0xc09a4f['prototype']['customDraw'] = function(_0x1106c2) {
            _0x4597c4['save']();
            var _0x2cb10b = 0.4,
                _0x1c344b = 0x8;
            this['shrinkRad'] > 0xfa && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.1, _0x43d466(0x0, 0x0, this['shrinkRad'], _0x1c344b * 0.5, this['color']), _0x4597c4['restore']());
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x2cb10b + 0.3, _0x43d466(0x0, 0x0, this['rad'], _0x1c344b, this['color']), _0x4597c4['restore']();
            this['rad'] > 0x5dc && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x2cb10b, _0x43d466(0x0, 0x0, this['shrinkedRad'], _0x1c344b, _0x4155ab), _0x4597c4['restore']());
            var _0x59a843 = _0x52f571 * (_0x3be96e / 0x2),
                _0x4ab0fd = _0x52f571 * (_0x6f4c47 / 0x2),
                _0x33bac9 = _0x2cb10b - 0.1,
                _0xb47a12 = this['color'],
                _0x5b42d8 = _0x6f4c47,
                _0xb38eac = _0x3be96e,
                _0x4f3d4e = _0x5b42d8 - this['x'],
                _0x541b40 = _0xb38eac - this['y'],
                _0x2769f3 = this['x'],
                _0xbc83d = _0x541b40,
                _0x1771a0 = _0x2769f3,
                _0x188a85 = this['y'],
                _0x10738a = _0x4f3d4e,
                _0x46fd0c = _0x188a85;
            _0x4f3d4e = _0x52f571 * _0x4f3d4e, _0x541b40 = _0x52f571 * _0x541b40, _0x2769f3 = _0x52f571 * _0x2769f3, _0xbc83d = _0x52f571 * _0xbc83d, _0x1771a0 = _0x52f571 * _0x1771a0, _0x188a85 = _0x52f571 * _0x188a85, _0x10738a = _0x52f571 * _0x10738a, _0x46fd0c = _0x52f571 * _0x46fd0c, this['drawDangerAreaSegment2'](0x0, _0xb47a12, _0x33bac9, _0x541b40, _0x4f3d4e), this['drawDangerAreaSegment2'](Math['PI'] * 0.5, _0xb47a12, _0x33bac9, _0x2769f3, _0xbc83d), this['drawDangerAreaSegment2'](Math['PI'] * 0x1, _0xb47a12, _0x33bac9, _0x188a85, _0x1771a0), this['drawDangerAreaSegment2'](Math['PI'] * 1.5, _0xb47a12, _0x33bac9, _0x10738a, _0x46fd0c), _0x4597c4['restore']();
        }, _0xc09a4f['prototype']['drawDangerAreaSegment2'] = function(_0x5b239f, _0x4ba6c5, _0x247b19, _0x157895, _0x4e94e2) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x247b19, _0x4597c4['fillStyle'] = _0x4ba6c5, _0x4597c4['beginPath'](), _0x4597c4['rotate'](_0x5b239f), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0.5, ![]), _0x4597c4['lineTo'](0x0, _0x157895), _0x4597c4['lineTo'](_0x4e94e2, _0x157895), _0x4597c4['lineTo'](_0x4e94e2, 0x0), _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['restore']();
        }, _0xc09a4f['prototype']['moveUpdate'] = function() {
            var _0x267c73 = (_0x476319 - this['updateTime']) / 0x3e8 / _0x55fcc3;
            return _0x267c73 = 0x0 > _0x267c73 ? 0x0 : 0x1 < _0x267c73 ? 0x1 : _0x267c73, this['x'] = _0x267c73 * (this['nx'] - this['ox']) + this['ox'], this['y'] = _0x267c73 * (this['ny'] - this['oy']) + this['oy'], this['rad'] += (this['nRad'] - this['rad']) * 0.1, Math['min'](0x1, _0x267c73);
        }, _0xc09a4f['prototype']['readUpdatedProperty'] = function(_0x200518, _0x314cd2) {
            _0x200518 == _0x3af871 && (this['shrinkRad'] = _0x314cd2['readUInt32']() / 0x4);
        }, _0xc09a4f['prototype']['readCustomData_onNewlyVisible'] = function(_0x17c97d) {
            this['shrinkRad'] = _0x17c97d['readUInt32']() / 0x4;
        };

        function _0xc09a4f() {
            _0xc09a4f['superClass']['call'](this, _0x4f9291), _0xc09a4f['prototype']['easeAngleChanges'] = !![], this['color'] = _0x524bb8 == _0x5f574f ? 'limegreen' : 'red';
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xc09a4f, _0x4f9291);
        var _0x4d8447 = _0x5502af;
        _0x5997d9['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5997d9['prototype']['constructor'] = _0x5997d9, _0x5997d9['superClass'] = _0x4d8447, _0x5997d9['prototype']['animalInfo'] = function() {
            var _0x2809f3 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                        default:
                            _0x2809f3['aniName'] = 'Snow Leopard!';
                            break;
                        case 0xdf:
                            _0x2809f3['aniName'] = 'Valentine Snow Leopard!';
                            break;
                    }
                    break;
                case 0x64:
                    _0x2809f3['aniName'] = 'Frostaline';
                    break;
                case 0x6f:
                    _0x2809f3['aniName'] = 'Classic Snow Leopard!';
                    break;
                case 0x70:
                    _0x2809f3['aniName'] = 'Gold-trim Snow Leopard';
                    break;
                case 0xc9:
                    _0x2809f3['aniName'] = 'Coral Queen';
                    break;
                case 0xca:
                    _0x2809f3['aniName'] = 'Astral Leopard';
                    break;
                case 0xcc:
                    _0x2809f3['aniName'] = 'Martian Leopard';
                    break;
            }
            return _0x2809f3['skinName'] = this['getSkinName'](), _0x2809f3['aniDesc'] = '', _0x2809f3['upgradeText'] = 'UPGRADED to ' + _0x2809f3['aniName'] + '!\x0a Press W to get a speed boost! (Every 4.5 seconds)!', _0x2809f3['aniCol'] = '#cfcfcf', _0x2809f3;
        }, _0x5997d9['prototype']['getSkinName'] = function() {
            return 'arctic/snowleopard/' + this['animalSpecies'] + this['getSubSpecies']() + '/snowleopard';
        }, _0x5997d9['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x5997d9['prototype']['getAbilityInfo'] = function(_0x4f8dd7) {
            var _0x280c0a = {};
            return _0x280c0a['abilName'] = 'Extra Boost', _0x280c0a['abilImg'] = 'arctic/snowleopard/' + this['animalSpecies'] + this['getSubSpecies']() + '/snowleopard.png', _0x280c0a['skinThemeID'] = this['skinThemeID'], _0x280c0a['mopeSeasonID'] = this['mopeSeasonID'], _0x280c0a;
        };

        function _0x5997d9() {
            _0x5997d9['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5997d9, _0x269668, _0x538204);
        var _0x4d8447 = _0x5d11ac;
        _0xc06daf['prototype'] = Object['create'](_0x4d8447['prototype']), _0xc06daf['prototype']['constructor'] = _0xc06daf, _0xc06daf['superClass'] = _0x4d8447, _0xc06daf['prototype']['updateZ'] = function() {
            this['z'] = 0xf4240;
        };
        var _0x3acad0 = -0.3,
            _0x506df8 = -0.2,
            _0xd0e232 = 0.3,
            _0x2bddbf = -0.2,
            _0x363897 = 0.2;
        _0xc06daf['prototype']['customDraw'] = function(_0x2c7665) {
            var _0x26bd48 = 0x1f4 / 0x154;
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']);
            var _0x4129c9 = this['rad'],
                _0x4e33fa = this['getSkinImageObj'](this['getBody']('battleduck', !![]));
            _0x4e33fa && (_0x4597c4['save'](), _0x4597c4['drawImage'](_0x4e33fa, -_0x4129c9 * _0x26bd48, -_0x4129c9 * _0x26bd48, 0x2 * _0x4129c9 * _0x26bd48, 0x2 * _0x4129c9 * _0x26bd48), _0x4597c4['restore']());
            var _0x19bd26 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x3a272a = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0x19bd26, 2.5, 0.3, 0x2) : this['birdNoAnimationFlyWingAngle'],
                _0x631c2d = this['getSkinImageObj'](this['getWing']('battleduck', 0x1, !![]));
            if (_0x631c2d) {
                _0x4597c4['save']();
                var _0x4c159c = -(-0.2 + _0x3a272a) * _0x197fc1,
                    _0x4129c9 = this['rad'] * 0x1;
                _0x4597c4['rotate'](_0x4c4686(0x2d) + _0x4c159c);
                var _0x270430 = 0x0,
                    _0x50a3af = this['rad'],
                    _0xe713a = _0x4129c9 * 0x2 * 0.62,
                    _0xa756af = _0x4129c9 * 2.5,
                    _0x297f38 = 0.2 + _0x3acad0,
                    _0x488e35 = 1.7 + _0x506df8;
                _0x4597c4['drawImage'](_0x631c2d, _0x270430 + _0xe713a * -_0x297f38, _0x50a3af + _0xa756af * -_0x488e35, _0xe713a, _0xa756af), _0x4597c4['restore']();
            }
            var _0x631c2d = this['getSkinImageObj'](this['getWing']('battleduck', 0x2, !![]));
            if (_0x631c2d) {
                _0x4597c4['save']();
                var _0x4c159c = -(-0.2 + _0x3a272a) * _0x4c4686(-0x5a),
                    _0x4129c9 = this['rad'] * 0x1;
                _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x4c159c);
                var _0x270430 = 0x0,
                    _0x50a3af = this['rad'],
                    _0xe713a = _0x4129c9 * 0x2 * 0.62,
                    _0xa756af = _0x4129c9 * 2.5,
                    _0x297f38 = 0.8 + _0xd0e232,
                    _0x488e35 = 1.7 + _0x2bddbf;
                _0x4597c4['drawImage'](_0x631c2d, _0x270430 + _0xe713a * -_0x297f38, _0x50a3af + _0xa756af * -_0x488e35, _0xe713a, _0xa756af), _0x4597c4['restore']();
            }
            var _0x4ad564 = this['getSkinImageObj'](this['getHead']('battleduck', !![]));
            if (_0x4ad564) {
                _0x4597c4['save']();
                var _0x4129c9 = this['rad'];
                _0x4597c4['drawImage'](_0x4ad564, -_0x4129c9 * _0x26bd48, (-_0x4129c9 + _0x4129c9 * _0x363897) * _0x26bd48, 0x2 * _0x4129c9 * _0x26bd48, 0x2 * _0x4129c9 * _0x26bd48), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0xc06daf['prototype']['getSpeciesPath'] = function(_0xd00e4e) {
            return _0xd00e4e + '/' + this['speciesType'];
        }, _0xc06daf['prototype']['getWing'] = function(_0x4d7280, _0x993ed7, _0x57e71c) {
            var _0x406c71 = 'skins/' + (_0x57e71c ? this['getSpeciesPath'](_0x4d7280) + '/' : _0x4d7280 + '/');
            return _0x406c71 += _0x4d7280 + '_wing' + _0x993ed7 + '.png', _0x406c71;
        }, _0xc06daf['prototype']['getBody'] = function(_0x55f39a, _0x3cc0f2) {
            var _0x7ba2d6 = 'skins/' + (_0x3cc0f2 ? this['getSpeciesPath'](_0x55f39a) + '/' : _0x55f39a + '/');
            return _0x7ba2d6 += _0x55f39a + '_body.png', _0x7ba2d6;
        }, _0xc06daf['prototype']['getHead'] = function(_0x78938, _0x564bfd) {
            var _0xd12a57 = 'skins/' + (_0x564bfd ? this['getSpeciesPath'](_0x78938) + '/' : _0x78938 + '/');
            return _0xd12a57 += _0x78938 + '_head.png', _0xd12a57;
        };
        var _0x32ac25 = 0x85;

        function _0xc06daf() {
            _0xc06daf['superClass']['call'](this, _0x32ac25), console['log']('@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@');
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xc06daf, _0x32ac25);
        var _0x4d8447 = _0x5502af;
        _0x56deac['prototype'] = Object['create'](_0x4d8447['prototype']), _0x56deac['prototype']['constructor'] = _0x56deac, _0x56deac['superClass'] = _0x4d8447, _0x56deac['prototype']['objSkinSpotsCanvas'] = null, _0x56deac['prototype']['animalInfo'] = function() {
            var _0x1aa0ce = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1aa0ce['aniName'] = 'Giraffe';
                    break;
                case 0x1:
                    _0x1aa0ce['aniName'] = 'Momaffie';
                    break;
                case 0x2:
                    _0x1aa0ce['aniName'] = 'Girabie';
                    break;
                case 0x3:
                    _0x1aa0ce['aniName'] = 'Momaffie Family';
                    break;
                case 0x6f:
                    _0x1aa0ce['aniName'] = 'Classic Giraffe';
                    break;
                case 0x70:
                    _0x1aa0ce['aniName'] = 'Gold-trim Giraffe';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x1aa0ce['aniName'] = 'Quilin Giraffe';
                            break;
                        case 0x1:
                            _0x1aa0ce['aniName'] = 'Draquorum';
                    }
                    break;
            }
            return _0x1aa0ce['upgradeText'] = 'UPGRADED to ' + _0x1aa0ce['aniName'] + '!\x0aGiraffe have huge legs and stomp anyone in their way!', _0x1aa0ce['aniCol'] = '#E9BD23', _0x1aa0ce['skinName'] = this['getSkinName'](), _0x1aa0ce;
        }, _0x56deac['prototype']['getSkinName'] = function() {
            let _0x2bddcb = this['getSpeciesPath']() + '/giraffe';
            if (this['id'] == 0x0 && this['animalSpecies'] == 0x3) _0x2bddcb += '_family';
            return _0x2bddcb;
        }, _0x56deac['prototype']['getSpeciesPath'] = function() {
            return 'land/giraffe/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x56deac['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x56deac['prototype']['getAbilityInfo'] = function(_0xdd8a1e) {
            var _0x31b45a = {};
            return _0x31b45a['abilName'] = 'Stomp!', _0x31b45a['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/giraffe.png', _0x31b45a['skinThemeID'] = this['skinThemeID'], _0x31b45a['mopeSeasonID'] = this['mopeSeasonID'], _0x31b45a;
        }, _0x56deac['prototype']['isEdibleOutlined'] = function() {
            if (this['mommyID'] == _0x59b0bc) return ![];
            return _0x56deac['superClass']['prototype']['isEdibleOutlined']['call'](this);
        }, _0x56deac['prototype']['readCustomData_onNewlyVisible'] = function(_0x281236) {
            _0x56deac['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x281236), this['mommyID'] = _0x281236['readUInt32']();
        };

        function _0x56deac() {
            _0x56deac['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x56deac, _0x269668, _0xbdc345);
        var _0x4d8447 = _0x5502af;
        _0x15e9cc['prototype'] = Object['create'](_0x4d8447['prototype']), _0x15e9cc['prototype']['constructor'] = _0x15e9cc, _0x15e9cc['superClass'] = _0x4d8447, _0x15e9cc['prototype']['objSkinSpotsCanvas'] = null, _0x15e9cc['prototype']['getSkinName'] = function() {
            let _0x48fced = this['getSpeciesPath']() + '/giraffe';
            if (this['specType'] > 0x0) _0x48fced += '' + this['specType'];
            if (this['id'] == 0x0 && this['animalSpecies'] == 0x2) _0x48fced += '_family';
            return _0x48fced;
        }, _0x15e9cc['prototype']['getSpeciesPath'] = function() {
            return 'forest/whitegiraffe/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x15e9cc['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x15e9cc['prototype']['animalInfo'] = function() {
            var _0x838f0e = {};
            switch (this['animalSpecies']) {
                case 0x1:
                    _0x838f0e['aniName'] = 'White Giraffe';
                    break;
                case 0x2:
                    _0x838f0e['aniName'] = 'Giraffe Family';
                    break;
            }
            return _0x838f0e['aniDesc'] = '', _0x838f0e['upgradeText'] = 'UPGRADED to ' + _0x838f0e['aniName'] + '!\x0aWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!', _0x838f0e['aniCol'] = '#E9BD23', _0x838f0e['skinName'] = this['getSkinName'](), _0x838f0e;
        }, _0x15e9cc['prototype']['getAbilityInfo'] = function(_0x7f512b) {
            var _0x55e199 = {};
            return _0x55e199['abilName'] = 'Stomp!', _0x55e199['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/giraffe.png', _0x55e199['skinThemeID'] = this['skinThemeID'], _0x55e199['mopeSeasonID'] = this['mopeSeasonID'], _0x55e199;
        };

        function _0x15e9cc() {
            _0x15e9cc['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x15e9cc, _0x269668, _0x51d6fb);
        var _0x4d8447 = _0x5502af;
        _0x299123['prototype'] = Object['create'](_0x4d8447['prototype']), _0x299123['prototype']['constructor'] = _0x299123, _0x299123['superClass'] = _0x4d8447, _0x299123['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + '/turkey' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x299123['prototype']['getSpeciesPath'] = function() {
            return 'forest/turkey/' + this['animalSpecies'];
        }, _0x299123['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x299123['prototype']['getWing'] = function(_0x59fa38, _0x408e57, _0x42b248) {
            var _0x180172 = 'skins/' + this['getSpeciesPath']() + '/turkey';
            return _0x180172 += '_wing' + _0x408e57 + '.png', _0x180172;
        }, _0x299123['prototype']['getHead'] = function(_0x3a0588, _0x352c10) {
            var _0x5ef7d8 = 'skins/' + this['getSpeciesPath']() + '/turkey';
            return _0x5ef7d8 += '_head.png', _0x5ef7d8;
        }, _0x299123['prototype']['getAbilityInfo'] = function(_0x4fee2a) {
            var _0x26ce84 = {};
            if (this['flag_eff_isOnTree'] || this['flag_flying'] && this['flag_usingAbility']) _0x26ce84['abilName'] = 'Hold to Fly', _0x26ce84['abilImg'] = 'skins/forest/turkey/' + this['animalSpecies'] + '/ability_fly.png';
            else this['flag_isClimbingHill'] ? (_0x26ce84['abilName'] = 'Shoot Eggs!', _0x26ce84['abilImg'] = 'skins/forest/turkey/' + this['animalSpecies'] + '/turkeyegg.png') : (_0x26ce84['abilName'] = 'Front Kick\x0a(Hold to Charge)', _0x26ce84['abilImg'] = 'skins/forest/turkey/' + this['animalSpecies'] + '/ability.png');
            return _0x26ce84['skinThemeID'] = this['skinThemeID'], _0x26ce84['mopeSeasonID'] = this['mopeSeasonID'], _0x26ce84;
        }, _0x299123['prototype']['animalInfo'] = function() {
            var _0x1fe170 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1fe170['aniName'] = 'Turkey!';
                    break;
                case 0x6f:
                    _0x1fe170['aniName'] = 'Classic Turkey';
                    break;
            }
            return _0x1fe170['aniCol'] = '#FF9000', _0x1fe170['skinName'] = this['getSkinName'](), _0x1fe170['upgradeText'] = 'UPGRADED to ' + _0x1fe170['aniName'] + '!\x0aHold W to charge up a kick, fly from tree and shoot eggs from hill!', _0x1fe170;
        };
        var _0x146a14 = 0.6,
            _0x50e3cc = -1.5,
            _0x44ebf9 = -0x2;
        _0x299123['prototype']['drawUnderSkinImg'] = function() {
            _0x4597c4['save']();
            var _0x3340ff = this['rad'] * _0x146a14,
                _0x4c1a83 = 'tail';
            if (this['flag_usingAbility']) {
                if (!this['flag_flying']) _0x4c1a83 = 'tail1';
                _0x50e3cc = _0x44ebf9;
            } else _0x50e3cc = -1.5;
            _0x4c1a83 = 'skins/' + this['getSpeciesPath']() + '/' + _0x4c1a83 + '.png';
            var _0xcb71ce = this['getSkinImageObj'](_0x4c1a83);
            _0xcb71ce && _0x4597c4['drawImage'](_0xcb71ce, -_0x3340ff * this['skinScale'] * 0x2, -_0x3340ff * this['skinScale'] * 0x2 + _0x3340ff * _0x50e3cc, 0x2 * _0x3340ff * this['skinScale'] * 0x2, 0x3 * _0x3340ff * this['skinScale']), _0x4597c4['restore']();
        }, _0x299123['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            var _0x5d6645 = 0x1f4 / 0x154;
            _0x4597c4['save']();
            var _0x4626ed = this['flag_flying'] ? 0x2d : 0x14,
                _0x57d38f = this['flag_flying'] ? 0x5a : 0x2d,
                _0x21ec13 = this['flag_flying'] ? 0.2 : 0.01,
                _0x378cff = this['flag_flying'] ? 2.5 : 2.2,
                _0x302423 = this['flag_flying'] ? 2.5 : 2.2,
                _0x59cf7a = this['flag_flying'] ? 0x0 : -0.4,
                _0x81abca = this['flag_flying'] ? 0x0 : -0.2,
                _0x509f08 = this['flag_flying'] ? 0.5 : 1.2,
                _0x46846c = this['flag_flying'] ? 0.3 : 0.1,
                _0xe6321f = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x46c2a3 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? _0x5b9e97(_0xe6321f, _0x509f08, _0x46846c, 0x2) : this['birdNoAnimationFlyWingAngle'],
                _0x293ec6 = this['getSkinImageObj'](this['getWing']('turkey', 0x1, !![]));
            if (_0x293ec6) {
                _0x4597c4['save']();
                var _0x5ba7d2 = -(-_0x21ec13 + _0x46c2a3) * _0x4c4686(_0x57d38f),
                    _0xe0ecfa = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(_0x4626ed) + _0x5ba7d2);
                var _0x1ba4a3 = 0x0,
                    _0x2cd749 = this['rad'],
                    _0x452b2d = _0xe0ecfa * _0x302423 * 0.62,
                    _0x479fe9 = _0xe0ecfa * _0x378cff,
                    _0x33833f = 0.2 + _0x59cf7a,
                    _0x16ee13 = 1.7 + _0x81abca;
                _0x4597c4['drawImage'](_0x293ec6, _0x1ba4a3 + _0x452b2d * -_0x33833f, _0x2cd749 + _0x479fe9 * -_0x16ee13, _0x452b2d, _0x479fe9), _0x4597c4['restore']();
            }
            var _0x293ec6 = this['getSkinImageObj'](this['getWing']('turkey', 0x2, !![]));
            if (_0x293ec6) {
                _0x4597c4['save']();
                var _0x5ba7d2 = -(-_0x21ec13 + _0x46c2a3) * _0x4c4686(-_0x57d38f),
                    _0xe0ecfa = this['rad'] * 0.8;
                _0x4597c4['rotate'](_0x4c4686(-_0x4626ed) + _0x5ba7d2);
                var _0x1ba4a3 = 0x0,
                    _0x2cd749 = this['rad'],
                    _0x452b2d = _0xe0ecfa * _0x302423 * 0.62,
                    _0x479fe9 = _0xe0ecfa * _0x378cff,
                    _0x33833f = 0.8 - _0x59cf7a,
                    _0x16ee13 = 1.7 + _0x81abca;
                _0x4597c4['drawImage'](_0x293ec6, _0x1ba4a3 + _0x452b2d * -_0x33833f, _0x2cd749 + _0x479fe9 * -_0x16ee13, _0x452b2d, _0x479fe9), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
            var _0x4bcb85 = 0.1;
            if (this['specType'] == 0x2) _0x4bcb85 = -0.1;
            var _0x2ad9aa = this['getSkinImageObj'](this['getHead']('turkey', !![]));
            if (_0x2ad9aa) {
                _0x4597c4['save']();
                var _0xe0ecfa = this['rad'];
                _0x4597c4['drawImage'](_0x2ad9aa, -_0xe0ecfa * _0x5d6645, (-_0xe0ecfa + _0xe0ecfa * _0x4bcb85) * _0x5d6645, 0x2 * _0xe0ecfa * _0x5d6645, 0x2 * _0xe0ecfa * _0x5d6645), _0x4597c4['restore']();
            }
        };

        function _0x299123() {
            _0x299123['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x299123, _0x269668, _0x4767a1);
        var _0x4d8447 = _0x5d11ac;
        _0x203b7b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x203b7b['prototype']['constructor'] = _0x203b7b, _0x203b7b['superClass'] = _0x4d8447, _0x203b7b['prototype']['mommyID'] = 0x0, _0x203b7b['prototype']['updateZ'] = function() {
            this['z'] = this['flag_flying'] ? 0x3e8 : this['rad'];
        }, _0x203b7b['prototype']['isEdibleOutlined'] = function() {
            return (_0x4b4e0c[_0x59b0bc] == null || _0x4b4e0c[_0x59b0bc] != null && _0x4b4e0c[_0x59b0bc]['id'] != this['spawnedByID']) && _0x203b7b['superClass']['prototype']['isEdibleOutlined']['call'](this);
        }, _0x203b7b['prototype']['customDraw'] = function(_0x5c5d7e) {
            _0x4597c4['save']();
            var _0x196596 = this['getSkinImageObj']('skins/forest/turkey/' + this['speciesType'] + '/turkeyegg' + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
            if (_0x196596) {
                var _0xbe7ceb = this['rad'];
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x196596, -_0xbe7ceb, -_0xbe7ceb, 0x2 * _0xbe7ceb, 0x2 * _0xbe7ceb);
            }
            _0x4597c4['restore']();
        };
        var _0x30b596 = 0x86;

        function _0x203b7b() {
            _0x203b7b['superClass']['call'](this, _0x30b596), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x203b7b, _0x30b596);
        var _0x4d8447 = _0x5d11ac;
        _0x30300f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x30300f['prototype']['constructor'] = _0x30300f, _0x30300f['superClass'] = _0x4d8447, _0x30300f['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x30300f['prototype']['customDraw'] = function(_0x23c25d) {
            _0x4597c4['save']();
            var _0x469c03 = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                _0x11c0e7 = this['getSkinImageObj'](_0x469c03);
            if (_0x11c0e7) {
                var _0x99eda8 = this['rad'];
                this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x11c0e7, -_0x99eda8, -_0x99eda8, 0x2 * _0x99eda8, 0x2 * _0x99eda8);
            }
            _0x4597c4['restore']();
        };
        var _0x4ee0bb = 0x87;

        function _0x30300f() {
            _0x30300f['superClass']['call'](this, _0x4ee0bb), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x30300f, _0x4ee0bb);
        var _0x4d8447 = _0x5d11ac;
        _0x3fe3b1['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3fe3b1['prototype']['constructor'] = _0x3fe3b1, _0x3fe3b1['superClass'] = _0x4d8447, _0x3fe3b1['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x3fe3b1['prototype']['customDraw'] = function(_0xfc94c7) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            var _0x1eaf6a = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                _0x51a705 = this['getSkinImageObj'](_0x1eaf6a);
            if (_0x51a705) {
                var _0x40d746 = 0.15,
                    _0x1e191e = this['rad'] * 1.2;
                this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x51a705, -_0x1e191e, -_0x1e191e + _0x1e191e * _0x40d746, 0x2 * _0x1e191e, 0x2 * _0x1e191e);
            }
            _0x4597c4['restore']();
        };
        var _0x2875b5 = 0x88;

        function _0x3fe3b1() {
            _0x3fe3b1['superClass']['call'](this, _0x2875b5), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3fe3b1, _0x2875b5);
        var _0x4d8447 = _0x5d11ac;
        _0x109c29['prototype'] = Object['create'](_0x4d8447['prototype']), _0x109c29['prototype']['constructor'] = _0x109c29, _0x109c29['superClass'] = _0x4d8447, _0x109c29['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x109c29['prototype']['customDraw'] = function(_0x3ec747) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1;
            var _0x4043ad = 'gameobj/' + this['oType'] + '/' + this['oType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                _0x149cd9 = this['getSkinImageObj'](_0x4043ad);
            if (_0x149cd9) {
                var _0x165357 = this['rad'] * 1.1;
                this['angle'] = this['rPer'] * Math['PI'] * 0x2, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x149cd9, -_0x165357, -_0x165357, 0x2 * _0x165357, 0x2 * _0x165357);
            }
            _0x4597c4['restore']();
        };
        var _0x3eaccf = 0x89;

        function _0x109c29() {
            _0x109c29['superClass']['call'](this, _0x3eaccf), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x109c29, _0x3eaccf);
        var _0x4d8447 = _0x5d11ac;
        _0x31841c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x31841c['prototype']['constructor'] = _0x31841c, _0x31841c['superClass'] = _0x4d8447, _0x31841c['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x31841c['prototype']['customDraw'] = function(_0x780c73) {
            var _0x2fc1d3 = ![],
                _0x31bd47 = _0x4b4e0c[_0x59b0bc];
            (_0x31bd47 && _0x31bd47['lastHidingHoleID'] == this['id'] || _0x54bc25 == this['id']) && (_0x2fc1d3 = !![]);
            if (_0x780c73) {} else {
                var _0x199559 = 1.4,
                    _0x3bd084 = 0.05,
                    _0x34887c = 'igloo',
                    _0x196947 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '.png');
                if (_0x196947) {
                    _0x4597c4['save']();
                    if (_0x2fc1d3) _0x4597c4['globalAlpha'] = 0.25;
                    var _0x2e4a56 = this['rad'] * _0x199559;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x196947, -_0x2e4a56, -_0x2e4a56 + _0x3bd084 * _0x2e4a56, _0x2e4a56 * 0x2, _0x2e4a56 * 0x2), _0x4597c4['restore']();
                }
            }
            if (_0x2fc1d3) {
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0x73)), _0x4597c4['globalAlpha'] = 0x1;
                var _0x3132c2 = Math['PI'] * 0x2 * this['timerAngle'];
                _0x4597c4['beginPath'](), _0x4597c4['lineWidth'] = 0x7, _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0x3132c2), _0x4597c4['strokeStyle'] = _0x32dc1c, _0x4597c4['stroke'](), _0x4597c4['restore']();
            }
        }, _0x31841c['prototype']['timerAngle'] = 0x0, _0x31841c['prototype']['nTimerAngle'] = 0x0, _0x31841c['prototype']['onLerpUpdate'] = function(_0x547e09) {
            _0x31841c['superClass']['prototype']['onLerpUpdate']['call'](this, _0x547e09), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
        }, _0x31841c['prototype']['readUpdatedProperty'] = function(_0x2ab6fb, _0x740b52) {
            _0x2ab6fb == _0x39ef45 && (this['timeLeft'] = _0x740b52['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
        };
        var _0x4483fc = 0x8a;

        function _0x31841c() {
            _0x31841c['superClass']['call'](this, _0x4483fc), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x31841c, _0x4483fc);
        var _0x4d8447 = _0x5d11ac;
        _0x449956['prototype'] = Object['create'](_0x4d8447['prototype']), _0x449956['prototype']['constructor'] = _0x449956, _0x449956['superClass'] = _0x4d8447, _0x449956['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x449956['prototype']['customDraw'] = function(_0xf556d3) {};
        var _0x38156b = 0x8b;

        function _0x449956() {
            _0x449956['superClass']['call'](this, _0x38156b), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x449956, _0x38156b);
        var _0x4d8447 = _0x5d11ac;
        _0x287fea['prototype'] = Object['create'](_0x4d8447['prototype']), _0x287fea['prototype']['constructor'] = _0x287fea, _0x287fea['superClass'] = _0x4d8447, _0x287fea['prototype']['updateZ'] = function() {
            this['z'] = -0x63;
        };
        var _0x159394 = '#9F8641',
            _0x3d0c65 = '#735e28',
            _0x25718d = '#63501d',
            _0x5ecd4f = '#735e28',
            _0xe40dd2 = '#806a30';
        _0x287fea['prototype']['customDraw'] = function(_0x3747c0) {
            _0x4597c4['save']();
            var _0x534c60 = ![],
                _0xc3a3b4 = _0x4b4e0c[_0x59b0bc];
            (_0xc3a3b4 && _0xc3a3b4['lastHidingHoleID'] == this['id'] || _0x54bc25 == this['id']) && (_0x534c60 = !![]);
            if (_0x3747c0) {} else {
                var _0xa7b73f = 0.5,
                    _0xda23ec = 1.7;
                _0x4597c4['save']();
                {
                    if (_0x534c60) {
                        _0x4597c4['globalAlpha'] = 0x1;
                        var _0x224747 = this['rad'];
                        this['drawOutlinedCircleRad']('', _0x159394, _0x224747), _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x224747 - 0x7), _0x3d0c65), _0x4096ce(0x0 + this['rPer'], 0x1, Math['max'](0x0, _0x224747 - 0xc), _0x25718d), _0x4597c4['globalAlpha'] = this['alpha'] * 0.7, _0x224747 = _0x224747 * 0.7, _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x224747 - 0x7), _0x5ecd4f), _0x224747 = _0x224747 * 0.5, _0x4597c4['globalAlpha'] = this['alpha'] * 0.3, _0x4096ce(0x0 - this['rPer'], 0x0 - this['rPer'], Math['max'](0x0, _0x224747), _0xe40dd2);
                    }
                    this['curBiome'] == 0x1 && (!_0x534c60 && (_0x4597c4['fillStyle'] = _0x5cf340, _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['fillStyle'] = '#E4D04C', _0x4597c4['beginPath'](), _0x4597c4['arc'](-0x5 + this['rPer'] * 0xa, -0x5 + this['rPer'] * 0xa, this['rad'] * 0.8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()));
                }
                _0x4597c4['restore']();
                if (this['curBiome'] == _0x1085db) {
                    var _0x572b73 = 'gameobj/' + this['oType'] + '/' + this['curBiome'] + '/cave_bottom.png',
                        _0x3cfddd = this['getSkinImageObj'](_0x572b73);
                    if (_0x3cfddd) {
                        _0x4597c4['save']();
                        var _0x527a64 = this['rad'] * _0xa7b73f;
                        _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x3cfddd, -_0x527a64, -_0x527a64 + _0xda23ec * _0x527a64, _0x527a64 * 0x2, _0x527a64 * 0x2), _0x4597c4['restore']();
                    }
                    if (!_0x534c60) {
                        var _0x572b73 = 'gameobj/' + this['oType'] + '/' + this['curBiome'] + '/cave_top.png',
                            _0x3cfddd = this['getSkinImageObj'](_0x572b73);
                        if (_0x3cfddd) {
                            _0x4597c4['save']();
                            var _0x527a64 = this['rad'] * _0xa7b73f;
                            _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x3cfddd, -_0x527a64, -_0x527a64 + _0xda23ec * _0x527a64, _0x527a64 * 0x2, _0x527a64 * 0x2), _0x4597c4['restore']();
                        }
                    }
                } else {
                    var _0x3cfddd = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['curBiome'] + '/cave_bottom.png');
                    if (_0x3cfddd) {
                        _0x4597c4['save']();
                        var _0x527a64 = this['rad'] * _0xa7b73f;
                        _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x3cfddd, -_0x527a64, -_0x527a64 + _0xda23ec * _0x527a64, _0x527a64 * 0x2, _0x527a64 * 0x2), _0x4597c4['restore']();
                    }
                    if (!_0x534c60) {
                        var _0x3cfddd = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['curBiome'] + '/cave_top.png');
                        if (_0x3cfddd) {
                            _0x4597c4['save']();
                            var _0x527a64 = this['rad'] * _0xa7b73f;
                            _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x3cfddd, -_0x527a64, -_0x527a64 + _0xda23ec * _0x527a64, _0x527a64 * 0x2, _0x527a64 * 0x2), _0x4597c4['restore']();
                        }
                    }
                }
            }
            _0x4597c4['restore']();
            if (_0x534c60) {
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle'] + _0x4c4686(0x73)), _0x4597c4['globalAlpha'] = 0.5;
                var _0x224747 = Math['PI'] * 0x2 * this['timerAngle'];
                _0x4597c4['beginPath'](), _0x4597c4['lineWidth'] = 0x6, _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - 0x4), 0x0, _0x224747), _0x4597c4['strokeStyle'] = _0x32dc1c, _0x4597c4['stroke'](), _0x4597c4['restore']();
            }
        }, _0x287fea['prototype']['timerAngle'] = 0x0, _0x287fea['prototype']['nTimerAngle'] = 0x0, _0x287fea['prototype']['onLerpUpdate'] = function(_0x417920) {
            _0x287fea['superClass']['prototype']['onLerpUpdate']['call'](this, _0x417920), this['timerAngle'] += (this['nTimerAngle'] - this['timerAngle']) * 0.1;
        }, _0x287fea['prototype']['readUpdatedProperty'] = function(_0x101183, _0x5b5d1c) {
            _0x101183 == _0x39ef45 && (this['timeLeft'] = _0x5b5d1c['readUInt16']() / 0x64, this['nTimerAngle'] = this['timeLeft'] / 0x64);
        };
        var _0x5881fa = 0x8c;

        function _0x287fea() {
            _0x287fea['superClass']['call'](this, _0x5881fa), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x287fea, _0x5881fa);
        var _0x4d8447 = _0x5d11ac;
        _0x7268e5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x7268e5['prototype']['constructor'] = _0x7268e5, _0x7268e5['superClass'] = _0x4d8447, _0x7268e5['prototype']['updateZ'] = function() {
            this['z'] = 0x64;
        }, _0x7268e5['prototype']['customDraw'] = function(_0x32f0c9) {};
        var _0x11d9f2 = 0x8d;

        function _0x7268e5() {
            _0x7268e5['superClass']['call'](this, _0x11d9f2), this['doesDrawEffectScale'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x7268e5, _0x11d9f2);
        var _0x4d8447 = _0x5502af;
        _0x395a43['prototype'] = Object['create'](_0x4d8447['prototype']), _0x395a43['prototype']['constructor'] = _0x395a43, _0x395a43['superClass'] = _0x4d8447, _0x395a43['prototype']['animalInfo'] = function() {
            var _0x391408 = {};
            return _0x391408['aniName'] = 'Santa!', _0x391408['skinName'] = 'santa/' + this['animalSpecies'] + '/santa', _0x391408['aniDesc'] = '', _0x391408['upgradeText'] = 'UPGRADED to ' + _0x391408['aniName'] + '\x0a Santa distributes gifts to everyone!', _0x391408['aniCol'] = '#231f18', _0x391408;
        };
        var _0x42ada2 = 0.84,
            _0x5bed6a = 0.47,
            _0x11e7da = 0x2d,
            _0x58d56b = -0x1e,
            _0x2cb778 = 1.3,
            _0xc11951 = 1.5,
            _0x5875f0 = 0.3,
            _0x52fc2c = 0.95,
            _0x1c12ef = 0.5,
            _0x3d0963 = 0x2d,
            _0x2d9122 = 0x0,
            _0x171774 = 1.2,
            _0x58e393 = 0.3,
            _0x1fc82a = 0.1;
        _0x395a43['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2 + this['rad'];
            if (this['flag_flying']) this['z'] += 0x18704;
        }, _0x395a43['prototype']['calculateZIndex'] = function() {
            this['updateZ']();
        }, _0x395a43['prototype']['drawUnderSkinTail'] = function(_0x296955) {}, _0x395a43['prototype']['flyingHatAnimation'] = function() {
            (!this['hideFeatures'] || this['flag_flying']) && (this['santaHead'](0x0), this['hohohoAnimation'](0x0));
            var _0x5af840 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x9b4ec2 = _0x5b9e97(_0x5af840, _0x58e393, _0x1fc82a, 0x2),
                _0x3b0aa7 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/hat.png');
            if (_0x3b0aa7) {
                _0x4597c4['save']();
                var _0x4d096d = -(-0.2 + _0x9b4ec2) * _0x4c4686(_0x3d0963),
                    _0x578665 = this['rad'] * _0x171774;
                _0x4597c4['rotate'](_0x4c4686(_0x2d9122) + _0x4d096d);
                var _0x275b4a = 0x0,
                    _0x54ad67 = this['rad'],
                    _0xbb43c2 = _0x578665 * 0x2,
                    _0x4ec747 = _0x578665 * 0x2,
                    _0x1dc590 = _0x1c12ef,
                    _0x570cd5 = _0x52fc2c;
                _0x4597c4['drawImage'](_0x3b0aa7, _0x275b4a + _0xbb43c2 * -_0x1dc590, _0x54ad67 + _0x4ec747 * -_0x570cd5, _0xbb43c2, _0x4ec747), _0x4597c4['restore']();
            }
        }, _0x395a43['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_flying']) this['flyingHatAnimation']();
            else {
                if (!this['hideFeatures'] || this['flag_flying']) {
                    if (this['specType'] == 0x0) this['bellhandAnimation'](0x0);
                    this['santaHead'](0x0), this['hohohoAnimation'](0x0);
                }
            }
        }, _0x395a43['prototype']['hideFeatures'] = ![], _0x395a43['prototype']['bellhandAnimation'] = function(_0x439989) {
            var _0x20a186 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x103f41 = _0x5b9e97(_0x20a186, _0xc11951, _0x5875f0, 0x2),
                _0x5399ce = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/bellhand.png');
            if (_0x5399ce) {
                _0x4597c4['save']();
                var _0x2c1a24 = -(-0.2 + _0x103f41) * _0x4c4686(_0x11e7da),
                    _0x7dbfc0 = this['rad'] * _0x2cb778;
                _0x4597c4['rotate'](_0x4c4686(_0x58d56b) + _0x2c1a24);
                var _0x321919 = 0x0,
                    _0x852bc5 = this['rad'],
                    _0x3581c2 = _0x7dbfc0 * 0x2,
                    _0x1f6f90 = _0x7dbfc0 * 0x2,
                    _0x125682 = _0x5bed6a,
                    _0x1d2e4c = _0x42ada2;
                _0x4597c4['drawImage'](_0x5399ce, _0x321919 + _0x3581c2 * -_0x125682, _0x852bc5 + _0x1f6f90 * -_0x1d2e4c, _0x3581c2, _0x1f6f90), _0x4597c4['restore']();
            }
        }, _0x395a43['prototype']['hohohoNextT'] = +new Date() + 0x1388, _0x395a43['prototype']['hohohoAnimation'] = function(_0x5f2758) {
            if (_0x476319 > this['hohohoNextT']) {
                var _0x49b69d = -0.1 + _0x5f2758,
                    _0x287a49 = 0x1f4 / 0x154,
                    _0x2159ed = Math['trunc'](_0x476319 / 0xb4) % 0x3,
                    _0x5ae55b = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_mouth' + _0x2159ed + '.png');
                if (_0x5ae55b) {
                    _0x4597c4['save']();
                    var _0x31fa67 = this['rad'];
                    _0x4597c4['drawImage'](_0x5ae55b, -_0x31fa67 * _0x287a49, (-_0x31fa67 + _0x31fa67 * _0x49b69d) * _0x287a49, 0x2 * _0x31fa67 * _0x287a49, 0x2 * _0x31fa67 * _0x287a49), _0x4597c4['restore']();
                }
                _0x476319 > this['hohohoNextT'] + 0x5dc && (this['hohohoNextT'] = +new Date() + 0x2710);
            }
        }, _0x395a43['prototype']['getSkinImageObj'] = function(_0x4cd3de) {
            return this['skinThemeID'] = 0x0, _0x395a43['superClass']['prototype']['getSkinImageObj']['call'](this, _0x4cd3de);
        }, _0x395a43['prototype']['santaHead'] = function(_0x1d7abc) {
            var _0x1d16f7 = 0.1,
                _0x5551e6 = 0x1f4 / 0x154,
                _0x26cc79 = this['flag_flying'] ? '2' : '';
            if (this['specType'] == 0x2) _0x26cc79 = '3';
            var _0x49d572 = this['getSkinImageObj']('skins/santa/' + this['animalSpecies'] + '/santa_head' + _0x26cc79 + '.png');
            if (_0x49d572) {
                _0x4597c4['save']();
                var _0x493a9f = this['rad'];
                _0x4597c4['drawImage'](_0x49d572, -_0x493a9f * _0x5551e6, (-_0x493a9f + _0x493a9f * _0x1d16f7) * _0x5551e6, 0x2 * _0x493a9f * _0x5551e6, 0x2 * _0x493a9f * _0x5551e6), _0x4597c4['restore']();
            }
        }, _0x395a43['prototype']['getAbilityInfo'] = function(_0x3da462) {
            var _0x499c90 = {};
            switch (_0x3da462) {
                case _0x3764d2:
                    _0x499c90['abilName'] = 'Fly High!', _0x499c90['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flying.png';
                    break;
                case _0x92a589:
                    _0x499c90['abilName'] = 'Gives Gifts!', _0x499c90['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_throwgifts.png';
                    break;
                case _0x43f88c:
                    _0x499c90['abilName'] = 'Flying Sleigh!', _0x499c90['abilImg'] = 'skins/santa/' + this['animalSpecies'] + '/ability_santa_flyingsleigh.png';
                    break;
            }
            return _0x499c90['skinThemeID'] = this['skinThemeID'], _0x499c90['mopeSeasonID'] = this['mopeSeasonID'], _0x499c90;
        }, _0x395a43['prototype']['getSkinName'] = function() {
            var _0x5b17d7 = '';
            return _0x5b17d7 = 'santa/' + this['animalSpecies'] + '/santa' + (this['specType'] == 0x0 ? '' : this['specType']), _0x5b17d7;
        };

        function _0x395a43() {
            _0x395a43['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x395a43, _0x269668, _0xcb49f5);
        var _0x4d8447 = _0x5d11ac;
        _0x1756f0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1756f0['prototype']['constructor'] = _0x1756f0, _0x1756f0['superClass'] = _0x4d8447;
        var _0x5e26a4 = 0x3f2;
        _0x1756f0['prototype']['updateZ'] = function() {
            this['z'] = 0x3f2;
            if (this['flag_flying']) this['z'] += 0x186a0;
        }, _0x1756f0['prototype']['customDraw'] = function(_0x38de77) {
            var _0xb269f7 = this['getSkinImageObj']('skins/santa/0/sleigh.png');
            if (_0xb269f7) {
                _0x4597c4['save']();
                var _0x3e95f0 = this['rad'] * 0x1;
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0xb269f7, -_0x3e95f0, -_0x3e95f0, _0x3e95f0 * 0x2, _0x3e95f0 * 0x2), _0x4597c4['restore']();
            }
        };

        function _0x1756f0() {
            _0x1756f0['superClass']['call'](this, _0x112d73);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1756f0, _0x112d73);
        var _0x4d8447 = _0x5502af;
        _0x12d80c['prototype'] = Object['create'](_0x4d8447['prototype']), _0x12d80c['prototype']['constructor'] = _0x12d80c, _0x12d80c['superClass'] = _0x4d8447;
        var _0x467bd0 = 0x186a0;
        _0x12d80c['prototype']['updateZ'] = function() {
            this['z'] = 0x3e8 + this['rad'] + this['rowNumber'];
            if (this['flag_flying']) this['z'] += _0x467bd0;
        }, _0x12d80c['prototype']['calculateZIndex'] = function() {
            this['updateZ']();
        }, _0x12d80c['prototype']['animalInfo'] = function() {
            var _0x5add3c = {};
            return _0x5add3c['aniName'] = 'Rudolph!', _0x5add3c['skinName'] = 'santa/rudolph', _0x5add3c['upgradeText'] = 'UPGRADED to Rudolph!\x0a Rudolph paws turn very well on ice!\x0a Press W to howl!', _0x5add3c['aniCol'] = '#6B6B6B', _0x5add3c;
        }, _0x12d80c['prototype']['getAbilityInfo'] = function(_0x3608ce) {
            var _0x31fae9 = {};
            return _0x31fae9['abilName'] = 'Howl!', _0x31fae9;
        }, _0x12d80c['prototype']['getSkinName'] = function() {
            var _0x3360e4 = '';
            return _0x3360e4 = 'santa/0/' + (this['isRudolph'] ? 'rudolph' : 'deer'), _0x3360e4 += this['specType'] == 0x0 ? '' : 0x1, _0x3360e4;
        }, _0x12d80c['prototype']['drawAnimalUnderSkinCircle'] = function(_0x98d7b0, _0x46c8b8) {
            if (!this['flag_isGrabbed']) {
                if (this['playerNum'] == 0x1) _0x98d7b0 = 'cyan';
                else {
                    if (this['playerNum'] == 0x2) _0x98d7b0 = 'yellow';
                    else this['flag_eff_isOnSpiderWeb'] && (_0x98d7b0 = 'white');
                }
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['isAnimalInside1v1Arena']() ? 0.3 : this['idealOp'], _0x4096ce(0x0, 0x0, this['rad'], _0x98d7b0), _0x4597c4['restore']();
            }
        }, _0x12d80c['prototype']['drawLights'] = function() {
            var _0x1f3606 = '/skins/' + this['getSkinName'](),
                _0x5d8d52 = this['getSkinImagePath'](_0x1f3606),
                _0x3c91c5 = this['skinScale'],
                _0x99d675 = this['skinRad'];
        }, _0x12d80c['prototype']['afterCustomDraw'] = function(_0x36caf0) {
            if (this['isRudolph']) this['drawLights']();
            var _0x431c7f = -0x1,
                _0x157edc = '#b84831',
                _0x422ac7 = 0x4 * (this['curRad'] / this['startRad']),
                _0x896064 = 0x1;
            this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x157edc, _0x422ac7, _0x431c7f, _0x896064), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x157edc, _0x422ac7, _0x431c7f, _0x896064), _0x157edc = 'white', _0x422ac7 = 0x1 * (this['curRad'] / this['startRad']), _0x896064 = 0.3, this['drawRope'](this['rope1_x'], this['rope1_y'], this['deerPos1_x'], this['deerPos1_y'], _0x157edc, _0x422ac7, _0x431c7f, _0x896064), this['drawRope'](this['rope2_x'], this['rope2_y'], this['deerPos2_x'], this['deerPos2_y'], _0x157edc, _0x422ac7, _0x431c7f, _0x896064);
        }, _0x12d80c['prototype']['drawRope'] = function(_0xb39d8b, _0x46659d, _0x450f99, _0x1c4a33, _0x490056, _0x4870d6, _0x44009d, _0x185af1) {
            _0x4597c4['save'](), _0x4597c4['strokeStyle'] = _0x490056, _0x4597c4['lineWidth'] = _0x4870d6 * (this['curRad'] / this['startRad']), _0x4597c4['globalAlpha'] = _0x185af1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0xb39d8b, _0x46659d), _0x4597c4['quadraticCurveTo'](_0xb39d8b, _0x1c4a33 - _0x44009d, _0x450f99, _0x1c4a33), _0x4597c4['stroke'](), _0x4597c4['restore']();
        }, _0x12d80c['prototype']['setOpacityForFlyingAnimals'] = function(_0x22a165) {
            !(this['id'] == _0x59b0bc || this['santaID'] == _0x59b0bc) && (this['idealOp'] = 0.6);
        }, _0x12d80c['prototype']['onLerpUpdate'] = function(_0x1447f2) {
            this['rope1_x'] = _0x1447f2 * (this['rope1_nx'] - this['rope1_ox']) + this['rope1_ox'], this['rope1_y'] = _0x1447f2 * (this['rope1_ny'] - this['rope1_oy']) + this['rope1_oy'], this['deerPos1_x'] = _0x1447f2 * (this['deerpos1_nx'] - this['deerpos1_ox']) + this['deerpos1_ox'], this['deerPos1_y'] = _0x1447f2 * (this['deerpos1_ny'] - this['deerpos1_oy']) + this['deerpos1_oy'], this['rope2_x'] = _0x1447f2 * (this['rope2_nx'] - this['rope2_ox']) + this['rope2_ox'], this['rope2_y'] = _0x1447f2 * (this['rope2_ny'] - this['rope2_oy']) + this['rope2_oy'], this['deerPos2_x'] = _0x1447f2 * (this['deerpos2_nx'] - this['deerpos2_ox']) + this['deerpos2_ox'], this['deerPos2_y'] = _0x1447f2 * (this['deerpos2_ny'] - this['deerpos2_oy']) + this['deerpos2_oy'];
        }, _0x12d80c['prototype']['readCustomData_onNewlyVisible'] = function(_0x3b0841) {
            _0x12d80c['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3b0841), this['santaID'] = _0x3b0841['readUInt32'](), this['rowNumber'] = _0x3b0841['readUInt8'](), this['isRudolph'] = _0x3b0841['readUInt8']() == 0x1, this['startRad'] = _0x3b0841['readUInt16']() / 0x64, this['curRad'] = _0x3b0841['readUInt16']() / 0x64, this['readInfo'](_0x3b0841), this['rope1_nx'] = this['rope1_ox'] = this['rope1_x'] = this['x'], this['rope1_ny'] = this['rope1_oy'] = this['rope1_y'] = this['y'], this['deerpos1_ox'] = this['deerPos1_x'] = this['deerpos1_nx'] = this['x'], this['deerpos1_oy'] = this['deerPos1_y'] = this['deerpos1_ny'] = this['y'], this['rope2_nx'] = this['rope2_ox'] = this['rope2_x'] = this['x'], this['rope2_ny'] = this['rope2_oy'] = this['rope2_y'] = this['y'], this['deerpos2_ox'] = this['deerPos2_x'] = this['deerpos2_nx'] = this['x'], this['deerpos2_oy'] = this['deerPos2_y'] = this['deerpos2_ny'] = this['y'];
        }, _0x12d80c['prototype']['rope1_x'] = 0x0, _0x12d80c['prototype']['rope1_y'] = 0x0, _0x12d80c['prototype']['deerPos1_x'] = 0x0, _0x12d80c['prototype']['deerPos1_y'] = 0x0, _0x12d80c['prototype']['rope2_x'] = 0x0, _0x12d80c['prototype']['rope2_y'] = 0x0, _0x12d80c['prototype']['deerPos2_x'] = 0x0, _0x12d80c['prototype']['deerPos2_y'] = 0x0, _0x12d80c['prototype']['webState'] = 0x0, _0x12d80c['prototype']['readInfo'] = function(_0x519cbf) {
            this['customUpdatedProperty'](_0x15db67, _0x519cbf), this['customUpdatedProperty'](_0x5f2f92, _0x519cbf), this['customUpdatedProperty'](_0x5ce613, _0x519cbf), this['customUpdatedProperty'](_0x12266d, _0x519cbf);
        }, _0x12d80c['prototype']['customUpdatedProperty'] = function(_0x580c1d, _0x230280) {
            if (_0x580c1d == _0x15db67) {
                var _0x389279 = _0x230280['readUInt16']() / 0x4,
                    _0x20f907 = _0x230280['readUInt16']() / 0x4;
                this['rope1_ox'] = this['rope1_x'], this['rope1_oy'] = this['rope1_y'], this['rope1_nx'] = _0x389279, this['rope1_ny'] = _0x20f907;
            } else {
                if (_0x580c1d == _0x5f2f92) {
                    var _0x29cc29 = _0x230280['readUInt16']() / 0x4,
                        _0x20a68b = _0x230280['readUInt16']() / 0x4;
                    this['rope2_ox'] = this['rope2_x'], this['rope2_oy'] = this['rope2_y'], this['rope2_nx'] = _0x29cc29, this['rope2_ny'] = _0x20a68b;
                } else {
                    if (_0x580c1d == _0x5ce613) {
                        var _0x16c5e6 = _0x230280['readUInt16']() / 0x4,
                            _0x2d8da0 = _0x230280['readUInt16']() / 0x4;
                        this['deerpos1_ox'] = this['deerPos1_x'], this['deerpos1_oy'] = this['deerPos1_y'], this['deerpos1_nx'] = _0x16c5e6, this['deerpos1_ny'] = _0x2d8da0;
                    } else {
                        if (_0x580c1d == _0x12266d) {
                            var _0xd24202 = _0x230280['readUInt16']() / 0x4,
                                _0x12aa1e = _0x230280['readUInt16']() / 0x4;
                            this['deerpos2_ox'] = this['deerPos2_x'], this['deerpos2_oy'] = this['deerPos2_y'], this['deerpos2_nx'] = _0xd24202, this['deerpos2_ny'] = _0x12aa1e;
                        }
                    }
                }
            }
        };

        function _0x12d80c() {
            _0x12d80c['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x12d80c, _0x269668, _0x51b1a7);
        var _0x4d8447 = _0x5d11ac;
        _0x4eaea0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4eaea0['prototype']['constructor'] = _0x4eaea0, _0x4eaea0['superClass'] = _0x4d8447;
        var _0x549ea0 = 0x3f0;
        _0x4eaea0['prototype']['updateZ'] = function() {
            this['z'] = 0x3f0;
            if (this['flag_flying']) this['z'] += 0x186a0;
        }, _0x4eaea0['prototype']['customDraw'] = function(_0x5c9e82) {
            _0x4096ce(0x0, 0x0, this['curRad'], '#ebac2d'), _0x4096ce(0x0, 0x0, this['curRad'] * 0.6, '#ffbc33');
        }, _0x4eaea0['prototype']['beforeCustomDraw'] = function(_0x52caba) {
            _0x4597c4['save'](), _0x4597c4['strokeStyle'] = '#ffbc33', _0x4597c4['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['webX'], this['webY']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'gold', _0x4597c4['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['webX'], this['webY']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore']();
        }, _0x4eaea0['prototype']['onLerpUpdate'] = function(_0x2199fe) {
            this['webX'] = _0x2199fe * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x2199fe * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x2199fe * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x2199fe * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
        }, _0x4eaea0['prototype']['readCustomData_onUpdate'] = function(_0xa7a6f3) {
            _0x4eaea0['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0xa7a6f3), this['readInfo'](_0xa7a6f3);
        }, _0x4eaea0['prototype']['readCustomData_onNewlyVisible'] = function(_0x1b9881) {
            _0x4eaea0['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1b9881), this['startRad'] = _0x1b9881['readUInt16']() / 0x64, this['readInfo'](_0x1b9881), this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
        }, _0x4eaea0['prototype']['startRad'] = 0x0, _0x4eaea0['prototype']['webX'] = 0x0, _0x4eaea0['prototype']['webY'] = 0x0, _0x4eaea0['prototype']['spiderX'] = 0x0, _0x4eaea0['prototype']['spiderY'] = 0x0, _0x4eaea0['prototype']['webState'] = 0x0, _0x4eaea0['prototype']['readInfo'] = function(_0x3b53ec) {
            this['curRad'] = _0x3b53ec['readUInt16']() / 0x64;
            var _0x29df7d = _0x3b53ec['readUInt16']() / 0x4,
                _0x2f91a6 = _0x3b53ec['readUInt16']() / 0x4;
            this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x29df7d, this['web_ny'] = _0x2f91a6;
            var _0x135f8c = _0x3b53ec['readUInt16']() / 0x4,
                _0x59e186 = _0x3b53ec['readUInt16']() / 0x4;
            this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x135f8c, this['spider_ny'] = _0x59e186;
        };

        function _0x4eaea0() {
            _0x4eaea0['superClass']['call'](this, _0x353d11), this['spawnTime'] = +new Date();
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4eaea0, _0x353d11);
        var _0x4d8447 = _0x5d11ac;
        _0x3c8c58['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3c8c58['prototype']['constructor'] = _0x3c8c58, _0x3c8c58['superClass'] = _0x4d8447;
        var _0x25f009 = 0x3ef;
        _0x3c8c58['prototype']['updateZ'] = function() {
            this['z'] = 0x3ef;
            if (this['flag_flying']) this['z'] += 0x186a0;
        }, _0x3c8c58['prototype']['customDraw'] = function(_0x1b18e7) {
            _0x4096ce(0x0, 0x0, this['rad'], '#ebac2d'), _0x4096ce(0x0, 0x0, this['rad'] * 0.9, '#e9ae34');
        }, _0x3c8c58['prototype']['beforeCustomDraw'] = function(_0x2e3357) {
            _0x4597c4['save'](), _0x4597c4['strokeStyle'] = '#ffbc33', _0x4597c4['lineWidth'] = 0xa * (this['curRad'] / this['startRad']), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['webX'], this['webY']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'gold', _0x4597c4['lineWidth'] = 0x6 * (this['curRad'] / this['startRad']), _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['webX'], this['webY']), _0x4597c4['lineTo'](this['spiderX'], this['spiderY']), _0x4597c4['stroke'](), _0x4597c4['restore']();
        }, _0x3c8c58['prototype']['onLerpUpdate'] = function(_0x15203e) {
            this['webX'] = _0x15203e * (this['web_nx'] - this['web_ox']) + this['web_ox'], this['webY'] = _0x15203e * (this['web_ny'] - this['web_oy']) + this['web_oy'], this['spiderX'] = _0x15203e * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['spiderY'] = _0x15203e * (this['spider_ny'] - this['spider_oy']) + this['spider_oy'];
        }, _0x3c8c58['prototype']['readCustomData_onUpdate'] = function(_0x2b4e45) {
            _0x3c8c58['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x2b4e45), this['readInfo'](_0x2b4e45);
        }, _0x3c8c58['prototype']['readCustomData_onNewlyVisible'] = function(_0x274517) {
            _0x3c8c58['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x274517), this['startRad'] = _0x274517['readUInt16']() / 0x64, this['readInfo'](_0x274517), this['curRad'] = this['rad'], this['web_nx'] = this['web_ox'] = this['webX'] = this['x'], this['web_ny'] = this['web_oy'] = this['webY'] = this['y'], this['spider_ox'] = this['spiderX'] = this['spider_nx'] = this['x'], this['spider_oy'] = this['spiderY'] = this['spider_ny'] = this['y'];
        }, _0x3c8c58['prototype']['webX'] = 0x0, _0x3c8c58['prototype']['webY'] = 0x0, _0x3c8c58['prototype']['spiderX'] = 0x0, _0x3c8c58['prototype']['spiderY'] = 0x0, _0x3c8c58['prototype']['webState'] = 0x0, _0x3c8c58['prototype']['readInfo'] = function(_0x4b99df) {
            this['curRad'] = _0x4b99df['readUInt16']() / 0x64;
            var _0x4d800a = _0x4b99df['readUInt16']() / 0x4,
                _0x457693 = _0x4b99df['readUInt16']() / 0x4;
            this['web_ox'] = this['webX'], this['web_oy'] = this['webY'], this['web_nx'] = _0x4d800a, this['web_ny'] = _0x457693;
            var _0x43440d = _0x4b99df['readUInt16']() / 0x4,
                _0x499a9f = _0x4b99df['readUInt16']() / 0x4;
            this['spider_ox'] = this['spiderX'], this['spider_oy'] = this['spiderY'], this['spider_nx'] = _0x43440d, this['spider_ny'] = _0x499a9f;
        };

        function _0x3c8c58() {
            _0x3c8c58['superClass']['call'](this, _0x313b35);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3c8c58, _0x313b35);
        var _0x4d8447 = _0x5d11ac;
        _0x4136d4['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4136d4['prototype']['constructor'] = _0x4136d4, _0x4136d4['superClass'] = _0x4d8447, _0x4136d4['prototype']['foodType'] = 0x0, _0x4136d4['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x4136d4['prototype']['customDraw'] = function(_0x43cafa) {
            _0x4597c4['save']();
            var _0x583380 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                _0x27bcfe = this['getSkinImageObj'](_0x583380);
            if (_0x27bcfe) {
                var _0x14604c = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x27bcfe, -_0x14604c, -_0x14604c, 0x2 * _0x14604c, 0x2 * _0x14604c), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x4136d4['prototype']['readCustomData_onNewlyVisible'] = function(_0x168632) {
            this['foodType'] = _0x168632['readUInt8']();
        };
        var _0x5bc02d = 0x8e;

        function _0x4136d4() {
            _0x4136d4['superClass']['call'](this, _0x5bc02d), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4136d4, _0x5bc02d);
        var _0x4d8447 = _0x5d11ac;
        _0x4fbc0f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4fbc0f['prototype']['constructor'] = _0x4fbc0f, _0x4fbc0f['superClass'] = _0x4d8447, _0x4fbc0f['prototype']['giftColor'] = 0x0, _0x4fbc0f['prototype']['giftType'] = 0x0, _0x4fbc0f['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x4fbc0f['prototype']['customDraw'] = function(_0x28433a) {
            _0x4597c4['save']();
            var _0x540758 = this['getSkinImageObj']('img/xmasgifts/' + this['giftColor'] + '/gift_e.png');
            if (_0x540758) {
                var _0x599078 = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x540758, -_0x599078, -_0x599078, 0x2 * _0x599078, 0x2 * _0x599078), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x4fbc0f['prototype']['readCustomData_onNewlyVisible'] = function(_0x1fc2ce) {
            this['giftColor'] = _0x1fc2ce['readUInt8'](), this['giftType'] = _0x1fc2ce['readUInt8']();
        };
        var _0x141324 = 0x8f;

        function _0x4fbc0f() {
            _0x4fbc0f['superClass']['call'](this, _0x141324), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4fbc0f, _0x141324);
        var _0x3690a0 = +new Date() + 0x1388,
            _0x36699c = ![];
        let _0x4dec24, _0x20cc46 = 0x32,
            _0x205310 = _0x3be96e - 0x546 + _0x20cc46;
        var _0xabe8a = null,
            _0x64760d = {
                'particleCount': 0x2bc,
                'particleSize': 0x3,
                'fallingSpeed': 0.5,
                'color': '#fff',
                'xspeed': 0x1,
                'yspeed': 0.5,
                'yspeedF': 0x1,
                'angle': 0x5a
            },
            _0x3c23ab = {
                'particleCount': 0x5dc,
                'particleSize': 0x4,
                'fallingSpeed': 0x1,
                'color': '#fff',
                'xspeed': 1.5,
                'yspeed': 0x1,
                'yspeedF': 1.5,
                'angle': 0x5a
            },
            _0x548313 = {
                'particleCount': 0x5dc,
                'particleSize': 0x5,
                'fallingSpeed': 1.5,
                'color': '#fff',
                'xspeed': 0x2,
                'yspeed': 1.5,
                'yspeedF': 0x3,
                'angle': 0x5a
            };

        function _0x4f8c77(_0x11265b, _0x3f9d58) {
            return Math['floor'](Math['random']() * (_0x3f9d58 - _0x11265b + 0x1) + _0x11265b);
        }

        function _0x493ec4(_0x6a0076, _0x1289de, _0x4062ee, _0x41912c, _0x244329) {
            this['x'] = _0x6a0076, this['y'] = _0x1289de, this['nx'] = _0x6a0076, this['ny'] = _0x1289de, this['radius'] = _0x4062ee, this['color'] = _0x41912c, this['radians'] = _0x244329, this['velocity'] = Math['max'](0.001, Math['random']() * 0.004), this['t'] = 0x0, this['update'] = () => {
                this['radians'] += this['velocity'], this['y'] += Math['pow'](this['velocity'], _0xabe8a['yspeed']) + _0xabe8a['yspeed'] * _0xabe8a['yspeedF'], this['x'] += Math['sin'](this['radians']) * 0.5 * _0xabe8a['xspeed'], this['draw']();
            }, this['lerp'] = () => {}, this['draw'] = () => {
                this['lerp'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['x'], this['y'], this['radius'], 0x0, Math['PI'] * 0x2, ![]), _0x4597c4['fillStyle'] = this['color'], _0x4597c4['fill'](), _0x4597c4['closePath'](), this['reset']();
            }, this['reset'] = () => {
                (this['x'] < -_0x20cc46 || this['y'] < -_0x20cc46 || this['x'] > _0x6f4c47 + _0x20cc46 || this['y'] > _0x205310 || this['t'] == 0x0 || +new Date() > this['t']) && (this['x'] = _0x4f8c77(0x0, _0x6f4c47 - 0x64), this['y'] = _0x4f8c77(0x0, _0x3be96e - 0x546), this['t'] = +new Date() + Math['random']() * (0x3e8 * 0x1e));
            };
        }

        function _0x535279() {
            _0x205310 = _0x3be96e - 0x546 + _0x20cc46, _0x4dec24 = [];
            for (let _0x23337a = 0x0; _0x23337a < _0xabe8a['particleCount']; _0x23337a++) {
                _0x4dec24['push'](new _0x493ec4(_0x4f8c77(0x0, _0x6f4c47 - 0x64), _0x4f8c77(0x0, _0x3be96e - 0x546), _0x4f8c77(0.5, _0xabe8a['particleSize']), _0xabe8a['color'], 0x5a));
            }
            _0x561488 = !![], _0x36699c = ![], _0x3690a0 = +new Date() + 0x2710;
        }
        var _0x561488 = ![];

        function _0x32be60() {
            if (_0x561488 && _0xabe8a != null) _0x4dec24['forEach'](_0x36d301 => {
                _0x36d301['update']();
            });
        }

        function _0x3eb5bd() {
            if (_0xabe8a == null) return;
            if (!_0x36699c) {
                if (_0x3690a0 < +new Date()) _0x36699c = !![];
                return;
            }
            if (!_0x570646 && !(_0x3aa021 == _0x243dd0)) _0x32be60();
        }
        var _0x4d8447 = _0x5502af;
        _0x162d6a['prototype'] = Object['create'](_0x4d8447['prototype']), _0x162d6a['prototype']['constructor'] = _0x162d6a, _0x162d6a['superClass'] = _0x4d8447, _0x162d6a['prototype']['animalInfo'] = function() {
            var _0x1f8c37 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1f8c37['aniName'] = 'Seahorse!';
                    break;
                case 0x6f:
                    _0x1f8c37['aniName'] = 'Classic Seahorse';
                    break;
                case 0x70:
                    _0x1f8c37['aniName'] = 'Gold-trim Seahorse';
                    break;
                case 0xc8:
                    _0x1f8c37['aniName'] = 'Tully Monster!';
                    break;
                case 0xc9:
                    _0x1f8c37['aniName'] = 'Water Gun Horse!';
                    break;
                case 0xca:
                    _0x1f8c37['aniName'] = 'Leafy Seadragon';
                    break;
            }
            return _0x1f8c37['skinName'] = this['getSkinName'](), _0x1f8c37['aniDesc'] = '', _0x1f8c37['upgradeText'] = 'UPGRADED to ' + _0x1f8c37['aniName'], _0x1f8c37['aniCol'] = '#502E1A', _0x1f8c37;
        }, _0x162d6a['prototype']['getSkinName'] = function() {
            let _0x57775e = this['getSpeciesPath']() + '/seahorse';
            return _0x57775e;
        }, _0x162d6a['prototype']['getSpeciesPath'] = function() {
            return 'ocean/seahorse/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x162d6a['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x162d6a['prototype']['getAbilityInfo'] = function(_0x4b294d) {
            var _0x43b15c = {};
            return _0x43b15c['abilName'] = 'Dash!', _0x43b15c['abilImg'] = 'skins/' + this['getSkinName']() + '.png', _0x43b15c['skinThemeID'] = this['skinThemeID'], _0x43b15c['mopeSeasonID'] = this['mopeSeasonID'], _0x43b15c;
        }, _0x162d6a['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x23e4b0 = this['skinRad'];
            let _0x3c78da = 1.5;
            var _0x4fbbd3 = 0x0;
            if (this['mopeSeasonID'] == 0x1) {
                (this['animalSpecies'] == 0xc8 || this['animalSpecies'] == 0xc9) && (_0x3c78da = 1.8);
                if (this['animalSpecies'] == 0xc9) _0x4fbbd3 = -0.1;
            }
            this['loadedSkinImg'] && _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x23e4b0 * _0x3c78da, -_0x23e4b0 * _0x3c78da + _0x23e4b0 * _0x4fbbd3, 0x2 * _0x23e4b0 * _0x3c78da, 0x2 * _0x23e4b0 * _0x3c78da);
        };

        function _0x162d6a() {
            _0x162d6a['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x162d6a, _0x269668, _0x1fff86);
        var _0x4d8447 = _0x5502af;
        _0x42d260['prototype'] = Object['create'](_0x4d8447['prototype']), _0x42d260['prototype']['constructor'] = _0x42d260, _0x42d260['superClass'] = _0x4d8447, _0x42d260['prototype']['animalInfo'] = function() {
            var _0x49c34c = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x49c34c['aniName'] = 'Shrimp!';
                    break;
                case 0x6f:
                    _0x49c34c['aniName'] = 'Classic Shrimp!';
                    break;
                case 0x70:
                    _0x49c34c['aniName'] = 'Gold-trim Shrimp!';
                    break;
                case 0xc8:
                    _0x49c34c['aniName'] = 'Deluxe Shrimp!';
                    break;
                case 0xc9:
                    _0x49c34c['aniName'] = 'Chef Shrimp!';
                    break;
                case 0xca:
                    _0x49c34c['aniName'] = 'Sushi Shrimp!';
                    break;
            }
            return _0x49c34c['skinName'] = this['getSkinName'](), _0x49c34c['aniDesc'] = '', _0x49c34c['upgradeText'] = 'UPGRADED to ' + _0x49c34c['aniName'], _0x49c34c['aniCol'] = '#502E1A', _0x49c34c;
        }, _0x42d260['prototype']['getSkinName'] = function() {
            let _0x322bd5 = this['getSpeciesPath']() + '/shrimp';
            return _0x322bd5;
        }, _0x42d260['prototype']['getSpeciesPath'] = function() {
            return 'ocean/shrimp/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x42d260['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x42d260() {
            _0x42d260['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x42d260, _0x269668, _0x19fc30);
        var _0x4d8447 = _0x5502af;
        _0x521339['prototype'] = Object['create'](_0x4d8447['prototype']), _0x521339['prototype']['constructor'] = _0x521339, _0x521339['superClass'] = _0x4d8447, _0x521339['prototype']['animalInfo'] = function() {
            var _0x31f2f1 = {};
            switch (this['animalSubSpecies']) {
                case 0xde:
                case 0x0:
                    switch (this['animalSpecies']) {
                        case 0x0:
                            _0x31f2f1['aniName'] = 'Trout';
                            break;
                        case 0x6f:
                            _0x31f2f1['aniName'] = 'Classic Trout';
                            break;
                        case 0x70:
                            _0x31f2f1['aniName'] = 'Gold-trim Trout';
                            break;
                    }
                    break;
                case 0xc8:
                    _0x31f2f1['aniName'] = 'Clownfish';
                    break;
                case 0xc9:
                    _0x31f2f1['aniName'] = 'Popsicle Trout';
                    break;
                case 0xca:
                    _0x31f2f1['aniName'] = 'Royal Guppy';
                    break;
                case 0xdd:
                    _0x31f2f1['aniName'] = 'Ice Husk Trout';
                    break;
                case 0x7e7:
                    _0x31f2f1['aniName'] = 'Dr. Lochness';
                    break;
            }
            return _0x31f2f1['skinName'] = this['getSkinName'](), _0x31f2f1['aniDesc'] = '', _0x31f2f1['upgradeText'] = 'UPGRADED to ' + _0x31f2f1['aniName'] + '!', _0x31f2f1['aniCol'] = '#502E1A', _0x31f2f1;
        }, _0x521339['prototype']['getAbilityInfo'] = function(_0x46c8e7) {
            var _0x248d15 = {};
            return _0x248d15['abilName'] = 'Extra Boost!', _0x248d15['abilImg'] = 'skins/' + this['getSkinName']() + '.png', _0x248d15['skinThemeID'] = this['skinThemeID'], _0x248d15['mopeSeasonID'] = this['mopeSeasonID'], _0x248d15;
        }, _0x521339['prototype']['getSkinName'] = function() {
            let _0x1afb9d = this['getSpeciesPath']() + '/trout';
            return _0x1afb9d;
        }, _0x521339['prototype']['getSpeciesPath'] = function() {
            return 'ocean/trout/' + this['animalSpecies'] + '/' + this['animalSubSpecies'];
        };

        function _0x521339() {
            _0x521339['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x521339, _0x269668, _0x1a22d5);
        var _0x4d8447 = _0x5502af;
        _0x34dc96['prototype'] = Object['create'](_0x4d8447['prototype']), _0x34dc96['prototype']['constructor'] = _0x34dc96, _0x34dc96['superClass'] = _0x4d8447, _0x34dc96['prototype']['getSkinName'] = function() {
            return 'arctic/arcticfox/' + this['animalSpecies'] + this['getSubSpecies']() + '/arcticfox';
        }, _0x34dc96['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x34dc96['prototype']['animalInfo'] = function() {
            var _0x16eb5b = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x16eb5b['aniName'] = 'Arctic Fox';
                    break;
                case 0xc8:
                    _0x16eb5b['aniName'] = 'Ice Fox';
                    break;
                case 0x6f:
                    _0x16eb5b['aniName'] = 'Classic Arctic Fox';
                    break;
                case 0x70:
                    _0x16eb5b['aniName'] = 'Gold-trim Arctic Fox';
                    break;
                case 0xc9:
                    _0x16eb5b['aniName'] = 'Forest Spirit Fox';
                    break;
                case 0xca:
                    _0x16eb5b['aniName'] = 'Ice Fox';
                    break;
            }
            return _0x16eb5b['skinName'] = this['getSkinName'](), _0x16eb5b['aniDesc'] = '', _0x16eb5b['upgradeText'] = 'UPGRADED to ' + _0x16eb5b['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x16eb5b['aniCol'] = '#CFCFCF', _0x16eb5b;
        };

        function _0x34dc96() {
            _0x34dc96['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x34dc96, _0x269668, _0x38ffba);
        var _0x4d8447 = _0x5502af;
        _0x1c5b3d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1c5b3d['prototype']['constructor'] = _0x1c5b3d, _0x1c5b3d['superClass'] = _0x4d8447, _0x1c5b3d['prototype']['getSkinName'] = function() {
            let _0x4651dc = this['getSpeciesPath']() + '/fox';
            return _0x4651dc;
        }, _0x1c5b3d['prototype']['getSpeciesPath'] = function() {
            return 'land/fox/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x1c5b3d['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x1c5b3d['prototype']['animalInfo'] = function() {
            var _0x247529 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x247529['aniName'] = 'Fox!';
                    break;
                case 0xc8:
                    _0x247529['aniName'] = 'Night Thief!';
                    break;
                case 0x6f:
                    _0x247529['aniName'] = 'Classic Fox';
                    break;
                case 0x70:
                    _0x247529['aniName'] = 'Gold-trim Fox';
                    break;
                case 0xc8:
                    _0x247529['aniName'] = 'Sneaky Fox';
                    break;
                case 0xcc:
                    _0x247529['aniName'] = 'Black Asura Fox';
                    break;
            }
            return _0x247529['skinName'] = this['getSkinName'](), _0x247529['aniDesc'] = '', _0x247529['upgradeText'] = 'UPGRADED to ' + _0x247529['aniName'] + '!\x0a You can kick players out of hiding holes! (Press W when in one!)\x0a+ Hide in red berry bushes!', _0x247529['aniCol'] = '#FF9D43', _0x247529;
        }, _0x1c5b3d['prototype']['getAbilityInfo'] = function(_0x131582) {
            var _0x1f6cd9 = {};
            return _0x1f6cd9['abilName'] = 'Pull from Hole', _0x1f6cd9['abilImg'] = 'skins/' + this['getSkinName']() + '.png', _0x1f6cd9['skinThemeID'] = this['skinThemeID'], _0x1f6cd9['mopeSeasonID'] = this['mopeSeasonID'], _0x1f6cd9;
        };

        function _0x1c5b3d() {
            _0x1c5b3d['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1c5b3d, _0x269668, _0x3f7358);
        var _0x4d8447 = _0x5502af;
        _0x38c477['prototype'] = Object['create'](_0x4d8447['prototype']), _0x38c477['prototype']['constructor'] = _0x38c477, _0x38c477['superClass'] = _0x4d8447, _0x38c477['prototype']['animalInfo'] = function() {
            var _0x363249 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x363249['aniName'] = 'Rabbit!';
                    break;
                case 0x6f:
                    _0x363249['aniName'] = 'Classic Rabbit';
                    break;
                case 0x70:
                    _0x363249['aniName'] = 'Gold-trim Rabbit';
                    break;
                case 0xc8:
                    _0x363249['aniName'] = 'Monochrome Rabbit!';
                    break;
                case 0xca:
                    switch (this['animalSubSpecies']) {
                        case 0x0:
                            _0x363249['aniName'] = 'Jackapole';
                            break;
                        case 0x1:
                            _0x363249['aniName'] = 'Hollow Rabbit';
                    }
                    break;
                case 0xcc:
                    _0x363249['aniName'] = 'Carrot Rabbit';
                    break;
                case 0xdc:
                    _0x363249['aniName'] = 'Fairy Rabbit';
                    break;
                case 0xde:
                    _0x363249['aniName'] = 'Jolly Rabbit';
                    break;
            }
            return _0x363249['skinName'] = this['getSpeciesPath']('rabbit') + '/rabbit', _0x363249['aniDesc'] = '', _0x363249['upgradeText'] = 'UPGRADED to ' + _0x363249['aniName'], _0x363249['aniCol'] = '#502E1A', _0x363249;
        }, _0x38c477['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']('rabbit') + '/rabbit';
        }, _0x38c477['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return this['animalSpecies'] === 0xca ? '/' + this['animalSubSpecies'] : '';
        }, _0x38c477['prototype']['getSpeciesPath'] = function(_0x418aa7 = 'rabbit') {
            return 'land/' + _0x418aa7 + '/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x38c477['prototype']['getAbilityInfo'] = function(_0x4ebffb) {
            var _0x238438 = {};
            return _0x238438['abilName'] = 'Dig Hole!', _0x238438['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/rabbit.png', _0x238438['skinThemeID'] = this['skinThemeID'], _0x238438['mopeSeasonID'] = this['mopeSeasonID'], _0x238438;
        }, _0x38c477['prototype']['getSkinName'] = function(_0x50bb7c) {
            var _0x2c8598 = this['getSpeciesPath']('rabbit') + '/rabbit' + (_0x50bb7c === !![] ? '.png' : '');
            return _0x2c8598;
        };

        function _0x38c477() {
            _0x38c477['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x38c477, _0x269668, _0x290562);
        var _0x4d8447 = _0x5502af;
        _0x2e27ab['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2e27ab['prototype']['constructor'] = _0x2e27ab, _0x2e27ab['superClass'] = _0x4d8447, _0x2e27ab['prototype']['getSkinName'] = function() {
            let _0x53c97c = this['getSpeciesPath']() + '/hedgehog';
            if (this['flag_usingAbility']) _0x53c97c += '2';
            return _0x53c97c;
        }, _0x2e27ab['prototype']['getSpeciesPath'] = function() {
            return 'land/hedgehog/' + this['animalSpecies'] + this['getSubSpecies']();
        }, _0x2e27ab['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x2e27ab['prototype']['animalInfo'] = function() {
            var _0x493850 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x493850['aniName'] = 'Hedgehog!';
                    break;
                case 0x6f:
                    _0x493850['aniName'] = 'Classic Hedgehog';
                    break;
                case 0x70:
                    _0x493850['aniName'] = 'Gold-trim Hedgehog';
                    break;
                case 0xca:
                    _0x493850['aniName'] = 'Grass Hedgehog';
                    break;
            }
            return _0x493850['skinName'] = this['getSkinName'](), _0x493850['aniDesc'] = '', _0x493850['upgradeText'] = 'UPGRADED to ' + _0x493850['aniName'] + '!\x0a (Hold W to become spiky, and dangerous to touch!)', _0x493850['aniCol'] = '#5b400d', _0x493850;
        }, _0x2e27ab['prototype']['getAbilityInfo'] = function(_0x547c5b) {
            var _0x434c3d = {};
            return _0x434c3d['abilName'] = 'Spikes!', _0x434c3d['abilImg'] = 'skins/' + this['getSpeciesPath']() + '/hedgehog2.png', _0x434c3d['skinThemeID'] = this['skinThemeID'], _0x434c3d['mopeSeasonID'] = this['mopeSeasonID'], _0x434c3d;
        };

        function _0x2e27ab() {
            _0x2e27ab['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2e27ab, _0x269668, _0x40e6df);
        var _0x4d8447 = _0x5d11ac;
        _0x13c1a8['prototype'] = Object['create'](_0x4d8447['prototype']), _0x13c1a8['prototype']['constructor'] = _0x13c1a8, _0x13c1a8['superClass'] = _0x4d8447, _0x13c1a8['prototype']['foodType'] = 0x0, _0x13c1a8['prototype']['updateZ'] = function() {
            this['z'] = -0x62;
        }, _0x13c1a8['prototype']['customDraw'] = function(_0x2b2096) {
            var _0x2a5a05 = this['rad'] - 0xa;
            this['waterRipples'](_0x2a5a05), _0x4597c4['save'](), _0x4597c4['restore']();
            var _0x45a5de = 'img/floaters/' + this['floaterType'] + '.png';
            this['drawSkin'](_0x45a5de, _0x2a5a05);
        }, _0x13c1a8['prototype']['drawSkin'] = function(_0x2d97b7, _0x41fece) {
            _0x4597c4['save']();
            var _0xc7944a = this['getSkinImageObj'](_0x2d97b7);
            _0xc7944a && (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0xc7944a, -_0x41fece, -_0x41fece, 0x2 * _0x41fece, 0x2 * _0x41fece), _0x4597c4['restore']()), _0x4597c4['restore']();
        };
        var _0x4597c3 = 0.01,
            _0x19547f = 0.02,
            _0x2f97e0 = 0xa,
            _0x244741 = 0xf;
        _0x13c1a8['prototype']['waterRipples'] = function(_0x3acd8f) {
            _0x3acd8f = _0x3acd8f - 0x5;
            var _0x569e4f = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x422099 = 1.75,
                _0x465b35 = 0.5,
                _0xe490e8 = _0x465b35 * Math['sin'](0x2 * Math['PI'] / _0x422099 * _0x569e4f),
                _0x493c14 = _0x4597c4['globalAlpha'];
            !this['isFloatingInWater'] && (_0xe490e8 = 0x1);
            if (this['floaterType'] == 0x0 || this['floaterType'] == 0x2 || this['floaterType'] == 0x3 || this['floaterType'] == 0x4 || this['floaterType'] == 0x5 || this['floaterType'] == 0x7) {
                var _0x1e7f02 = 'img/floaters/' + this['floaterType'] + '_ripple.png';
                _0x4597c4['globalAlpha'] *= 0.7 - 0.25 * _0xe490e8, this['drawSkin'](_0x1e7f02, _0x3acd8f + _0x2f97e0 - 0x5), _0x4597c4['globalAlpha'] *= 0.6 - 0.2 * _0xe490e8, this['drawSkin'](_0x1e7f02, _0x3acd8f + _0x244741 - 0x5);
            } else _0x4597c4['globalAlpha'] *= 0.8 - 0.2 * _0xe490e8, _0x43d466(0x0, _0x3acd8f * _0x4597c3, _0x3acd8f * (0.9 + 0.15 * _0xe490e8), _0x2f97e0, '#4668ff'), _0x4597c4['globalAlpha'] *= 0.7 - 0.2 * _0xe490e8, _0x43d466(0x0, -_0x3acd8f * _0x19547f, _0x3acd8f * (1.05 + 0.1 * _0xe490e8), _0x244741, '#4668ff');
            _0x4597c4['globalAlpha'] = _0x493c14;
        }, _0x13c1a8['prototype']['readCustomData_onNewlyVisible'] = function(_0x4cd362) {
            this['floaterType'] = _0x4cd362['readUInt8']();
        }, _0x13c1a8['prototype']['isFloatingInWater'] = !![], _0x13c1a8['prototype']['readUpdatedProperty'] = function(_0x2f9fd5, _0x440bd6) {
            _0x2f9fd5 == _0x21a49b && (this['isFloatingInWater'] = _0x440bd6['readUInt8']() == 0x1);
        };
        var _0x26ddaf = 0x90;

        function _0x13c1a8() {
            _0x13c1a8['superClass']['call'](this, _0x26ddaf), this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x13c1a8, _0x26ddaf);
        var _0x4d8447 = _0x5d11ac;
        _0x1bc40f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x1bc40f['prototype']['constructor'] = _0x1bc40f, _0x1bc40f['superClass'] = _0x4d8447, _0x1bc40f['prototype']['lookAngle'] = 0x0, _0x1bc40f['prototype']['frameNumber'] = 0x0, _0x1bc40f['prototype']['isRolling'] = ![], _0x1bc40f['prototype']['pumpkinType'] = ![], _0x1bc40f['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea;
        };
        var _0x370caa = -0.07,
            _0x2e6e56 = -0.1,
            _0x2e1df9 = 0x8,
            _0x5314d6 = 0xc,
            _0x18694b = 0x8;
        _0x1bc40f['prototype']['waterRipples'] = function(_0x36109c) {
            _0x4597c4['save'](), _0x36109c = _0x36109c + _0x18694b;
            var _0x4b6a25 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x27f1c0 = 1.75,
                _0x2c89b2 = 0.5,
                _0x5a63ab = _0x2c89b2 * Math['sin'](0x2 * Math['PI'] / _0x27f1c0 * _0x4b6a25),
                _0x269667 = _0x4597c4['globalAlpha'];
            !this['isFloating'] && (_0x5a63ab = 0x1), _0x4597c4['rotate'](_0x4c4686(this['lookAngle'] + 0x2d)), _0x4597c4['globalAlpha'] *= 0.8 - 0.2 * _0x5a63ab, _0x43d466(0x0, _0x36109c * _0x370caa, _0x36109c * (0.9 + 0.15 * _0x5a63ab), _0x2e1df9, '#4668ff'), _0x4597c4['globalAlpha'] *= 0.7 - 0.2 * _0x5a63ab, _0x43d466(0x0, -_0x36109c * _0x2e6e56, _0x36109c * (1.05 + 0.1 * _0x5a63ab), _0x5314d6, '#4668ff'), _0x4597c4['globalAlpha'] = _0x269667, _0x4597c4['restore']();
        }, _0x1bc40f['prototype']['customDraw'] = function(_0x25f026) {
            var _0x4ca70f = this['rad'] - 0xa,
                _0x4b93a4 = 0x1,
                _0x424102 = 0.15,
                _0x29f48a = 0.8,
                _0x479d1 = 0.5 * (_0x29f48a - _0x424102),
                _0x2ab0d9 = _0x424102 + _0x479d1 + _0x479d1 * Math['sin'](0x2 * Math['PI'] / _0x4b93a4 * (_0x476319 / 0x3e8)),
                _0x4b93a4 = 0x1,
                _0x424102 = 0.85,
                _0x29f48a = 0x1,
                _0x479d1 = 0.5 * (_0x29f48a - _0x424102),
                _0x3aa16e = 0x1;
            if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x476319 / 0x78) % 0x8;
            var _0x14e3f3 = this['getSkinImageObj']('img/beachball/' + this['pumpkinType'] + '/' + this['frameNumber'] + '.png');
            if (_0x14e3f3) {
                var _0x1b7df5 = 0x0,
                    _0x15bbac = this['rad'],
                    _0x4c70ac = this['rad'] * 2.5;
                imH = this['rad'] * 2.5;
                var _0x23def9 = 0.5,
                    _0x344474 = 0.95;
                _0x4597c4['save']();
                {
                    _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x3aa16e, _0x4597c4['rotate'](this['angle'] + _0x197fc1), _0x4597c4['drawImage'](_0x14e3f3, _0x1b7df5 + _0x4c70ac * -_0x23def9, _0x15bbac + imH * -_0x344474, _0x4c70ac, imH);
                }
                _0x4597c4['restore']();
            } else {}
        }, _0x1bc40f['prototype']['isFloating'] = ![], _0x1bc40f['prototype']['isRolling'] = ![], _0x1bc40f['prototype']['readUpdatedProperty'] = function(_0x2f072b, _0xc1f295) {
            if (_0x2f072b == _0x21a49b) this['isFloating'] = _0xc1f295['readUInt8']() == 0x1;
            else _0x2f072b == _0x26362d && (this['isRolling'] = _0xc1f295['readUInt8']() == 0x1);
        }, _0x1bc40f['prototype']['readCustomData_onNewlyVisible'] = function(_0x5aef61) {
            this['isRolling'] = _0x5aef61['readUInt8']() == 0x1, this['pumpkinType'] = _0x5aef61['readUInt8'](), this['isFloating'] = _0x5aef61['readUInt8']() == 0x1;
        };

        function _0x1bc40f() {
            _0x1bc40f['superClass']['call'](this, _0xa3800d), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['pumpkinType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        var _0xa3800d = 0x91;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1bc40f, _0xa3800d);
        var _0x4d8447 = _0x5d11ac;
        _0x5bb157['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5bb157['prototype']['constructor'] = _0x5bb157, _0x5bb157['superClass'] = _0x4d8447, _0x5bb157['prototype']['frameNumber'] = 0x0, _0x5bb157['prototype']['umbrellaType'] = 0x0, _0x5bb157['prototype']['umbrellaColor'] = 0x0, _0x5bb157['prototype']['isClosed'] = ![], _0x5bb157['prototype']['updateZ'] = function() {
            this['z'] = this['rad'] + (!this['isClosed'] ? 0x834 : 0x0);
        }, _0x5bb157['prototype']['customDraw'] = function(_0x41836d) {
            var _0x46a793 = 0x1,
                _0x3d6389 = 0.15,
                _0xd33bb = 0.8,
                _0x5309fa = 0.5 * (_0xd33bb - _0x3d6389),
                _0x19ca10 = _0x3d6389 + _0x5309fa + _0x5309fa * Math['sin'](0x2 * Math['PI'] / _0x46a793 * (_0x476319 / 0x3e8)),
                _0x46a793 = 0x1,
                _0x3d6389 = 0.85,
                _0xd33bb = 0x1,
                _0x5309fa = 0.5 * (_0xd33bb - _0x3d6389),
                _0x2b00d1 = 0x1,
                _0x4fa558 = this['rad'] * 1.5,
                _0x289234 = this['getSkinImageObj']('img/umbrella/' + this['umbrellaType'] + '/' + this['umbrellaColor'] + '/umbrella' + (this['isClosed'] ? '-closed' : '') + '.png');
            if (_0x289234) {
                var _0x5f1162 = 0x0,
                    _0x4a3ea7 = this['rad'],
                    _0x12445d = this['rad'] * 2.5;
                imH = this['rad'] * 2.5;
                var _0x4606f9 = 0.5,
                    _0x432a5e = 0.95;
                _0x4597c4['save']();
                {
                    _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x2b00d1, _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x289234, _0x5f1162 + _0x12445d * -_0x4606f9, _0x4a3ea7 + imH * -_0x432a5e, _0x12445d, imH);
                }
                _0x4597c4['restore']();
            } else {}
        }, _0x5bb157['prototype']['readUpdatedProperty'] = function(_0x5a322c, _0x1969e6) {
            if (_0x5a322c == _0x21a49b) this['isFloating'] = _0x1969e6['readUInt8']() == 0x1;
            else _0x5a322c == _0x26362d && (this['isClosed'] = _0x1969e6['readUInt8']() == 0x0);
        }, _0x5bb157['prototype']['readCustomData_onNewlyVisible'] = function(_0x4fe865) {
            this['isClosed'] = _0x4fe865['readUInt8']() == 0x1, this['umbrellaType'] = _0x4fe865['readUInt8'](), this['umbrellaColor'] = _0x4fe865['readUInt8']();
        };

        function _0x5bb157() {
            _0x5bb157['superClass']['call'](this, _0x11d4a4), this['umbrellaType'] = 0x0, this['isClosed'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        var _0x11d4a4 = 0x92;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5bb157, _0x11d4a4);
        var _0x4d8447 = _0x5502af;
        _0x51bc76['prototype'] = Object['create'](_0x4d8447['prototype']), _0x51bc76['prototype']['constructor'] = _0x51bc76, _0x51bc76['superClass'] = _0x4d8447, _0x51bc76['prototype']['animalInfo'] = function() {
            var _0x2ecfcf = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x2ecfcf['aniName'] = 'Chipmunk!';
                    break;
                case 0xc9:
                    _0x2ecfcf['aniName'] = 'Playful Munk!';
                    break;
                case 0x6f:
                    _0x2ecfcf['aniName'] = 'Classic Chipmunk';
                    break;
                case 0x70:
                    _0x2ecfcf['aniName'] = 'Gold-trim Chipmunk';
                    break;
                case 0xca:
                    _0x2ecfcf['aniName'] = 'Chipmonk';
                    break;
            }
            return _0x2ecfcf['skinName'] = this['getSkinName'](), _0x2ecfcf['aniDesc'] = '', _0x2ecfcf['upgradeText'] = 'You\'re a tiny ' + _0x2ecfcf['aniName'] + ' - Eat food to grow!', _0x2ecfcf['aniCol'] = '#CFCFCF', _0x2ecfcf;
        }, _0x51bc76['prototype']['getSkinName'] = function() {
            return 'arctic/chipmunk/' + this['animalSpecies'] + this['getSubSpecies']() + '/chipmunk';
        }, _0x51bc76['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x51bc76() {
            _0x51bc76['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x51bc76, _0x269668, _0x3d3994);
        var _0x4d8447 = _0x5502af;
        _0x33358f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x33358f['prototype']['constructor'] = _0x33358f, _0x33358f['superClass'] = _0x4d8447, _0x33358f['prototype']['getSkinName'] = function() {
            return 'arctic/arctichare/' + this['animalSpecies'] + this['getSubSpecies']() + '/arctichare';
        }, _0x33358f['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x33358f['prototype']['animalInfo'] = function() {
            var _0x41a41c = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x41a41c['aniName'] = 'Arctic Hare!';
                    break;
                case 0x6f:
                    _0x41a41c['aniName'] = 'Classic Arctic Hare';
                    break;
                case 0x70:
                    _0x41a41c['aniName'] = 'Gold-trim Arctic Hare';
                    break;
                case 0xc9:
                    _0x41a41c['aniName'] = 'Snow Cone Hare!';
                    break;
            }
            return _0x41a41c['skinName'] = this['getSkinName'](), _0x41a41c['aniDesc'] = '', _0x41a41c['upgradeText'] = 'UPGRADED to ' + _0x41a41c['aniName'], _0x41a41c['aniCol'] = '#CFCFCF', _0x41a41c;
        };

        function _0x33358f() {
            _0x33358f['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x33358f, _0x269668, _0x2a2b27);
        var _0x4d8447 = _0x5502af;
        _0x4b7e03['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4b7e03['prototype']['constructor'] = _0x4b7e03, _0x4b7e03['superClass'] = _0x4d8447, _0x4b7e03['prototype']['animalInfo'] = function() {
            var _0x3d9e88 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x3d9e88['aniName'] = 'Polar Bear';
                    break;
                case 0x6f:
                    _0x3d9e88['aniName'] = 'Classic Polar Bear';
                    break;
                case 0x70:
                    _0x3d9e88['aniName'] = 'Gold-trim Polar Bear';
                    break;
                case 0xc9:
                    _0x3d9e88['aniName'] = 'Cola Connoisseur';
                    break;
                case 0xca:
                    _0x3d9e88['aniName'] = 'Water Bear';
                    break;
            }
            return _0x3d9e88['aniDesc'] = '', _0x3d9e88['upgradeText'] = 'UPGRADED to ' + _0x3d9e88['aniName'] + '!\x0a Polar bears can climb hills! \x0a+ They\'re amazing swimmers!', _0x3d9e88['aniCol'] = '#e4e4e4', _0x3d9e88['skinName'] = this['getSkinName'](), _0x3d9e88;
        }, _0x4b7e03['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x4b7e03['prototype']['getAbilityInfo'] = function(_0xe34067) {
            var _0x3e7edc = {};
            return _0x3e7edc['abilName'] = 'Claw Slash!', _0x3e7edc['abilImg'] = 'skins/arctic/bear/' + this['animalSpecies'] + '/clawslash.png', _0x3e7edc['skinThemeID'] = this['skinThemeID'], _0x3e7edc['mopeSeasonID'] = this['mopeSeasonID'], _0x3e7edc;
        }, _0x4b7e03['prototype']['getSkinName'] = function() {
            var _0x286572 = 'arctic/bear/' + this['animalSpecies'] + this['getSubSpecies']() + '/bear';
            if (this['animalSpecies'] == 0xc9 && this['flag_usingAbility']) _0x286572 += '1';
            return _0x286572;
        };

        function _0x4b7e03() {
            _0x4b7e03['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4b7e03, _0x269668, _0x2f4199);
        var _0x4d8447 = _0x5502af;
        _0x5c9dc2['prototype'] = Object['create'](_0x4d8447['prototype']), _0x5c9dc2['prototype']['constructor'] = _0x5c9dc2, _0x5c9dc2['superClass'] = _0x4d8447, _0x5c9dc2['prototype']['getSpeciesPath'] = function(_0x466fe3) {
            return 'arctic/' + _0x466fe3 + '/' + this['animalSpecies'];
        }, _0x5c9dc2['prototype']['animalInfo'] = function() {
            var _0x17c2cf = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x17c2cf['aniName'] = 'Lemming!';
                    break;
                case 0x6f:
                    _0x17c2cf['aniName'] = 'Classic Lemming';
                    break;
            }
            return _0x17c2cf['skinName'] = this['getSpeciesPath']('lemming') + '/lemming', _0x17c2cf['aniDesc'] = '', _0x17c2cf['upgradeText'] = 'You\'re a tiny ' + _0x17c2cf['aniName'] + ' - Eat food to grow!', _0x17c2cf['aniCol'] = '#CFCFCF', _0x17c2cf;
        }, _0x5c9dc2['prototype']['getSkinName'] = function() {
            var _0x2c6699 = this['getSpeciesPath']('lemming') + '/lemming';
            return _0x2c6699;
        };

        function _0x5c9dc2() {
            _0x5c9dc2['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x5c9dc2, _0x269668, _0x442c1e);

        function _0x55ab97(_0x3f002e) {
            var _0x589b68 = _0x5ddf8d['createGameObjOfOType'](_0x269668, _0x3f002e['animalType']);
            _0x589b68['animalType'] = _0x3f002e['animalType'], _0x589b68['animalSpecies'] = _0x3f002e['animalSpecies'], _0x589b68['animalSubSpecies'] = _0x3f002e['animalSubSpecies'], _0x589b68['animalPremiumSkin'] = _0x3f002e['premiumSkinGroup'], _0x589b68['mopeSeasonID'] = _0x3f002e['mopeSeasonID'], _0x589b68['skinThemeID'] = 0x0;
            var _0x440ddc = _0x589b68['animalInfo']();
            _0x3f002e['aniCol'] = _0x440ddc['aniCol'], _0x3f002e['aniName'] = _0x440ddc['aniName'], _0x3f002e['skinName'] = _0x440ddc['skinName'], _0x3f002e['upgradeText'] = _0x440ddc['upgradeText'];
            var _0x1fe4e8 = _0x589b68['getAbilityInfo'](_0x3f002e['abilityType']);
            return _0x3f002e['abilityImage'] = _0x1fe4e8['abilImg'], _0x3f002e['abilityName'] = _0x1fe4e8['abilName'], _0x3f002e;
        }
        class _0x36d2e3 {
            static['ALPHA_LOOKUP'] = {
                'o_mudSpot': 0.7,
                'o_arcticIce': 0.85,
                'o_hill': 0x1,
                'o_lakeIsland': 0.6,
                'o_berryBush': 0x1,
                'o_waterSpot': 0x1
            };
            constructor(_0x3ed72c) {
                this['data'] = _0x3ed72c, this['data']['width'] = this['data']['height'] * (this['data']['gameWidth'] / this['data']['gameHeight']);
                if (!this['miniMapCanvas']) this['miniMapCanvas'] = document['createElement']('canvas');
                this['miniMapCanvas']['width'] = this['data']['width'], this['miniMapCanvas']['height'] = this['data']['height'], this['ctx_'] = this['miniMapCanvas']['getContext']('2d'), this['drawObjects']();
            } ['drawObjects']() {
                for (let _0x4d7456 = 0x0; _0x4d7456 < this['data']['objects']['length']; _0x4d7456++) {
                    let _0x158c7c = this['data']['objects'][_0x4d7456];
                    if (_0x158c7c['isRect']) {
                        if (_0x158c7c['objType'] == _0x1d814a) continue;
                        this['drawRect'](_0x158c7c);
                    }
                }
                for (let _0xfff15 = 0x0; _0xfff15 < this['data']['objects']['length']; _0xfff15++) {
                    let _0x293205 = this['data']['objects'][_0xfff15];
                    !_0x293205['isRect'] && this['drawCircle'](_0x293205);
                }
            } ['drawCircle'](_0x4e4cb3) {
                var _0x16a079 = _0x4e4cb3['x'] * this['data']['scaleX'],
                    _0xbfc5bc = _0x4e4cb3['y'] * this['data']['scaleY'],
                    _0x1e04d2 = _0x4e4cb3['r'] / this['data']['objScale'];
                this['ctx_']['beginPath'](), this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x4e4cb3['c'], this['ctx_']['arc'](_0x16a079, _0xbfc5bc, Math['max'](0x1, _0x1e04d2), 0x0, 0x2 * Math['PI']), this['ctx_']['fill']();
            } ['drawRect'](_0x479a63) {
                var _0x281e59 = _0x479a63['x'] * this['data']['scaleX'],
                    _0x55d95b = _0x479a63['y'] * this['data']['scaleY'],
                    _0x156bdc = _0x479a63['w'] * this['data']['scaleX'],
                    _0x237e35 = _0x479a63['h'] * this['data']['scaleY'];
                this['ctx_']['globalAlpha'] = 0x1, this['ctx_']['fillStyle'] = _0x479a63['c'], this['ctx_']['fillRect'](_0x281e59 - _0x156bdc / 0x2, _0x55d95b - _0x237e35 / 0x2, _0x156bdc, _0x237e35);
            } ['drawMap']() {
                this['miniMapCanvas'] && this['miniMapCanvas']['width'] && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.55, _0x4597c4['fillStyle'] = '#000000', _0x4597c4['fillRect'](_0x4921b9 - (0xa * _0x52f571 + this['miniMapCanvas']['width'] * _0x6039c), 0xa * _0x52f571, this['data']['width'] * _0x6039c, this['data']['height'] * _0x6039c), _0x4597c4['globalAlpha'] = 0.8, _0x4597c4['drawImage'](this['miniMapCanvas'], _0x4921b9 - (0xa * _0x52f571 + this['miniMapCanvas']['width'] * _0x6039c), 0xa * _0x52f571, this['data']['width'] * _0x6039c, this['data']['height'] * _0x6039c), _0x4597c4['restore']());
                for (let _0x385e87 = 0x0; _0x385e87 < _0x2d122f['length']; _0x385e87++) {
                    const _0x6dfd2e = _0x2d122f[_0x385e87];
                    _0x3be545(_0x6dfd2e, 'brown', 0x2);
                    const _0x52aa37 = _0x6dfd2e['type'] == 0x2 ? 'gold' : _0x6dfd2e['type'] == 0x1 ? 'burlywood' : 'orange';
                    _0x3be545(_0x6dfd2e, _0x52aa37, 1.5);
                }
                var _0x59eb2a = _0x4b4e0c[_0x59b0bc];
                if (_0x59eb2a) _0x4bb1d6(_0x59eb2a, 'white', 0x1);
                if (_0x2d5348 != null && _0x2d5348['id'] != _0x59b0bc) _0x4bb1d6(_0x2d5348, 'cyan', 0x1);
            } ['setPlayersCount']() {
                let _0x25512c = _0x476319 % 0x2710 > 0x1388;
                _0x25512c == 0x0 || !_0xc7d16a ? _0x50f011['setText'](_0x136baa(_0x570a5c) + ' players online') : _0x50f011['setText'](_0x136baa(_0x5642f7) + ' players on server');
            }
        }
        var _0x37a564 = 0x93,
            _0x4d8447 = _0x5d11ac;
        _0x3db398['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3db398['prototype']['constructor'] = _0x3db398, _0x3db398['superClass'] = _0x4d8447, _0x3db398['prototype']['drawGrid'] = _0x3aa021 !== _0x243dd0, _0x3db398['prototype']['updateZ'] = function() {
            switch (this['biome']) {
                case _0x36e8de:
                    this['z'] = -0x12c;
                    break;
                case _0x58f80e:
                    this['z'] = -0x12b;
                    break;
                case _0x99578c:
                case _0x5b34f0:
                    this['z'] = -0x12a;
                    break;
                case _0x302526:
                    if (this['forceBiomeColor']) this['z'] = -0xd2;
                    else this['z'] = -0xd0;
                    break;
                case _0x5a697d:
                    this['z'] = -0x127;
                    break;
            }
        }, _0x3db398['prototype']['customDraw'] = function(_0x58c906) {
            if (this['isRect']) {
                this['drawBiome'](_0x58c906);
                if (!_0x58c906) this['jaggedSides'] && (_0x4597c4['save'](), this['jaggedSidesForRect'](), _0x4597c4['restore']());
                if (_0x3aa021 !== _0x243dd0) {
                    var _0x579c77 = 0x2d;
                    _0x10468b(-this['getRectWidth']() / 0x2 + _0x579c77, -this['getRectHeight']() / 0x2 + _0x579c77, this['getRectWidth']() / 0x2 - _0x579c77, this['getRectHeight']() / 0x2 - _0x579c77, this['x'], this['y']);
                }
                _0x4597c4['save'](), _0x4597c4['restore']();
            } else this['drawBiome'](![]);
        }, _0x3db398['prototype']['jaggedPointsForRect'] = function(_0x247356) {
            var _0x23dd04 = 0x0,
                _0x2b284c = 0x1,
                _0x1faf77 = 0x2,
                _0x4cd91e = 0x3;
            if (this['jaggedSides']) {
                if (_0x247356 == _0x1faf77) {
                    this['jaggedRect'][_0x247356] = [];
                    var _0x59a28e = -this['getRectWidth']() / 0x2,
                        _0x386e27 = this['getRectWidth']() / 0x2,
                        _0xed0743 = this['getRectHeight']() / 0x2 - 0x20,
                        _0x6ed1b = this['getRectHeight']() / 0x2 - 0x20;
                    this['jaggedRect'][_0x247356]['push']({
                        'x': _0x59a28e,
                        'y': _0xed0743
                    });
                    var _0x2658dd = 0x14,
                        _0x343617 = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                        _0x2a359d = 0x3c,
                        _0x3a0728 = 0x0,
                        _0x2328b2 = _0x6f4c47 - this['x'],
                        _0x893582 = 0x0 - this['x'],
                        _0x5c80b6 = _0x3be96e - this['y'],
                        _0x2599b1 = 0x0 - this['y'],
                        _0x504b59, _0x22b86c = _0x59a28e - _0x2658dd;
                    this['jaggedRect'][_0x247356]['push']({
                        'x': _0x59a28e,
                        'y': _0xed0743
                    }), _0x504b59 = _0x6ed1b + _0x2658dd;
                    var _0x4269e5 = 0x0,
                        _0x4bec5c = 0x0;
                    for (_0x22b86c = _0x59a28e; _0x22b86c < _0x386e27; _0x22b86c += _0x2a359d) {
                        _0x4bec5c = _0x22b86c, _0x4269e5 = Math['min'](_0x5c80b6, Math['max'](_0x2599b1, _0x504b59 + _0x343617[_0x3a0728])), this['jaggedRect'][_0x247356]['push']({
                            'x': _0x4bec5c,
                            'y': _0x4269e5
                        }), _0x3a0728 = (_0x3a0728 + 0x1) % _0x343617['length'];
                    }
                    this['jaggedRect'][_0x247356]['push']({
                        'x': _0x386e27,
                        'y': _0x6ed1b
                    }), this['jaggedRect'][_0x247356]['push']({
                        'x': _0x386e27,
                        'y': _0xed0743
                    }), this['jaggedRect'][_0x247356]['push']({
                        'x': _0x59a28e,
                        'y': _0xed0743
                    });
                } else {
                    if (_0x247356 == _0x23dd04) {
                        var _0x329941 = 0x64;
                        this['jaggedRect'][_0x247356] = [], _0x4597c4['fillStyle'] = _0x472dd6;
                        var _0x59a28e = -this['getRectWidth']() / 0x2,
                            _0x386e27 = this['getRectWidth']() / 0x2,
                            _0xed0743 = -this['getRectHeight']() / 0x2 + 0x18,
                            _0x6ed1b = -this['getRectHeight']() / 0x2 + 0xc;
                        this['jaggedRect'][_0x247356]['push']({
                            'x': _0x59a28e,
                            'y': _0xed0743
                        });
                        var _0x2658dd = 0x0,
                            _0x343617 = [-0xc, 0x5, 0xa, 0x0, -0xa, 0x3, 0xc, 0x4, 0x0, 0x3, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                            _0x2a359d = 0x3c,
                            _0x3a0728 = 0x0,
                            _0x2328b2 = _0x6f4c47 - this['x'],
                            _0x893582 = 0x0 - this['x'],
                            _0x5c80b6 = _0x3be96e - this['y'],
                            _0x2599b1 = 0x0 - this['y'],
                            _0x504b59, _0x22b86c = _0x59a28e;
                        this['jaggedRect'][_0x247356]['push']({
                            'x': _0x59a28e,
                            'y': _0x6ed1b
                        }), _0x504b59 = _0x6ed1b;
                        for (_0x22b86c = _0x59a28e; _0x22b86c < _0x386e27; _0x22b86c += _0x2a359d) {
                            _0x4bec5c = _0x22b86c, _0x4269e5 = Math['min'](_0x5c80b6, Math['max'](_0x2599b1, _0x504b59 + _0x343617[_0x3a0728])), this['jaggedRect'][_0x247356]['push']({
                                'x': _0x4bec5c,
                                'y': _0x4269e5
                            }), _0x3a0728 = (_0x3a0728 + 0x1) % _0x343617['length'];
                        }
                        this['jaggedRect'][_0x247356]['push']({
                            'x': _0x386e27,
                            'y': _0x6ed1b
                        }), this['jaggedRect'][_0x247356]['push']({
                            'x': _0x386e27,
                            'y': _0xed0743
                        });
                    }
                }
            }
        }, _0x3db398['prototype']['drawJaggedCircle'] = function(_0x46303d, _0xdb3a46) {
            if (this['points2']) this['drawPoints'](this['points2'], _0xdb3a46, !![]);
            this['drawPoints'](this['points1'], _0x46303d, !![]);
        }, _0x3db398['prototype']['getRectWidth'] = function() {
            var _0x38d14f = this['rectW'];
            return _0x38d14f;
        }, _0x3db398['prototype']['getRectHeight'] = function() {
            var _0x29bf4c = this['rectH'];
            return _0x29bf4c;
        }, _0x3db398['prototype']['drawBiome'] = function(_0x2b93b1) {
            if (this['biome'] == _0x302526) this['drawVolcanoBiome'](_0x2b93b1);
            else {
                if (!this['isRect']) _0x4597c4['fillStyle'] = _0x2b93b1 ? 'red' : this['getBiomeColor'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x1, this['rad']), 0x0, Math['PI'] * 0x2), _0x4597c4['fill']();
                else {
                    if (this['biome'] == _0x58f80e) _0x4597c4['globalAlpha'] = 0x1;
                    if (!_0x2b93b1) {
                        _0x4597c4['fillStyle'] = _0x2b93b1 ? _0x5cf340 : this['getBiomeColor']();
                        var _0x690888 = _0x2b93b1 ? 0x0 : 0x14;
                        _0x4597c4['fillRect'](-this['getRectWidth']() / 0x2 + _0x690888, -this['getRectHeight']() / 0x2 + _0x690888, this['getRectWidth']() - _0x690888 * 0x2, this['getRectHeight']() - _0x690888 * 0x2);
                    }
                }
            }
        }, _0x3db398['prototype']['drawVolcanoBiome'] = function(_0x55336e) {
            _0x4597c4['save']();
            if (!(_0x3aa021 == _0x243dd0)) _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']);
            var _0x1f1336 = 0x0,
                _0x29f765 = (_0x476319 - this['spawnTime']) / 0x3e8,
                _0x53ccfc = 0x6,
                _0x470442 = 1.5;
            _0x1f1336 = _0x470442 * Math['sin'](0x2 * Math['PI'] / _0x53ccfc * _0x29f765);
            var _0x110042 = 0x4;
            _0x4597c4['fillStyle'] = '#604729', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, this['rad'], 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), !(_0x3aa021 == _0x243dd0) && (_0x4597c4['fillStyle'] = '#8A681B', _0x4597c4['beginPath'](), _0x4597c4['arc'](0x0, 0x0, Math['max'](0x0, this['rad'] - _0x110042 + _0x1f1336), 0x0, Math['PI'] * 0x2), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.45, -this['rad'] * 0.45 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x1f1336), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] * 0.5, this['rad'] * 0.5 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.4 + _0x1f1336), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.55 * 0.707, +this['rad'] * 0.55 * 0.707 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.5 + _0x1f1336), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](-this['rad'] * 0.75, -this['rad'] * 0.35 + 0xf * this['rPer'], Math['max'](0x0, this['rad'] * 0.3 + _0x1f1336), 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] + 0xa * this['rPer'], 0x32 * this['rPer'], 0x8, 0x0, 0x2 * Math['PI']), _0x4597c4['fill'](), _0x4597c4['beginPath'](), _0x4597c4['arc'](this['rad'] - 0x14 * this['rPer'], 0x32 * this['rPer'], 0xa, 0x0, 0x2 * Math['PI']), _0x4597c4['fill']()), _0x4597c4['restore']();
        }, _0x3db398['prototype']['drawPoints'] = function(_0x19bcc7, _0x498f21, _0x5786be) {
            if (_0x5786be) _0x4597c4['fillStyle'] = _0x498f21;
            else _0x4597c4['strokeStyle'] = _0x498f21;
            _0x4597c4['strokeStyle'] = _0x498f21, _0x4597c4['beginPath']();
            var _0x502565 = 0xa;
            _0x4597c4['moveTo'](_0x19bcc7[0x0]['x'] * _0x502565, _0x19bcc7[0x0]['y'] * _0x502565);
            for (var _0x2c1c5a = 0x1; _0x2c1c5a < _0x19bcc7['length']; _0x2c1c5a++) {
                _0x4597c4['lineTo'](_0x19bcc7[_0x2c1c5a]['x'] * _0x502565, _0x19bcc7[_0x2c1c5a]['y'] * _0x502565);
            }
            _0x4597c4['lineTo'](_0x19bcc7[0x0]['x'] * _0x502565, _0x19bcc7[0x0]['y'] * _0x502565);
            if (_0x5786be) _0x4597c4['fill']();
            else _0x4597c4['stroke']();
        }, _0x3db398['prototype']['drawJaggedRect'] = function() {
            var _0x5d8493 = 0x0,
                _0x1e99a7 = 0x1,
                _0x4863ed = 0x2,
                _0x35d85e = 0x3;
            for (var _0x4bd355 = 0x0; _0x4bd355 < this['jaggedRect']['length']; _0x4bd355++) {
                if (this['jaggedRect'][_0x4bd355]) {
                    var _0xd89a6c = this['jaggedRect'][_0x4bd355];
                    if (_0xd89a6c && _0xd89a6c['length'] > 0x0) {
                        _0x4597c4['fillStyle'] = this['biomeColor'], _0x4597c4['strokeStyle'] = 'red', _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0xd89a6c[0x0]['x'], _0xd89a6c[0x0]['y']);
                        for (i = 0x1; i < _0xd89a6c['length']; i++) _0x4597c4['lineTo'](_0xd89a6c[i]['x'], _0xd89a6c[i]['y']);
                        _0x4597c4['closePath'](), _0x4597c4['fill'](), _0x4597c4['stroke']();
                    }
                }
            }
        }, _0x3db398['prototype']['jaggedPointsForCircle'] = function(_0x901caa, _0x258961, _0x10315b, _0x362f24, _0x85dc4a) {
            if (this['points1'] == undefined) {
                this['points1'] = [];
                if (_0x85dc4a > 0x0) this['points2'] = [];
                var _0x330939 = _0x4ec95c(-0x2, 0x2),
                    _0x2de422 = 0x2 * Math['PI'] / _0x362f24;
                let _0x2a2afc = _0x4c4686(_0x330939);
                var _0x314e44 = Math['cos'](_0x2a2afc),
                    _0x35e3ec = Math['sin'](_0x2a2afc),
                    _0x5f0e75 = _0x901caa + _0x10315b * _0x314e44,
                    _0x4fa7ab = _0x258961 + _0x10315b * _0x35e3ec;
                this['points1']['push']({
                    'x': _0x5f0e75,
                    'y': _0x4fa7ab
                });
                if (_0x85dc4a > 0x0) {
                    var _0x46098d = _0x901caa + (_0x10315b + _0x85dc4a) * _0x314e44,
                        _0x45a98c = _0x258961 + (_0x10315b + _0x85dc4a) * _0x35e3ec;
                    this['points2']['push']({
                        'x': _0x46098d,
                        'y': _0x45a98c
                    });
                }
                for (var _0x18b624 = 0x1; _0x18b624 < _0x362f24; _0x18b624++) {
                    var _0x390802 = _0x4ec95c(-0x1, 0x1);
                    _0x330939 = _0x4ec95c(-0x2, 0x2);
                    var _0x309117 = _0x10315b + _0x390802;
                    _0x2a2afc = _0x2de422 * _0x18b624 + _0x4c4686(_0x330939), _0x314e44 = Math['cos'](_0x2a2afc), _0x35e3ec = Math['sin'](_0x2a2afc);
                    var _0xb7d923 = _0x901caa + _0x309117 * _0x314e44,
                        _0x6ac8dc = _0x258961 + _0x309117 * _0x35e3ec;
                    this['points1']['push']({
                        'x': _0xb7d923,
                        'y': _0x6ac8dc
                    });
                    if (_0x85dc4a > 0x0) {
                        var _0x2e17e0 = _0x10315b + _0x85dc4a + _0x390802,
                            _0x2f1ae3 = _0x901caa + (_0x2e17e0 + _0x85dc4a) * _0x314e44,
                            _0xe3d6fd = _0x258961 + (_0x2e17e0 + _0x85dc4a) * _0x35e3ec;
                        this['points2']['push']({
                            'x': _0x2f1ae3,
                            'y': _0xe3d6fd
                        });
                    }
                }
                this['points1']['push']({
                    'x': _0x5f0e75,
                    'y': _0x4fa7ab
                });
                if (_0x85dc4a > 0x0) this['points2']['push']({
                    'x': _0x46098d,
                    'y': _0x45a98c
                });
            }
        }, _0x3db398['prototype']['jaggedSidesForRect'] = function() {
            var _0x4d6338 = 0x2a;
            _0x4597c4['fillStyle'] = this['getBiomeColor']();
            var _0x1c4b71 = -this['getRectWidth']() / 0x2 + _0x4d6338,
                _0x2269d0 = this['getRectWidth']() / 0x2 - _0x4d6338,
                _0x6cb432 = -this['getRectHeight']() / 0x2 + _0x4d6338,
                _0x267fac = this['getRectHeight']() / 0x2 - _0x4d6338;
            _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x1c4b71, _0x6cb432);
            var _0x1d4d65 = 0x1e,
                _0x4a6c98 = [-0x8, 0xa, -0xa, 0xc, 0x0, 0x5, -0xa, 0x5, -0xc, 0x5, 0xa, 0x0, -0x6],
                _0x4f4cb2 = 0x2d,
                _0x3c3923 = 0x0,
                _0x22dfb2 = _0x6f4c47 - this['x'],
                _0x108cc7 = 0x0 - this['x'],
                _0x462b8a = _0x3be96e - this['y'],
                _0x4ddfe9 = 0x0 - this['y'],
                _0x41a880, _0x276488 = _0x1c4b71 - _0x1d4d65;
            for (_0x41a880 = _0x6cb432; _0x41a880 < _0x267fac; _0x41a880 += _0x4f4cb2) {
                _0x4597c4['lineTo'](Math['min'](_0x22dfb2, Math['max'](_0x108cc7, _0x276488 + _0x4a6c98[_0x3c3923])), _0x41a880), _0x3c3923 = (_0x3c3923 + 0x1) % _0x4a6c98['length'];
            }
            _0x4597c4['lineTo'](_0x1c4b71, _0x267fac), _0x41a880 = _0x267fac + _0x1d4d65;
            for (_0x276488 = _0x1c4b71; _0x276488 < _0x2269d0; _0x276488 += _0x4f4cb2) {
                _0x4597c4['lineTo'](_0x276488, Math['min'](_0x462b8a, Math['max'](_0x4ddfe9, _0x41a880 + _0x4a6c98[_0x3c3923]))), _0x3c3923 = (_0x3c3923 + 0x1) % _0x4a6c98['length'];
            }
            _0x4597c4['lineTo'](_0x2269d0, _0x267fac), _0x276488 = _0x2269d0 + _0x1d4d65;
            for (_0x41a880 = _0x267fac; _0x41a880 > _0x6cb432; _0x41a880 -= _0x4f4cb2) {
                _0x4597c4['lineTo'](Math['min'](_0x22dfb2, Math['max'](_0x108cc7, _0x276488 + _0x4a6c98[_0x3c3923])), _0x41a880), _0x3c3923 = (_0x3c3923 + 0x1) % _0x4a6c98['length'];
            }
            _0x4597c4['lineTo'](_0x2269d0, _0x6cb432), _0x41a880 = _0x6cb432 - _0x1d4d65;
            for (_0x276488 = _0x2269d0; _0x276488 > _0x1c4b71; _0x276488 -= _0x4f4cb2) {
                _0x4597c4['lineTo'](_0x276488, Math['min'](_0x462b8a, Math['max'](_0x4ddfe9, _0x41a880 + _0x4a6c98[_0x3c3923]))), _0x3c3923 = (_0x3c3923 + 0x1) % _0x4a6c98['length'];
            }
            _0x4597c4['closePath'](), _0x4597c4['fill']();
        }, _0x3db398['prototype']['getBiomeColor'] = function() {
            if (this['forceBiomeColor']) return this['biomeColor'];
            switch (this['biome']) {
                case _0x5a697d:
                    return _0x472dd6;
                case _0x5b34f0:
                    return '#c4dee7';
                case _0x99578c:
                    return _0x164cac;
                case _0x302526:
                    return _0x2c9c06;
                case _0x36e8de:
                    return _0x3e4118;
                case _0x58f80e:
                    return _0x3bf6b2;
                default:
                    return _0x3e4118;
            }
        }, _0x3db398['prototype']['jaggedSides'] = null, _0x3db398['prototype']['forceBiomeColor'] = ![], _0x3db398['prototype']['readCustomData_onNewlyVisible'] = function(_0x49f8de) {
            this['isRect'] = _0x49f8de['readUInt8']() == 0x1, this['biomeColor'] = _0x49f8de['readString'](), this['biome'] = _0x49f8de['readUInt16']();
            var _0x3e1588 = _0x49f8de['readBitGroup']();
            this['forceBiomeColor'] = _0x3e1588['getBool']();
            this['isRect'] && (this['jaggedSides'] = [_0x3e1588['getBool'](), _0x3e1588['getBool'](), _0x3e1588['getBool'](), _0x3e1588['getBool']()]);
            if (!this['isRect']) this['jaggedPointsForCircle'](0x0, 0x0, this['rad'], 0x28, 0x5, this['biomeColor'], '#DAB601');
            else {
                this['jaggedRect'] = [];
                var _0x55cdca = 0x0,
                    _0x412974 = 0x1,
                    _0xadbc82 = 0x2,
                    _0x547ccf = 0x3;
            }
            this['drawGrid'] = _0x3aa021 !== _0x243dd0;
        }, _0x3db398['prototype']['biomePattern'] = null, _0x3db398['prototype']['generateTerrainFeatures'] = function() {
            var _0x48affd = 0x64,
                _0x65eaa7 = 0x64,
                _0x557e34 = 1.5;
            if (this['biome'] == _0x99578c) _0x48affd = 0x7d, _0x65eaa7 = 0x7d, _0x557e34 = 1.5;
            else this['biome'] == _0x58f80e && (_0x48affd = 0x4b, _0x65eaa7 = 0x4b, _0x557e34 = 0x2);
            var _0x4dd749 = 0x1,
                _0x5cee54 = -this['getRectWidth']() / 0x2 + _0x48affd,
                _0x5cbaad = -this['getRectHeight']() / 0x2 + _0x65eaa7,
                _0x5783ed = this['getRectWidth']() / 0x2,
                _0xd2aabb = this['getRectHeight']() / 0x2,
                _0x11ca1e = _0x48affd * (this['biome'] == _0x58f80e ? 0x2 : 0x3),
                _0xcb93c4 = 0x0,
                _0x5376c0 = [];
            for (; _0x5cee54 < _0x5783ed - _0x48affd; _0x5cee54++) {
                if (_0x4dd749 == 0x1) {
                    var _0x270fb7 = {
                        'x': _0x5cee54,
                        'y': _0x5cbaad,
                        'rx': _0x5cee54 + _0x48affd * _0x4ec95c(-0.25, 0.25),
                        'ry': _0x5cbaad + _0x65eaa7 * _0x4ec95c(-0.25, 0.25),
                        'w': _0x48affd * _0x557e34,
                        'h': _0x65eaa7 * _0x557e34,
                        'c': 'blue',
                        'img': this['getRandomPatternImg'](),
                        'r': _0x4ec95c(0x0, 0xb4)
                    };
                    if (_0x270fb7['img'] < 0x0) _0x270fb7['img'] = 0x0;
                    _0x5376c0['push'](_0x270fb7);
                }
                _0x5cee54 += _0x11ca1e;
                if (_0x5cee54 >= _0x5783ed - _0x48affd) {
                    _0x5cbaad += _0x11ca1e;
                    if (this['biome'] != _0x36e8de && this['biome'] != _0x58f80e) _0x4dd749 = _0x4dd749 == 0x0 ? 0x1 : 0x0;
                    _0x5cee54 = -this['getRectWidth']() / 0x2 + _0x48affd;
                }
                if (this['biome'] != _0x36e8de && this['biome'] != _0x58f80e) _0x4dd749 = _0x4dd749 == 0x0 ? 0x1 : 0x0;
                else _0x4dd749 = _0x4dd749 == 0x0 ? 0x1 : 0x0;
                if (this['biome'] == _0x36e8de) _0x4dd749 = 0x1;
                if (_0x5cbaad > _0xd2aabb - _0x65eaa7) break;
            }
            this['biomePattern'] = _0x5376c0;
        }, _0x3db398['prototype']['drawTerrainFeatures'] = function() {}, _0x3db398['prototype']['fillPattern'] = function(_0x38c180) {
            var _0x3b7db5 = this['curBiome'] + '_' + _0x38c180,
                _0xe3ae84 = 'gameobj/' + this['oType'] + '/' + _0x3b7db5 + '.jpg',
                _0x246285 = this['getSkinImageObj'](_0xe3ae84);
            if (_0x246285) {
                var _0x5d5443 = -this['getRectWidth']() / 0x2,
                    _0xfa9944 = -this['getRectHeight']() / 0x2,
                    _0x128c00 = this['getRectWidth']() * 0x2,
                    _0x58188e = this['getRectHeight']() * 0x2,
                    _0x55d946 = _0x4597c4['createPattern'](_0x246285, 'repeat');
                _0x4597c4['fillStyle'] = _0x55d946, _0x4597c4['fillRect'](_0x5d5443, _0xfa9944, _0x128c00, _0x58188e);
            }
        }, _0x3db398['prototype']['drawRectObj'] = function(_0x3688be) {
            var _0x46a099 = this['curBiome'] + '_' + _0x3688be['img'],
                _0x19f737 = 'gameobj/' + this['oType'] + '/' + _0x46a099 + '.png',
                _0x23e84a = this['getSkinImageObj'](_0x19f737);
            if (_0x23e84a) {
                _0x4597c4['save'](), _0x4597c4['translate'](_0x3688be['rx'], _0x3688be['ry']);
                if (this['biome'] == _0x36e8de || this['biome'] == _0x5b34f0 && _0x3688be['img'] == 0x1 || this['biome'] == _0x99578c && _0x3688be['img'] > 0x1) _0x4597c4['rotate'](_0x3688be['r']);
                _0x4597c4['drawImage'](_0x23e84a, 0x0, 0x0, _0x3688be['w'], _0x3688be['h']), _0x4597c4['restore']();
            }
        }, _0x3db398['prototype']['getRandomPatternImg'] = function() {
            var _0x34e035 = 0x1;
            if (this['biome'] == _0x36e8de || this['biome'] == _0x5b34f0) _0x34e035 = Math['max'](0x0, Math['round'](_0x4ec95c(0x0, 0x3)));
            else {
                if (this['biome'] == _0x58f80e) _0x34e035 = 0x1;
                else _0x34e035 = Math['max'](0x0, Math['round'](_0x4ec95c(0x0, 0x2)));
            }
            return _0x34e035 - 0x1;
        };

        function _0x3db398() {
            _0x3db398['superClass']['call'](this, _0x37a564);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3db398, _0x37a564);
        var _0x4d8447 = _0x5d11ac;
        _0x2e7a85['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2e7a85['prototype']['constructor'] = _0x2e7a85, _0x2e7a85['superClass'] = _0x4d8447, _0x2e7a85['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea + this['rad'];
        }, _0x2e7a85['prototype']['customDraw'] = function(_0x3b03ab) {
            var _0x1ecbc1 = this['getSkinImageObj']('img/wave.png');
            if (_0x1ecbc1) {
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0x1;
                var _0x224871 = this['rad'] * 0x1;
                _0x4597c4['rotate'](this['angle'] + _0x4c4686(0xb4)), _0x4597c4['drawImage'](_0x1ecbc1, -_0x224871, -_0x224871, _0x224871 * 0x2, _0x224871 * 0x2), _0x4597c4['restore']();
            }
        }, _0x2e7a85['prototype']['readCustomData_onNewlyVisible'] = function(_0x40486d) {
            this['alpha'] = _0x40486d['readUInt8']() / 0x64;
        }, _0x2e7a85['prototype']['readUpdatedProperty'] = function(_0x2a579c, _0x3eba63) {
            _0x2a579c == _0x297759 && (this['alpha'] = _0x3eba63['readUInt8']() / 0x64);
        };
        var _0x54ecf9 = 0x94;

        function _0x2e7a85() {
            _0x2e7a85['superClass']['call'](this, _0x54ecf9);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2e7a85, _0x54ecf9);
        var _0x4d8447 = _0x5d11ac;
        _0xf48c2f['prototype'] = Object['create'](_0x4d8447['prototype']), _0xf48c2f['prototype']['constructor'] = _0xf48c2f, _0xf48c2f['superClass'] = _0x4d8447, _0xf48c2f['prototype']['updateZ'] = function() {
            this['z'] = -0x126;
        }, _0xf48c2f['prototype']['customDraw'] = function(_0x18ffe6) {}, _0xf48c2f['prototype']['readCustomData_onNewlyVisible'] = function(_0x38655a) {
            this['alpha'] = _0x38655a['readUInt8']() / 0x64;
        }, _0xf48c2f['prototype']['readUpdatedProperty'] = function(_0x294e42, _0x22eb38) {
            _0x294e42 == _0x297759 && (this['alpha'] = _0x22eb38['readUInt8']() / 0x64);
        };
        var _0x296572 = 0x95;

        function _0xf48c2f() {
            _0xf48c2f['superClass']['call'](this, _0x296572);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xf48c2f, _0x296572);
        var _0x4d8447 = _0x5d11ac;
        _0x26ef8d['prototype'] = Object['create'](_0x4d8447['prototype']), _0x26ef8d['prototype']['constructor'] = _0x26ef8d, _0x26ef8d['superClass'] = _0x4d8447, _0x26ef8d['prototype']['updateZ'] = function() {
            this['z'] = this['rad'] + 0x64;
        }, _0x26ef8d['prototype']['setSkinPath'] = function() {
            var _0x4d88e9 = this['oType'] + '_' + this['speciesSubType'];
            this['objSkinPath'] = 'gameobj/' + this['oType'] + '/' + _0x4d88e9 + '_' + this['hasPopped'] + '.png';
        }, _0x26ef8d['prototype']['customDraw'] = function(_0x16a012) {}, _0x26ef8d['prototype']['hasPopped'] = 0x0, _0x26ef8d['prototype']['readUpdatedProperty'] = function(_0x5a4896, _0x2b7181) {
            _0x5a4896 == _0xa3769c && (this['hasPopped'] = _0x2b7181['readUInt8']());
        };
        var _0x2db59d = 0x97;

        function _0x26ef8d() {
            _0x26ef8d['superClass']['call'](this, _0x2db59d);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x26ef8d, _0x2db59d);
        var _0x4d8447 = _0x5d11ac;
        _0x21d8bd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x21d8bd['prototype']['constructor'] = _0x21d8bd, _0x21d8bd['superClass'] = _0x4d8447, _0x21d8bd['prototype']['updateZ'] = function() {
            this['z'] = -0x96;
        }, _0x21d8bd['prototype']['customDraw'] = function(_0x46b9bf) {
            var _0x5a689e = 0x1,
                _0x835a3f = 0x1;
            if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                var _0xc9ba3e = (_0x476319 - this['spawnTime']) / 0x3e8,
                    _0x5da0e5 = 1.2;
                _0x5a689e = 3.5 * Math['cos'](0x2 * Math['PI'] / _0x5da0e5 * _0xc9ba3e), _0x835a3f = 2.5 * Math['sin'](0x2 * Math['PI'] / _0x5da0e5 * _0xc9ba3e);
            }
            this['drawOutlinedCircleRad']('', '#4A549D', this['innerRad']);
            !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 + _0x5a689e / 0x2 - this['rPer'], 0x0 + _0x835a3f / 0x2 - this['rPer'], Math['max'](0x0, this['innerRad'] - 0x6), '#444C8B');
            _0x4096ce(0x0 + _0x5a689e / 4.5 + this['rPer'], 0x1 + _0x835a3f / 1.5, Math['max'](0x0, this['innerRad'] - 0xe), '#4A549D'), _0x4096ce(0x0 + _0x5a689e / 1.5 - this['rPer'] * 0x2, _0x835a3f, Math['max'](0x0, this['innerRad'] - 18.5 + _0x835a3f / 0x5), '#3F4477'), _0x4096ce(0x0 + _0x5a689e / 1.5 - this['rPer'] * 0x2, _0x835a3f, Math['max'](0x0, this['innerRad'] - 22.5 + _0x835a3f / 0xb), '#353860');
            var _0xe7061f = _0x4b4e0c[_0x59b0bc];
            if (_0xe7061f && _0xe7061f['lastHidingHoleID'] == this['id']) {
                if (this['alpha'] == undefined) this['alpha'] = 0x0;
                _0xe7061f['flag_inHidingHole'] ? this['alpha'] += (0.1 + this['alpha']) * 0.1 : this['alpha'] -= this['alpha'] * 0.1;
                if (this['alpha'] > 0x1) this['alpha'] = 0x1;
                else this['alpha'] < 0x0 && (this['alpha'] = 0x0);
                _0x4597c4['globalAlpha'] = this['alpha'];
                var _0x45df1a = this['rad'];
                this['drawOutlinedCircle']('', '#4A549D', _0x45df1a), !(_0x3aa021 == _0x243dd0) && _0x4096ce(0x0 + _0x5a689e / 0x2 - this['rPer'], 0x0 + _0x835a3f / 0x2 - this['rPer'], Math['max'](0x0, _0x45df1a - 0x6), '#444C8B'), _0x4096ce(0x0 + _0x5a689e / 4.5 + this['rPer'], 0x1 + _0x835a3f / 1.5, Math['max'](0x0, _0x45df1a - 0xe), '#4A549D'), _0x45df1a = _0x45df1a * 0.9, _0x4597c4['globalAlpha'] = this['alpha'] * 0.6, _0x4096ce(0x0 + _0x5a689e / 3.5 - this['rPer'] * 0x2, _0x835a3f, Math['max'](0x0, _0x45df1a - 18.5 + _0x835a3f / 0x5), '#3F4477'), _0x45df1a = _0x45df1a * 0.7, _0x4597c4['globalAlpha'] = this['alpha'] * 0.3, _0x4096ce(0x0 + _0x5a689e / 6.5 - this['rPer'] * 0x2, _0x835a3f, Math['max'](0x0, _0x45df1a - 22.5 + _0x835a3f / 0xb), '#353860');
            }
        };

        function _0x21d8bd() {
            _0x21d8bd['superClass']['call'](this, _0x38ce4f), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = ![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x21d8bd, _0x38ce4f);
        var _0x4d8447 = _0x5d11ac;
        _0x3a8edd['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3a8edd['prototype']['constructor'] = _0x3a8edd, _0x3a8edd['superClass'] = _0x4d8447, _0x3a8edd['prototype']['playerID'] = 0x0, _0x3a8edd['prototype']['shellState'] = 0x0, _0x3a8edd['prototype']['cracksCount'] = 0x0, _0x3a8edd['prototype']['updateZ'] = function() {
            if (this['shellState'] == 0x0) this['z'] = this['rad'];
            else this['z'] = -0x99;
        }, _0x3a8edd['prototype']['isEdibleOutlined'] = function() {
            if (this['playerID'] == _0x59b0bc) return ![];
            return _0x20b6fd['superClass']['prototype']['isEdibleOutlined']['call'](this);
        }, _0x3a8edd['prototype']['nextShakeEndT'] = 0x0, _0x3a8edd['prototype']['nextShakeStartT'] = 0x0, _0x3a8edd['prototype']['drawScaleEffect'] = function() {
            if (this['shellState'] != 0x1) this['drawNickName'](0x1);
            if (this['shellState'] == 0x0) {
                _0x476319 > this['nextShakeEndT'] && (this['nextShakeEndT'] = +new Date() + _0x4ec95c(0x9c4, 0x1194), this['nextShakeStartT'] = this['nextShakeEndT'] - _0x4ec95c(0x3e8, 0x5dc));
                if (_0x476319 > this['nextShakeStartT'] && _0x476319 < this['nextShakeEndT']) {
                    var _0x31307e = 0.02,
                        _0x13037c = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x34eca9 = 0.1,
                        _0x2e59a9 = this['rad'] * _0x31307e,
                        _0x564640 = _0x2e59a9 * Math['sin'](0x2 * Math['PI'] / _0x34eca9 * _0x13037c),
                        _0x34eca9 = 0.15,
                        _0x2e59a9 = this['rad'] * _0x31307e,
                        _0x2bb008 = _0x2e59a9 * Math['cos'](0x2 * Math['PI'] / _0x34eca9 * _0x13037c);
                    _0x4597c4['translate'](-_0x564640, -_0x2bb008);
                }
            }
        }, _0x3a8edd['prototype']['customDraw'] = function(_0x3c8b8e) {
            var _0x2e5e3b = 'upgradeshell';
            if (this['shellState'] == 0x0) {
                if (this['cracksCount'] > 0x0 && this['cracksCount'] <= 0xa) _0x2e5e3b = 'egg_crack' + this['cracksCount'];
                else _0x2e5e3b += '' + this['shellState'];
            } else _0x2e5e3b += '' + this['shellState'];
            var _0xab88fc = this['getSkinImageObj']('img/upgradeshell/' + _0x2e5e3b + '.png'),
                _0x199666 = this['getSkinImageObj']('img/upgradeshell/outline' + this['curBiome'] + '.png'),
                _0x49c970 = this['rad'],
                _0x49e808 = this['rPer'] * Math['PI'] * 0x2;
            _0x4597c4['save'](), _0x4597c4['rotate'](_0x49e808);
            if (_0xab88fc) {
                _0x4597c4['drawImage'](_0xab88fc, -_0x49c970, -_0x49c970 * 1.1, 0x2 * _0x49c970, 2.2 * _0x49c970);
                if (this['shellState'] == 0x0 && _0x199666) _0x4597c4['drawImage'](_0x199666, -_0x49c970, -_0x49c970 * 1.1, 0x2 * _0x49c970, 2.21 * _0x49c970);
            }
            _0x4597c4['restore']();
        }, _0x3a8edd['prototype']['getNameSize'] = function() {
            return 0x6;
        }, _0x3a8edd['prototype']['setNick'] = function(_0x34314a) {
            _0x34314a = _0x1230b6(_0x34314a), this['nickName'] = _0x34314a, null == this['nickTXT'] ? (this['nickTXT'] = new _0x16040f(this['getNameSize'](), '#FFFFFF'), this['nickTXT']['strokeW'] = 1.5, this['nickTXT']['renderScale'] = 0x5, this['nickTXT']['setText'](this['nickName'])) : (this['nickTXT']['setFontSize'](this['getNameSize']()), this['nickTXT']['setText'](this['nickName']));
        }, _0x3a8edd['prototype']['drawNickName'] = function(_0x1c269f) {
            this['nickName'] && this['nickTXT'] && !_0x3bd264 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x1c269f, this['nickTXT']['x'] = 0x0, this['nickTXT']['y'] = this['rad'] + 0x5, this['nickTXT']['draw'](), _0x4597c4['restore']());
        }, _0x3a8edd['prototype']['readCustomData_onNewlyVisible'] = function(_0x3fb2ba) {
            _0x3a8edd['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3fb2ba), this['playerID'] = _0x3fb2ba['readUInt32']();
            if (this['playerID'] > 0x0) {
                var _0x4e36a5 = _0x3fb2ba['readString']();
                this['setNick'](_0x4e36a5 ? _0x4e36a5 : 'mope.io');
            }
            this['readUpdatedProperty'](_0x16675d, _0x3fb2ba), this['readUpdatedProperty'](_0x595925, _0x3fb2ba);
        }, _0x3a8edd['prototype']['readUpdatedProperty'] = function(_0x4236bb, _0x2c6c21) {
            if (_0x4236bb == _0x16675d) this['shellState'] = _0x2c6c21['readUInt8']();
            else {
                if (_0x4236bb == _0x595925) this['cracksCount'] = _0x2c6c21['readUInt8']();
            }
        };
        var _0x1a41f2 = 0x98;

        function _0x3a8edd() {
            _0x3a8edd['superClass']['call'](this, _0x1a41f2);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3a8edd, _0x1a41f2);
        var _0x4d8447 = _0x5d11ac;
        _0x493ec4['prototype'] = Object['create'](_0x4d8447['prototype']), _0x493ec4['prototype']['constructor'] = _0x493ec4, _0x493ec4['superClass'] = _0x4d8447, _0x493ec4['prototype']['playerID'] = 0x0, _0x493ec4['prototype']['shellState'] = 0x0, _0x493ec4['prototype']['cracksCount'] = 0x0, _0x493ec4['prototype']['updateZ'] = function() {
            this['z'] = 0x186a0;
        }, _0x493ec4['prototype']['customDraw'] = function(_0x1fe26f) {
            switch (this['speciesType']) {
                case _0x1a41f2: {
                    var _0x347631 = this['getSkinImageObj']('img/upgradeshell/shellpart' + this['speciesSubType'] + '.png'),
                        _0x1e1190 = this['rad'],
                        _0x187e18 = this['rPer'] * Math['PI'] * 0x2;
                    _0x347631 && (_0x4597c4['save'](), _0x4597c4['rotate'](_0x187e18), _0x4597c4['drawImage'](_0x347631, -_0x1e1190, -_0x1e1190, 0x2 * _0x1e1190, 0x2 * _0x1e1190), _0x4597c4['restore']());
                    break;
                }
                default:
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.1, _0x4096ce(0x0, 0x0, this['rad'], 'black'), _0x4597c4['restore']();
                    break;
            }
        };
        var _0x10af86 = 0x99;

        function _0x493ec4() {
            _0x493ec4['superClass']['call'](this, _0x10af86);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x493ec4, _0x10af86);
        var _0x498438 = _0x46bfc7,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x46bfc7['prototype']['updateZ'] = function() {
            this['z'] = 0x186a2;
        }, _0x46bfc7['prototype']['customDraw'] = function(_0x3cded8) {
            this['drawEffectScale_Slow'] = !![], this['doesDrawEffectScale'] = !![], _0x4597c4['globalAlpha'] = 0.2, _0x4096ce(0x0, 0x0, this['rad'] * 0.85, 'white');
            var _0x32f1e4 = this['isGreenTarget'] ? '_e' : '',
                _0x229210 = this['getSkinImageObj']('img/target' + _0x32f1e4 + '.png');
            if (_0x229210) {
                var _0xab3b8d = this['rad'];
                _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.5, _0x4597c4['drawImage'](_0x229210, -_0xab3b8d, -_0xab3b8d, 0x2 * _0xab3b8d, 0x2 * _0xab3b8d), _0x4597c4['restore']();
            }
            _0x4597c4['save'](), this['hasTimer'] && this['timerTxt'] != null && (_0x4597c4['globalAlpha'] = 0x1, this['timerTxt']['x'] = 0x0, this['timerTxt']['y'] = 0x0, this['timerTxt']['draw']()), _0x4597c4['restore']();
        }, _0x46bfc7['prototype']['worldUpd_readMsgNewlyVisible'] = function(_0x5cdbb8, _0xf23897, _0xa415d1) {
            this['setObjTypes'](_0xf23897, _0xa415d1), this['id'] = _0x5cdbb8['readUInt32']();
            var _0x17d1f8 = _0x5cdbb8['readUInt16']() / 0x4,
                _0x2758ae = _0x5cdbb8['readUInt16']() / 0x4,
                _0xe99b66 = _0x5cdbb8['readUInt16']() / 0x4;
            this['ox'] = this['x'] = this['nx'] = _0x2758ae, this['oy'] = this['y'] = this['ny'] = _0xe99b66, this['nRad'] = _0x17d1f8, this['oRad'] = this['rad'] = 0x0, this['setMovedToPos'](_0x2758ae, _0xe99b66), this['setNewRad'](_0x17d1f8), this['hasTimer'] = _0x5cdbb8['readUInt8']() == 0x1, this['readUpdatedProperty'](_0xcb7c2c, _0x5cdbb8), this['readUpdatedProperty'](_0x2a4b43, _0x5cdbb8), this['mopeSeasonID'] = 0x1;
        }, _0x46bfc7['prototype']['readUpdatedProperty'] = function(_0x47723f, _0x32ef39) {
            if (_0x47723f == _0x625a10) {
                this['timer'] = _0x32ef39['readUInt16']() / 0x64;
                if (this['timer'] < 0x1e) this['updateTimer']();
            } else {
                if (_0x47723f == _0x2a4b43) this['targetText'] = _0x32ef39['readString'](), this['hasTimer'] = !![], this['setTimer'](this['targetText']);
                else {
                    if (_0x47723f == _0x2d50ca) {
                        this['hasVictim'] = !![];
                        var _0x1bee1e = _0x32ef39['readUInt16']() / 0x4,
                            _0x112039 = _0x32ef39['readUInt16']() / 0x4;
                        this['spider_ox'] = this['victimX'], this['spider_oy'] = this['victimY'], this['spider_nx'] = _0x1bee1e, this['spider_ny'] = _0x112039;
                    } else _0x47723f == _0xcb7c2c && (this['isGreenTarget'] = _0x32ef39['readUInt8']() == 0x1);
                }
            }
        }, _0x46bfc7['prototype']['isGreenTarget'] = ![], _0x46bfc7['prototype']['hasVictim'] = ![], _0x46bfc7['prototype']['victimX'] = null, _0x46bfc7['prototype']['victimY'] = null, _0x46bfc7['prototype']['onLerpUpdate'] = function(_0x5eaa6a) {
            this['hasVictim'] && (this['victimX'] = _0x5eaa6a * (this['spider_nx'] - this['spider_ox']) + this['spider_ox'], this['victimY'] = _0x5eaa6a * (this['spider_ny'] - this['spider_oy']) + this['spider_oy']);
        }, _0x46bfc7['prototype']['beforeCustomDraw'] = function(_0x45893d) {
            this['hasVictim'] && (_0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'white', _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](this['x'], this['y']), _0x4597c4['lineTo'](this['victimX'], this['victimY']), _0x4597c4['stroke'](), _0x4597c4['restore']());
        }, _0x46bfc7['prototype']['updateTimer'] = function() {
            this['timer'] = Math['round'](this['timer']);
            var _0x5528cd = this['timer'];
            this['setTimer'](_0x5528cd);
        }, _0x46bfc7['prototype']['timerTxt'] = null, _0x46bfc7['prototype']['setTimer'] = function(_0xd7409) {
            var _0xc2e2d4 = '' + _0xd7409;
            null == this['timerTxt'] ? (this['timerTxt'] = new _0x16040f(0x14, '#FFFFFF'), this['timerTxt']['strokeW'] = 0x2, this['timerTxt']['multiLine'] = !![], this['timerTxt']['renderScale'] = 0x5, this['timerTxt']['setText'](_0xc2e2d4)) : (this['timerTxt']['setFontSize'](0x14), this['timerTxt']['setText'](_0xc2e2d4));
        };

        function _0x46bfc7() {
            _0x46bfc7['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x46bfc7, _0x4fbd16, _0x3a5655);
        var _0x4d8447 = _0x5d11ac;
        _0x624774['prototype'] = Object['create'](_0x4d8447['prototype']), _0x624774['prototype']['constructor'] = _0x624774, _0x624774['superClass'] = _0x4d8447, _0x624774['prototype']['stoneIncentive'] = 0x0, _0x624774['prototype']['teamID'] = 0x0, _0x624774['prototype']['lastHurtByTeamID'] = 0x0, _0x624774['prototype']['coolDownTime'] = 0x0, _0x624774['prototype']['isDefended'] = ![], _0x624774['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea;
        }, _0x624774['prototype']['customDraw'] = function(_0x544eca) {
            let _0x473207 = this['teamID'];
            if (this['teamID'] == 0x0) {
                if (this['lastHurtByTeamID'] != 0x0) _0x473207 += '_' + this['lastHurtByTeamID'];
                else {
                    if (this['coolDownTime'] > 0.1) _0x473207 += '_0';
                }
            }
            var _0x1ff10d = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone' + _0x473207 + '.png');
            if (_0x1ff10d) {
                var _0x4a26ff = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x1ff10d, -_0x4a26ff, -_0x4a26ff, 0x2 * _0x4a26ff, 0x2 * _0x4a26ff);
            }
            if (!this['isDefended']) {
                var _0x364450 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/stone_undefended.png');
                if (_0x364450) {
                    var _0x4a26ff = this['rad'] * 1.25;
                    _0x4597c4['drawImage'](_0x364450, -_0x4a26ff, -_0x4a26ff, 0x2 * _0x4a26ff, 0x2 * _0x4a26ff);
                }
            }
            var _0x1f1dcd = this['getSkinImageObj']('gameobj/' + this['oType'] + '/incentive/' + this['stoneIncentive'] + '.png');
            if (_0x1f1dcd) {
                var _0x4a26ff = this['rad'] / 0x4;
                _0x4597c4['drawImage'](_0x1f1dcd, -_0x4a26ff, -_0x4a26ff, 0x2 * _0x4a26ff, 0x2 * _0x4a26ff);
            }
        }, _0x624774['prototype']['setIncentiveText'] = function() {
            if (null == this['incentiveTxt']) this['incentiveTxt'] = new _0x16040f(0xa, '#FFFFFF'), this['incentiveTxt']['strokeW'] = 1.5, this['incentiveTxt']['multiLine'] = !![], this['incentiveTxt']['renderScale'] = 0x5, this['incentiveTxt']['setText'](this['nickName']);
            else {
                this['incentiveTxt']['setFontSize'](0xa), this['incentiveTxt']['multiLine'] = !![];
                let _0x12e144 = '';
                this['coolDownTime'] > 0.1 && (_0x12e144 = '\x0acooldown: ' + this['coolDownTime'] + 's'), this['incentiveTxt']['setText'](this['nickName'] + _0x12e144);
            }
        }, _0x624774['prototype']['drawIncentiveText'] = function(_0xd13bca) {
            this['incentiveTxt'] && !_0x3bd264 && (_0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0xd13bca, this['incentiveTxt']['x'] = -this['rad'] / 0x2, this['incentiveTxt']['y'] = -this['rad'] / 0x2, this['incentiveTxt']['draw'](), _0x4597c4['restore']());
        }, _0x624774['prototype']['readCustomData_onNewlyVisible'] = function(_0x3a7a44) {
            _0x624774['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3a7a44), this['stoneIncentive'] = _0x3a7a44['readUInt8'](), this['readUpdatedProperty'](_0x4ef9d1, _0x3a7a44), this['readUpdatedProperty'](_0x183e9b, _0x3a7a44), this['readUpdatedProperty'](_0x3b5705, _0x3a7a44), this['readUpdatedProperty'](_0x43bbfc, _0x3a7a44);
        }, _0x624774['prototype']['readUpdatedProperty'] = function(_0x4cbac5, _0x4deb53) {
            if (_0x4cbac5 == _0x4ef9d1) this['teamID'] = _0x4deb53['readUInt8']();
            else {
                if (_0x4cbac5 == _0x183e9b) this['lastHurtByTeamID'] = _0x4deb53['readUInt8']();
                else {
                    if (_0x4cbac5 == _0x43bbfc) this['isDefended'] = _0x4deb53['readUInt8']() == 0x1;
                    else _0x4cbac5 == _0x3b5705 && (this['coolDownTime'] = _0x4deb53['readUInt16']() / 0x64);
                }
            }
        }, _0x624774['prototype']['onHurt'] = function() {};
        var _0x19b1a9 = 0x4e;

        function _0x624774() {
            _0x624774['superClass']['call'](this, _0x19b1a9);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x624774, _0x19b1a9);
        const _0x24d802 = 0x1,
            _0x108b31 = 0x2,
            _0x43e6c9 = 0x3,
            _0x600deb = 0x4,
            _0x50db4b = 0x5,
            _0xf710bd = 0x6,
            _0x4e0ac0 = 0x7,
            _0x3df757 = 0x8,
            _0xd45ac6 = 0x9,
            _0x4e7a9f = 0xa,
            _0x384545 = 0xb,
            _0x1e268e = 0xc,
            _0x13d9bb = 0xd;
        var _0x4d8447 = _0x5d11ac;
        _0x40decb['prototype'] = Object['create'](_0x4d8447['prototype']), _0x40decb['prototype']['constructor'] = _0x40decb, _0x40decb['superClass'] = _0x4d8447, _0x40decb['prototype']['updateZ'] = function() {
            this['z'] = this['hasImpact'] ? this['rad'] : 0x174876e800;
        };
        let _0x4edbf4 = 1.5;
        _0x40decb['prototype']['frame'] = 0x0, _0x40decb['prototype']['customDraw'] = function(_0x1b1b64) {
            if (!this['hasImpact']) this['frame'] = Math['trunc'](_0x476319 / 0x78) % 0x6;
            else this['frame'] = 0x0;
            var _0x549eeb = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
                _0x2955de = this['getSkinImageObj'](_0x549eeb);
            if (_0x2955de) {
                _0x4597c4['save']();
                var _0x458945 = this['rad'] * 0x2;
                !this['hasImpact'] ? (_0x4597c4['shadowColor'] = 'rgba(0,0,0,0.05)', _0x4597c4['shadowBlur'] = 0x0, _0x4597c4['shadowOffsetX'] = this['shadowDistance'], _0x4597c4['shadowOffsetY'] = this['shadowDistance'], _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x2955de, -_0x458945 / 0x2, -_0x458945 * _0x4edbf4, _0x458945, _0x458945 * 0x2)) : (_0x549eeb = 'gameobj/' + this['oType'] + '/meteorite.png', _0x2955de = null, _0x2955de = this['getSkinImageObj'](_0x549eeb), _0x2955de && (_0x4597c4['rotate'](this['angle']), _0x458945 = this['rad'], _0x4597c4['drawImage'](_0x2955de, -_0x458945, -_0x458945, _0x458945 * 0x2, _0x458945 * 0x2))), _0x4597c4['restore']();
            }
        }, _0x40decb['prototype']['readCustomData_onNewlyVisible'] = function(_0x900a5a) {
            _0x40decb['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x900a5a), this['readUpdatedProperty'](_0x3e540c, _0x900a5a), this['readUpdatedProperty'](_0x5c08de, _0x900a5a);
        }, _0x40decb['prototype']['shadowDistance'] = 0x0, _0x40decb['prototype']['hasImpact'] = ![], _0x40decb['prototype']['readUpdatedProperty'] = function(_0xd68537, _0x47c03d) {
            if (_0xd68537 == _0x5c08de) {
                let _0x5ca599 = _0x47c03d['readUInt16']() / 0xa;
                this['shadowDistance'] = _0x5ca599;
            } else _0xd68537 == _0x3e540c && (this['hasImpact'] = _0x47c03d['readUInt8']() == 0x1);
        };
        const _0x3bd9bc = 0x9a;

        function _0x40decb() {
            _0x40decb['superClass']['call'](this, _0x3bd9bc);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x40decb, _0x3bd9bc);
        var _0x4d8447 = _0x5d11ac;
        _0x13712b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x13712b['prototype']['constructor'] = _0x13712b, _0x13712b['superClass'] = _0x4d8447, _0x13712b['prototype']['updateZ'] = function() {
            this['z'] = -0x65;
        }, _0x13712b['prototype']['customDraw'] = function(_0x963dcc) {
            skin = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png';
            var _0x40338e = this['getSkinImageObj'](skin);
            _0x40338e && (_0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), rad = this['rad'] * 1.5, _0x4597c4['drawImage'](_0x40338e, -rad, -rad, rad * 0x2, rad * 0x2), _0x4597c4['restore']());
        };
        const _0xb8a6c6 = 0x9b;

        function _0x13712b() {
            _0x13712b['superClass']['call'](this, _0xb8a6c6);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x13712b, _0xb8a6c6);
        var _0x4d8447 = _0x5d11ac;
        _0x3eccca['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3eccca['prototype']['constructor'] = _0x3eccca, _0x3eccca['superClass'] = _0x4d8447, _0x3eccca['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x3eccca['prototype']['customDraw'] = function(_0x37db49) {
            this['frame'] = Math['trunc'](_0x476319 / 0x78) % 0x5;
            var _0x3c45ca = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['frame'] + '.png',
                _0x516bd8 = this['getSkinImageObj'](_0x3c45ca);
            if (_0x516bd8) {
                var _0x51fb44 = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x516bd8, -_0x51fb44, -_0x51fb44, _0x51fb44 * 0x2, _0x51fb44 * 0x2), _0x4597c4['restore']();
            }
        };
        const _0x5777c1 = 0x9d;

        function _0x3eccca() {
            _0x3eccca['superClass']['call'](this, _0x5777c1);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3eccca, _0x5777c1);
        const _0x2eda38 = 0x0,
            _0x432b52 = 0x1,
            _0xea64d7 = 0x2,
            _0x531230 = 0x3;
        var _0x4d8447 = _0x5d11ac;
        _0x4de554['prototype'] = Object['create'](_0x4d8447['prototype']), _0x4de554['prototype']['constructor'] = _0x4de554, _0x4de554['superClass'] = _0x4d8447, _0x4de554['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x4de554['prototype']['customDraw'] = function(_0x14a964) {
            var _0x52efdd = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
            if (_0x52efdd) {
                var _0x980599 = this['rad'];
                _0x4597c4['drawImage'](_0x52efdd, -_0x980599, -_0x980599, 0x2 * _0x980599, 0x2 * _0x980599);
            }
        };
        var _0x13237b = 0x9e;
        _0x4de554['prototype']['readCustomData_onNewlyVisible'] = function(_0xfa317c) {
            _0x4de554['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0xfa317c), this['speciesType'] = _0xfa317c['readUInt16'](), this['speciesSubType'] = _0xfa317c['readUInt16']();
        };

        function _0x4de554() {
            _0x4de554['superClass']['call'](this, _0x13237b);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x4de554, _0x13237b);
        var _0x4d8447 = _0x5502af;
        _0x56307b['prototype'] = Object['create'](_0x4d8447['prototype']), _0x56307b['prototype']['constructor'] = _0x56307b, _0x56307b['superClass'] = _0x4d8447, _0x56307b['prototype']['animalInfo'] = function() {
            var _0x106161 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x106161['aniName'] = 'Swinehoe';
                    break;
                case 0x1:
                    _0x106161['aniName'] = 'Golden Pheasant';
                    break;
            }
            return _0x106161['aniCol'] = '#FF9000', _0x106161['skinName'] = this['getSkinName'](), _0x106161['upgradeText'] = 'UPGRADED to ' + _0x106161['aniName'] + '!\x0aHold W to charge. ', _0x106161;
        }, _0x56307b['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/pheasant' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x56307b['prototype']['getSpeciesPath'] = function() {
            return 'forest/pheasant/' + this['animalSpecies'];
        }, _0x56307b['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x56307b['prototype']['getWing'] = function(_0x5e6b42, _0x63ad13, _0x38c22b) {
            var _0x57e48f = 'skins/' + this['getSpeciesPath']() + '/';
            return _0x57e48f += _0x5e6b42 + '_wing' + _0x63ad13 + '.png', _0x57e48f;
        }, _0x56307b['prototype']['getHead'] = function(_0x3d7b05, _0x2342ee) {
            var _0x13fbcf = 'skins/' + this['getSpeciesPath']() + '/';
            return _0x13fbcf += _0x3d7b05 + '_head.png', _0x13fbcf;
        }, _0x56307b['prototype']['theFrame'] = 0x0, _0x56307b['prototype']['drawUnderSkinImg'] = function() {
            this['setSkinScale']();
            var _0xef3496 = -0.7,
                _0x131f45 = 0.9,
                _0x374abe = 'skins/' + this['getSpeciesPath']() + '/tail.png',
                _0x583012 = this['getSkinImageObj'](_0x374abe);
            if (_0x583012) {
                this['flag_usingAbility'] && (_0x131f45 = 1.1);
                var _0x6de955 = this['skinScale'],
                    _0xfede3c = this['rad'] - this['outlineW'];
                _0x4597c4['drawImage'](_0x583012, -_0xfede3c * _0x6de955 * _0x131f45, (-_0xfede3c + _0xfede3c * _0xef3496) * _0x6de955 * _0x131f45, 0x2 * _0xfede3c * _0x6de955 * _0x131f45, 0x2 * _0xfede3c * _0x6de955 * _0x131f45);
            }
        }, _0x56307b['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility']) {
                if (this['flag_flying']) {
                    var _0x53aec0 = 'skins';
                    {
                        var _0x20fe45 = 0x1f4 / 0x154;
                        if (this['flag_flying'] && !this['flag_isGrabbed']) {
                            _0x4597c4['save']();
                            var _0x169b7b = _0x38f4be('bird', this['spawnTime']);
                            _0x169b7b !== undefined && _0x169b7b != null && (this['theFrame'] = _0x169b7b);
                            var _0x2e6742 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                                _0x2e7bc4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
                            if (_0x2e7bc4) {
                                _0x4597c4['save']();
                                var _0x26d6d4 = -(-0.2 + _0x2e6742) * _0x197fc1,
                                    _0x2814f0 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x31cf4b + _0x26d6d4);
                                var _0x1ee786 = 0x0,
                                    _0x3dfaef = this['rad'],
                                    _0x1b98bd = _0x2814f0 * 0x2 * 0.62,
                                    _0x2c60ce = _0x2814f0 * 2.5,
                                    _0x1c3dba = 0.2,
                                    _0x283c7e = 1.7;
                                _0x4597c4['drawImage'](_0x2e7bc4, _0x1ee786 + _0x1b98bd * -_0x1c3dba, _0x3dfaef + _0x2c60ce * -_0x283c7e, _0x1b98bd, _0x2c60ce), _0x4597c4['restore']();
                            }
                            var _0x2e7bc4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
                            if (_0x2e7bc4) {
                                _0x4597c4['save']();
                                var _0x26d6d4 = -(-0.2 + _0x2e6742) * _0x4c4686(-0x5a),
                                    _0x2814f0 = this['rad'] * 0.8;
                                _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x26d6d4);
                                var _0x1ee786 = 0x0,
                                    _0x3dfaef = this['rad'],
                                    _0x1b98bd = _0x2814f0 * 0x2 * 0.62,
                                    _0x2c60ce = _0x2814f0 * 2.5,
                                    _0x1c3dba = 0.8,
                                    _0x283c7e = 1.7;
                                _0x4597c4['drawImage'](_0x2e7bc4, _0x1ee786 + _0x1b98bd * -_0x1c3dba, _0x3dfaef + _0x2c60ce * -_0x283c7e, _0x1b98bd, _0x2c60ce), _0x4597c4['restore']();
                            }
                            _0x4597c4['restore']();
                        }
                        if (this['specType'] != 0x0 && this['specType'] != undefined) {
                            var _0x14b306 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
                            if (_0x14b306) {
                                _0x4597c4['save']();
                                var _0x2814f0 = this['rad'],
                                    _0x11a494 = 0.2;
                                _0x4597c4['drawImage'](_0x14b306, -_0x2814f0 * _0x20fe45, (-_0x2814f0 + _0x2814f0 * _0x11a494) * _0x20fe45, 0x2 * _0x2814f0 * _0x20fe45, 0x2 * _0x2814f0 * _0x20fe45), _0x4597c4['restore']();
                            }
                        }
                    }
                } else {
                    var _0x20fe45 = 0x1f4 / 0x154;
                    if (this['flag_usingAbility']) {
                        _0x4597c4['save']();
                        var _0x2e6742 = 0x0,
                            _0x2e7bc4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x1, !![]));
                        if (_0x2e7bc4) {
                            _0x4597c4['save']();
                            var _0x26d6d4 = -(-0.2 + _0x2e6742) * _0x4c4686(0xf),
                                _0x2814f0 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(0xf) + _0x26d6d4);
                            var _0x1ee786 = 0x0,
                                _0x3dfaef = this['rad'],
                                _0x1b98bd = _0x2814f0 * 0x2 * 0.7,
                                _0x2c60ce = _0x2814f0 * 2.2,
                                _0x1c3dba = 0x0,
                                _0x283c7e = 1.5;
                            _0x4597c4['drawImage'](_0x2e7bc4, _0x1ee786 + _0x1b98bd * -_0x1c3dba, _0x3dfaef + _0x2c60ce * -_0x283c7e, _0x1b98bd, _0x2c60ce), _0x4597c4['restore']();
                        }
                        var _0x2e7bc4 = this['getSkinImageObj'](this['getWing']('pheasant', 0x2, !![]));
                        if (_0x2e7bc4) {
                            _0x4597c4['save']();
                            var _0x26d6d4 = -(-0.2 + _0x2e6742) * _0x4c4686(-0xf),
                                _0x2814f0 = this['rad'] * 0.8;
                            _0x4597c4['rotate'](_0x4c4686(-0xf) + _0x26d6d4);
                            var _0x1ee786 = 0x0,
                                _0x3dfaef = this['rad'],
                                _0x1b98bd = _0x2814f0 * 0x2 * 0.7,
                                _0x2c60ce = _0x2814f0 * 2.2,
                                _0x1c3dba = 0x1,
                                _0x283c7e = 1.5;
                            _0x4597c4['drawImage'](_0x2e7bc4, _0x1ee786 + _0x1b98bd * -_0x1c3dba, _0x3dfaef + _0x2c60ce * -_0x283c7e, _0x1b98bd, _0x2c60ce), _0x4597c4['restore']();
                        }
                        var _0x14b306 = this['getSkinImageObj'](this['getHead']('pheasant', !![]));
                        if (_0x14b306) {
                            _0x4597c4['save']();
                            var _0x2814f0 = this['rad'] * 0x1,
                                _0x518b3b = -this['rad'] * 0.1;
                            _0x4597c4['drawImage'](_0x14b306, -_0x2814f0 * _0x20fe45, -_0x2814f0 + _0x518b3b * _0x20fe45, 0x2 * _0x2814f0 * _0x20fe45, 0x2 * _0x2814f0 * _0x20fe45), _0x4597c4['restore']();
                        }
                        _0x4597c4['restore']();
                    }
                }
            }
        };

        function _0x56307b() {
            _0x56307b['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x56307b, _0x269668, _0x16c634);
        var _0x4d8447 = _0x5502af;
        _0x49eb42['prototype'] = Object['create'](_0x4d8447['prototype']), _0x49eb42['prototype']['constructor'] = _0x49eb42, _0x49eb42['superClass'] = _0x4d8447, _0x49eb42['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/flyinglizard' + (this['flag_usingAbility'] ? '_body' : '');
        }, _0x49eb42['prototype']['getSpeciesPath'] = function() {
            return 'forest/flyinglizard/' + this['animalSpecies'];
        }, _0x49eb42['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x49eb42['prototype']['animalInfo'] = function() {
            var _0x11f954 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x11f954['aniName'] = 'Flying Lizard!';
                    break;
            }
            return _0x11f954['skinName'] = this['getSkinName'](), _0x11f954['aniDesc'] = '', _0x11f954['upgradeText'] = 'UPGRADED to ' + _0x11f954['aniName'] + '!\x0aClimb on a high spot to be able to glide from it!', _0x11f954['aniCol'] = '#FF9D43', _0x11f954;
        }, _0x49eb42['prototype']['getAsset'] = function(_0x325331) {
            var _0x4c61a3 = 'skins/' + this['getSpeciesPath']() + '/flyinglizard';
            return _0x4c61a3 += '_' + _0x325331 + '.png', _0x4c61a3;
        }, _0x49eb42['prototype']['backOffset'] = -0.4, _0x49eb42['prototype']['armsOffset'] = 0.16, _0x49eb42['prototype']['headOffset'] = 0.3, _0x49eb42['prototype']['wingsOffset'] = -0.5, _0x49eb42['prototype']['wingsScale'] = 1.5, _0x49eb42['prototype']['backScale'] = 1.1, _0x49eb42['prototype']['drawSkinCustomization'] = function() {
            if (this['flag_usingAbility']) {
                var _0x17a8d0 = 0x1f4 / 0x154;
                this['drawAsset'](_0x17a8d0, 'arms', this['armsOffset']), this['drawAsset'](_0x17a8d0, 'wings', this['wingsOffset'], _0x17a8d0 * this['wingsScale']), this['drawAsset'](_0x17a8d0, 'back', this['backOffset'], _0x17a8d0 * this['backScale']), this['drawAsset'](_0x17a8d0, 'head', this['headOffset']);
            }
        }, _0x49eb42['prototype']['drawAsset'] = function(_0x3be135, _0x2d0dfc, _0x968043, _0x233394) {
            var _0x486d39 = this['getSkinImageObj'](this['getAsset'](_0x2d0dfc));
            if (_0x486d39) {
                if (_0x968043 === undefined) _0x968043 = 0x0;
                if (_0x233394 === undefined) _0x233394 = _0x3be135;
                _0x4597c4['save']();
                var _0x2b3841 = this['rad'];
                _0x4597c4['drawImage'](_0x486d39, -_0x2b3841 * _0x3be135, (-_0x2b3841 + _0x2b3841 * _0x968043) * _0x3be135, 0x2 * _0x2b3841 * _0x3be135, 0x2 * _0x2b3841 * _0x233394), _0x4597c4['restore']();
            }
        };

        function _0x49eb42() {
            _0x49eb42['superClass']['call'](this, _0x269668);
        }
        const _0x3ad8bb = 0x79;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x49eb42, _0x269668, _0x3ad8bb);
        var _0x4d8447 = _0x5502af;
        _0x59c59f['prototype'] = Object['create'](_0x4d8447['prototype']), _0x59c59f['prototype']['constructor'] = _0x59c59f, _0x59c59f['superClass'] = _0x4d8447, _0x59c59f['prototype']['getSpeciesPath'] = function(_0x24f565) {
            return 'forest/' + _0x24f565 + '/' + this['animalSpecies'];
        }, _0x59c59f['prototype']['animalInfo'] = function() {
            var _0x533cb0 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x533cb0['aniName'] = 'Tarsier!';
                    break;
            }
            return _0x533cb0['skinName'] = this['getSkinName'](), _0x533cb0['aniDesc'] = '', _0x533cb0['upgradeText'] = 'UPGRADED to ' + _0x533cb0['aniName'] + '!', _0x533cb0['aniCol'] = '#FF9D43', _0x533cb0;
        }, _0x59c59f['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/tarsier';
        }, _0x59c59f['prototype']['getSpeciesPath'] = function() {
            return 'forest/tarsier/' + this['animalSpecies'];
        }, _0x59c59f['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        };

        function _0x59c59f() {
            _0x59c59f['superClass']['call'](this, _0x269668);
        }
        const _0x984057 = 0x71;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x59c59f, _0x269668, _0x984057);
        var _0x4d8447 = _0x5502af;
        _0x2bdac5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2bdac5['prototype']['constructor'] = _0x2bdac5, _0x2bdac5['superClass'] = _0x4d8447, _0x2bdac5['prototype']['getSpeciesPath'] = function(_0x183f4d) {
            return 'forest/' + _0x183f4d + '/' + this['animalSpecies'];
        }, _0x2bdac5['prototype']['animalInfo'] = function() {
            var _0x30b235 = {};
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x30b235['aniName'] = 'Chukar!';
                    break;
            }
            return _0x30b235['skinName'] = this['getSkinName'](), _0x30b235['aniDesc'] = '', _0x30b235['upgradeText'] = 'UPGRADED to ' + _0x30b235['aniName'] + '!\x0a Hold W to fly around.', _0x30b235['aniCol'] = '#FF9D43', _0x30b235;
        }, _0x2bdac5['prototype']['getSkinName'] = function() {
            return this['getSpeciesPath']() + this['getSubSpecies']() + '/chukar' + (this['specType'] == 0x0 ? '' : this['specType']);
        }, _0x2bdac5['prototype']['getSpeciesPath'] = function() {
            return 'forest/chukar/' + this['animalSpecies'];
        }, _0x2bdac5['prototype']['getSubSpecies'] = function() {
            if (this['mopeSeasonID'] == 0x2) {
                if (this['animalSpecies'] === 0x0 && this['animalSubSpecies'] > 0x0) return '/' + this['animalSubSpecies'];
            }
            return '';
        }, _0x2bdac5['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) return;
            {
                var _0x5ac989 = 0x1f4 / 0x154;
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x4597c4['save']();
                    var _0x57ca63 = _0x38f4be('bird', this['spawnTime']);
                    _0x57ca63 !== undefined && _0x57ca63 != null && (this['theFrame'] = _0x57ca63);
                    var _0x32b829 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x140f1e = this['getSkinImageObj'](this['getAsset']('wing1'));
                    if (_0x140f1e) {
                        _0x4597c4['save']();
                        var _0x51094c = -(-0.2 + _0x32b829) * _0x197fc1,
                            _0x4335cc = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x31cf4b + _0x51094c);
                        var _0x50afee = 0x0,
                            _0x4861c6 = this['rad'],
                            _0x35dffa = _0x4335cc * 0x2 * 0.62,
                            _0x987887 = _0x4335cc * 2.5,
                            _0x20569a = 0.2,
                            _0x519851 = 1.7;
                        _0x4597c4['drawImage'](_0x140f1e, _0x50afee + _0x35dffa * -_0x20569a, _0x4861c6 + _0x987887 * -_0x519851, _0x35dffa, _0x987887), _0x4597c4['restore']();
                    }
                    var _0x140f1e = this['getSkinImageObj'](this['getAsset']('wing2'));
                    if (_0x140f1e) {
                        _0x4597c4['save']();
                        var _0x51094c = -(-0.2 + _0x32b829) * _0x4c4686(-0x5a),
                            _0x4335cc = this['rad'] * 0.8;
                        _0x4597c4['rotate'](_0x4c4686(-0x2d) + _0x51094c);
                        var _0x50afee = 0x0,
                            _0x4861c6 = this['rad'],
                            _0x35dffa = _0x4335cc * 0x2 * 0.62,
                            _0x987887 = _0x4335cc * 2.5,
                            _0x20569a = 0.8,
                            _0x519851 = 1.7;
                        _0x4597c4['drawImage'](_0x140f1e, _0x50afee + _0x35dffa * -_0x20569a, _0x4861c6 + _0x987887 * -_0x519851, _0x35dffa, _0x987887), _0x4597c4['restore']();
                    }
                    _0x4597c4['restore']();
                }
                if (this['specType'] != 0x0 && this['specType'] != undefined) {
                    var _0x2f09e7 = this['getSkinImageObj'](this['getAsset']('head'));
                    if (_0x2f09e7) {
                        _0x4597c4['save']();
                        var _0x4335cc = this['rad'];
                        _0x4597c4['drawImage'](_0x2f09e7, -_0x4335cc * _0x5ac989, (-_0x4335cc + _0x4335cc * 0.1) * _0x5ac989, 0x2 * _0x4335cc * _0x5ac989, 0x2 * _0x4335cc * _0x5ac989), _0x4597c4['restore']();
                    }
                }
            }
        }, _0x2bdac5['prototype']['getAsset'] = function(_0x68f1a8) {
            var _0x1e9399 = 'skins/' + this['getSpeciesPath']() + '/chukar';
            return _0x1e9399 += '_' + _0x68f1a8 + '.png', _0x1e9399;
        };

        function _0x2bdac5() {
            _0x2bdac5['superClass']['call'](this, _0x269668);
        }
        const _0x24a30e = 0x72;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2bdac5, _0x269668, _0x24a30e);
        var _0x4d8447 = _0x5d11ac;
        _0x3b4d0e['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3b4d0e['prototype']['constructor'] = _0x3b4d0e, _0x3b4d0e['superClass'] = _0x4d8447, _0x3b4d0e['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x3b4d0e['prototype']['customDraw'] = function(_0x423cc7) {
            var _0x26c064 = this['getSkinImageObj']('gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['speciesType'] + (this['isEdibleOutlined']() ? '_e' : '') + '.png');
            if (_0x26c064) {
                var _0x3b747b = this['rad'];
                _0x4597c4['drawImage'](_0x26c064, -_0x3b747b, -_0x3b747b, 0x2 * _0x3b747b, 0x2 * _0x3b747b);
            }
        };
        var _0x55256e = 0x9f;
        _0x3b4d0e['prototype']['readCustomData_onNewlyVisible'] = function(_0x3059c1) {
            _0x3b4d0e['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x3059c1), this['speciesType'] = _0x3059c1['readUInt16'](), this['speciesSubType'] = _0x3059c1['readUInt16']();
        };

        function _0x3b4d0e() {
            _0x3b4d0e['superClass']['call'](this, _0x55256e);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3b4d0e, _0x55256e);
        class _0x57b5c8 {
            static['list'] = [];
            constructor(_0x193250, _0x5d97e0) {
                this['x'] = _0x193250, this['y'] = _0x5d97e0, this['movingAngle'] = Math['random']() * Math['PI'] * 0x2, this['speed'] = (Math['random']() * 0x1 + 0.5) / 0xa, this['opacity'] = Math['random']() * 0.5 + 0.5, this['angle'] = 0x2 * Math['PI'] * Math['random'](), this['radius'] = 0x3 + Math['random']() * 0x9, this['path'] = './assets/s/1/gameobj/106/snow-flake.png';
            } ['animate'](_0x33a85c) {
                this['movingAngle'] += (Math['random']() - 0.5) * 0.02, this['x'] += Math['cos'](this['movingAngle']) * this['speed'] * _0x6039c * _0x33a85c, this['y'] += Math['sin'](this['movingAngle']) * this['speed'] * _0x6039c * _0x33a85c, this['angle'] += 0.001 * _0x33a85c;
                const _0x223fb2 = this['radius'] * _0x6039c;
                this['x'] -= _0x17b8da - _0x528115, this['y'] -= _0x59442b - _0x2d165a;
                if (this['x'] - _0x223fb2 > _0x1962dc['width']) this['x'] -= _0x1962dc['width'] + _0x223fb2;
                else this['x'] + _0x223fb2 < 0x0 && (this['x'] += _0x1962dc['width'] + _0x223fb2);
                if (this['y'] - _0x223fb2 > _0x1962dc['height']) this['y'] -= _0x1962dc['height'] + _0x223fb2;
                else this['y'] + _0x223fb2 < 0x0 && (this['y'] += _0x1962dc['height'] + _0x223fb2);
                const _0x2c783b = _0x5e7a48(this['path']);
                _0x2c783b && (_0x4597c4['globalAlpha'] = this['opacity'], _0x4597c4['translate'](this['x'], this['y']), _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x2c783b, -_0x223fb2, -_0x223fb2, _0x223fb2 * 0x2, _0x223fb2 * 0x2), _0x4597c4['rotate'](-this['angle']), _0x4597c4['translate'](-this['x'], -this['y']), _0x4597c4['globalAlpha'] = 0x1);
            }
        }

        function _0x44f8bc() {
            _0x57b5c8['list']['length'] = 0x0;
            for (let _0x54e499 = 0x0; _0x54e499 < _0xa81cb2; _0x54e499++) {
                const _0x44dd9c = Math['random']() * _0x1962dc['width'],
                    _0x4a47cc = Math['random']() * _0x1962dc['height'],
                    _0x32497d = new _0x57b5c8(_0x44dd9c, _0x4a47cc);
                _0x57b5c8['list']['push'](_0x32497d);
            }
        }
        var _0x4d8447 = _0x5d11ac;
        _0x2467c5['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2467c5['prototype']['constructor'] = _0x2467c5, _0x2467c5['prototype']['rAngle'] = 0x0, _0x2467c5['prototype']['rAngleF'] = 0.005, _0x2467c5['prototype']['rAngleDirection'] = 0x1, _0x2467c5['superClass'] = _0x4d8447, _0x2467c5['prototype']['updateZ'] = function() {
            if (this['isSnowFlake']) this['z'] = 0x2af8;
            else {
                if (this['isStickingOnObject']) this['z'] = 0x1 + this['stickingOnObjectZIndex'];
                else this['z'] = this['rad'];
            }
        }, _0x2467c5['prototype']['customDraw'] = function(_0x286734) {
            if (this['isSnowFlake']) {
                _0x4597c4['globalAlpha'] = 0.9, _0x4597c4['globalAlpha'] = 0x1;
                var _0x5bbb40 = 'gameobj/' + this['oType'] + '/snow-flake.png',
                    _0xa9860e = this['getSkinImageObj'](_0x5bbb40);
                if (_0xa9860e) {
                    _0x4597c4['save']();
                    var _0x1a44c9 = this['rad'] * 0x1;
                    this['rAngle'] += this['rAngleF'] * this['rAngleDirection'], _0x4597c4['rotate'](this['rAngle']), _0x4597c4['drawImage'](_0xa9860e, -_0x1a44c9, -_0x1a44c9, _0x1a44c9 * 0x2, _0x1a44c9 * 0x2), _0x4597c4['restore']();
                }
            } else {
                _0x4597c4['globalAlpha'] = 0x1;
                var _0x5bbb40 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '.png',
                    _0xa9860e = this['getSkinImageObj'](_0x5bbb40);
                if (_0xa9860e) {
                    _0x4597c4['save']();
                    var _0x1a44c9 = this['rad'] * 0x1;
                    _0x4597c4['rotate'](this['rPer'] * 0x2 * Math['PI']), _0x4597c4['drawImage'](_0xa9860e, -_0x1a44c9, -_0x1a44c9, _0x1a44c9 * 0x2, _0x1a44c9 * 0x2), _0x4597c4['restore']();
                }
            }
        }, _0x2467c5['prototype']['isSnowFlake'] = !![], _0x2467c5['prototype']['isStickingOnObject'] = ![], _0x2467c5['prototype']['stickingOnObjectZIndex'] = 0x0, _0x2467c5['prototype']['readUpdatedProperty'] = function(_0x58b160, _0x1f86de) {
            _0x2467c5['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x1f86de);
            if (_0x58b160 == _0x3e19ab) this['isSnowFlake'] = _0x1f86de['readUInt8']() == 0x1;
            else {
                if (_0x58b160 == _0x2ba3b2) this['isStickingOnObject'] = _0x1f86de['readUInt8']() == 0x1;
                else {
                    if (_0x58b160 == _0xd7f1b4) {
                        let _0x5a0176 = _0x1f86de['readUInt32'](),
                            _0xdd8d43 = _0x4b4e0c[_0x5a0176];
                        if (_0xdd8d43) this['stickingOnObjectZIndex'] = _0xdd8d43['z'];
                    }
                }
            }
        }, _0x2467c5['prototype']['readCustomData_onNewlyVisible'] = function(_0x13fc95) {
            this['readUpdatedProperty'](_0x3e19ab, _0x13fc95), this['readUpdatedProperty'](_0x2ba3b2, _0x13fc95), this['readUpdatedProperty'](_0xd7f1b4, _0x13fc95);
        };

        function _0x2467c5() {
            _0x2467c5['superClass']['call'](this, _0x33b0a2), this['rAngleDirection'] = _0x4ec95c(0x0, 0x1) == 0x0 ? 0x1 : -0x1;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2467c5, _0x33b0a2);
        var _0x4d8447 = _0x5d11ac;
        _0x2a44ff['prototype'] = Object['create'](_0x4d8447['prototype']), _0x2a44ff['prototype']['constructor'] = _0x2a44ff, _0x2a44ff['superClass'] = _0x4d8447, _0x2a44ff['prototype']['foodType'] = 0x0, _0x2a44ff['prototype']['updateZ'] = function() {
            this['z'] = this['rad'];
        }, _0x2a44ff['prototype']['customDraw'] = function(_0x459c48) {
            _0x4597c4['save']();
            var _0x4c2a50 = 'gameobj/' + this['oType'] + '/' + this['oType'] + '_' + this['foodType'] + '' + (this['isEdibleOutlined']() ? '_e' : '') + '.png',
                _0x38ffad = this['getSkinImageObj'](_0x4c2a50);
            if (_0x38ffad) {
                var _0x468111 = this['rad'];
                _0x4597c4['save'](), _0x4597c4['rotate'](this['rPer'] * 0.5 * Math['PI'] * 0x2), _0x4597c4['drawImage'](_0x38ffad, -_0x468111, -_0x468111, 0x2 * _0x468111, 0x2 * _0x468111), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x2a44ff['prototype']['readCustomData_onNewlyVisible'] = function(_0x3033b7) {
            this['foodType'] = _0x3033b7['readUInt8']();
        };
        var _0x53f26d = 0xa0;

        function _0x2a44ff() {
            _0x2a44ff['superClass']['call'](this, _0x53f26d), this['doesDrawEffectScale'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x2a44ff, _0x53f26d);
        var _0x4d8447 = _0x5d11ac;
        _0xae3ff7['prototype'] = Object['create'](_0x4d8447['prototype']), _0xae3ff7['prototype']['constructor'] = _0xae3ff7, _0xae3ff7['superClass'] = _0x4d8447, _0xae3ff7['prototype']['updateZ'] = function() {
            this['z'] = 0xf4240;
        }, _0xae3ff7['prototype']['customDraw'] = function(_0x48be23) {
            console['log']('sand storm created...'), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.4, _0x4096ce(0x0, 0x0, this['rad'], '#000'), _0x4597c4['restore']();
        }, _0xae3ff7['prototype']['readCustomData_onNewlyVisible'] = function(_0x2bb7e1) {
            this['alpha'] = _0x2bb7e1['readUInt8']() / 0x64;
        }, _0xae3ff7['prototype']['readUpdatedProperty'] = function(_0x327437, _0x5b580f) {
            _0x327437 == _0x297759 && (this['alpha'] = _0x5b580f['readUInt8']() / 0x64);
        };
        const _0x2b7c17 = 0xa1;

        function _0xae3ff7() {
            _0xae3ff7['superClass']['call'](this, _0x2b7c17), this['alpha'] = 0x9;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0xae3ff7, _0x2b7c17);
        var _0x498438 = _0x164b63,
            _0x4d8447 = _0x5d11ac;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x164b63['prototype']['customDraw'] = function(_0x16d739) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0x1, _0x4096ce(0x0, 0x0, this['rad'], this['color']), _0x4597c4['restore']();
        }, _0x164b63['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 + this['rad'];
        };
        const _0x506a1c = 0xa2;

        function _0x164b63() {
            _0x164b63['superClass']['call'](this), this['color'] = _0x4ec95c(0x0, 0x1) == 0x1 ? '#D2B48C' : '#F0E68C', this['spawnTime'] = _0x476319;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x164b63, _0x506a1c);
        var _0x4d8447 = _0x5502af;
        _0x39ffdc['prototype'] = Object['create'](_0x4d8447['prototype']), _0x39ffdc['prototype']['constructor'] = _0x39ffdc, _0x39ffdc['superClass'] = _0x4d8447, _0x39ffdc['prototype']['getSkinName'] = function() {
            var _0x119ffb = this['getSpeciesPath']('land/birdmonster') + '/birdmonster';
            return _0x119ffb += this['specType'] == 0x0 ? '' : this['specType'], _0x119ffb;
        }, _0x39ffdc['prototype']['animalInfo'] = function() {
            var _0x1a5667 = {},
                _0x18f691 = '';
            switch (this['animalSpecies']) {
                case 0x0:
                    _0x1a5667['aniName'] = 'Bird Monster';
                    break;
            }
            _0x1a5667['upgradeText'] = 'UPGRADED to ' + _0x1a5667['aniName'] + '! \x0aPress W to Fly, and do a powerful Electro Swoop attack! Aim it well.\x0aPress S to create Gale charge and Electro Tornado' + _0x18f691, _0x1a5667['aniCol'] = '#FF9000';
            var _0x4c6406 = '' + (this['specType'] == 0x0 ? '' : this['specType']);
            if (this['specType2'] == 0x4) _0x4c6406 += '4';
            return _0x1a5667['skinName'] = 'land/birdmonster/' + this['animalSpecies'] + '/birdmonster' + _0x4c6406, _0x1a5667;
        }, _0x39ffdc['prototype']['getWing'] = function(_0x432336, _0x31caa0, _0x3b0ea6) {
            _0x3b0ea6 = !![];
            var _0x31052c = 'skins/land/' + (_0x3b0ea6 ? this['getSpeciesPath'](_0x432336) + '/' : _0x432336 + '/');
            return _0x31052c += _0x432336 + '_wing' + _0x31caa0 + '.png', _0x31052c;
        }, _0x39ffdc['prototype']['getHead'] = function(_0x3932f3, _0x1714cc, _0x514006) {
            _0x514006 = !![], headType = this['specType'];
            if (this['specType2'] == 0x1) headType = 0x4;
            var _0x328d2d = 'skins/land/' + (_0x514006 ? this['getSpeciesPath'](_0x3932f3) + '/' : _0x3932f3 + '/');
            return _0x328d2d += _0x3932f3 + '_head' + headType + '.png', _0x328d2d;
        }, _0x39ffdc['prototype']['getWindImage'] = function(_0x3731c0) {
            hasSpecies = !![];
            var _0x4a46c6 = 'skins/land/' + (hasSpecies ? this['getSpeciesPath']('birdmonster') + '/' : 'birdmonster/');
            return _0x4a46c6 += 'tailwind/' + _0x3731c0 + '.png', _0x4a46c6;
        }, _0x39ffdc['prototype']['getElectroChargeImage'] = function(_0x2d4a4a) {
            hasSpecies = !![];
            var _0x20fec9 = 'skins/land/' + (hasSpecies ? this['getSpeciesPath']('birdmonster') + '/' : 'birdmonster/');
            return _0x20fec9 += 'charge/' + _0x2d4a4a + '.png', _0x20fec9;
        }, _0x39ffdc['prototype']['getAbilityInfo'] = function(_0x5e0239) {
            var _0x5b8013 = {};
            return _0x5b8013['abilName'] = 'Electro Swoop & Gale Charge', _0x5b8013['abilImg'] = 'skins/land/birdmonster/0/birdmonster_ability.png', _0x5b8013['speciesType'] = this['animalSpecies'], _0x5b8013['skinThemeID'] = this['skinThemeID'], _0x5b8013['mopeSeasonID'] = this['mopeSeasonID'], _0x5b8013;
        };
        var _0x25b605 = 0x14,
            _0x4e9ab4 = 0x1,
            _0x13ae85 = 0x1,
            _0xd75dea = 0x0,
            _0x2c2416 = undefined;
        _0x39ffdc['prototype']['drawTopEffects'] = function() {
            _0x39ffdc['superClass']['prototype']['drawTopEffects']['call'](this), this['drawElectroChargeEffect']();
        }, _0x39ffdc['prototype']['drawSkinCustomization'] = function() {
            if (!this['flag_usingAbility']) {
                _0x2c2416 = undefined;
                return;
            }
            var _0x2fa69d = 0x1f4 / 0x154;
            if (!this['flag_flying']) {
                var _0x2739bb = _0x38f4be('bird', this['spawnTime']);
                _0x2739bb !== undefined && _0x2739bb != null && (this['theFrame'] = _0x2739bb);
                var _0x1dd123 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                    _0x26d941 = this['rad'] * _0x4f869d;
                _0x5c8879 = -0.2, _0x17e134 = 1.4, _0x13ae85 = 0.25;
                var _0x33273b = 0x10e,
                    _0x4a6c89 = 0x6,
                    _0x17c23c = 0x0;
                if (_0x2c2416 == undefined) _0x2c2416 = _0x476319;
                else {
                    let _0x43cfa6 = (_0x476319 - _0x2c2416) / 0x3e8;
                    _0x17c23c = _0x43cfa6 / _0x4a6c89 * _0x33273b;
                }
                _0x17c23c > _0x33273b && (_0x17c23c = _0x33273b);
                var _0x199024, _0x5cb860, _0x325589;
                _0x199024 = _0x4c4686(_0x17c23c), _0x5cb860 = 0x0, _0x325589 = !![], this['drawImageCustom']('birdmonster', 0xd, _0x1dd123, _0x26d941, _0x199024, _0x5cb860, _0x325589), this['drawImageCustom']('birdmonster', 0x17, _0x1dd123, _0x26d941, -_0x199024, 0x1, _0x325589);
            } else {
                if (this['flag_flying'] && !this['flag_isGrabbed']) {
                    _0x25b605 = 0x14, _0x4e9ab4 = 0x1, _0x13ae85 = 0x1, _0xd75dea = 0x0;
                    var _0x2739bb = _0x38f4be('bird', this['spawnTime']);
                    _0x2739bb !== undefined && _0x2739bb != null && (this['theFrame'] = _0x2739bb);
                    var _0x1dd123 = !(_0x3aa021 == _0x243dd0 || _0x9ffe4d) ? this['theFrame'] : this['birdNoAnimationFlyWingAngle'],
                        _0x26d941 = this['rad'] * _0x4f869d,
                        _0x199024, _0x5cb860, _0x325589;
                    if (this['specType'] == 0x1) _0x4e9ab4 = 1.1, _0x13ae85 = 0.25, _0xd75dea = 0xb4, _0x199024 = _0x4c4686(0x3c + _0xd75dea), _0x5cb860 = 0x0, _0x325589 = ![];
                    else {
                        if (this['specType'] == 0x2) _0x1dd123 = 0x0, _0x199024 = _0x4c4686(0x19), _0x5cb860 = 0x0, _0x325589 = ![];
                        else this['specType'] == 0x3 && (_0x199024 = _0x4c4686(0x2d), _0x5cb860 = 0x0, _0x325589 = !![]);
                    }
                    this['drawImageCustom']('birdmonster', 0x1, _0x1dd123, _0x26d941, _0x199024, _0x5cb860, _0x325589), this['drawImageCustom']('birdmonster', 0x2, _0x1dd123, _0x26d941, -_0x199024, 0x1, _0x325589);
                }
            }
            if (this['specType'] != 0x0 && this['specType'] != undefined) {
                var _0x1af6e2 = this['getSkinImageObj'](this['getHead']('/birdmonster', !![]));
                if (_0x1af6e2) {
                    var _0x179f16 = 0.9;
                    _0x4597c4['save']();
                    var _0x26d941 = this['rad'] * _0x179f16,
                        _0x245e61 = _0x26d941 * _0x5c8879;
                    _0x4597c4['drawImage'](_0x1af6e2, -_0x26d941 * _0x2fa69d, (-_0x26d941 + _0x245e61) * _0x2fa69d, 0x2 * _0x26d941 * _0x2fa69d, 0x2 * _0x26d941 * _0x2fa69d), _0x4597c4['restore']();
                }
            }
        }, _0x39ffdc['prototype']['flag_eff_electroCharged'] = ![], _0x39ffdc['prototype']['drawElectroChargeEffect'] = function() {
            if (this['flag_eff_electroCharged'] === !![]) {
                var _0x17da79 = Math['trunc'](_0x476319 / 0xfa) % 0x4,
                    _0x156b06 = this['getSkinImageObj'](this['getElectroChargeImage'](_0x17da79));
                if (_0x156b06) {
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x59b0bc == this['id'] ? 0.7 : 0x1;
                    var _0x27c50f = this['rad'] * 1.2;
                    _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x156b06, -_0x27c50f, -_0x27c50f, 0x2 * _0x27c50f, 0x2 * _0x27c50f), _0x4597c4['restore']();
                }
            }
        }, _0x39ffdc['prototype']['drawImageCustom'] = function(_0x3cebe1, _0x4a6988, _0x346389, _0x495b77, _0x583c56, _0x9bddc9, _0x4134a9) {
            var _0x527957 = this['getSkinImageObj'](this['getWing'](_0x3cebe1, _0x4a6988, _0x4134a9));
            if (_0x527957) {
                _0x4597c4['save'](), _0x583c56 = -(-0.2 + _0x346389 * _0x13ae85) * _0x583c56, _0x4597c4['rotate'](_0x583c56 * _0x4e9ab4);
                var _0x1d6d62 = 0x0,
                    _0xb6df49 = this['rad'],
                    _0x422114 = _0x495b77 * 0x2 * _0x4f869d,
                    _0x2e0bc9 = _0x495b77 * 2.5,
                    _0x469153 = _0x17e134;
                _0x4597c4['drawImage'](_0x527957, _0x1d6d62 + _0x422114 * -_0x9bddc9, _0xb6df49 + _0x2e0bc9 * -_0x469153, _0x422114, _0x2e0bc9), _0x4597c4['restore']();
            }
        };
        var _0x17e134 = 1.5,
            _0x4f869d = 0.8,
            _0x538ecb = 0x1,
            _0x561908 = 1.6;
        _0x39ffdc['prototype']['basicDrawSkinImg'] = function() {
            this['setSkinScale']();
            var _0x163038 = this['skinScale'],
                _0x482817 = this['getAniRadius'](this['skinRad']),
                _0x2e2ea3 = 0.5,
                _0x2652d8 = 0.8,
                _0x2d760f = 1.2;
            this['loadedSkinImg'] && _0x4597c4['drawImage'](this['loadedSkinImg'], -_0x482817 - _0x482817 * _0x2e2ea3, -_0x482817 - _0x482817 * _0x2652d8, 0x2 * _0x482817 * _0x163038, 0x2 * _0x482817 * (_0x163038 * _0x2d760f));
        }, _0x39ffdc['prototype']['drawUnderSkinImgOutline'] = function() {
            _0x39ffdc['superClass']['prototype']['drawUnderSkinImgOutline']['call'](this);
            if (this['flag_usingAbility'] && this['flag_flying'] && this['specType'] == 0x2) {
                var _0xce5bf0 = 0x0,
                    _0x15a620 = -0x2,
                    _0x5b30c3 = 0x1,
                    _0x5deb19 = 0x2,
                    _0x33e718 = 0x1 + Math['trunc'](_0x476319 / 0x78) % 0x5,
                    _0x1cd5e8 = this['getSkinImageObj'](this['getWindImage'](_0x33e718));
                if (_0x1cd5e8) {
                    _0x4597c4['save']();
                    var _0x3890e7 = this['rad'] * _0x5b30c3,
                        _0x272c5e = _0x3890e7 * _0x15a620,
                        _0xd97e3 = _0x3890e7 * _0xce5bf0;
                    _0x4597c4['drawImage'](_0x1cd5e8, -_0x3890e7 + _0xd97e3, -_0x3890e7 + _0x272c5e * _0x5deb19, 0x2 * _0x3890e7, 0x2 * _0x3890e7 * _0x5deb19), _0x4597c4['restore']();
                }
            }
        }, _0x39ffdc['prototype']['customUpdatedProperty'] = function(_0x1d7fe1, _0x3305dd) {
            if (_0x1d7fe1 == _0x2b7b17) this['flag_eff_electroCharged'] = _0x3305dd['readUInt8']() == 0x1;
            else {
                if (_0x1d7fe1 == _0x507deb) {
                    var _0x48103f = this['activeAbility'];
                    this['activeAbility'] = _0x3305dd['readUInt16'](), _0x48103f != this['activeAbility'] && this['onAbilityChanged'](_0x48103f);
                }
            }
        };
        var _0x5c8879 = 0.3;
        _0x39ffdc['prototype']['activeAbility'] = 0x0, _0x39ffdc['prototype']['onAbilityChanged'] = function(_0x35b3c8) {
            console['log']('prev ability: ' + _0x35b3c8), console['log']('curr ability: ' + this['activeAbility']), this['activeAbility'] == 0x0 && (_0x5c8879 = 0.3, _0x17e134 = 1.5, _0x4f869d = 0.8, _0x538ecb = 0x1, _0x561908 = 1.6);
        }, _0x39ffdc['prototype']['readCustomData_onNewlyVisible'] = function(_0x389ba2) {
            _0x39ffdc['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x389ba2), this['customUpdatedProperty'](_0x2b7b17, _0x389ba2);
        };

        function _0x39ffdc() {
            _0x39ffdc['superClass']['call'](this, _0x269668);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x39ffdc, _0x269668, a_birdMonster);
        var _0x498438 = _0x55e719,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x55e719['prototype']['customDraw'] = function(_0x3a0f21) {
            _0x4597c4['save']();
            var _0x2ec641 = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = 0.05 * _0x2ec641, _0x4096ce(0x0, 0x0, this['rad'], '#E4E7C8');
            var _0xe16c41 = 'crater' + this['curBiome'];
            console['log']('birdmonster crater: ' + _0xe16c41), _0x4597c4['globalAlpha'] = 0x1 * _0x2ec641;
            var _0x17774b = 'skins/land/birdmonster/' + this['speciesType'] + '/' + _0xe16c41 + '.png',
                _0x2f845d = this['getSkinImageObj'](_0x17774b);
            if (_0x2f845d) {
                _0x4597c4['save']();
                var _0x24ad21 = this['rad'];
                _0x4597c4['drawImage'](_0x2f845d, -_0x24ad21, -_0x24ad21, 0x2 * _0x24ad21, 0x2 * _0x24ad21), _0x4597c4['restore']();
            }
            _0x4597c4['restore']();
        }, _0x55e719['prototype']['getSkinImageObj'] = function(_0x54a17f) {
            var _0xf3ceb6 = this['speciesType'] === 0x1 || this['speciesType'] === 0x2 || this['speciesType'] === 0xc9 ? 0x1 : 0x2,
                _0x21c3eb = './assets/s/' + _0xf3ceb6 + '/' + _0x54a17f;
            return this['skinThemeID'] > 0x0 && (_0x21c3eb = './assets/t/' + this['skinThemeID'] + '/' + _0x54a17f), _0x5e7a48(_0x21c3eb, function(_0x2cb045) {
                console['log'](_0x2cb045['src']);
            });
        }, _0x55e719['prototype']['readCustomData_onNewlyVisible'] = function(_0x108b40) {
            _0x55e719['superClass']['prototype']['readCustomData_onNewlyVisible']['call'](this, _0x108b40);
        }, _0x55e719['prototype']['readCustomData_onUpdate'] = function(_0x831358) {
            _0x55e719['superClass']['prototype']['readCustomData_onUpdate']['call'](this, _0x831358);
        };

        function _0x55e719() {
            _0x55e719['superClass']['call'](this);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x55e719, _0x4fbd16, _0x29a840);
        var _0x4d8447 = _0x5d11ac;
        _0x556ddc['prototype'] = Object['create'](_0x4d8447['prototype']), _0x556ddc['prototype']['constructor'] = _0x556ddc, _0x556ddc['superClass'] = _0x4d8447, _0x556ddc['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 + this['rad'];
        }, _0x556ddc['prototype']['customDraw'] = function(_0x3566e1) {
            var _0x2f4f51 = 'skins/land/birdmonster/' + this['speciesType'] + '/tornado.png',
                _0x269310 = this['getSkinImageObj'](_0x2f4f51);
            if (_0x269310) {
                var _0x160a5d = this['rad'] * 1.1;
                if (!_0x9ffe4d && !(_0x3aa021 == _0x243dd0)) {
                    var _0x533484 = 0x3c / 0x3c,
                        _0x5a3b22 = 0x3e8 / _0x533484,
                        _0x4016ec = (_0x476319 - this['spawnTime']) % _0x5a3b22 / _0x5a3b22,
                        _0x33b4fe = _0x4016ec * 0x2 * Math['PI'],
                        _0x533484 = 0x1e / 0x3c,
                        _0x5a3b22 = 0x3e8 / _0x533484,
                        _0x4016ec = (_0x476319 - this['spawnTime']) % _0x5a3b22 / _0x5a3b22,
                        _0x16bb72 = _0x4016ec * 0x2 * Math['PI'];
                    _0x4597c4['save'](), _0x4597c4['rotate'](_0x33b4fe);
                    var _0x41c7e4 = _0x4597c4['globalAlpha'];
                    _0x4597c4['globalAlpha'] = 0x1 * _0x41c7e4;
                    var _0x3534c4 = (_0x476319 - this['spawnTime']) / 0x3e8,
                        _0x1489f9 = 2.2,
                        _0x5d75e5 = 6.5 * Math['cos'](0x2 * Math['PI'] / _0x1489f9 * _0x3534c4),
                        _0x29e13a = 6.5 * Math['sin'](0x2 * Math['PI'] / _0x1489f9 * _0x3534c4);
                    _0x4597c4['globalAlpha'] = 0.3, _0x4597c4['drawImage'](_0x269310, -_0x160a5d - _0x5d75e5 / 2.2, -_0x160a5d, 0x2 * _0x160a5d, 0x2 * _0x160a5d), _0x4597c4['restore'](), _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.7, _0x4597c4['rotate'](_0x16bb72), _0x4597c4['drawImage'](_0x269310, -_0x160a5d - _0x5d75e5 / 2.2, -_0x160a5d, 0x2 * _0x160a5d, 0x2 * _0x160a5d), _0x4597c4['restore']();
                } else _0x4597c4['save'](), _0x4597c4['globalAlpha'] = 0.7, _0x4597c4['drawImage'](_0x269310, -_0x160a5d, -_0x160a5d, 0x2 * _0x160a5d, 0x2 * _0x160a5d), _0x4597c4['restore']();
            }
        };
        const _0x5314fd = 0xa3;

        function _0x556ddc() {
            _0x556ddc['superClass']['call'](this, _0x5314fd), this['doesDrawEffectScale'] = ![], this['drawEffectScale_Slow'] = !![];
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x556ddc, _0x5314fd);
        var _0x4d8447 = _0x5d11ac;
        _0x13d5c0['prototype'] = Object['create'](_0x4d8447['prototype']), _0x13d5c0['prototype']['constructor'] = _0x13d5c0, _0x13d5c0['superClass'] = _0x4d8447, _0x13d5c0['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 + this['rad'];
        }, _0x13d5c0['prototype']['customDraw'] = function(_0x4cb088) {
            var _0x5a8bd3 = 'skins/land/birdmonster/' + this['speciesType'] + '/electric-charge.png',
                _0x167440 = this['getSkinImageObj'](_0x5a8bd3);
            if (_0x167440) {
                _0x4597c4['save']();
                var _0x327937 = this['rad'] * 0x1;
                _0x4597c4['rotate'](this['angle']), _0x4597c4['drawImage'](_0x167440, -_0x327937, -_0x327937, _0x327937 * 0x2, _0x327937 * 0x2), _0x4597c4['restore']();
            }
        };
        const _0x91c008 = 0xa4;

        function _0x13d5c0() {
            _0x13d5c0['superClass']['call'](this, _0x91c008);
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x13d5c0, _0x91c008);
        var _0x498438 = _0x1246bd,
            _0x4d8447 = _0x23ae7e;
        _0x498438['prototype'] = Object['create'](_0x4d8447['prototype']), _0x498438['prototype']['constructor'] = _0x498438, _0x498438['superClass'] = _0x4d8447, _0x1246bd['prototype']['customDraw'] = function(_0x3279e8) {
            _0x4597c4['save'](), _0x4597c4['rotate'](this['angle']);
            var _0x2c33ba = _0x4597c4['globalAlpha'];
            _0x4597c4['globalAlpha'] = this['alpha'] < 0.7 ? this['alpha'] : 0.7;
            var _0x52833a = 'skins/land/birdmonster/' + this['speciesType'] + '/wind.png',
                _0x4edcb6 = this['getSkinImageObj'](_0x52833a);
            if (_0x4edcb6) {
                var _0x3bc00b = this['rad'] * 1.25;
                _0x4597c4['drawImage'](_0x4edcb6, -_0x3bc00b, -_0x3bc00b, 0x2 * _0x3bc00b, 0x2 * _0x3bc00b);
            }
            _0x4597c4['restore']();
        }, _0x1246bd['prototype']['updateZ'] = function() {
            this['z'] = 0x2710 - this['rad'];
        }, _0x1246bd['prototype']['readCustomData_onNewlyVisible'] = function(_0x3d91d3) {
            this['alpha'] = _0x3d91d3['readUInt8']() / 0x64;
        }, _0x1246bd['prototype']['readUpdatedProperty'] = function(_0x22cdf5, _0x21de97) {
            _0x22cdf5 == _0x297759 && (this['alpha'] = _0x21de97['readUInt8']() / 0x64);
        };

        function _0x1246bd() {
            _0x1246bd['superClass']['call'](this), this['spawnTime'] = _0x476319, this['alpha'] = 0x0;
        }
        _0x5ddf8d['setCustomClassForGameObjType'](_0x1246bd, _0x4fbd16, _0x577722);
        var _0x4d8447 = _0x5d11ac;
        _0x3d7479['prototype'] = Object['create'](_0x4d8447['prototype']), _0x3d7479['prototype']['constructor'] = _0x3d7479, _0x3d7479['superClass'] = _0x4d8447, _0x3d7479['prototype']['lookAngle'] = 0x0, _0x3d7479['prototype']['frameNumber'] = 0x0, _0x3d7479['prototype']['isRolling'] = ![], _0x3d7479['prototype']['biomeType'] = ![], _0x3d7479['prototype']['updateZ'] = function() {
            this['z'] = 0x3ea;
        }, _0x3d7479['prototype']['customDraw'] = function(_0x469edd) {
            var _0x3914b6 = this['rad'] - 0xa,
                _0x25a33d = 0x1,
                _0x2d6334 = 0.15,
                _0x406e4e = 0.8,
                _0x344b7b = 0.5 * (_0x406e4e - _0x2d6334),
                _0x13f9a4 = _0x2d6334 + _0x344b7b + _0x344b7b * Math['sin'](0x2 * Math['PI'] / _0x25a33d * (_0x476319 / 0x3e8)),
                _0x25a33d = 0x1,
                _0x2d6334 = 0.85,
                _0x406e4e = 0x1,
                _0x344b7b = 0.5 * (_0x406e4e - _0x2d6334),
                _0x241447 = 0x1;
            if (this['isRolling']) this['frameNumber'] = Math['trunc'](_0x476319 / 0xa6) % 0x6;
            var _0x1ced56 = 'gameobj/' + this['oType'] + '/' + this['biomeType'] + '/' + this['frameNumber'] + '.png',
                _0x47e4c8 = this['getSkinImageObj'](_0x1ced56);
            if (_0x47e4c8) {
                var _0x23941d = 0x0,
                    _0xd864c7 = this['rad'],
                    _0x5d6539 = this['rad'] * 2.5;
                imH = this['rad'] * 2.5;
                var _0x41f8f2 = 0.5,
                    _0x3bfdf7 = 0.95;
                _0x4597c4['save']();
                {
                    _0x4597c4['globalAlpha'] *= this['onFireEffA'] * _0x241447, _0x4597c4['rotate'](this['angle'] + _0x11f699), _0x4597c4['drawImage'](_0x47e4c8, _0x23941d + _0x5d6539 * -_0x41f8f2, _0xd864c7 + imH * -_0x3bfdf7, _0x5d6539, imH);
                }
                _0x4597c4['restore']();
            }
        }, _0x3d7479['prototype']['isFloating'] = ![], _0x3d7479['prototype']['isRolling'] = ![], _0x3d7479['prototype']['readUpdatedProperty'] = function(_0xe92969, _0x4d7f15) {
            if (_0xe92969 == _0x21a49b) this['isFloating'] = _0x4d7f15['readUInt8']() == 0x1;
            else _0xe92969 == _0x26362d && (this['isRolling'] = _0x4d7f15['readUInt8']() == 0x1);
        }, _0x3d7479['prototype']['readCustomData_onNewlyVisible'] = function(_0x42b6b7) {
            this['biomeType'] = _0x42b6b7['readUInt8'](), this['isRolling'] = _0x42b6b7['readUInt8']() == 0x1, this['isFloating'] = _0x42b6b7['readUInt8']() == 0x1;
        };

        function _0x3d7479() {
            _0x3d7479['superClass']['call'](this, _0x19bbbc), this['lookAngle'] = 0x0, this['isRolling'] = ![], this['biomeType'] = ![], this['doesDrawEffectScale'] = !![], this['drawEffectScale_Slow'] = !![];
        }
        var _0x19bbbc = 0xa5;
        _0x5ddf8d['setCustomClassForGameObjType'](_0x3d7479, _0x19bbbc);
        var _0x17c9c6 = 0x0;

        function _0x4bdc5f() {
            var _0x89fae2 = _0x45e583('audio/click.mp3');
            if (_0x89fae2) try {
                _0x89fae2['play']();
            } catch (_0x28dd24) {}
        }
        _0x45e583('audio/click.mp3'), _0x3cf313(), _0x16b8e3(), _0x44f8bc();
        var _0x3a9e42 = [];

        function _0x15b198(_0x1ea387) {
            switch (_0x1ea387) {
                case _0x42de22:
                case _0x15fc30:
                case _0x143978:
                case _0x1bd8a6:
                case _0xb784fc:
                case _0x38ce4f:
                case _0x2330c7:
                case _0x20c79b:
                case _0x45adaa:
                case _0x3a3371:
                case _0x37809d:
                case _0x5881fa:
                case _0x11d9f2:
                case _0x4483fc:
                case _0x38156b:
                case _0x3861b2:
                case _0x4018aa:
                case _0x302526:
                case _0x1a14e4:
                case _0x37a564:
                case _0x22d2e2:
                case _0x1c0d9b:
                    return !![];
            }
            return ![];
        }
        var _0x2d5348 = null,
            _0x23c905 = null;
        const _0x46d14e = function(_0x2bc071) {
                var _0x2a5488 = _0x2bc071['readBitGroup'](),
                    _0x1e10d9 = _0x2a5488['getBool']();
                if (_0x1e10d9) {
                    var _0x4d3dce = _0x2a5488['getBool']();
                    if (_0x4d3dce) {
                        vID = _0x2bc071['readUInt32']();
                        _0x23c905 == null && (_0x23c905 = {
                            'id': vID
                        }, _0x23c905['_ox'] = _0x23c905['X'] = _0x23c905['_nx'] = 0x0, _0x23c905['_oy'] = _0x23c905['Y'] = _0x23c905['_ny'] = 0x0);
                        var _0x5d3d83 = _0x2bc071['readUInt32']() / 0x64,
                            _0x4ec23f = _0x2bc071['readUInt32']() / 0x64;
                        _0x23c905['_ox'] = _0x23c905['X'], _0x23c905['_oy'] = _0x23c905['Y'], _0x23c905['_nx'] = _0x5d3d83, _0x23c905['_ny'] = _0x4ec23f;
                    } else _0x23c905 = null;
                } else _0x23c905 = null;
            },
            _0x346044 = function() {
                var _0x4b45fd = _0x4b4e0c[_0x59b0bc];
                if (_0x23c905 == null || !_0x4b45fd) return;
                _0x243038(), _0x4597c4['save'](), _0x4597c4['strokeStyle'] = 'white', _0x4597c4['globalAlpha'] = 0x1, _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x4b45fd['x'], _0x4b45fd['y']), _0x4597c4['lineTo'](_0x23c905['X'], _0x23c905['Y']), _0x4597c4['stroke'](), _0x4597c4['restore']();
            },
            _0x243038 = function() {
                var _0x37eabd = 0.1;
                _0x23c905['X'] = _0x37eabd * (_0x23c905['_nx'] - _0x23c905['_ox']) + _0x23c905['_ox'], _0x23c905['Y'] = _0x37eabd * (_0x23c905['_ny'] - _0x23c905['_oy']) + _0x23c905['_oy'];
            };
        var _0x5a3ee1 = new Array();
        const _0x3575a0 = function(_0x3c3983) {
                var _0x4f7d24 = _0x3c3983['readUInt8']();
                _0x5a3ee1 = new Array();
                for (i = 0x0; i < _0x4f7d24; i++) {
                    var _0x120594 = _0x3c3983['readUInt16'](),
                        _0x464eea = _0x3c3983['readUInt8']();
                    if (_0x464eea > 0x0)
                        for (s = 0x0; s < _0x464eea; s++) {
                            var _0x3bb239 = _0x3c3983['readUInt16']() / 0x4,
                                _0x41c1ed = _0x3c3983['readUInt16']() / 0x4;
                            if (_0x120594 == _0x5bce71) {
                                var _0x210c3f = _0x3c3983['readUInt8']() == 0x1,
                                    _0x233699 = _0x3c3983['readUInt8']();
                                _0x5a3ee1['push']({
                                    'oType': _0x120594,
                                    'specType': _0x233699,
                                    'x': _0x3bb239,
                                    'y': _0x41c1ed,
                                    'rad': 0x2,
                                    'droppedInHole': _0x210c3f
                                });
                            } else {
                                if (_0x120594 == _0x5e6d33) {
                                    var _0x233699 = _0x3c3983['readUInt8']();
                                    _0x5a3ee1['push']({
                                        'oType': _0x120594,
                                        'specType': _0x233699,
                                        'x': _0x3bb239,
                                        'y': _0x41c1ed,
                                        'rad': 0x2
                                    });
                                } else _0x5a3ee1['push']({
                                    'oType': _0x120594,
                                    'x': _0x3bb239,
                                    'y': _0x41c1ed,
                                    'rad': 0x2
                                });
                            }
                        }
                }
                var _0x464eea = _0x3c3983['readUInt8']();
                for (s = 0x0; s < _0x464eea; s++) {
                    var _0x331c58 = _0x3c3983['readUInt16'](),
                        _0x113294 = _0x3c3983['readUInt16']() / 0x4,
                        _0x3bb239 = _0x3c3983['readUInt16']() / 0x4,
                        _0x41c1ed = _0x3c3983['readUInt16']() / 0x4;
                    _0x5a3ee1['push']({
                        'oType': _0x4fbd16,
                        'abil': _0x331c58,
                        'x': _0x3bb239,
                        'y': _0x41c1ed,
                        'angle': _0x113294,
                        'rad': 0x2
                    });
                }
            },
            _0x17ffa4 = function(_0x471030) {
                _0x48e8d9 = {};
                var _0x27728d = _0x471030['readUInt8']() == 0x1;
                if (_0x27728d) {
                    var _0x509d77 = _0x471030['readUInt8']();
                    _0x48e8d9 = {}, _0x48e8d9['treesCount'] = _0x509d77;
                    for (i = 0x0; i < _0x509d77; i++) _0x48e8d9[_0x471030['readUInt32']()] = 0x1;
                }
            };

        function _0x38847c(_0x124478) {
            var _0x507cef = [];
            return _0x507cef['rank'] = _0x124478['readUInt16'](), _0x507cef['topRank'] = _0x124478['readUInt16'](), _0x507cef['timeAlive'] = _0x124478['readUInt16'](), _0x507cef['totalKills'] = _0x124478['readUInt16'](), _0x507cef['maxXP'] = _0x124478['readUInt32'](), _0x507cef;
        }
        var _0x4e87c1 = null,
            _0x1f54bc = 0x0;

        function _0x26e9e3(_0x175bcb) {
            _0x1f54bc = _0x117fee * 0.6;
            if (_0x4e87c1 == null) _0x4e87c1 = document['createElement']('canvas');
            var _0x758871 = _0x4e87c1['getContext']('2d'),
                _0x234349 = 0x37,
                _0x1d43ec = 0x28,
                _0x32aef5 = 0x5,
                _0x81691b = 0xc8,
                _0x35182b = 0x1a4;
            _0x234349 = _0x81691b + _0x32aef5 * 0x2, _0x4e87c1['width'] = _0x35182b + _0x32aef5 * 0x2, _0x4e87c1['height'] = _0x234349, _0x758871['globalAlpha'] = 0.2, _0x758871['fillStyle'] = '#000000', _0x758871['fillRect'](0x0, 0x0, _0x4e87c1['width'], _0x4e87c1['height']), _0x758871['fillStyle'] = '#000000', _0x758871['fillRect'](_0x32aef5, _0x32aef5, _0x4e87c1['width'] - _0x32aef5 * 0x2, _0x4e87c1['height'] - _0x32aef5 * 0x2);
            var _0x42feba = 0x37 + _0x32aef5;
            _0x758871['globalAlpha'] = 0x1, _0x758871['fillStyle'] = '#FFFFFF', _0x758871['font'] = '30px Arial';
            var _0x59a50b = 'YOU DIED!';
            _0x758871['font'] = '30px Arial', _0x758871['fillText'](_0x59a50b, _0x4e87c1['width'] / 0x2 - _0x758871['measureText'](_0x59a50b)['width'] / 0x2, _0x42feba), _0x758871['font'] = '20px Arial', _0x42feba += 0x2d, _0x59a50b = 'You were #' + _0x175bcb['rank'], _0x758871['fillText'](_0x59a50b, _0x4e87c1['width'] / 0x2 - _0x758871['measureText'](_0x59a50b)['width'] / 0x2, _0x42feba), _0x42feba += 0x28;
            var _0x35b449 = _0x22f380(_0x175bcb['timeAlive']),
                _0x4cec8f = _0x32aef5 + 0xf;
            _0x17eda1(_0x758871, 'Time Alive', _0x35b449, _0x4cec8f, _0x42feba), _0x4cec8f += 0xd2, _0x17eda1(_0x758871, 'Total Kills', _0x175bcb['totalKills'], _0x4cec8f, _0x42feba), _0x42feba += 0x28, _0x4cec8f = _0x32aef5 + 0xf, _0x17eda1(_0x758871, 'Top rank', _0x175bcb['topRank'], _0x4cec8f, _0x42feba), _0x4cec8f += 0xd2, _0x17eda1(_0x758871, 'Max XP', _0x2c8aad(_0x175bcb['maxXP']), _0x4cec8f, _0x42feba);
        }

        function _0x10468b(_0x3389f8, _0x106ed2, _0x61e566, _0x2d85ac, _0x4c74c1, _0x5512fc) {
            if (_0x3aa021 == 0x2) return;
            _0x4597c4['save']();
            var _0x30456d = _0x61e566 - _0x3389f8,
                _0x53b72d = _0x2d85ac - _0x106ed2,
                _0x54f312 = 0x0,
                _0x28ef47 = _0x4921b9 / 0x2 / window._0x13048d,
                _0x2da60a = _0x117fee / 0x2 / window._0x13048d;
            _0x3389f8 = Math['max'](_0x3389f8, _0x17b8da - _0x28ef47 - _0x4c74c1 + _0x54f312), _0x106ed2 = Math['max'](_0x106ed2, _0x59442b - _0x2da60a - _0x5512fc + _0x54f312), _0x61e566 = Math['min'](_0x61e566, _0x17b8da + _0x28ef47 - _0x4c74c1 - _0x54f312), _0x2d85ac = Math['min'](_0x2d85ac, _0x59442b + _0x2da60a - _0x5512fc - _0x54f312), _0x4597c4['strokeStyle'] = 'black', _0x4597c4['globalAlpha'] = 0.055;
            var _0x3490ca = 0x1e,
                _0x285e87 = _0x61e566 - _0x3389f8;
            fillH = _0x2d85ac - _0x106ed2;
            for (var _0x1cfc5d = -0.5 + _0x3389f8 + (_0x30456d - _0x3389f8) % _0x3490ca; _0x1cfc5d < _0x3389f8 + _0x285e87; _0x1cfc5d += _0x3490ca) {
                _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x1cfc5d, _0x106ed2), _0x4597c4['lineTo'](_0x1cfc5d, _0x106ed2 + fillH), _0x4597c4['stroke']();
            }
            for (dy = -0.5 + _0x106ed2 + (_0x53b72d - _0x106ed2) % _0x3490ca; dy < _0x106ed2 + fillH; dy += _0x3490ca) {
                _0x4597c4['beginPath'](), _0x4597c4['moveTo'](_0x3389f8, dy), _0x4597c4['lineTo'](_0x3389f8 + _0x285e87, dy), _0x4597c4['stroke']();
            }
            _0x4597c4['restore']();
        }
        async function _0x184098() {
            var _0x4f234c = document['getElementById']('optionsDiv');
            _0x4f234c['style']['display'] = 'none', _0x3a1f5a();
            try {
                var _0x4a2285 = new Audio('audio/click.mp3');
                _0x4a2285['play']();
            } catch (_0x3523fa) {}
            if (_0x9f013d) return;
            await _0x449ff8() ? _0x11ab91() : _0x77c381(![]);
        }
        document['getElementById']('startButton')['onclick'] = _0x184098, document['getElementById']('btnSpectate')['onclick'] = function() {
            _0x100a89();
        };
        const _0x100a89 = function() {
            if (!_0x58c983) {
                var _0x1e04b5 = new _0x278eb3(0x1);
                _0x1e04b5['writeUInt8'](_0x4ba8f2), _0x5df395(_0x1e04b5);
            }
        };
        var _0x294db4 = ![],
            _0x2564ec = ![];
        let _0x3da39f = ![];

        function _0x463a82(_0x19ef17) {
            var _0x12c56f = document['getElementById']('chatinput');
            switch (_0x19ef17['key']) {
                case 'ArrowLeft':
                    if (_0x19ef17['ctrlKey']) {
                        var _0x1eb6a9 = _0x12c56f['style']['width'];
                        _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) - 0x5, _0x12c56f['style']['width'] = _0x1eb6a9 + 'px';
                    } else {
                        var _0x1eb6a9 = _0x12c56f['style']['left'];
                        _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) - 0x5, _0x12c56f['style']['left'] = _0x1eb6a9 + 'px';
                    }
                    break;
                case 'ArrowRight':
                    if (_0x19ef17['ctrlKey']) {
                        var _0x1eb6a9 = _0x12c56f['style']['width'];
                        _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) + 0x5, _0x12c56f['style']['width'] = _0x1eb6a9 + 'px';
                    } else {
                        var _0x1eb6a9 = _0x12c56f['style']['left'];
                        _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) + 0x5, _0x12c56f['style']['left'] = _0x1eb6a9 + 'px';
                    }
                    break;
                case 'ArrowUp':
                    var _0x1eb6a9 = _0x12c56f['style']['top'];
                    _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) - 0x5, _0x12c56f['style']['top'] = _0x1eb6a9 + 'px';
                    break;
                case 'ArrowDown':
                    var _0x1eb6a9 = _0x12c56f['style']['top'];
                    _0x1eb6a9 = _0x1eb6a9['replace']('px', ''), _0x1eb6a9 = Number(_0x1eb6a9) + 0x5, _0x12c56f['style']['top'] = _0x1eb6a9 + 'px';
                    break;
            }
        }
        var _0x3cb235 = ![],
            _0x5abbed = !![];

        function _0xe119ba(_0x183c54) {
            if (_0x183c54['indexOf']('/anim-switch:') != -0x1) {
                var _0x1d82de = _0x183c54['replace']('/anim-switch:', '');
                switch (_0x1d82de) {
                    case 'honeybee':
                        _0x354bfb = !_0x354bfb;
                        return !![];
                    case 'phoenix':
                        _0xce4eab = !_0xce4eab;
                        return !![];
                }
            }
            return _0x23d25e(_0x183c54);
        }
        var _0x1461b1 = ![];
        const _0x23d25e = function(_0x2d4111) {
            if (!_0x363eb2 && !_0x5420c3) return ![];
            if (_0x2d4111['indexOf']('chatbox:') != -0x1) {
                var _0x2050ce = _0x2d4111['replace']('chatbox:', '');
                switch (_0x2050ce) {
                    case 'edit:start':
                        _0x3cb235 = !![];
                        break;
                    case 'edit:end':
                        var _0x166c4a = document['getElementById']('chatinput'),
                            _0x3a8c5f = {
                                'autoLoad': _0x5abbed,
                                'left': _0x166c4a['style']['left'],
                                'top': _0x166c4a['style']['top'],
                                'width': _0x166c4a['style']['width']
                            };
                        localStorage['setItem']('chatbox', JSON['stringify'](_0x3a8c5f)), _0x3cb235 = ![];
                        break;
                    case 'set:autoload':
                        _0x5abbed = !![];
                        break;
                    case 'load':
                        var _0x166c4a = document['getElementById']('chatinput'),
                            _0x3a8c5f = JSON['parse'](localStorage['getItem']('chatbox'));
                        _0x166c4a['style']['left'] = _0x3a8c5f['left'], _0x166c4a['style']['top'] = _0x3a8c5f['top'], _0x166c4a['style']['width'] = _0x3a8c5f['width'];
                        break;
                    case 'reset':
                        var _0x166c4a = document['getElementById']('chatinput');
                        _0x166c4a['style']['left'] = '', _0x166c4a['style']['right'] = '', _0x166c4a['style']['width'] = '';
                        break;
                }
                return;
            }
            switch (_0x2d4111) {
                case 'show:interface':
                    _0x133ce3 = !![], _0xd5abe9 = !![], _0x4c2309 = !![], _0x290cd1 = !![], _0x4a7419 = !![], _0x5eefe7 = !![], _0x1461b1 = ![];
                    return !![];
                case 'hide:interface':
                    _0x133ce3 = ![], _0xd5abe9 = ![], _0x4c2309 = ![], _0x290cd1 = ![], _0x4a7419 = ![], _0x5eefe7 = ![], _0x1461b1 = !![];
                    return !![];
                case 'show:map':
                    _0x133ce3 = !![];
                    return !![];
                case 'show:xpbar':
                    _0x4c2309 = !![];
                    return !![];
                case 'show:board':
                    _0xd5abe9 = !![];
                    return !![];
                case 'show:waterbar':
                    _0x290cd1 = !![];
                    return !![];
                case 'show:1v1':
                    _0x5eefe7 = !![];
                    return !![];
                case 'show:ability':
                    _0x4a7419 = !![];
                    return !![];
                case 'hide:map':
                    _0x133ce3 = ![];
                    return !![];
                case 'hide:xpbar':
                    _0x4c2309 = ![];
                    return !![];
                case 'hide:board':
                    _0xd5abe9 = ![];
                    return !![];
                case 'hide:waterbar':
                    _0x290cd1 = ![];
                    return !![];
                case 'hide:1v1':
                    _0x5eefe7 = ![];
                    return !![];
                case 'hide:ability':
                    _0x4a7419 = ![];
                    return !![];
            }
            return ![];
        };

        function _0x1ba631(_0x3a2412) {
            if (_0x172d37) {
                var _0xde2c35 = JSON['parse'](localStorage['getItem']('chatbox'));
                if (_0x3a2412 && _0xde2c35 && _0xde2c35['autoLoad']) {
                    var _0xf4102a = document['getElementById']('chatinput');
                    _0xf4102a['style']['left'] = _0xde2c35['left'], _0xf4102a['style']['top'] = _0xde2c35['top'], _0xf4102a['style']['width'] = _0xde2c35['width'];
                }
            }
        }
        _0x1ba631(!![]);
        const _0x12fbb7 = function() {
            if (!_0x24d734 && !_0x82e170) {
                _0x3952fc = 'You must login to chat!', _0x44b610 = _0x476319 + 0xdac;
                return;
            }
            var _0x18def4 = document['getElementById']('chatinput');
            if (!_0x294db4 && _0xc7d16a) {
                _0x18def4['style']['visibility'] = 'visible', _0x18def4['focus'](), _0x294db4 = !![];
                if (_0x5420c3) _0x18def4['maxLength'] = 0xf4240;
                _0x18def4['onblur'] = function() {
                    if (_0x294db4) _0x12fbb7();
                };
            } else {
                if (_0x294db4) {
                    var _0x46e783 = _0x18def4['value'] + '';
                    _0x294db4 = ![], _0x18def4['style']['visibility'] = 'hidden', _0x46e783['length'] > 0x0 && _0xc7d16a && (!_0xe119ba(_0x46e783) && (newMsg = new _0x278eb3(0x3 + _0x4eaafb(_0x46e783)['length']), newMsg['writeUInt8'](0x13), newMsg['writeString'](_0x46e783), _0x5df395(newMsg))), _0x18def4['value'] = '';
                }
            }
        };
        var _0x16540e = 0x3e8,
            _0x14d9aa = 0x3e8;

        function _0x31ff90() {
            _0x5844a2 = 0xfa;
        }

        function _0x313e02() {
            _0x16540e = window['innerWidth'], _0x14d9aa = window['innerHeight'];
            _0x2e70ce && (_0x16540e = document['body']['clientWidth'], _0x14d9aa = document['body']['clientHeight']);
            switch (_0x3aa021) {
                case _0x243dd0:
                case _0x313a4d:
                    _0x52f571 = 0.6 * window['devicePixelRatio'];
                    break;
                case _0x12a943:
                    _0x52f571 = window['devicePixelRatio'];
                    break;
                default:
                    console['log']('Unknown graphics level ' + _0x3aa021);
            }
            _0x4921b9 = _0x16540e * _0x52f571, _0x117fee = _0x14d9aa * _0x52f571, _0x6039c = 0.85 * _0x52f571 * Math['max'](_0x16540e / 0x780, _0x14d9aa / 0x438);
        }

        function _0x3cf313() {
            _0x313e02(), _0x102122 = null, _0x1962dc['width'] = _0x4921b9, _0x1962dc['height'] = _0x117fee, _0x1962dc['style']['width'] = _0x16540e + 'px', _0x1962dc['style']['height'] = _0x14d9aa + 'px';
            var _0x53913f = document['getElementById']('chatinput');
            _0x53913f['style']['marginTop'] = _0x14d9aa / 0x2 - 0x32 + 'px', _0x4dae39();
            _0x4aaac3() && (mes = new _0x278eb3(0x7), mes['writeUInt8'](0x11), mes['writeUInt16'](_0x4921b9), mes['writeUInt16'](_0x117fee), _0x31ff90(), mes['writeUInt16'](_0x5844a2), _0x5df395(mes));
            if (_0x36850d != null) _0x36850d['onResize']();
            _0x530821(_0x5d7465);
        }
        window['onresize'] = _0x3cf313;
        var _0x24733a = 0x1,
            _0x351730 = 0x2,
            _0x1ea81f = 0x3,
            _0x39b3d6 = 0x4,
            _0x62f143 = 0x5,
            _0x304763 = 0x6,
            _0x1f175a = 0x7;

        function _0x5317a9(_0x4ff519) {
            var _0x32489e = new _0x278eb3(0x2);
            _0x32489e['writeUInt8'](0x15), _0x32489e['writeUInt8'](_0x4ff519 ? 0x1 : 0x0), _0x5df395(_0x32489e);
        }

        function _0x5a92d4(_0x51a9a6, _0x20451c) {
            switch (_0x51a9a6) {
                case _0x24733a: {
                    if (_0x2da0d0 != _0x20451c) {
                        if (_0x4aaac3() && _0xc7d16a) {
                            if (_0x20451c) _0x3039c6();
                            _0x5317a9(_0x20451c);
                            if (_0x36f943 > 0x0) {
                                var _0x4394d4 = new _0x278eb3(0x5);
                                _0x4394d4['writeUInt8'](_0x27bd74), _0x4394d4['writeUInt32'](_0x36f943), _0x5df395(_0x4394d4), _0x36f943 = 0x0;
                            }
                        }
                    }
                    _0x2da0d0 = _0x20451c;
                }
                break;
                case _0x351730: {
                    if (_0x29ee17 != _0x20451c) {
                        if (_0x4aaac3() && _0xc7d16a) {
                            if (_0x20451c) _0x3039c6();
                            var _0x4394d4 = new _0x278eb3(0x2);
                            _0x4394d4['writeUInt8'](0x14), _0x4394d4['writeUInt8'](_0x20451c ? 0x1 : 0x0), _0x5df395(_0x4394d4);
                        }
                    }
                    _0x29ee17 = _0x20451c;
                }
                break;
                case _0x1ea81f: {
                    if ((_0x363eb2 || _0x5420c3) && _0xc7d16a) {
                        var _0x4394d4 = new _0x278eb3(0x1);
                        _0x4394d4['writeUInt8'](0x1a), _0x5df395(_0x4394d4);
                    }
                }
                break;
                case _0x39b3d6: {
                    if ((_0x363eb2 || _0x5420c3) && _0xc7d16a) {
                        var _0x4394d4 = new _0x278eb3(0x1);
                        _0x4394d4['writeUInt8'](0x1b), _0x5df395(_0x4394d4);
                    }
                }
                break;
                case _0x62f143: {
                    if (_0xc7d16a) {
                        var _0x4394d4 = new _0x278eb3(0x2);
                        _0x4394d4['writeUInt8'](0x1c), _0x4394d4['writeUInt8'](_0x20451c ? 0x1 : 0x0), _0x5df395(_0x4394d4);
                    }
                }
                break;
                case _0x304763: {
                    if (_0xc7d16a && _0x5420c3) {
                        var _0x4394d4 = new _0x278eb3(0x2);
                        _0x4394d4['writeUInt8'](0x1e), _0x4394d4['writeUInt8'](_0x20451c ? 0x1 : 0x0), _0x5df395(_0x4394d4);
                    }
                }
                break;
                case _0x1f175a: {
                    if (_0xc7d16a && _0x5420c3) {
                        var _0x4394d4 = new _0x278eb3(0x2);
                        _0x4394d4['writeUInt8'](0x1d), _0x4394d4['writeUInt8'](_0x20451c ? 0x1 : 0x0), _0x5df395(_0x4394d4);
                    }
                }
                break;
            }
        }

        function _0x2b7f94() {
            if (!_0x294db4 && _0xc7d16a) {
                if (document['activeElement'] && document['activeElement'] != _0x1962dc) _0x1962dc && (console['log']('canvas is focused now!'), _0x1962dc['focus']());
                else {}
            }
        }
        _0x1962dc['onblur'] = function(_0x203af5) {
            _0x30b0d6(_0x203af5);
        }, window['onfocus'] = function(_0x4f650d) {
            _0x539e9a(_0x4f650d);
        };

        function _0x30b0d6(_0x484c0c) {
            if (_0x29ee17 || _0x2da0d0) return;
            _0x5a92d4(_0x24733a, ![]), _0x5a92d4(_0x351730, ![]);
        }

        function _0x539e9a(_0x594f6d) {
            _0x3a1f5a();
        }
        document['oncontextmenu'] = document['body']['oncontextmenu'] = function() {
            return !_0xc7d16a;
        };

        function _0x9ba285() {
            var _0xaa7385 = _0x4921b9 / 0x2,
                _0x11e7a9 = _0x117fee / 0x2;
            _0x3a4688 = (_0x4f86dd - (_0xaa7385 - _0x17b8da * window._0x13048d)) / window._0x13048d, _0x1623d7 = (_0x2b1fb9 - (_0x11e7a9 - _0x59442b * window._0x13048d)) / window._0x13048d;
        }

        function _0x38dc84(_0xfd0c8f) {
            return _0xfd0c8f * window._0x13048d + (_0x4921b9 / 0x2 - _0x17b8da * window._0x13048d);
        }

        function _0x50fed7(_0x5db144) {
            return _0x5db144 * window._0x13048d + (_0x117fee / 0x2 - _0x59442b * window._0x13048d);
        }

        function _0x42aac5(_0x17e510, _0xf67fb9, _0x27be7c) {
            return _0x3969bd(_0x17e510, _0xf67fb9, 0x0, _0x27be7c);
        }

        function _0x3969bd(_0x35128c, _0x1d9e20, _0x5d0893, _0x1a5d48 = 0x0) {
            _0x1a5d48 *= window._0x13048d;
            const _0x10bc55 = {
                    'x': _0x38dc84(_0x35128c),
                    'y': _0x50fed7(_0x1d9e20)
                },
                _0x225de2 = _0x5d0893 * window._0x13048d;
            if (_0x10bc55['x'] + _0x225de2 < -_0x1a5d48 || _0x10bc55['y'] + _0x225de2 < -_0x1a5d48) return ![];
            if (_0x10bc55['x'] - _0x225de2 > _0x4921b9 + _0x1a5d48 || _0x10bc55['y'] - _0x225de2 > _0x117fee + _0x1a5d48) return ![];
            return !![];
        }

        function _0x23d2c8(_0xe74526, _0x49b6aa, _0x4136fc = 0x0) {
            if (_0xe74526 < -_0x4136fc || _0x49b6aa < -_0x4136fc) return ![];
            if (_0xe74526 > _0x6f4c47 + _0x4136fc || _0x49b6aa > _0x3be96e + _0x4136fc) return ![];
            return !![];
        }

        function _0x32b086(_0x3996d6, _0x3b8ded) {
            return (_0x3996d6['x'] - _0x3b8ded['x']) * (_0x3996d6['x'] - _0x3b8ded['x']) + (_0x3996d6['y'] - _0x3b8ded['y']) * (_0x3996d6['y'] - _0x3b8ded['y']) <= (_0x3996d6['rad'] + _0x3b8ded['rad']) * (_0x3996d6['rad'] + _0x3b8ded['rad']);
        }

        function _0x41406d(_0x3c1158) {
            return (_0x3c1158 - (_0x4921b9 / 0x2 - _0x17b8da * window._0x13048d)) / window._0x13048d;
        }

        function _0x48c0f4(_0x526c27) {
            return (_0x526c27 - (_0x117fee / 0x2 - _0x59442b * window._0x13048d)) / window._0x13048d;
        }

        function _0x3039c6() {
            if (_0x2564ec || _0x490164) {
                var _0x218492 = _0x4b4e0c[_0x59b0bc];
                if (_0x218492) _0x3a4688 = _0x218492['x'], _0x1623d7 = _0x218492['y'] + 0x2;
                else return;
            }
            _0x4aaac3() && (_0xc7d16a || _0x430e8f) && ((Math['abs'](_0x379625 - _0x3a4688) > 0.1 || Math['abs'](_0x402d25 - _0x1623d7) > 0.1) && (_0x379625 = _0x3a4688, _0x402d25 = _0x1623d7, mes = new _0x278eb3(_0x3fac9b), mes['writeUInt8'](0x5), mes['writeInt16'](_0x3a4688), mes['writeInt16'](_0x1623d7), _0x5df395(mes)));
        }
        setInterval(_0x3039c6, 0xa), setInterval(_0x5e32c2, 0x1388);
        var _0x545fea = 'mope.io';

        function _0x16b8e3() {
            _0x3cf313(), _0xf671c1 = 0x0, _0x4b4e0c = {}, _0x25f9b2 = [], _0x32c2a0 = [], _0x2ccd5c = 0x19, _0x4d2314 = _0x42d01c = 0x0, _0xba7329(_0x4d2314), _0x13635f = ![], _0x43f6e7 = ![], curBarPerc_n = _0x1a38de = 0x64, _0x187003 = _0x932aa9 = _0x4e8658 = 0x0, _0x562dbb(_0x4e8658), _0x31daf7 = null, _0x58c983 = ![], _0x5c0c34 = null, _0x37c823 = '', _0x136f0b(), _0x33301f = ![], _0x3076ab = 0x0, _0x21e459 = [], _0xa486d9 = ![], _0x3e7fc9 = [], _0xeddc61 = 0x0, _0x2cafb2 = 0x0, isInfected = _0x9ffe4d = ![], _0x5a4190 = 0x0, _0x401c43 = ![], _0x38a45c = 0x0, _0x5a248d = [], _0x5a1e1d = ![];
            if (_0x4bbb18 != null) _0x4bbb18['isVisible'] = ![];
            _0x36850d && _0x36850d['interfaceButtons']['splice'](_0x36850d['interfaceButtons']['indexOf'](_0x4bbb18), 0x1), _0x4bbb18 = null, _0xd567a8 = ![], _0x17f17b = 0x0, _0x2bdfc5 = 0x0, _0x5420c3 = ![], _0x430e8f = ![], _0x4e87c1 = null;
        }
        const _0x1cb733 = document['getElementById']('nickInput');
        _0x1cb733['onchange'] = () => {
            let _0x5c3b83 = _0x1cb733['value'];
            if (typeof _0x545fea !== 'undefined') {
                _0x545fea = _0x5c3b83;
                if (window['localStorage']) try {
                    window['localStorage']['setItem']('nick', _0x5c3b83);
                } catch (_0x97a899) {}
            }
        }, _0x3cf313();
        if (window['localStorage']) {
            var _0x31ab6b = _0x1cb733;
            _0x545fea = window['localStorage']['getItem']('nick'), _0x31ab6b['value'] = _0x545fea, _0x31ab6b['setSelectionRange'](0x0, _0x31ab6b['value']['length']);
            if (!_0x5ec8aa) _0x31ab6b['focus']();
        }
        if (_0x1962dc['addEventListener']) _0x1962dc['addEventListener']('mousewheel', _0x85e7df), _0x1962dc['addEventListener']('DOMMouseScroll', _0x85e7df);
        else _0x1962dc['attachEvent']('onmousewheel', _0x85e7df);
        var _0x25661 = 0x0,
            _0x451660 = 0x1;

        function _0x85e7df(_0x3e6dbf) {
            var _0x3e6dbf = window['event'] || _0x3e6dbf,
                _0x5ab927 = Math['max'](-0x1, Math['min'](0x1, _0x3e6dbf['wheelDelta'] || -_0x3e6dbf['detail']));
            if (_0x5ab927 == 0x1) _0x25661 += 0x1;
            else _0x25661 -= 0.1;
            _0x25661 = Math['max'](0x0, _0x25661), _0x25661 = Math['min'](0xa, _0x25661);
            if (_0xd61d58) {
                var _0x44c6d0 = Math['abs'](_0x25661) * 0x64,
                    _0x2f6492 = new _0x278eb3(0x4);
                _0x2f6492['writeUInt8'](_0x1f7727), _0x2f6492['writeUInt8'](_0x5ab927 == -0x1 ? 0x0 : 0x1), _0x2f6492['writeInt16'](_0x44c6d0), _0x5df395(_0x2f6492);
            }
        }
        var _0x36850d = null;

        function _0x5c7587() {
            _0x1a51df();
            if (_0x36850d != null) _0x36850d['interfaceReset']();
            _0x36850d = null, console['log']('setting game mode interface:' + _0x524bb8);
            if (_0x524bb8 == _0xadab65) _0x36850d = new _0x862895(_0x524bb8), _0x36850d['state'] = _0x4c2aa9;
            else {
                if (_0x524bb8 == _0x5f574f) _0x36850d = new _0x440b92(_0x524bb8), _0x36850d['state'] = _0x4c2aa9;
                else {
                    if (_0x524bb8 == _0x21c3d1) _0x36850d = new _0x5d898e(_0x524bb8), _0x36850d['state'] = _0x4c2aa9;
                    else {
                        if (_0x524bb8 == _0x3a12fc) _0x36850d = new _0x2024b6(), _0x36850d['state'] = _0x4c2aa9;
                        else _0x524bb8 == _0x31e908 && (_0x36850d = new _0xcb1eb3(_0x524bb8), _0x36850d['state'] = _0x4c2aa9);
                    }
                }
            }
            console['log'](_0x36850d);
        }

        function _0x4b0258(_0x28cf31, _0x33dedc, _0x11407a) {
            var _0x1edba2 = _0x28cf31['x'] + _0x33dedc * Math['cos'](_0x11407a),
                _0x495138 = _0x28cf31['y'] + _0x33dedc * Math['sin'](_0x11407a);
            return {
                'x': _0x1edba2,
                'y': _0x495138
            };
        }

        function _0x32a916(_0x4ec935, _0x3754cd, _0x3acbf6, _0x330ace, _0x5b9831) {
            _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x5b9831, _0x4597c4['beginPath'](), _0x4597c4['translate'](_0x4ec935, _0x3754cd), _0x4597c4['rotate'](_0x3acbf6), _0x4597c4['moveTo'](-0x5, -0x5), _0x4597c4['lineTo'](-0x5, 0x5), _0x4597c4['lineTo'](0x5, 0x5), _0x4597c4['lineWidth'] = 1.5, _0x4597c4['strokeStyle'] = _0x330ace, _0x4597c4['fillStyle'] = _0x330ace, _0x4597c4['stroke'](), _0x4597c4['restore']();
        }

        function _0x1b9e34() {
            var _0x336518 = _0x4b4e0c[_0x59b0bc];
            if (_0x336518)
                for (d = 0x0; d < _0x25f9b2['length']; d++) {
                    var _0x492790 = _0x25f9b2[d];
                    if (_0x336518['id'] != _0x492790['id']) {
                        if (_0x492790['oType'] === _0x269668) {
                            var _0x1a5e0d = _0x492790['getOutlineColor'](),
                                _0x5afda4 = ![];
                            if (_0x1a5e0d == _0x514a86 || _0x1a5e0d == _0x4155ab) _0x5afda4 = !![];
                            if (_0x5afda4) _0x5ec849(_0x336518, _0x492790, _0x1a5e0d);
                        }
                    }
                }
        }

        function _0x585ae0(_0x2c7cee, _0x40f354) {
            var _0x114423 = _0x2c7cee['x'] - _0x40f354['x'],
                _0xcccca4 = _0x2c7cee['y'] - _0x40f354['y'],
                _0x4bd1aa = Math['sqrt'](_0x114423 * _0x114423 + _0xcccca4 * _0xcccca4);
            return _0x4bd1aa;
        }

        function _0x5ec849(_0x495ac7, _0x2d9c3b, _0x592e6c) {
            var _0x210777 = _0x4921b9 / 0x2,
                _0x19a7a6 = _0x117fee / 0x2,
                _0x375049 = _0x30a9c3(_0x2d9c3b['x'], _0x2d9c3b['y'], _0x495ac7['x'], _0x495ac7['y']),
                _0x280495 = _0x38dc84(_0x2d9c3b['x']),
                _0x2c4e22 = _0x50fed7(_0x2d9c3b['y']),
                _0x51c2d4 = _0x2d9c3b['rad'] * window._0x13048d,
                _0x1b8b59 = Math['min'](Math['abs'](_0x280495 - _0x51c2d4 - 0x0), Math['abs'](_0x280495 + _0x51c2d4 - _0x4921b9)),
                _0x3c58c2 = Math['min'](Math['abs'](_0x2c4e22 - _0x51c2d4 - 0x0), Math['abs'](_0x2c4e22 + _0x51c2d4 - _0x117fee)),
                _0x1f937c = -0x32 - _0x495ac7['rad'],
                _0x5d6437 = _0x4b0258({
                    'x': _0x495ac7['x'],
                    'y': _0x495ac7['y']
                }, _0x1f937c, _0x375049),
                _0x244774 = _0x585ae0({
                    'x': _0x5d6437['x'],
                    'y': _0x5d6437['y']
                }, {
                    'x': _0x2d9c3b['x'],
                    'y': _0x2d9c3b['y']
                });
            if (_0x2d9c3b['rad'] < 0x64 && _0x244774 < _0x2d9c3b['rad'] * 0.5 || _0x244774 < 0xc8) return;
            _0x375049 += _0x4c4686(0x2d);
            var _0x37ca01 = 0x1,
                _0x587668 = 0x14;
            _0x32a916(_0x5d6437['x'], _0x5d6437['y'], _0x375049, _0x592e6c, _0x37ca01);
        }

        function _0x1a51df() {
            _0x2332f9(!![]);
        }

        function _0x8d9db4() {
            if (_0x4e734d == _0x1de825) {
                if (_0x2d848e == null) {
                    var _0x2a62e2 = new _0x278eb3(0x2);
                    _0x2a62e2['writeUInt8'](_0x29b4f4), _0x5df395(_0x2a62e2);
                } else {
                    var _0x2a62e2 = new _0x278eb3(0x2);
                    _0x2a62e2['writeUInt8'](_0x29b4f4), _0x5df395(_0x2a62e2), _0x2d848e['updateExpiry']();
                }
            }
        }
        var _0x42c702 = 0x5,
            _0x3b8c3d = 0x5,
            _0x4d29ec = 0xa,
            _0x1798eb = 0x0,
            _0x29fbd3 = 0x0,
            _0x15e215 = null,
            _0xaac4da = 0x0,
            _0x2ab1bf = null,
            _0x29f51d = 0x0,
            _0x1da192 = 0xf,
            _0x3de70c = 0x0,
            _0x2d848e = null;

        function _0x1d1c43() {
            _0x2d848e != null && _0x2d848e['display']();
        }

        function _0x2899b9() {
            if (_0x2ab1bf == null) {
                _0x3de70c = 0x0, _0x15e215 = null;
                return;
            }
            if (_0x15e215 == null) _0x15e215 = document['createElement']('canvas');
            if (_0x15e215 == null) return;
            if (_0x3de70c == 0x0) _0x3de70c = _0x476319;
            var _0x1ffd68 = _0x15e215['getContext']('2d'),
                _0x3a6717 = 0x37,
                _0x56919d = 0x5,
                _0x419ad6 = 0x0,
                _0x2e5ad0 = 0x50 * _0x6039c,
                _0x39d02a = 0x82 + 0x5 * (_0x2e5ad0 + 0xa),
                _0x39d02a = 0x2bc * _0x6039c,
                _0x45bf6c = 0x2bc * _0x6039c;
            console['log']('inferface scale ' + _0x6039c + ' borad_height ' + _0x39d02a), _0x3a6717 = _0x39d02a + _0x56919d * 0x2, _0x15e215['width'] = _0x45bf6c + _0x56919d * 0x2, _0x15e215['height'] = _0x3a6717;
            var _0x3da69a = 0xc8;
            _0xaac4da = _0x3da69a, _0x1ffd68['globalAlpha'] = 0.1;
            var _0x5414c5 = _0x56919d;
            _0x1ffd68['globalAlpha'] = 0x1, _0x1ffd68['fillStyle'] = '#FFFFFF', _0x1ffd68['font'] = '30px Arial', _0x5414c5 += 0x2d;
            var _0x32c48a = 'APEX KILLS';
            _0x1ffd68['font'] = '30px Arial', _0x1ffd68['fillText'](_0x32c48a, _0x15e215['width'] / 0x2 - _0x1ffd68['measureText'](_0x32c48a)['width'] / 0x2, _0x5414c5), _0x3da69a = 0x64, _0x5414c5 += _0x2e5ad0;
            var _0xcfdda1 = 0x168 / _0x2ab1bf['anis']['length'],
                _0x3ef1ee = 0xfa * _0x6039c,
                _0x5991de = _0x15e215['width'] / 0x2,
                _0x494328 = _0x15e215['height'] / 0x2;
            _0x1ffd68['fillStyle'] = 'black', _0x1ffd68['globalAlpha'] = 0.1, _0x1ffd68['beginPath'](), _0x1ffd68['arc'](_0x5991de, _0x5991de, _0x3ef1ee - _0x2e5ad0 / 0x2, 0x0, Math['PI'] * 0x2, ![]), _0x1ffd68['arc'](_0x5991de, _0x5991de, _0x3ef1ee + _0x2e5ad0 / 0x2, Math['PI'] * 0x2, 0x0, !![]), _0x1ffd68['fill'](), _0x1ffd68['globalAlpha'] = 0.5, _0x1ffd68['beginPath'](), _0x1ffd68['arc'](_0x5991de, _0x5991de, _0x3ef1ee + _0x2e5ad0 / 0x2, Math['PI'] * 0x2, 0x0), _0x1ffd68['stroke']();
            var _0x356618 = Math['PI'] * 0x2 / _0x2ab1bf['anis']['length'],
                _0x272127 = 0x0,
                _0xaea7f9 = (_0x476319 - _0x3de70c) / 0x3e8,
                _0x35c4fa = 0x2,
                _0x105122 = 0x8;
            _0x272127 = _0x105122 * Math['sin'](0x2 * Math['PI'] / _0x35c4fa * _0xaea7f9);
            for (r = 0x0; r < _0x2ab1bf['anis']['length']; r++) {
                var _0x5b1aa0 = _0x494328 + Math['sin'](_0xcfdda1 * r * (Math['PI'] / 0xb4) - _0x4c4686(0x5a)) * _0x3ef1ee,
                    _0x237301 = _0x5991de + Math['cos'](_0xcfdda1 * r * (Math['PI'] / 0xb4) - _0x4c4686(0x5a)) * _0x3ef1ee,
                    _0x415817 = r * _0x356618 - _0x4c4686(0x5a) - _0x356618 / 0x2,
                    _0x2491fa = _0x415817 + _0x356618;
                ani = _0x2ab1bf['anis'][r];
                var _0x38073b = _0x2eca2f(ani),
                    _0x3e5dea = _0x5e7a48(_0x38073b);
                if (_0x3e5dea) {
                    var _0x478649 = _0x2ab1bf[ani] > 0x0;
                    _0x1ffd68['save'](), _0x1ffd68['globalAlpha'] = _0x478649 ? 0x1 : 0.3;
                    var _0x4cf8f7 = _0x2e5ad0;
                    _0x478649 && (_0x1ffd68['shadowOffsetX'] = 0x0, _0x1ffd68['shadowOffsetY'] = 0x0, _0x1ffd68['shadowColor'] = 'black', _0x1ffd68['shadowBlur'] = 0x8, _0x4cf8f7 -= _0x272127);
                    _0x1ffd68['drawImage'](_0x3e5dea, _0x237301 - _0x4cf8f7 / 0x2, _0x5b1aa0 - _0x4cf8f7 / 0x2, _0x4cf8f7, _0x4cf8f7), _0x1ffd68['restore'](), _0x1ffd68['save']();
                    _0x478649 && (_0x1ffd68['shadowOffsetX'] = 0x0, _0x1ffd68['shadowOffsetY'] = 0x0, _0x1ffd68['shadowColor'] = 'black', _0x1ffd68['shadowBlur'] = 0x8);
                    _0x1ffd68['strokeStyle'] = _0x478649 ? '#ff6e00' : 'black';
                    var _0x4d3969 = _0x478649 ? 0x5 : 0x1;
                    _0x1ffd68['lineWidth'] = _0x4d3969, _0x1ffd68['globalAlpha'] = _0x478649 ? 0x1 : 0.5, _0x1ffd68['beginPath'](), _0x1ffd68['arc'](_0x5991de, _0x5991de, _0x3ef1ee - (_0x4d3969 - 0x2) - _0x2e5ad0 / 0x2, _0x415817, _0x2491fa), _0x1ffd68['stroke']();
                }
            }
            if (_0x15e215 != null) {
                if (_0x15e215['width']) {
                    var _0xae1ce1 = (_0x476319 - _0x3de70c) / 0x258,
                        _0x3e80e1 = (_0x29f51d - _0x476319) / 0x258;
                    if (_0x3e80e1 < 0x1) _0xae1ce1 = Math['max'](0x0, _0x3e80e1);
                    var _0x243916 = Math['min'](0x1, _0xae1ce1),
                        _0x355450 = _0x15e215['width'] * _0x243916,
                        _0x9255b0 = _0x15e215['height'] * _0x243916;
                    _0x4597c4['save'](), _0x4597c4['globalAlpha'] = _0x243916, _0x4597c4['drawImage'](_0x15e215, _0x4921b9 / 0x2 - _0x355450 / 0x2, _0x117fee / 0x2 - _0x9255b0 / 0x2, _0x355450, _0x9255b0), _0x4597c4['restore'](), (_0x476319 > _0x29f51d || !_0xc7d16a) && (_0x2ab1bf = null, _0x3de70c = 0x0);
                }
            }
        }

        function _0x2eca2f(_0x41628f) {
            switch (_0x41628f) {
                case _0x1de825:
                    return './skins/volcano/blackdragon/0/blackdragon.png';
                case _0x19d925:
                    return './skins/land/dinomonster/0/dinomonster.png';
                case _0xdd7007:
                    return './skins/arctic/icemonster/0/icemonster.png';
                case _0x1fb7c3:
                    return './skins/volcano/landmonster/0/0/landmonster.png';
                case _0x346859:
                    return './skins/ocean/seamonster/0/seamonster.png';
                case _0x582280:
                    return './skins/desert/scorpion/0/giantscorpion.png';
                case _0x36fcdc:
                    return './skins/arctic/yeti/0/wolf.png';
                case _0x31f937:
                    return './skins/land/dragon/0/0/dragon.png';
                case _0x366af5:
                    return './skins/land/trex/0/trex.png';
                case _0x9038c6:
                    return './skins/ocean/kraken/0/0/kraken.png';
                case _0x38e413:
                    return './skins/ocean/kingcrab/0/kingcrab.png';
                case _0x48a3f9:
                    return './skins/phoenix/phoenix.png';
                case _0x5e24a5:
                    return './skins/desert/pterodactyl/0/pterodactyl_ability.png';
            }
        }
        document['addEventListener']('keydown', function(_0x417ed7) {
            if (_0x417ed7['ctrlKey'] == !![] && (_0x417ed7['code'] == 'Minus' || _0x417ed7['key'] == 'Equal' || _0x417ed7['code'] == 'NumpadSubtract' || _0x417ed7['key'] == 'NumpadAdd')) _0x417ed7['preventDefault']();
        }, {
            'passive': ![]
        });
        if (Math['random']() < 0.1) {
            if (_0x282f69 === this)
                while (!![]) {}
        }
        let _0x5f106e = null;

        function _0x1085de(_0x24db82) {
            return new Promise((_0x106486, _0x56feeb) => {
                let _0x7326df = document['body']['querySelector']('#turnstile');
                _0x7326df ? _0x7326df['style']['removeProperty']('display') : (_0x7326df = document['createElement']('div'), _0x7326df['setAttribute']('id', 'turnstile'), document['body']['append'](_0x7326df)), _0x5f106e = turnstile['render'](_0x7326df, {
                    'sitekey': _0x24db82,
                    'callback': _0x4e4fd3 => {
                        _0x5aedce(), _0x106486(_0x4e4fd3);
                    },
                    'error-callback': _0x319322 => {
                        _0x5aedce(), _0x56feeb(_0x319322);
                    }
                });
            });
        }

        function _0x5aedce() {
            let _0x37b4f6 = document['body']['querySelector']('#turnstile');
            _0x37b4f6 && (_0x37b4f6['style']['setProperty']('display', 'none'), turnstile['remove'](_0x5f106e));
        }
        window.Tree = _0x1f7359;
        window.Animal = _0x5502af;
        window.GameObj = _0x5d11ac;

        function RetMaths() {
            camzoom = window._0x13048d; // 3 переменных в клиенте !!!
            camx = _0x17b8da;
            camy = _0x59442b;
            playgame_visual_function = _0x313e02;
            cursorX = _0x3a4688; // 5 переменных в клиенте !!!
            cursorY = _0x1623d7; // 5 переменных в клиенте !!!
            options_graphicsLevel = _0x3aa021; // 'graphicsMode':
            timestamp = +new Date();
            resourceType = _0x257c0e;
            xp = _0x4e8658;
            xpNextAnimal = _0x427ff6; // СРАЗУ ПОСЛЕ curBarPerc_n = 100,
            xpPer_n = _0x187003;
            waterBarPerc_n = _0x4d2314;
            PreviousXP = !PreviousXP ? xp : PreviousXP;
            //server = _0x43a83d; //это WS
            ws = _0x43a83d; //['readyState'] === WebSocket['OPEN'];
            serverInfo = ws ? ws.serverInfo : null;
            prevAnim = _0x261704;
            selfId = _0x59b0bc;
            objectsData = _0x4b4e0c;
            player = _0x4b4e0c[_0x59b0bc];



            windowW = window.innerWidth;
            windowH = window.innerHeight;
            //window.devicePixelRatio = options_graphicsLevel == 3 ? 1 : 1.66;
            pixelRat = options_graphicsLevel == 3 ? window.devicePixelRatio : 0.6 * window.devicePixelRatio;
            interfS = 0.85 * pixelRat * Math.max(windowW / 1920, windowH / 1080);

            canvasW = windowW * pixelRat;
            canvasH = windowH * pixelRat;
            screenIns_EndT = +new Date() + 9000;
            screenIns_EndTT = +new Date() + 9000;
            imgX = canvas.width - 230 * pixelRat;
            imgY = canvas.height / 2 - 200 * pixelRat;
            imgWidth = 170 * pixelRat;
            imgHeight = imgWidth;
            buttonWidth = 100 * pixelRat; // Для всех 1
            buttonHeight = 30 * pixelRat;
            button1X = canvas.width - 270 * pixelRat + (250 * pixelRat - buttonWidth) / 2 - buttonWidth / 2 - 2.5; // X кнопки1
            button1Y = canvas.height / 2 - 150 * pixelRat + 5 + imgHeight / 3; //Y кнопки2
            button2X = canvas.width - 20 * pixelRat - (250 * pixelRat - buttonWidth) / 2 - buttonWidth / 2 + 2.5; // X кнопки2
            button2Y = canvas.height / 2 - 150 * pixelRat + buttonHeight + 10 + imgHeight / 3; // Y кнопки1




            buttonX = button1X;
            buttonY = button1Y;
            buttonpvpbotX = button2X;
            buttonpvpbotY = button1Y;
            buttonSkinsX = button1X;
            buttonSkinsY = button2Y;
            //buttonSkinsX = buttonpvpbotX;
            //buttonSkinsY = buttonpvpbotY;
            buttonBotsX = button2X;
            buttonBotsY = button2Y;
            buttonSettings = {
                "x": buttonX,
                "y": buttonY,
                "width": buttonWidth,
                "height": buttonHeight
            };
            buttonSkins = {
                "x": buttonSkinsX,
                "y": buttonSkinsY,
                "width": buttonWidth,
                "height": buttonHeight
            };
            buttonBots = {
                "x": buttonBotsX,
                "y": buttonBotsY,
                "width": buttonWidth,
                "height": buttonHeight
            };
            buttonpvpbot = {
                "x": buttonpvpbotX,
                "y": buttonpvpbotY,
                "width": buttonWidth,
                "height": buttonHeight
            };

            settingsX = canvas.width / 2 - (canvas.width / 3);
            settingsY = canvas.height / 2 - (canvas.height / 3);
            settingsW = (canvas.width / 3) * 2;
            settingsH = (canvas.height / 3) * 2;
            maxX = settingsX + ((canvas.width - (settingsX * 2))) - 200 / 3;
            requestAnimationFrame(RetMaths);
        };
        requestAnimationFrame(RetMaths);
    }
};
a0_0x421665['run']();
var _0x1b8bf1 = _0x2e61;
(function(_0x2460dd, _0xdbb7f6) {
    var _0x99dcc4 = _0x2e61,
        _0x41d745 = _0x2460dd();
    while (!![]) {
        try {
            var _0x14336a = parseInt(_0x99dcc4(0x2ee)) / 0x1 + -parseInt(_0x99dcc4(0x28c)) / 0x2 + -parseInt(_0x99dcc4(0x233)) / 0x3 + parseInt(_0x99dcc4(0x2b7)) / 0x4 * (-parseInt(_0x99dcc4(0x246)) / 0x5) + parseInt(_0x99dcc4(0x209)) / 0x6 + -parseInt(_0x99dcc4(0x366)) / 0x7 * (parseInt(_0x99dcc4(0x320)) / 0x8) + parseInt(_0x99dcc4(0x2a6)) / 0x9;
            if (_0x14336a === _0xdbb7f6) break;
            else _0x41d745['push'](_0x41d745['shift']());
        } catch (_0x588271) {
            _0x41d745['push'](_0x41d745['shift']());
        }
    }
}(_0x3169, 0x23825));

function _0x3169() {
    var _0x171ade = ['alwaysPlainOutline', 'moonwalk_attack90_150_1', '#ProXYGamer', 'Food-Eater Bot: Everywhere', 'Bots: ', 'orange', 'Doesn\'t work ingame\x0a\x0a', 'type', 'долбаеб найден! Его ник:', 'arc', 'https://doudimodpack6ef405d279.netlify.app/combat.png', '52bZaoYG', 'water-bar', 'every', 'Dist: ', 'setInt16', 'readBitGroup', ' WATER: ', 'getSkinName', '#ff0000', '_scale', 'replayed!', 'Minus', 'startTime', 'flag_inLava', 'Follow', 'AIM Bot (KeyX): ', '!pvp:', 'ownRank', 'dragon', '\x0aAlive: ', 'flag_inWater', '#09992F', 'set', 'AutoGG enabled', 'https://mope.io/|', 'moveTo', 'dispatchEvent', 'spectating now.', 'setFontSize', 'CHUNK_SIZE', 'lastBoostTime', 'rgba(50,140,162,0.5)', 'consolechat', 'grey', 'floor', 'mouse', 'onopen', '\x0aChat:\x0a', 'hrbpm', 'replace', 'CCZoom disabled.', 'face_face', '#FF911E', 'devicePixelRatio', 'X-Ray: Underwater & PVP', ' Disabled', 'zoom:', './assets/t/', 'readytoplay', 'skin1', 'execute', 'chatA', 'criticalOverlapThreshold', 'pro', 'visible', '102794jujnIE', 'hostname', 'gray', 'transitionDuration', 'https://doudimodpack6ef405d279.netlify.app/bots.png', 'Tracking: ', 'Долбаебов поблизости нет', 'DEBUG_LAST_PING_S', '//control', 'token', 'strokeW', 'Got an animal: ', ' xp Next Animal)', 'AutoGL Mod V2', 'Bot error:', 'setPos', '#F35F53', 'canvas_fps', 'find', 'setUint16', 'spawn', 'oType', 'opponentStationaryTime', '//join', 'pro2', 'canvas_ping', 'center', 'getIdealOpacity', 'https://i.postimg.cc/hvPhZN4h/E7vQ940.png', 'colors', 'binaryType', 'nickTXT', '_color', 'experience-bar', 'isEdibleOutlined', 'none', 'then', 'Resource: ', 'msgselectanimal', 'Press to spawn !', 'keyCode', 'lerp', 'track:top', 'readUInt16', 'Choosed action (KeyC): ', 'shadowColor', 'X-Ray PLAYERS disabled.', 'mousedown', 'moonwalkAction', '10px Arial', '138640QdjXmO', ' | Alive: ', '#CF6259', 'isAnimating', 'Kill me', '#FFFFFF', 'moonwalk_attack90_150', 'slice', 'https://mope.io/assets/s/2/skins/volcano/blackdragon/0/blackdragon.png?v=274', 'BetterN&O: Custom color Name & Outline', 'https://i.postimg.cc/ZqSbDXVZ/HDdragon.webp', 'X-Ray OBJ disabled.', 'wins1v1', 'You died! Watch your health!', 'offsetLeft', 'https://doudimodpack6ef405d279.netlify.app/other.png', 'CachedText', '<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap\">', 'setColor', 'OTHER', 'SKINS', ' Y: ', 'px Arial', 'endY', 'writeUInt32', '17px Arial', 'time', 'distance', 'Bind on ', 'shift', 'player_object', 'stroke', 'which', ' with text \"', 'remove', 'toString', '_dirty', 'Equal', ' xp  (', 'pieChartCanvas', './assets/s/2/skins/land/mouse/0/mouse.png', 'getUint8', 'MAX_INPUT_LENGTH', 'rad', 'boostDistance', '25px Roboto', '✔Remove', 'AIR', 'Health: ', 'Food-Eater Bot (KeyF): ', 'bots uses your nickname', '#4AE05E', 'KeyX', 'getObjAlpha', 'readString', 'currentCoords', 'writeUInt8', '!gg:', 'lastOpponentAngle', 'now', 'isFollowing', 'height', 'opportunityToAttack', 'moveUpdF', 'Maybe, you meant ', 'Now each of your messages is translated into ', 'getBool', 'from player face to enemy face', 'You died of lava suffocation :( Don\'t let your lava run out!', 'disabled.', '56EfOSkF', '\x0aY: ', 'idset', 'camy', 'values', 'msgrecaptcha', '\x0aAngle Difference: ', 'width', 'max', 'size', 'arrayBuffer', 'mapX', 'nick', 'draw', ' | Type: ', 'renderScale', '\x0aLava: ', 'rank', 'readMsgReaderBitsGroup', 'catch', 'https://doudimodpack6ef405d279.netlify.app/pxmodpack.png', 'measureText', '!gl:', 'setText', 'shadowBlur', 'yellow', 'lastPositionChangeTime', 'lineTo', 'rgba(0, 0, 0, 1)', 'Success: SetConsole()', 'round', 'gCanvas', 'STARTED_GAME', 'radius', 'chatTxt', 'pvp:off', 'readyState', '#007ec0', 'send', 'tail', 'XP: ', 'black', 'mope.io', 'trim', '!track:top', 'KeyB', 'AutoGL: Only IN Arena', 'BOT DCED', 'updateColor', 'Respawn XP: ', 'locate:dolbaeb', 'camx', '#d6c348', 'key', 'follow: ', '\x0aID: ', 'toFixed', 'textBaseline', 'bindtype', 'button', 'getIntWithXBits', '#00ff00', '#4E66E4', 'KeyL', 'canvas', '_text', 'chatLines', '#00ffff', '#bfaf43', 'nickName', 'shadowOffsetX', 'globalAlpha', 'KeyN', 'moonwalk_def0_90', 'chatFadeT', 'hypot', 'charAt', 'insideOpponentTime', 'Warning: AutoGG is disabled. To enable it, type gg: or click on text in settings.\x0a\x0a', 'sprint', 'mousemove', 'options', 'ceil', 'addEventListener', 'MOVE!', '#F3C553', 'red', 'click', 'fillText', 'alphabetic', 'every bot', './assets/s/2/skins/land/dragon/0/0/dragon.png', 'skin2', '#8CCEF4', ' | ACTION: ', 'type something to chat', 'wss', 'SEND_DELAY', 'toLowerCase', '//controlbots', 'readUInt32', '...', 'Lerp is setted to ', 'abs', 'maxLength', '?\x0aXP Difference is now setted to ', 'gameLoaded', 'Attack', 'rBitIndex', 'getInt16', 'innerWidth', '//logout', 'strokeColor', 'enabled | Action: ', '18px Roboto', 'skin5', 'player', '#1aad41', '#f7f7f7', 'writeUInt16', '_translated', 'onerror', 'contentWindow', 'serverId', 'pad', 'xray:objects', ' with command \"', 'flag_usingAbility', 'lastOpponentPos', 'no respawn', 'Oh no, You died from a tail-bite!\x0a Watch your tail!', 'pow', 'Respawn: ', 'angleDiff', 'skinThemeID', 'deltaY', 'drawImage', 'animalType', 'POSITION #', 'delete', 'rotate', 'nRad', 'KeyZ', 'login_passwordToken', 'innerHeight', '(PX)', 'PVP Bot: ', 'bind', 'gl:', 'normalTurnDistance', 'Numpad7', 'px Roboto', '\x0aDistance: ', ' was removed!', '!gopos:', 'You died of air suffocation :( Don\'t let your air run out!', 'undefinedd', 'push', 'cyan', 'getUint32', 'To unfreeze camera, write !freeze:camera command.', 'Translation error:', 'pro3', 'fillRect', 'You died of low energy :( Don\'t let your energy run out!', 'login_profilePicURL', 'appendChild', 'KeyA', '. Default: 450000', 'onblur', 'X-Ray: Hills & Bushs', 'Oh no, You were eaten! \x0a Watch out for red-circled players!', 'toPrecision', 'Your nickname:\x0a', 'CCZoom enabled', 'hidden', 'Earn-Skins: Free skins for 24h', 'atan2', '#c8b745', 'Auto translate: translate your\'s and other\'s messages', 'addbind', 'visibility', 'readInt16', '&dt=t&q=', 'TRACKING #1. DISTANCE: ', '#328ca2', 'Pause: ', 'clientY', 'dataView', 'startsWith', 'len', 'random', 'offset', 'createElement', 'difference', 'src', 'display', 'AutoGG: Only IN Arena', ' | Dist: ', 'iframe', '[PX]Mods ACTIVATED', 'PvP Bot (KeyB): ', ' | Distance:', 'moonwalk_def0_90_2', '6Le2eLIZAAAAACYfDXc6fT__SyfOP0m7rNyjkJdR', 'https://i.postimg.cc/Nfjrd2Lb/l67jvoylb0101.png', 'splice', 'arraybuffer', 'water', 'cntrlb', 'style', 'lava', 'LOW AIR', 'Goodluck <3', 'nickNameA', 'BetterChat: Custom Chat Drawing', 'X-Ray: Players', 'getBoundingClientRect', 'default', 'data', 'cursor', 'mediumSpeedValue', 'includes', 'gopos', 'Reset zoom: (HOME KEY)', 'EVENTS', 'getElementsByClassName', '_canvas', 'MsgGameScoreUpdate', 'Hide Objects: Everywhere', 'msgmopecheck', './assets/s/', 'keys', 'lime', 'camzoom_n', 'formulacopy', 'KeyD', 'enabled | Alive: ', 'moonwalkSide', 'moonwalkEndTime', '\x0aX: ', 'bots respawn after die', 'offsetTop', 'cntrlpl', 'skin4', 'drawPieSlice', '#ff6000', 'KeyM', 'drawChat', 'close', 'Ping: ', 'pvp', 'cos', '!xray:players', 'playerid', 'NOT spectating now.', 'min', 'Success', 'alpha', 'Translation request failed', 'debug', 'inBitingZone', 'closePath', 'str2', 'boostCooldown', 'killSelf', 'flag_isInArena', ' | Animal: ', 'match', 'left', 'alive', 'keydown', 'lethal', 'NckN: ', 'onclose', 'hpPer_n', 'textAlign', 'transitionStartTime', '/skins', 'You died of thirst :( Don\'t let your water run out!', 'Tracking:\x0aID:', 'wss://', '!zoom:', 'calculate', 'no_type', 'Remove all bots', '#c64a00', 'Camera Zoom (camzoom)', 'setUint8', 'clientX', 'nob', 'https://mope.io/assets/s/', 'buffer', 'slowTurnDistance', '#000000', 'Color names (KeyD): ', 'sqrt', 'blur', 'othtranslate', 'fillStyle', 'indexOf', 'You died from burning! (Get to water when on fire!)', 'BotController', 'consolechat enabled!consolechat=false to off', 'brown', 'playerID', 'SETTINGS', 'notrack', 'shadowOffsetY', 'msgudied', 'behindAngleDiffThreshold', '1516140jDJRsV', 'value', '8PLTAIL', 'lineWidth', 'idealMaxOverlap', 'Choose action: ', ' X: ', 'white', 'nAngle', '_fntSize', 'code', 'undefined', 'mapY', 'Hole', 'X-Ray PLAYERS enabled', 'server', 'hasOpacity', '#ff884c', 'animalSpecies', 'belowOffsetFactor', 'restored by chinanumber2', 'Defend', '//kick', 'call', 'opponentDashTime', 'coordsY', 'setUint32', '\x0aBot with id ', 'login_name', 'clicked!!!! pvpbot', 'count', 'getContext', 'port', 'disabled', 'skin3', 'microTurnDistance', 'animal-selector_AnimalSelector__skin-biome-container__2CzbL AnimalSelector__skin-biome-container animal-selector_AnimalSelector__biome-rare__iJwqW AnimalSelector__biome-rare', 'getOutlineColor', 'Add bot: 3 for IP (shift + N)', 'track:top_1', '{PX}', 'restore', '149970mKlaXj', 'prototype', 'behindOffsetFactor', 'noreason', 'following_obj', 'charCodeAt', 'strokeStyle', 'PVP Bot: Everywhere & Only apex', 'edge', 'score', 'bytesArray', 'getUint16', 'customDraw', 'adblockcheck', 'message', 'wss://righteous-vintage-teeth.glitch.me', 'font', '✔️Add bot', 'You\'ve been disconnected! Reason: ', '77190ncAQJr', 'tbotID is setted to ', 'from player to enemy', 'KeyC', 'Snowflakes: draw snowflakes', 'keyup', 'success:msgfirstconnect: ', 'angle', 'drawCircle', '#EF3C31', 'animal-selector_AnimalSelector__skin-name-text__2Wu9_ AnimalSelector__skin-name-text', 'Anti-Disconnect: Anti-Afk', 'length', 'name', 'wheel', 'no tracking', 'split', 'KeyF', 'tbot spawned', 'rByteIndex', 'writeString', 'opacity', 'https://mope.io/assets/s/2/skins/land/mouse/0/mouse.png?v=274', 'writeInt16', 'parse', '\" added.\x0aTo remove it type \x0arembind:', 'rgba(0, 0, 0, 0.5)', 'bytesLen', 'ICE', 'error', 'getSkinImagePath', 'PVP: ', 'getElementById', 'moonwalking_defend', 'beginPath', 'curBiome', 'Copy lines: copy other\'s chat', ' dced', 'AIM Bot: Def Bot & Everywhere & Only apex', 'LunairExe', 'black_dragon', 'behindBoostDistance', 'bot spawned', 'fill', 'get', 'moonwalk_def90_150', 'in-game_InGame__desktop-leaderboard__Ch9yk InGame__desktop-leaderboard', '#bf4f0b', 'bot #', 'coordsX', 'default follow', 'substring', 'Fps: ', '_0x13048d', 'only track_bot', 'forEach', 'https://i.postimg.cc/HWZLsZs4/QPdarJj.png', 'login_socialNetworkName', './assets/s/2/skins/volcano/blackdragon/0/blackdragon.png', 'OFF', 'textContent', 'Anti censore: For Chat', 'readUInt8', 'AutoGG disabled.', 'gg:', 'botNumber', '#b0a13b', 'endX', '24px Arial', 'save', '200266tGDQcD', 'or\x0arembind:', 'chatinput', 'chat', 'blue', '#RussianMope', 'minMovementDistance', '#FEED92', 'Now each of other messages is translated into ', ': XP: ', 'bots uses default nickname', 'flag_tailBitten', 'lastMouseMoveTime', '_ctx', 'sin', 'serverInfo', 'sessionId', 'middle', 'startX', 'facingConfirmationCount', 'removeItem', 'Sent chunk:', 'Add bot: only 3-4 for IP (shift + N)', 'function', 'right', 'edge-gameserver.mope.io', '2514762WaisNe', ' to ', 'log', 'throw', 'WATER', 'body'];
    _0x3169 = function() {
        return _0x171ade;
    };
    return _0x3169();
}
let screenIns_EndT = +new Date() + 0x2328,
    screenIns_EndTT = +new Date() + 0x2328;
timestamp = +new Date();
var lerpI = 0.175,
    prevAnim = [],
    PreviousXP, player = {},
    selfId = 0x0,
    objectsData = {},
    col_gameBg = '#3FBA54',
    col_snowcolor = _0x1b8bf1(0x3dc),
    col_outline_land = _0x1b8bf1(0x2cc),
    col_outline_ocean = '#007ec0',
    col_outline_arctic = _0x1b8bf1(0x2f0),
    col_outline_desert = '#a59215',
    col_outline_land2 = _0x1b8bf1(0x3db),
    col_outline_volcano = _0x1b8bf1(0x275),
    col_bg3 = _0x1b8bf1(0x2cc),
    col_air = _0x1b8bf1(0x3c3),
    col_wat1 = '#4E66E4',
    col_lava = _0x1b8bf1(0x1c8),
    col_wat2 = '#5e69a0',
    col_ocean = col_wat2,
    col_ocean_sand = _0x1b8bf1(0x3aa),
    col_desert_hill = _0x1b8bf1(0x39a),
    col_desert = _0x1b8bf1(0x418),
    col_food1 = _0x1b8bf1(0x2fe),
    col_food2 = _0x1b8bf1(0x322),
    col_plankton1 = _0x1b8bf1(0x2e1),
    col_plankton2 = '#C67019',
    col_dangerOutline = '#EF3C31',
    col_edibleOutline = _0x1b8bf1(0x353),
    col_rockHill = '#8C9688',
    col_rockHill_desert = '#878053',
    col_sweat = _0x1b8bf1(0x41f),
    col_rgba_sweat = _0x1b8bf1(0x2d6),
    col_energy = _0x1b8bf1(0x21a),
    col_oasis = '#007fa9',
    col_quicksand = _0x1b8bf1(0x288),
    biome_land = 0x0,
    biome_ocean = 0x1,
    biome_arctic = 0x2,
    biome_volcano = 0x3,
    biome_desert = 0x4,
    biome_forest = 0x5,
    o_biome_land = 0x1,
    o_animal = 0x2,
    o_hill = 0x3,
    o_waterSpot = 0x4,
    o_hidingHole = 0x5,
    o_hidingBush = 0x6,
    o_mudSpot = 0x7,
    o_rockHill = 0x8,
    o_bigHidingHole = 0x9,
    o_lake = 0xa,
    o_lakeIsland = 0xb,
    o_biome_ocean = 0xc,
    o_hidingHoleOcean = 0xd,
    o_abilityGObj = 0xe,
    o_fruitTree = 0xf,
    o_biome_arctic = 0x10,
    o_arcticIce = 0x11,
    o_fireBall = 0x12,
    o_snowBall = 0x13,
    o_berry = 0x14,
    o_water = 0x15,
    o_mushroom = 0x16,
    o_lillypad = 0x17,
    o_bigMushroom = 0x18,
    o_bigMushroomBush = 0x19,
    o_plankton = 0x1a,
    o_berryBush = 0x1b,
    o_planktonBush = 0x1c,
    o_banana = 0x1d,
    o_coconut = 0x1e,
    o_raspberry = 0x1f,
    o_pear = 0x20,
    o_beach = 0x21,
    o_biome_ocean_extraWater = 0x22,
    o_seaweed = 0x23,
    o_starfish = 0x24,
    o_kelp = 0x25,
    o_clam = 0x26,
    o_conchShell = 0x27,
    o_river = 0x28,
    o_volcano = 0x2a,
    o_lava = 0x2b,
    o_lavaLake = 0x2c,
    o_healingStone = 0x2e,
    o_biome_volcano = 0x2f,
    o_arcticNut = 0x30,
    o_carrot = 0x31,
    o_watermelon = 0x32,
    o_watermelonSlice = 0x33,
    o_meatSmall = 0x34,
    o_meatMedium = 0x35,
    o_meatLarge = 0x36,
    o_biome_poison = 0x37,
    o_poisonBerry = 0x38,
    o_spiderWeb = 0x39,
    o_bog = 0x3a,
    o_poisonBall = 0x3b,
    o_cloudBerry = 0x3c,
    o_flock = 0x3d,
    o_flockspot = 0x3e,
    o_egg = 0x3f,
    o_sleigh = 0x40,
    o_quill = 0x41,
    o_ostrichEgg = 0x42,
    o_waterDrop = 0x43,
    o_beeHive = 0x44,
    o_honeyComb = 0x45,
    o_fire = 0x46,
    o_fireTornado = 0x47,
    o_sinkHole = 0x48,
    o_DangerAreaCircle = 0x49,
    o_animalCarcass = 0x4a,
    o_chilli = 0x4b,
    o_safeArea = 0x4c,
    o_spawnEgg = 0x4d,
    o_teamStone = 0x4e,
    o_biome_desert = 0x4f,
    o_iceCrystal = 0x50,
    o_camelSpit = 0x51,
    o_cactus = 0x52,
    o_dustCloud = 0x53,
    o_bone = 0x54,
    o_sweatPoison = 0x55,
    o_poisonPool = 0x56,
    o_flytrap = 0x57,
    o_flytrapMouth = 0x58,
    o_mango = 0x59,
    o_dateFruit = 0x5a,
    o_melon = 0x5b,
    o_melonSlice = 0x5c,
    o_cactusPear = 0x5d,
    o_walnut = 0x5e,
    o_orange = 0x5f,
    o_aloeveraPlant = 0x60,
    o_aloeveraLeaf = 0x61,
    o_antHill = 0x62,
    o_quickSand = 0x63,
    o_oasis = 0x64,
    o_tree = 0x65,
    o_tsunami = 0x66,
    o_tornado = 0x67,
    o_dustStorm = 0x68,
    o_snowStorm = 0x69,
    o_snow = 0x6a,
    o_lavaDrop = 0x6b,
    o_heatStorm = 0x6c,
    o_coldStorm = 0x6d,
    o_rainStorm = 0x6e,
    o_rainDrop = 0x6f,
    o_iceBall = 0x70,
    o_gift = 0x71,
    o_cartSaddle = 0x72,
    o_saddle = 0x73,
    o_pointer = 0x74,
    o_animalBody = 0x75,
    o_forest = 0x76,
    o_animalFOV = 0x77,
    o_viralStorm = 0x7a,
    o_virus = 0x7b,
    o_immunityFood = 0x7d,
    toRadians = function(_0x2e2e07) {
        return _0x2e2e07 * (Math['PI'] / 0xb4);
    },
    clamp = function(_0x30cb3b, _0x59a7b4, _0x2b2805) {
        var _0x2fbb20 = _0x1b8bf1;
        return Math['min'](_0x2b2805, Math[_0x2fbb20(0x36e)](_0x59a7b4, _0x30cb3b));
    },
    encode_utf8 = function(_0x4b7714) {
        return unescape(encodeURIComponent(_0x4b7714));
    },
    decode_utf8 = function(_0x33cf51) {
        return decodeURIComponent(escape(_0x33cf51));
    },
    bit_get = function(_0xe92022, _0x1bdb1d) {
        return (_0xe92022 >> _0x1bdb1d) % 0x2 != 0x0;
    },
    bit_set = function(_0x491e6f, _0xa66040, _0xff912c) {
        if (_0xff912c) return _0x491e6f | 0x1 << _0xa66040;
        else return _0x491e6f & ~(0x1 << _0xa66040);
    };

function MsgReaderBitsGroup(_0x5fa2b) {
    var _0x7fcf8a = _0x1b8bf1;
    this['bytesArray'] = new Uint8Array(0x14), this[_0x7fcf8a(0x261)] = 0x0, this[_0x7fcf8a(0x3d2)] = 0x1, this[_0x7fcf8a(0x259)] = 0x0, this['getBool'] = function() {
        var _0x4bc54f = _0x7fcf8a,
            _0x127c64 = this['bytesArray'][this[_0x4bc54f(0x259)]],
            _0xcc1bb = bit_get(_0x127c64, this[_0x4bc54f(0x3d2)]) > 0x0;
        return this['rBitIndex'] += 0x1, this['rBitIndex'] > 0x7 && (this[_0x4bc54f(0x3d2)] = 0x1, this[_0x4bc54f(0x259)] += 0x1), _0xcc1bb;
    }, this['getInt0to3'] = function() {
        var _0x14c3d2 = _0x7fcf8a;
        return this[_0x14c3d2(0x3a2)](0x2);
    }, this[_0x7fcf8a(0x3a2)] = function(_0x3385db) {
        var _0x4d3f39 = _0x7fcf8a,
            _0xdf136a = 0x0;
        for (var _0x5f1e50 = 0x0; _0x5f1e50 < _0x3385db; _0x5f1e50++) {
            var _0x40319c = this[_0x4d3f39(0x362)]();
            _0xdf136a = bit_set(_0xdf136a, _0x5f1e50, _0x40319c);
        }
        return _0xdf136a;
    }, this['byteToStr'] = function(_0x3735bd) {
        var _0x31e1ce = '';
        for (var _0x42a734 = 0x0; _0x42a734 < 0x8; _0x42a734++) _0x31e1ce += bit_get(_0x3735bd, _0x42a734) > 0x0 ? '1' : '0';
        return _0x31e1ce;
    };
    var _0x3afae0 = !![];
    do {
        var _0x1d358f = _0x5fa2b[_0x7fcf8a(0x284)]();
        this[_0x7fcf8a(0x23d)][this[_0x7fcf8a(0x261)]++] = _0x1d358f, _0x3afae0 = bit_get(_0x1d358f, 0x0) > 0x0;
    } while (_0x3afae0);
}

function packet(_0x4d2e39) {
    var _0x1bbbfc = _0x1b8bf1;
    this[_0x1bbbfc(0x424)] = 0x0, this[_0x1bbbfc(0x422)] = new DataView(new ArrayBuffer(_0x4d2e39)), this[_0x1bbbfc(0x358)] = function(_0x1788be) {
        var _0x1eb7e9 = _0x1bbbfc;
        this['dataView'][_0x1eb7e9(0x1f2)](this[_0x1eb7e9(0x424)], _0x1788be), this[_0x1eb7e9(0x424)] += 0x1;
    }, this['writeUInt16'] = function(_0x5a98ec) {
        var _0xe866fb = _0x1bbbfc;
        this[_0xe866fb(0x422)]['setUint16'](this[_0xe866fb(0x424)], _0x5a98ec, ![]), this['len'] += 0x2;
    }, this[_0x1bbbfc(0x25d)] = function(_0x4a7ac1) {
        var _0x5797d2 = _0x1bbbfc;
        this[_0x5797d2(0x422)][_0x5797d2(0x2bb)](this[_0x5797d2(0x424)], _0x4a7ac1, ![]), this[_0x5797d2(0x424)] += 0x2;
    }, this['writeUInt32'] = function(_0x11eb23) {
        var _0x313378 = _0x1bbbfc;
        this[_0x313378(0x422)]['setUint32'](this[_0x313378(0x424)], _0x11eb23, ![]), this[_0x313378(0x424)] += 0x4;
    }, this['writeString'] = function(_0xda2cd6) {
        var _0x33573e = _0x1bbbfc;
        _0xda2cd6 = encode_utf8(_0xda2cd6), len = _0xda2cd6[_0x33573e(0x252)], this[_0x33573e(0x3dd)](_0xda2cd6[_0x33573e(0x252)]);
        for (var _0x4df71d = 0x0; _0x4df71d < len; _0x4df71d++) {
            this[_0x33573e(0x358)](_0xda2cd6[_0x33573e(0x238)](_0x4df71d));
        }
    };
}

function reader(_0x24c6a5) {
    var _0x86ccae = _0x1b8bf1;
    this[_0x86ccae(0x1ad)] = _0x24c6a5, this[_0x86ccae(0x426)] = 0x0, this[_0x86ccae(0x284)] = function() {
        var _0x12fc21 = _0x86ccae,
            _0x1b5981 = this['data'][_0x12fc21(0x349)](this[_0x12fc21(0x426)]);
        return this['offset'] += 0x1, _0x1b5981;
    }, this[_0x86ccae(0x319)] = function() {
        var _0x43da7e = _0x86ccae;
        try {
            var _0x4edb27 = this[_0x43da7e(0x1ad)][_0x43da7e(0x23e)](this[_0x43da7e(0x426)], ![]);
            return this[_0x43da7e(0x426)] += 0x2, _0x4edb27;
        } catch (_0xace458) {
            return 0x0;
        }
    }, this[_0x86ccae(0x41c)] = function() {
        var _0x46fcba = _0x86ccae;
        try {
            var _0x50e71d = this[_0x46fcba(0x1ad)][_0x46fcba(0x3d3)](this[_0x46fcba(0x426)], ![]);
            return this[_0x46fcba(0x426)] += 0x2, _0x50e71d;
        } catch (_0x451e31) {
            return 0x0;
        }
    }, this['readUInt32'] = function() {
        var _0x748a24 = _0x86ccae,
            _0x1eff99 = this[_0x748a24(0x1ad)][_0x748a24(0x405)](this[_0x748a24(0x426)], ![]);
        return this['offset'] += 0x4, _0x1eff99;
    }, this[_0x86ccae(0x356)] = function() {
        var _0x243fbd = _0x86ccae,
            _0x1c7958 = this[_0x243fbd(0x319)](),
            _0x238ff0 = '',
            _0x4d3213;
        for (var _0x2132d2 = 0x0; _0x2132d2 < _0x1c7958; _0x2132d2++) {
            _0x4d3213 = this[_0x243fbd(0x284)]();
            if (_0x2132d2 != _0x1c7958 - 0x1) _0x238ff0 += String['fromCharCode'](_0x4d3213);
        }
        return decode_utf8(_0x238ff0);
    }, this[_0x86ccae(0x378)] = function() {}, this[_0x86ccae(0x2bc)] = function() {
        return new MsgReaderBitsGroup(this);
    };
}

function sendPacket(_0x14d381) {
    var _0x297d5e = _0x1b8bf1;
    ws[_0x297d5e(0x38a)] === ws['OPEN'] && ws[_0x297d5e(0x38c)](_0x14d381[_0x297d5e(0x422)][_0x297d5e(0x1f6)]);
}
SendChatMessage = function(_0x9f9ec3) {
    var _0x24646e = _0x1b8bf1,
        _0x1e4a65 = new packet(0x3 + unescape(encodeURIComponent(_0x9f9ec3))[_0x24646e(0x252)]);
    _0x1e4a65['writeUInt8'](0x13), _0x1e4a65['writeString'](_0x9f9ec3), sendPacket(_0x1e4a65);
};
const CHAT_CONFIG = {
    'MAX_INPUT_LENGTH': 0xaf,
    'CHUNK_SIZE': 0x23,
    'SEND_DELAY': 0x64
};
let chatQueue = [],
    isSending = ![];
async function processChatQueue() {
    var _0x34dc7c = _0x1b8bf1;
    if (chatQueue[_0x34dc7c(0x252)] === 0x0 || isSending) return;
    isSending = !![];
    const {
        chunk: _0x379dc4,
        callback: _0x46245c
    } = chatQueue[_0x34dc7c(0x33d)]();
    var _0x18bb51 = await translateText(_0x379dc4);
    const _0x2f8a05 = new packet(0x3 + encode_utf8(autotranslate ? _0x18bb51 : _0x379dc4)[_0x34dc7c(0x252)]);
    _0x2f8a05['writeUInt8'](0x13), _0x2f8a05['writeString'](autotranslate ? _0x18bb51 : _0x379dc4), sendPacket(_0x2f8a05), setTimeout(() => {
        isSending = ![], processChatQueue();
    }, CHAT_CONFIG[_0x34dc7c(0x3c7)]);
}

function sendChunkedMessage(_0xd4923a) {
    var _0x375a70 = _0x1b8bf1;
    for (let _0x5404bd = 0x0; _0x5404bd < _0xd4923a[_0x375a70(0x252)]; _0x5404bd += CHAT_CONFIG[_0x375a70(0x2d4)]) {
        const _0x27115b = _0xd4923a[_0x375a70(0x279)](_0x5404bd, _0x5404bd + CHAT_CONFIG[_0x375a70(0x2d4)]);
        chatQueue[_0x375a70(0x403)]({
            'chunk': _0x27115b,
            'callback': () => console[_0x375a70(0x2a8)](_0x375a70(0x2a1), _0x27115b)
        });
    }
    processChatQueue();
}
_0x2c7e80 = function() {
    var _0x1af336 = _0x1b8bf1,
        _0x3d03e9 = document[_0x1af336(0x266)](_0x1af336(0x28e));
    if (!_0x149ff5 && player) _0x3d03e9[_0x1af336(0x438)][_0x1af336(0x41b)] = _0x1af336(0x2ed), _0x3d03e9['focus'](), _0x149ff5 = !![], _0x3d03e9[_0x1af336(0x3ce)] = ![] ? 0x64 : CHAT_CONFIG[_0x1af336(0x34a)], _0x3d03e9[_0x1af336(0x40f)] = function() {
        if (_0x149ff5) _0x2c7e80();
    };
    else {
        if (_0x149ff5) {
            var _0x193d16 = _0x3d03e9[_0x1af336(0x20a)] + '';
            _0x149ff5 = ![], _0x3d03e9['style']['visibility'] = _0x1af336(0x415), _0x193d16['length'] > 0x0 && player && (!commands(_0x193d16) && sendChunkedMessage(_0x193d16)), _0x3d03e9[_0x1af336(0x20a)] = '';
        }
    }
};
var prevSprint;
SendSprint = function() {
    var _0x45aa54 = _0x1b8bf1;
    if (prevSprint && Date[_0x45aa54(0x35b)]() - prevSprint < 0x2ee) return;
    else {
        prevSprint = Date[_0x45aa54(0x35b)]();
        var _0x4f8497 = new packet(0x2);
        _0x4f8497[_0x45aa54(0x358)](0x15), _0x4f8497[_0x45aa54(0x358)](0x1), sendPacket(_0x4f8497), setTimeout(function() {
            var _0x539ede = _0x45aa54,
                _0x110a1 = new packet(0x2);
            _0x110a1[_0x539ede(0x358)](0x15), _0x110a1[_0x539ede(0x358)](0x0), sendPacket(_0x110a1);
        }, 0x1f4);
    }
}, JoinGame = function(_0x58f396) {
    var _0x4905d8 = _0x1b8bf1;
    playgame_visual_function(), newmsg = new packet(0x21 + 0x64), (newmsg[_0x4905d8(0x358)](0x71), newmsg['writeUInt16'](0x4ce), newmsg[_0x4905d8(0x3dd)](0x4ce), newmsg[_0x4905d8(0x25a)](_0x58f396)), sendPacket(newmsg), $bus['emit']($bus[_0x4905d8(0x1b3)][_0x4905d8(0x386)]);
};
var binds_ = [];
document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x1e1), function(_0x3cf42e) {
    var _0xb43466 = _0x1b8bf1;
    if (document[_0xb43466(0x266)](_0xb43466(0x28e))[_0xb43466(0x438)][_0xb43466(0x41b)] !== 'visible') {
        for (var _0xa35e0a = 0x0; _0xa35e0a < Object[_0xb43466(0x1ba)](binds_)[_0xb43466(0x252)]; _0xa35e0a++) {
            try {
                if (_0x3cf42e[_0xb43466(0x213)] == binds_[_0xa35e0a][_0xb43466(0x39b)] && binds_[_0xa35e0a]['bindtype'] == 'function') eval(binds_[_0xa35e0a][_0xb43466(0x28f)]());
                else _0x3cf42e[_0xb43466(0x213)] == binds_[_0xa35e0a][_0xb43466(0x39b)] && binds_[_0xa35e0a]['bindtype'] != _0xb43466(0x2a3) && SendChatMessage(binds_[_0xa35e0a][_0xb43466(0x28f)]);
            } catch (_0x49694c) {
                showMessage(_0x49694c, 0x9c4), binds_[_0xa35e0a] = {};
            }
        }
        if (_0x3cf42e['code'] == _0xb43466(0x3a5)) JoinGame('#ProXYGamer' + hard);
        else {
            if (_0x3cf42e[_0xb43466(0x213)] == 'Escape') pause = !pause, showMessage(_0xb43466(0x420) + (pause ? 'ON' : _0xb43466(0x281)), 0x9c4);
            else {
                if (_0x3cf42e[_0xb43466(0x316)] == 0x26) sendurpacket(0x1a);
                else {
                    if (_0x3cf42e[_0xb43466(0x316)] == 0x28) sendurpacket(0x1b);
                    else {
                        if (_0x3cf42e['shiftKey']) {
                            _0x3cf42e[_0xb43466(0x213)] == _0xb43466(0x393) && (PVPBot = !PVPBot, showMessage(_0xb43466(0x42f) + (PVPBot ? 'ON' : _0xb43466(0x281)), 0x9c4));
                            _0x3cf42e['code'] == _0xb43466(0x249) && (actionNumber == Object[_0xb43466(0x36a)](actionChoose)[_0xb43466(0x252)] ? actionNumber = 0x1 : actionNumber += 0x1, pvpAction = actionChoose[actionNumber], showMessage(_0xb43466(0x31a) + actionChoose[actionNumber], 0x9c4));
                            _0x3cf42e[_0xb43466(0x213)] == _0xb43466(0x354) && (AIMBot = !AIMBot, showMessage(_0xb43466(0x2c6) + (AIMBot ? 'ON' : _0xb43466(0x281)), 0x9c4));
                            _0x3cf42e[_0xb43466(0x213)] == _0xb43466(0x40d) && (OutlineEnabled = !OutlineEnabled, showMessage('Custom outlines (KeyA): ' + (OutlineEnabled ? 'ON' : 'OFF'), 0x9c4));
                            _0x3cf42e['code'] == _0xb43466(0x1be) && (colorNames = !colorNames, showMessage(_0xb43466(0x1f9) + (colorNames ? 'ON' : _0xb43466(0x281)), 0x9c4));
                            _0x3cf42e[_0xb43466(0x213)] == _0xb43466(0x3ae) && (spawnrecaptchaBots(), showMessage(_0xb43466(0x244), 0x9c4));
                            _0x3cf42e['code'] == _0xb43466(0x1c9) && (joingame(), showMessage('✔️Joingame', 0x9c4));
                            _0x3cf42e[_0xb43466(0x213)] == 'KeyL' && (joingame(), showMessage(_0xb43466(0x34e), 0x9c4));
                            if (_0x3cf42e[_0xb43466(0x213)] == _0xb43466(0x257)) FoodEaterBot = !FoodEaterBot, showMessage(_0xb43466(0x351) + (FoodEaterBot ? 'ON' : _0xb43466(0x281)), 0x9c4);
                            else _0x3cf42e['code'] == _0xb43466(0x3f4) && (HIDE_OBJECTS_WHILE_1V1 = !HIDE_OBJECTS_WHILE_1V1, showMessage('Hide Objects (KeyZ): ' + (HIDE_OBJECTS_WHILE_1V1 ? 'ON' : _0xb43466(0x281)), 0x9c4));
                        }
                    }
                }
            }
        }
    }
});
var canvas = document[_0x1b8bf1(0x266)](_0x1b8bf1(0x385));
ctx = canvas[_0x1b8bf1(0x228)]('2d');
const LTDragon = new Image();
LTDragon[_0x1b8bf1(0x429)] = 'https://i.postimg.cc/52ZY9Pgk/LT-skin.webp';
const HDDragon = new Image();
HDDragon[_0x1b8bf1(0x429)] = _0x1b8bf1(0x32a);
const HDBDragon = new Image();
HDBDragon[_0x1b8bf1(0x429)] = _0x1b8bf1(0x30a);
const HDBDragon2 = new Image();
HDBDragon2[_0x1b8bf1(0x429)] = _0x1b8bf1(0x433);
const HDMouse = new Image();
HDMouse[_0x1b8bf1(0x429)] = _0x1b8bf1(0x27e);
var waterBar_n = 0x0,
    xpPer = 0x0,
    playgame_visual_function = {},
    cursorX = 0x0,
    cursorY = 0x0,
    camzoom = 0x0,
    camx = 0x0,
    camy = 0x0,
    ZOOM = 0x1a,
    resourceType = -0x1,
    xpNextAnimal = 0x0,
    xp = 0x0,
    canvasW = 0x0,
    canvasH = 0x0,
    lbCanvas = null,
    leaderboardData = [],
    ws = null,
    pixelRat = window[_0x1b8bf1(0x2e2)],
    buttonSettings = {},
    wbs = null;
alphaskins = {
    0x0: _0x1b8bf1(0x2e8),
    0x1: _0x1b8bf1(0x3c2),
    0x2: _0x1b8bf1(0x22b),
    0x3: _0x1b8bf1(0x1c6),
    0x4: _0x1b8bf1(0x3d9)
}, drawskins = {
    0x0: LTDragon,
    0x1: HDDragon,
    0x2: HDBDragon,
    0x3: HDBDragon2,
    0x4: HDMouse
}, isInside = function(_0x46c88c, _0x19b239) {
    var _0x5b98e8 = _0x1b8bf1;
    return _0x46c88c['x'] > _0x19b239['x'] && _0x46c88c['x'] < _0x19b239['x'] + _0x19b239[_0x5b98e8(0x36d)] && _0x46c88c['y'] < _0x19b239['y'] + _0x19b239[_0x5b98e8(0x35d)] && _0x46c88c['y'] > _0x19b239['y'];
};
var settings_alpha = 0.6,
    skins_alpha = 0.6,
    bots_alpha = 0.6,
    pvpbot_alpha = 0.6,
    settings_ = ![],
    pvpbot_ = ![],
    skins_ = ![],
    bots_ = ![],
    isButtonHovered = ![],
    isXRAYOBJEnabled = !![],
    isXRAYPLAYERSEnabled = !![],
    pause = ![],
    AutoGG = ![],
    AutoGL = ![],
    camzoom_f = !![],
    anticensore = ![],
    PVPBot = ![],
    AIMBot = ![],
    FoodEaterBot = ![],
    XRAYPLEVERYWHERE = ![],
    antiDisconnect = ![],
    FreeSkins = !![],
    snowflake = ![],
    skin1 = ![],
    skin2 = ![],
    skin3 = ![],
    skin4 = ![],
    skin5 = ![],
    bots_enabled = ![],
    bots_alive = 0x0,
    respawn_bots = !![],
    selfOutline = ![],
    OutlineEnabled = ![],
    colorNames = !![],
    BetterChat = !![],
    stat = 0x1,
    formatNumK = function(_0x3d77c8) {
        return abbreviate_number(_0x3d77c8);
    },
    abbreviate_number = function(_0x345e0a, _0x3ab31a) {
        var _0x4ac589 = _0x1b8bf1;
        if (_0x345e0a === null) return null;
        if (_0x345e0a === 0x0) return '0';
        _0x3ab31a = !_0x3ab31a || _0x3ab31a < 0x0 ? 0x0 : _0x3ab31a;
        var _0x3d1a7a = _0x345e0a[_0x4ac589(0x412)](0x2)[_0x4ac589(0x256)]('e'),
            _0x224dd3 = _0x3d1a7a[_0x4ac589(0x252)] === 0x1 ? 0x0 : Math[_0x4ac589(0x2d9)](Math[_0x4ac589(0x1d2)](_0x3d1a7a[0x1][_0x4ac589(0x327)](0x1), 0xe) / 0x3),
            _0x53cb87 = _0x224dd3 < 0x1 ? _0x345e0a['toFixed'](0x0 + _0x3ab31a) : (_0x345e0a / Math[_0x4ac589(0x3e9)](0xa, _0x224dd3 * 0x3))[_0x4ac589(0x39e)](0x2),
            _0x1db8c2 = _0x53cb87 < 0x0 ? _0x53cb87 : Math[_0x4ac589(0x3cd)](_0x53cb87),
            _0x57be0b = _0x1db8c2 + ['', 'K', 'M', 'B', 'T'][_0x224dd3];
        return _0x57be0b;
    };

function getDistance(_0x54ba91, _0x22d169) {
    var _0x3e870e = _0x1b8bf1;
    let _0x3a5e67 = (_0x22d169['nx'] ? _0x22d169['nx'] : _0x22d169['x']) - (_0x54ba91['nx'] ? _0x54ba91['nx'] : _0x54ba91['x']),
        _0x3445b6 = (_0x22d169['ny'] ? _0x22d169['ny'] : _0x22d169['y']) - (_0x54ba91['ny'] ? _0x54ba91['ny'] : _0x54ba91['y']);
    return Math[_0x3e870e(0x1fa)](_0x3a5e67 * _0x3a5e67 + _0x3445b6 * _0x3445b6);
};

function getPolus(_0x52caa3, _0x184424) {
    let _0x37b4a2 = _0x52caa3['x'] - _0x184424['x'] < 0x0 ? 'E' : 'W',
        _0xc7dcf4 = _0x52caa3['y'] - _0x184424['y'] < 0x0 ? 'S' : 'N';
    return _0xc7dcf4 + _0x37b4a2;
}
isFood = function(_0x126185) {
    var _0x321aa5 = _0x1b8bf1;
    return _0x126185 && [0x14, 0x16, 0x18, 0x17, 0x1a, 0x1d, 0x1e, 0x1f, 0x20, 0x23, 0x24, 0x25, 0x26, 0x27, 0x30, 0x31, 0x32, 0x33, 0x36, 0x38, 0x3b, 0x3c, 0x3f, 0x41, 0x42, 0x44, 0x45, 0x4b, 0x52, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x60, 0x61, 0x62]['indexOf'](_0x126185[_0x321aa5(0x303)]) >= 0x0 && _0x126185['isEdibleOutlined'] && _0x126185[_0x321aa5(0x310)]();
}, isPlayer = function(_0x27164f) {
    return _0x27164f && _0x27164f['oType'] == 0x2;
}, isEatable = function(_0x254f00) {
    var _0x4d608f = _0x1b8bf1;
    return _0x254f00 && _0x254f00[_0x4d608f(0x310)] && _0x254f00['isEdibleOutlined']();
}, isWater = function(_0x27a747) {
    var _0xf23f28 = _0x1b8bf1;
    return [0x15][_0xf23f28(0x1fe)](_0x27a747[_0xf23f28(0x303)]) >= 0x0;
}, isDangerOutline = function(_0x3e7fec) {
    var _0x187d2f = _0x1b8bf1;
    return _0x3e7fec && _0x3e7fec[_0x187d2f(0x22e)] && _0x3e7fec[_0x187d2f(0x22e)]() == _0x187d2f(0x24f);
}, IsApex = function(_0x373844) {
    var _0x48a39f = _0x1b8bf1;
    return [0xe, 0x18, 0x20, 0x2e, 0x35, 0x3d, 0x44, 0x46, 0x47, 0x48, 0x49, 0x5f, 0x60, 0x64, 0x65, 0x6a, 0x6b, 0x66, 0x7a][_0x48a39f(0x1fe)](_0x373844[_0x48a39f(0x3ef)]) >= 0x0;
}, IsPlayer = function(_0x4798ba) {
    return _0x4798ba['oType'] == 0x2;
}, IsArena = function(_0x2ecc14) {
    var _0x57edcb = _0x1b8bf1;
    return _0x2ecc14[_0x57edcb(0x303)] == 0xe;
}, IsBot = function(_0x494522) {
    var _0x3d638a = _0x1b8bf1;
    return [0x2d, 0x3a, 0x3b, 0x3c, 0x3e, 0x43, 0x45]['indexOf'](_0x494522[_0x3d638a(0x3ef)]) >= 0x0;
};

function getFrom(_0xc9472d, _0x2c8cc9, _0x4b3648, _0x3e1a5d) {
    var _0x24afe0 = _0x1b8bf1;
    return {
        'x': _0xc9472d + Math[_0x24afe0(0x1ce)](_0x4b3648) * _0x3e1a5d,
        'y': _0x2c8cc9 + Math[_0x24afe0(0x29a)](_0x4b3648) * _0x3e1a5d
    };
};

function getFront(_0x479f14, _0x35a225, _0x4a23bc, _0x58540f) {
    return getFrom(_0x479f14, _0x35a225, _0x4a23bc + halfPI, _0x58540f);
};

function getLeft(_0x3c41c4, _0x54f673, _0xb0ea35, _0x407da7) {
    return getFrom(_0x3c41c4, _0x54f673, _0xb0ea35 + Math['PI'], _0x407da7);
};

function getRight(_0xc8836d, _0x177619, _0x26af06, _0x47ec48) {
    return getFrom(_0xc8836d, _0x177619, _0x26af06, _0x47ec48);
};

function getBehind(_0x5b4256, _0x16b172, _0x340994, _0x5ee3b6) {
    return getFrom(_0x5b4256, _0x16b172, _0x340994 - halfPI, _0x5ee3b6);
};

function getTopRight(_0x28d6e1, _0x222378, _0xbb87f, _0x2548b5) {
    return getFrom(_0x28d6e1, _0x222378, _0xbb87f - quarterPI, _0x2548b5);
};

function getTopLeft(_0x4b3f56, _0x187ca6, _0x78993e, _0x3af8e6) {
    return getFrom(_0x4b3f56, _0x187ca6, _0x78993e + quarterPI, _0x3af8e6);
};

function getBottomRight(_0x4ea183, _0x31c991, _0x24cbd4, _0x5cad37) {
    return getFrom(_0x4ea183, _0x31c991, _0x24cbd4 - threeQuarterPI, _0x5cad37);
};

function getBottomLeft(_0x4580c7, _0xac1634, _0x202539, _0x20bb28) {
    return getFrom(_0x4580c7, _0xac1634, _0x202539 + threeQuarterPI, _0x20bb28);
};

function getFrom2(_0x3aa6c8, _0x4b0f73, _0x5ac878, _0x49280c) {
    var _0x203c45 = _0x1b8bf1;
    return {
        'x': _0x3aa6c8 - Math[_0x203c45(0x1ce)](_0x5ac878) * _0x49280c,
        'y': _0x4b0f73 - Math[_0x203c45(0x29a)](_0x5ac878) * _0x49280c
    };
};

function getFace(_0x3c8450, _0x3a4dcc, _0xd57093, _0x3163d7) {
    return getFrom2(_0x3c8450, _0x3a4dcc, _0xd57093 - halfPI, _0x3163d7);
};
var PI = Math['PI'],
    quarterPI = Math['PI'] / 0x4,
    halfPI = Math['PI'] / 0x2,
    threeQuarterPI = 0x3 * Math['PI'] / 0x4;
const img = new Image();
img[_0x1b8bf1(0x429)] = _0x1b8bf1(0x37a);
const imgcommon = new Image();
imgcommon[_0x1b8bf1(0x429)] = 'https://doudimodpack6ef405d279.netlify.app/common.png';
const imgskins = new Image();
imgskins['src'] = 'https://doudimodpack6ef405d279.netlify.app/skins.png';
const imgbots = new Image();
imgbots[_0x1b8bf1(0x429)] = _0x1b8bf1(0x2f2);
const imgcombat = new Image();
imgcombat[_0x1b8bf1(0x429)] = _0x1b8bf1(0x2b6);
const imgother = new Image();
imgother['src'] = _0x1b8bf1(0x32f);
var Piechart = function(_0x1633e8) {
        var _0x237361 = _0x1b8bf1;
        this[_0x237361(0x3b7)] = _0x1633e8, this[_0x237361(0x387)] = _0x1633e8[_0x237361(0x387)], this['pad'] = _0x1633e8['pad'], this[_0x237361(0x3a6)] = _0x1633e8[_0x237361(0x3a6)], this['_ctx'] = this[_0x237361(0x3a6)][_0x237361(0x228)]('2d'), this[_0x237361(0x30b)] = _0x1633e8[_0x237361(0x30b)], this['radius'] = _0x1633e8[_0x237361(0x387)];
        var _0x38f487 = Math['max'](...Object[_0x237361(0x36a)](this[_0x237361(0x3b7)][_0x237361(0x1ad)]));
        this[_0x237361(0x373)] = function() {
            var _0x21492c = _0x237361,
                _0x4712a3 = 0x0,
                _0x53250e = 0x0;
            this['_ctx'][_0x21492c(0x28b)](), this['_ctx']['globalAlpha'] = 0.3, this[_0x21492c(0x24e)](_0x1633e8['x'] - this[_0x21492c(0x3e2)] / 0x2, _0x1633e8['y'] - this['pad'] / 0x2, this[_0x21492c(0x387)] - this[_0x21492c(0x3e2)], _0x21492c(0x210)), this[_0x21492c(0x299)]['restore']();
            for (var _0xb5832b in this[_0x21492c(0x3b7)][_0x21492c(0x1ad)]) {
                var _0x3d7615 = this[_0x21492c(0x3b7)][_0x21492c(0x1ad)][_0xb5832b];
                _0x4712a3 += _0x3d7615;
            }
            var _0x158dd2 = 0x0;
            for (_0xb5832b in this[_0x21492c(0x3b7)][_0x21492c(0x1ad)]) {
                this[_0x21492c(0x299)][_0x21492c(0x28b)](), this[_0x21492c(0x299)][_0x21492c(0x20c)] = 0x4, this[_0x21492c(0x299)][_0x21492c(0x239)] = _0x21492c(0x210), this[_0x21492c(0x299)][_0x21492c(0x3ad)] = 0.3;
                var _0x1fc592 = 0x0;
                _0x3d7615 = this[_0x21492c(0x3b7)][_0x21492c(0x1ad)][_0xb5832b];
                var _0x4b89d8 = 0x2 * Math['PI'] * _0x3d7615 / _0x4712a3;
                this['options'][_0x21492c(0x1ad)][_0xb5832b] == _0x38f487 && (this[_0x21492c(0x299)][_0x21492c(0x3ad)] = 0.6, _0x1fc592 = 0x8), this['drawPieSlice'](_0x1633e8['x'] - this[_0x21492c(0x3e2)] / 0x2, _0x1633e8['y'] - this[_0x21492c(0x3e2)] / 0x2, this['radius'] - this['pad'], _0x158dd2, _0x158dd2 + _0x4b89d8, this[_0x21492c(0x30b)][_0xb5832b], _0x1fc592), this[_0x21492c(0x299)][_0x21492c(0x232)](), _0x158dd2 += _0x4b89d8, _0x53250e++;
            }
        }, this[_0x237361(0x1c7)] = function(_0x18b39b, _0x5308f0, _0x4012d2, _0x1d23d6, _0x69f563, _0x288c28, _0x3ec983) {
            var _0x1b6b50 = _0x237361;
            this[_0x1b6b50(0x299)]['fillStyle'] = _0x288c28, this['_ctx']['beginPath'](), this[_0x1b6b50(0x299)][_0x1b6b50(0x2d0)](_0x18b39b, _0x5308f0), this['_ctx'][_0x1b6b50(0x2b5)](_0x18b39b, _0x5308f0, _0x4012d2 + _0x3ec983, _0x1d23d6, _0x69f563), this[_0x1b6b50(0x299)][_0x1b6b50(0x1d8)](), this[_0x1b6b50(0x299)][_0x1b6b50(0x271)]();
            if (_0x3ec983 > 0x0) this[_0x1b6b50(0x299)]['stroke']();
        }, this['drawCircle'] = function(_0x16ba32, _0x4cc453, _0x1e1118, _0x1143c3) {
            var _0x1b581f = _0x237361;
            this['_ctx'][_0x1b581f(0x1fd)] = _0x1143c3, this[_0x1b581f(0x299)]['beginPath'](), this[_0x1b581f(0x299)]['moveTo'](_0x16ba32, _0x4cc453), this[_0x1b581f(0x299)][_0x1b581f(0x2b5)](_0x16ba32, _0x4cc453, _0x1e1118, 0x0, Math['PI'] * 0x2), this[_0x1b581f(0x299)][_0x1b581f(0x1d8)](), this[_0x1b581f(0x299)][_0x1b581f(0x271)]();
        };
    },
    boardLength = 0x37,
    nameH = 0x28,
    pad = 0x5,
    borad_height = 0x28,
    borad_width = 0x28;
boardLength = borad_height + pad * 0x2;
var PX = {};
PX[_0x1b8bf1(0x2ff)] = 0x0, PX['canvas_ping'] = 0x0, PX['DEBUG_LAST_PING'] = 0x0, PX[_0x1b8bf1(0x2f5)] = 0x0, PX[_0x1b8bf1(0x347)] = {}, PX['pieChartCanvas'][_0x1b8bf1(0x36d)] = borad_width + pad * 0x2, PX[_0x1b8bf1(0x347)][_0x1b8bf1(0x35d)] = boardLength;
var before, now, fps;
before = Date[_0x1b8bf1(0x35b)](), fps = 0x0, requestAnimationFrame(function loop() {
    var _0xe8f438 = _0x1b8bf1;
    now = Date['now'](), fps = Math[_0xe8f438(0x384)](0x1 / ((now - before) / 0x3e8)), before = now, requestAnimationFrame(loop);
});
var DEBUG_LAST_PING = 0x0,
    DEBUG_LAST_PING_S = 0x0,
    canvas_info = setInterval(function() {
        var _0xffdc42 = _0x1b8bf1;
        PX[_0xffdc42(0x2ff)] = fps, PX[_0xffdc42(0x307)] = 0x0;
    }, 0x3e8),
    html = _0x1b8bf1(0x331);
$('body')['append'](html);

function PXBots_MENU() {
    var _0x344836 = _0x1b8bf1;
    if (ws) {
        ctx[_0x344836(0x28b)](), ctx[_0x344836(0x3ad)] = 0.2, ctx[_0x344836(0x1fd)] = _0x344836(0x38f), ctx[_0x344836(0x409)](canvas[_0x344836(0x36d)] - 0x10e * pixelRat, canvas['height'] / 0x2 - 0x96 * pixelRat, 0xfa * pixelRat, 0x12c * pixelRat), ctx[_0x344836(0x3ad)] = 0x1, ctx['drawImage'](img, imgX, imgY, imgWidth, imgHeight), ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)](), ctx['fillStyle'] = _0x344836(0x2b1), ctx[_0x344836(0x3ad)] = settings_alpha, ctx[_0x344836(0x409)](buttonX, buttonY, buttonWidth, buttonHeight), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = 0xc * pixelRat + _0x344836(0x3fd), ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x260), ctx[_0x344836(0x37e)] = 0x3, ctx['textAlign'] = _0x344836(0x308), ctx[_0x344836(0x39f)] = _0x344836(0x29d), ctx[_0x344836(0x3be)](_0x344836(0x204), buttonX + buttonWidth / 0x2, buttonY + buttonHeight / 0x2), ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)](), ctx['fillStyle'] = _0x344836(0x2b1), ctx[_0x344836(0x3ad)] = pvpbot_alpha, ctx[_0x344836(0x409)](buttonpvpbotX, buttonpvpbotY, buttonWidth, buttonHeight), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx['font'] = 0xc * pixelRat + _0x344836(0x3fd), ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx['shadowColor'] = _0x344836(0x260), ctx[_0x344836(0x37e)] = 0x3, ctx[_0x344836(0x1e6)] = _0x344836(0x308), ctx['textBaseline'] = 'middle', ctx[_0x344836(0x3be)]('PVP BOT', buttonpvpbotX + buttonWidth / 0x2, buttonpvpbotY + buttonHeight / 0x2), ctx['restore'](), ctx['save'](), ctx[_0x344836(0x1fd)] = _0x344836(0x2b1), ctx[_0x344836(0x3ad)] = skins_alpha, ctx[_0x344836(0x409)](buttonSkinsX, buttonSkinsY, buttonWidth, buttonHeight), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = 0xc * pixelRat + _0x344836(0x3fd), ctx['shadowOffsetX'] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx['shadowColor'] = _0x344836(0x260), ctx[_0x344836(0x37e)] = 0x3, ctx['textAlign'] = 'center', ctx[_0x344836(0x39f)] = _0x344836(0x29d), ctx[_0x344836(0x3be)](_0x344836(0x334), buttonSkinsX + buttonWidth / 0x2, buttonSkinsY + buttonHeight / 0x2), ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)](), ctx[_0x344836(0x1fd)] = _0x344836(0x2b1), ctx[_0x344836(0x3ad)] = bots_alpha, ctx['fillRect'](buttonBotsX, buttonBotsY, buttonWidth, buttonHeight), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = 0xc * pixelRat + _0x344836(0x3fd), ctx['shadowOffsetX'] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x260), ctx[_0x344836(0x37e)] = 0x3, ctx[_0x344836(0x1e6)] = 'center', ctx[_0x344836(0x39f)] = _0x344836(0x29d), ctx[_0x344836(0x3be)]('BOTS', buttonBotsX + buttonWidth / 0x2, buttonBotsY + buttonHeight / 0x2), ctx['restore'](), ctx[_0x344836(0x28b)](), ctx['fillStyle'] = 'white', ctx[_0x344836(0x243)] = 0xc * pixelRat + _0x344836(0x3fd), ctx['shadowOffsetX'] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x382), ctx[_0x344836(0x3ad)] = 0x1, ctx['shadowBlur'] = 0x3, ctx[_0x344836(0x1e6)] = _0x344836(0x308), ctx[_0x344836(0x3be)](_0x344836(0x27a) + PX[_0x344836(0x2ff)], buttonX + ctx[_0x344836(0x37b)](_0x344836(0x27a) + PX[_0x344836(0x2ff)])[_0x344836(0x36d)] / 0x2 + 2.5 * pixelRat, button2Y + buttonHeight + 0x14 * pixelRat), waterBar_n += (waterBarPerc_n - waterBar_n) * 0.1, xpPer += (xpPer_n - xpPer) * 0.03;
        if (!player && respawnXp != 0x0) ctx[_0x344836(0x3be)](_0x344836(0x397) + formatNumK(respawnXp), buttonX + ctx[_0x344836(0x37b)](_0x344836(0x397) + formatNumK(respawnXp))[_0x344836(0x36d)] / 0x2 + 2.5 * pixelRat, button2Y + buttonHeight + 0x14 * 0x3 * pixelRat);
        if (player) ctx[_0x344836(0x3be)](_0x344836(0x38e) + Math['round'](xpPer * 0xa) / 0xa + '%', buttonX + ctx[_0x344836(0x37b)](_0x344836(0x38e) + Math['round'](xpPer * 0xa) / 0xa + '%')[_0x344836(0x36d)] / 0x2 + 2.5 * pixelRat, button2Y + buttonHeight + 0x14 * 0x2 * pixelRat);
        if (player) ctx[_0x344836(0x3be)](_0x344836(0x313) + Math[_0x344836(0x384)](waterBar_n) + '%', buttonX + ctx[_0x344836(0x37b)]('Resource: ' + Math['round'](waterBar_n) + '%')[_0x344836(0x36d)] / 0x2 + 2.5 * pixelRat, button2Y + buttonHeight + 0x14 * 0x3 * pixelRat);
        if (player) ctx[_0x344836(0x3be)](_0x344836(0x350) + (player[_0x344836(0x1e5)] > 0x0 ? Math[_0x344836(0x384)](player['hpPer_n'] * 0xa) / 0xa : Math['round'](0x64)) + '%', buttonX + ctx[_0x344836(0x37b)](_0x344836(0x350) + (player[_0x344836(0x1e5)] > 0x0 ? Math[_0x344836(0x384)](player[_0x344836(0x1e5)] * 0xa) / 0xa : Math[_0x344836(0x384)](0x64)) + '%')[_0x344836(0x36d)] / 0x2 + 2.5 * pixelRat, button2Y + buttonHeight + 0x14 * 0x4 * pixelRat);
        ctx[_0x344836(0x3be)](_0x344836(0x1cc) + (DEBUG_LAST_PING == 0x0 ? _0x344836(0x3c5) : Math[_0x344836(0x384)](DEBUG_LAST_PING)), buttonX + ctx[_0x344836(0x37b)]('Ping: ' + (DEBUG_LAST_PING == 0x0 ? _0x344836(0x3c5) : Math[_0x344836(0x384)](DEBUG_LAST_PING)))['width'] / 0x2 + 2.5 * pixelRat, player ? button2Y + buttonHeight + 0x14 * 0x5 * pixelRat : button2Y + buttonHeight + 0x14 * 0x2 * pixelRat), ctx[_0x344836(0x232)](), ctx['save'](), ctx['fillStyle'] = 'white', ctx[_0x344836(0x243)] = 0x12 * pixelRat + 'px Roboto', ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = 'rgba(0, 0, 0, 1)', ctx[_0x344836(0x3ad)] = 0.7, ctx['shadowBlur'] = 0x3, ctx['textAlign'] = _0x344836(0x308), ctx['fillText'](_0x344836(0x21d), canvas[_0x344836(0x36d)] - 0x91 * pixelRat, canvas[_0x344836(0x35d)] / 0x2 + 0x82 * pixelRat), ctx['restore'](), ctx[_0x344836(0x28b)]();
        if (settings_ && player) {
            ctx[_0x344836(0x3ad)] = 0.2, ctx[_0x344836(0x1fd)] = _0x344836(0x38f), ctx[_0x344836(0x409)](settingsX, settingsY, settingsW, settingsH), ctx['globalAlpha'] = 0x1;
            var _0x36893b = 0xaa * pixelRat,
                _0x203282 = imgWidth,
                _0x4fd7d0 = settingsX + (canvas[_0x344836(0x36d)] - settingsX * 0x2) / 0x2 - _0x36893b / 0x2,
                _0x133493 = settingsY + (canvas['height'] - settingsY * 0x2) / 0xa - _0x203282 / 0x2;
            ctx[_0x344836(0x3ee)](img, _0x4fd7d0, _0x133493, imgWidth, imgHeight), ctx[_0x344836(0x28b)]();
            var _0x5c5a73 = 0x96 * pixelRat,
                _0x32e631 = _0x5c5a73 / 0x2,
                _0x3f8f45 = settingsX + 0x23 * pixelRat - _0x5c5a73 / 0x3,
                _0x29c90d = imgY - 0x14 * pixelRat - _0x32e631 / 0x2;
            ctx['textAlign'] = _0x344836(0x1df), ctx['textBaseline'] = _0x344836(0x29d);
            var _0x49db57 = isXRAYOBJEnabled && isXRAYPLAYERSEnabled && AutoGG && AutoGL && camzoom_f && anticensore;
            ctx[_0x344836(0x3ad)] = _0x49db57 ? 0x1 : 0.7, ctx['drawImage'](imgcommon, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x1fd)] = 'white', ctx[_0x344836(0x243)] = 0x12 * pixelRat + 'px Roboto', ctx[_0x344836(0x3ac)] = 0x2, ctx['shadowOffsetY'] = 0x2, ctx['shadowColor'] = _0x344836(0x382), ctx['shadowBlur'] = 0x3, ctx[_0x344836(0x1e6)] = _0x344836(0x308), ctx[_0x344836(0x39f)] = _0x344836(0x29d), ctx['globalAlpha'] = isXRAYOBJEnabled ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x410), settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x410))[_0x344836(0x36d)] / 0x2, 0xa * 0x1 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = isXRAYPLAYERSEnabled ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x2e3), settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x2e3))['width'] / 0x2, 0xa * 0x5 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = AutoGG ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x42b), settingsX + 0xa * pixelRat + ctx['measureText'](_0x344836(0x42b))[_0x344836(0x36d)] / 0x2, 0xa * 0x9 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = AutoGL ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x394), settingsX + 0xa * pixelRat + ctx['measureText']('AutoGL: Only IN Arena')['width'] / 0x2, 0xa * 0xd * pixelRat + imgY), ctx[_0x344836(0x3ad)] = camzoom_f ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x1f1), settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x1f1))[_0x344836(0x36d)] / 0x2, 0xa * 0x11 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = anticensore ? 0x1 : 0.7, ctx[_0x344836(0x3be)]('Anti censore: For Chat', settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x283))[_0x344836(0x36d)] / 0x2, 0xa * 0x15 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = BetterChat ? 0x1 : 0.7, ctx[_0x344836(0x3be)]('BetterChat: Custom Chat Drawing', settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x43d))[_0x344836(0x36d)] / 0x2, 0xa * 0x19 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = HIDE_OBJECTS_WHILE_1V1 ? 0x1 : 0.7, ctx['fillText']('Hide Objects: Everywhere', settingsX + 0xa * pixelRat + ctx[_0x344836(0x37b)](_0x344836(0x1b7))[_0x344836(0x36d)] / 0x2, 0xa * 0x1d * pixelRat + imgY), ctx[_0x344836(0x232)](), ctx['save']();
            var _0x5c5a73 = 0x96 * pixelRat,
                _0x32e631 = _0x5c5a73 / 0x2,
                _0x3f8f45 = _0x4fd7d0 + ctx['measureText'](_0x344836(0x23a))['width'] / 0x2 - ctx[_0x344836(0x37b)]('COMBAT')['width'] + 0x19 * pixelRat - _0x5c5a73 / 0x3,
                _0x29c90d = imgY - 0x14 * pixelRat - _0x32e631 / 0x2;
            ctx[_0x344836(0x1e6)] = 'center', ctx['textBaseline'] = _0x344836(0x29d);
            var _0x29663f = PVPBot && AIMBot && FoodEaterBot;
            ctx[_0x344836(0x3ad)] = _0x29663f ? 0x1 : 0.7, ctx[_0x344836(0x3ee)](imgcombat, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = 0x12 * pixelRat + 'px Roboto', ctx[_0x344836(0x3ac)] = 0x2, ctx['shadowOffsetY'] = 0x2, ctx['shadowColor'] = 'rgba(0, 0, 0, 1)', ctx[_0x344836(0x37e)] = 0x3, ctx[_0x344836(0x1e6)] = _0x344836(0x308), ctx['textBaseline'] = _0x344836(0x29d), ctx[_0x344836(0x3ad)] = PVPBot ? 0x1 : 0.7, ctx['fillText'](_0x344836(0x23a), _0x4fd7d0 + _0x36893b / 0x2, 0xa * 0x1 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = AIMBot ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x26c), _0x4fd7d0 + _0x36893b / 0x2, 0xa * 0x5 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = FoodEaterBot ? 0x1 : 0.7, ctx['fillText'](_0x344836(0x2af), _0x4fd7d0 + _0x36893b / 0x2, 0xa * 0x9 * pixelRat + imgY), ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)]();
            var _0x5c5a73 = 0x96 * pixelRat,
                _0x32e631 = _0x5c5a73 / 0x2,
                _0x3f8f45 = settingsX + settingsW - ctx['measureText'](_0x344836(0x333))[_0x344836(0x36d)] * 0x2 - 0x5 * pixelRat - _0x5c5a73 / 0x3,
                _0x29c90d = imgY - 0x14 * pixelRat - _0x32e631 / 0x2;
            ctx['textAlign'] = _0x344836(0x2a4), ctx[_0x344836(0x39f)] = _0x344836(0x3bf);
            var _0x510d53 = XRAYPLEVERYWHERE && antiDisconnect && FreeSkins && snowflake;
            ctx[_0x344836(0x3ad)] = _0x510d53 ? 0x1 : 0.7, ctx[_0x344836(0x3ee)](imgother, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = 0x12 * pixelRat + _0x344836(0x3fd), ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x382), ctx[_0x344836(0x37e)] = 0x3, ctx[_0x344836(0x1e6)] = 'right', ctx['textBaseline'] = _0x344836(0x3bf), ctx[_0x344836(0x3ad)] = XRAYPLEVERYWHERE ? 0x1 : 0.7, ctx['fillText'](_0x344836(0x43e), settingsX + settingsW - 0xa * pixelRat, 0xa * 0x1 * pixelRat + imgY), ctx['globalAlpha'] = antiDisconnect ? 0x1 : 0.7, ctx['fillText'](_0x344836(0x251), settingsX + settingsW - 0xa * pixelRat, 0xa * 0x5 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = FreeSkins ? 0x1 : 0.7, ctx['fillText']('Earn-Skins: Free skins for 24h', settingsX + settingsW - 0xa * pixelRat, 0xa * 0x9 * pixelRat + imgY), ctx['globalAlpha'] = snowflake ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x24a), settingsX + settingsW - 0xa * pixelRat, 0xa * 0xd * pixelRat + imgY), ctx[_0x344836(0x3ad)] = selfOutline ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x329), settingsX + settingsW - 0xa * pixelRat, 0xa * 0x11 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = copylines ? 0x1 : 0.7, ctx['fillText'](_0x344836(0x26a), settingsX + settingsW - 0xa * pixelRat, 0xa * 0x15 * pixelRat + imgY), ctx[_0x344836(0x3ad)] = autotranslate ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x419), settingsX + settingsW - 0xa * pixelRat, 0xa * 0x19 * pixelRat + imgY), ctx[_0x344836(0x232)]();
            if (player) {
                colors = {
                    0x0: _0x344836(0x3bb),
                    0x1: 'black'
                };
                var _0x59a617 = {
                        0x0: Math[_0x344836(0x384)](xpPer),
                        0x1: 0x64 - Math[_0x344836(0x384)](xpPer)
                    },
                    _0xbfc894 = new Piechart({
                        'pad': 0x0,
                        'canvas': PX[_0x344836(0x347)],
                        'data': _0x59a617,
                        'colors': colors,
                        'canvas': canvas,
                        'radius': 0x32 * pixelRat,
                        'x': settingsX + 0x6e * pixelRat,
                        'y': settingsY + settingsH - settingsH / 0x3 + 0x3c * pixelRat
                    });
                _0xbfc894[_0x344836(0x373)](), colors2 = {
                    0x0: 'lime',
                    0x1: _0x344836(0x3bc)
                };
                var _0x57a9d9 = {
                        0x0: player[_0x344836(0x1e5)] > 0x0 ? Math['round'](player['hpPer_n']) : Math[_0x344836(0x384)](0x64),
                        0x1: 0x64 - (player['hpPer_n'] > 0x0 ? Math[_0x344836(0x384)](player['hpPer_n']) : Math['round'](0x64))
                    },
                    _0x505d09 = new Piechart({
                        'pad': 0x0,
                        'canvas': PX[_0x344836(0x347)],
                        'data': _0x57a9d9,
                        'colors': colors2,
                        'canvas': canvas,
                        'radius': 0x32 * pixelRat,
                        'x': _0x4fd7d0 + _0x36893b / 0x2,
                        'y': settingsY + settingsH - settingsH / 0x3 + 0x3c * pixelRat
                    });
                _0x505d09['draw'](), colors3 = {
                    0x0: _0x344836(0x3a4),
                    0x1: _0x344836(0x38f)
                };
                var _0x4e7c5a = {
                        0x0: Math['round'](waterBar_n),
                        0x1: 0x64 - Math[_0x344836(0x384)](waterBar_n)
                    },
                    _0x3892ff = new Piechart({
                        'pad': 0x0,
                        'canvas': PX[_0x344836(0x347)],
                        'data': _0x4e7c5a,
                        'colors': colors3,
                        'canvas': canvas,
                        'radius': 0x32 * pixelRat,
                        'x': settingsX + settingsW - 0x6e * pixelRat,
                        'y': settingsY + settingsH - settingsH / 0x3 + 0x3c * pixelRat
                    });
                _0x3892ff[_0x344836(0x373)]();
            }
        }
        ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)]();
        if (pvpbot_ && player) {
            ctx[_0x344836(0x3ad)] = 0.2, ctx['fillStyle'] = _0x344836(0x38f), ctx[_0x344836(0x409)](settingsX, settingsY, settingsW, settingsH), ctx['globalAlpha'] = 0x1;
            var _0x36893b = 0xd2 - 0x28,
                _0x203282 = imgWidth,
                _0x4fd7d0 = settingsX + (canvas[_0x344836(0x36d)] - settingsX * 0x2) / 0x2 - _0x36893b / 0x2,
                _0x133493 = settingsY + (canvas[_0x344836(0x35d)] - settingsY * 0x2) / 0xa - _0x203282 / 0x2;
            ctx[_0x344836(0x3ee)](img, _0x4fd7d0, _0x133493, imgWidth, imgHeight), ctx[_0x344836(0x28b)]();
            var _0x5c5a73 = 0x96 - 0x28,
                _0x32e631 = _0x5c5a73 / 0x3,
                _0x3f8f45 = _0x4fd7d0 + _0x36893b / 0x2 - _0x5c5a73 / 0x2,
                _0x29c90d = _0x133493 + _0x203282 / 0x2 - _0x32e631 / 0x2 + _0x32e631,
                _0x49db57 = PVPBot;
            ctx[_0x344836(0x3ad)] = _0x49db57 ? 0x1 : 0.7, ctx[_0x344836(0x3ee)](imgcombat, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x1fd)] = 'white', ctx[_0x344836(0x243)] = _0x344836(0x3d8), ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x382), ctx[_0x344836(0x37e)] = 0x3, ctx['textAlign'] = 'center', ctx[_0x344836(0x39f)] = _0x344836(0x29d), ctx[_0x344836(0x3ad)] = PVPBot ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x3f8) + (PVPBot ? _0x344836(0x3d7) + pvpAction : _0x344836(0x22a)), settingsX + 0xa + ctx[_0x344836(0x37b)]('PVP Bot: ' + (PVPBot ? _0x344836(0x3d7) + pvpAction : _0x344836(0x22a)))[_0x344836(0x36d)] / 0x2, 0xa * 0x1 + imgY), ctx[_0x344836(0x3be)](_0x344836(0x20e) + pvpAction, settingsX + 0xa + ctx['measureText'](_0x344836(0x20e) + pvpAction)['width'] / 0x2, 0xa * 0x5 + imgY), ctx[_0x344836(0x3be)]('Tracking: ' + (pvp_track == _0x344836(0x2e0) ? 'from player face to enemy face' : _0x344836(0x248)), settingsX + 0xa + ctx[_0x344836(0x37b)]('Tracking: ' + (pvp_track == 'face_face' ? _0x344836(0x363) : _0x344836(0x248)))['width'] / 0x2, 0xa * 0x9 + imgY), ctx[_0x344836(0x232)]();
        }
        ctx[_0x344836(0x232)](), ctx[_0x344836(0x28b)]();
        if (skins_ && player) {
            ctx[_0x344836(0x3ad)] = 0.2, ctx['fillStyle'] = _0x344836(0x38f), ctx[_0x344836(0x409)](settingsX, settingsY, settingsW, settingsH), ctx['globalAlpha'] = 0x1;
            var _0x36893b = 0xaa * pixelRat,
                _0x203282 = imgWidth,
                _0x4fd7d0 = settingsX + (canvas[_0x344836(0x36d)] - settingsX * 0x2) / 0x2 - _0x36893b / 0x2,
                _0x133493 = settingsY + (canvas[_0x344836(0x35d)] - settingsY * 0x2) / 0xa - _0x203282 / 0x2;
            ctx[_0x344836(0x3ee)](img, _0x4fd7d0, _0x133493, imgWidth, imgHeight), ctx[_0x344836(0x28b)]();
            var _0x5c5a73 = 0x6e * pixelRat,
                _0x32e631 = _0x5c5a73 / 0x3,
                _0x3f8f45 = _0x4fd7d0 + _0x36893b / 0x2 - _0x5c5a73 / 0x2,
                _0x29c90d = _0x133493 + _0x203282 / 0x2 - _0x32e631 / 0x2 + _0x32e631,
                _0x49db57 = skin1 && skin2 && skin3 && skin4 && skin5;
            ctx[_0x344836(0x3ad)] = _0x49db57 ? 0x1 : 0.7, ctx[_0x344836(0x3ee)](imgskins, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x3ac)] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = 'rgba(0, 0, 0, 1)', ctx[_0x344836(0x37e)] = 0x3;
            var _0x5c5a73 = 0xc8 * pixelRat,
                _0x32e631 = _0x5c5a73,
                _0x223d1f = 0x0;
            lphaskins = {
                0x0: skin1,
                0x1: skin2,
                0x2: skin3,
                0x3: skin4,
                0x4: skin5
            }, skinnum = {
                0x0: 0x0,
                0x1: 0x0,
                0x2: 0x0
            };
            for (var _0x3658ee = 0x0; _0x3658ee < Object[_0x344836(0x1ba)](drawskins)[_0x344836(0x252)]; _0x3658ee++) {
                var _0x400d1a = settingsX + _0x5c5a73 * skinnum[_0x223d1f];
                skinnum[_0x223d1f]++;
                if (maxX < _0x400d1a) {
                    maxskinnum = skinnum[_0x223d1f];
                    if (skinnum[_0x223d1f] >= maxskinnum) _0x223d1f++;
                    var _0x400d1a = settingsX + _0x5c5a73 * skinnum[_0x223d1f];
                }
                var _0x3ce12f = imgY + _0x32e631 * _0x223d1f;
                ctx['globalAlpha'] = lphaskins[_0x3658ee] ? 0x1 : 0.7, ctx[_0x344836(0x3ee)](drawskins[_0x3658ee], _0x400d1a, _0x3ce12f, _0x5c5a73, _0x32e631);
            }
            ctx[_0x344836(0x232)]();
        }
        ctx['restore'](), ctx[_0x344836(0x28b)]();
        if (bots_ && player) {
            ctx[_0x344836(0x3ad)] = 0.2, ctx[_0x344836(0x1fd)] = _0x344836(0x38f), ctx[_0x344836(0x409)](settingsX, settingsY, settingsW, settingsH), ctx['globalAlpha'] = 0x1;
            var _0x36893b = 0xd2 - 0x28,
                _0x203282 = imgWidth,
                _0x4fd7d0 = settingsX + (canvas[_0x344836(0x36d)] - settingsX * 0x2) / 0x2 - _0x36893b / 0x2,
                _0x133493 = settingsY + (canvas[_0x344836(0x35d)] - settingsY * 0x2) / 0xa - _0x203282 / 0x2;
            ctx[_0x344836(0x3ee)](img, _0x4fd7d0, _0x133493, imgWidth, imgHeight), ctx[_0x344836(0x28b)]();
            var _0x5c5a73 = 0x96 - 0x28,
                _0x32e631 = _0x5c5a73 / 0x3,
                _0x3f8f45 = _0x4fd7d0 + _0x36893b / 0x2 - _0x5c5a73 / 0x2,
                _0x29c90d = _0x133493 + _0x203282 / 0x2 - _0x32e631 / 0x2 + _0x32e631,
                _0x49db57 = bots_enabled;
            ctx[_0x344836(0x3ad)] = _0x49db57 ? 0x1 : 0.7, ctx['drawImage'](imgbots, _0x3f8f45, _0x29c90d, _0x5c5a73, _0x32e631), ctx[_0x344836(0x1fd)] = _0x344836(0x210), ctx[_0x344836(0x243)] = _0x344836(0x3d8), ctx['shadowOffsetX'] = 0x2, ctx[_0x344836(0x206)] = 0x2, ctx[_0x344836(0x31b)] = _0x344836(0x382), ctx[_0x344836(0x37e)] = 0x3, ctx['textAlign'] = 'center', ctx['textBaseline'] = _0x344836(0x29d), ctx['globalAlpha'] = bots_enabled ? 0x1 : 0.7, ctx['fillText']('Bots: ' + (bots_enabled ? _0x344836(0x1bf) + bots_alive : _0x344836(0x365)), settingsX + 0xa + ctx[_0x344836(0x37b)](_0x344836(0x2b0) + (bots_enabled ? 'enabled | Alive: ' + bots_alive : _0x344836(0x365)))[_0x344836(0x36d)] / 0x2, 0xa * 0x1 + imgY), ctx[_0x344836(0x3be)](_0x344836(0x1e3) + (bots_nick != 'default' ? _0x344836(0x352) : 'bots uses default nickname'), settingsX + 0xa + ctx[_0x344836(0x37b)]('NckN: ' + (bots_nick != _0x344836(0x1ac) ? _0x344836(0x352) : _0x344836(0x296)))[_0x344836(0x36d)] / 0x2, 0xa * 0x9 + imgY), ctx['fillText']('Tracking: ' + (bots_track == _0x344836(0x2b9) ? _0x344836(0x3c0) : bots_track == _0x344836(0x1ac) ? _0x344836(0x27c) : _0x344836(0x255)), settingsX + 0xa + ctx[_0x344836(0x37b)]('Tracking: ' + (bots_track == _0x344836(0x2b9) ? 'every bot' : bots_track == _0x344836(0x1ac) ? _0x344836(0x27c) : _0x344836(0x255)))[_0x344836(0x36d)] / 0x2, 0xa * 0xd + imgY), ctx[_0x344836(0x3ad)] = stat == 0x1 ? 0x1 : 0.7, ctx['globalAlpha'] = respawn_bots ? 0x1 : 0.7, ctx[_0x344836(0x3be)](_0x344836(0x3ea) + (respawn_bots ? 'bots respawn after die' : _0x344836(0x3e7)), settingsX + 0xa + ctx[_0x344836(0x37b)](_0x344836(0x3ea) + (respawn_bots ? _0x344836(0x1c3) : _0x344836(0x3e7)))[_0x344836(0x36d)] / 0x2, 0xa * 0x5 + imgY), ctx['globalAlpha'] = 0x1, ctx[_0x344836(0x243)] = _0x344836(0x34d), ctx['fillText'](_0x344836(0x22f), settingsX + settingsW / 0x2, 0xa * 0x21 + imgY), ctx[_0x344836(0x3be)]('PRESS TO SPAWN', settingsX + settingsW / 0x2, 0xa * 0x25 + imgY), ctx[_0x344836(0x3be)](_0x344836(0x1ef), settingsX + settingsW / 0x2, 0xa * 0x29 + imgY), ctx[_0x344836(0x232)]();
        }
        ctx['restore']();
    }
    requestAnimationFrame(PXBots_MENU);
};
requestAnimationFrame(PXBots_MENU), onmousemv = function(_0x519aad) {
    var _0x4131db = _0x1b8bf1;
    if (player) {
        var _0x4d73cb = canvas[_0x4131db(0x43f)](),
            _0x4f5476 = {
                'x': (_0x519aad[_0x4131db(0x1f3)] - _0x4d73cb[_0x4131db(0x1df)]) * pixelRat,
                'y': (_0x519aad[_0x4131db(0x421)] - _0x4d73cb['top']) * pixelRat
            };
        if (settings_) settings_alpha = 0.9;
        else isInside(_0x4f5476, buttonSettings) && !settings_ ? settings_alpha = 0.9 : settings_alpha = 0.7;
        if (pvpbot_) pvpbot_alpha = 0.9;
        else isInside(_0x4f5476, buttonpvpbot) && !pvpbot_ ? pvpbot_alpha = 0.9 : pvpbot_alpha = 0.7;
        if (skins_) skins_alpha = 0.9;
        else isInside(_0x4f5476, buttonSkins) && !skins_ ? skins_alpha = 0.9 : skins_alpha = 0.7;
        if (bots_) bots_alpha = 0.9;
        else isInside(_0x4f5476, buttonBots) && !bots_ ? bots_alpha = 0.9 : bots_alpha = 0.7;
    }
}, screenIns_A = 0x0, CachedText['prototype'] = {
    'strokeW': 0x1,
    'strokeColor': '#000000',
    'multiLine': ![],
    'alpha': 0x1,
    '_text': '',
    '_color': '#000000',
    'x': 0x0,
    'y': 0x0,
    '_fntSize': 0x10,
    '_canvas': null,
    '_ctx': null,
    '_dirty': ![],
    'renderScale': 1.5,
    '_scale': 0x1,
    'width': 0x0,
    'height': 0x0,
    'setColor': function(_0x1700a2) {
        var _0x30e132 = _0x1b8bf1;
        this[_0x30e132(0x30e)] != _0x1700a2 && (this[_0x30e132(0x30e)] = _0x1700a2, this[_0x30e132(0x344)] = !![]);
    },
    'setFontSize': function(_0x3dff0f) {
        var _0x4de3ed = _0x1b8bf1;
        this[_0x4de3ed(0x212)] != _0x3dff0f && (this[_0x4de3ed(0x212)] = _0x3dff0f, this['_dirty'] = !![]);
    },
    'setStroke': function(_0x5d254f) {
        var _0x4c8dab = _0x1b8bf1;
        _0x5d254f != this[_0x4c8dab(0x2f8)] && (this[_0x4c8dab(0x2f8)] = _0x5d254f, this[_0x4c8dab(0x344)] = !![]);
    },
    'setText': function(_0x15d50d) {
        var _0x554e0d = _0x1b8bf1;
        _0x15d50d != this[_0x554e0d(0x3a7)] && (this[_0x554e0d(0x3a7)] = _0x15d50d, this[_0x554e0d(0x344)] = !![]);
    },
    'getRenderedCanvas': function() {
        var _0x36e3d3 = _0x1b8bf1;
        null == this['_canvas'] && (this[_0x36e3d3(0x1b5)] = document[_0x36e3d3(0x427)](_0x36e3d3(0x3a6)), this[_0x36e3d3(0x299)] = this['_canvas'][_0x36e3d3(0x228)]('2d'));
        if (this['_dirty']) {
            this[_0x36e3d3(0x344)] = ![];
            var _0x5de876 = this[_0x36e3d3(0x1b5)],
                _0x40a506 = this[_0x36e3d3(0x299)],
                _0x2ae05d = this[_0x36e3d3(0x3a7)],
                _0x23474b = this[_0x36e3d3(0x2c0)],
                _0x320848 = this[_0x36e3d3(0x212)] * this[_0x36e3d3(0x375)],
                _0x576d17 = _0x320848 + _0x36e3d3(0x336);
            _0x40a506[_0x36e3d3(0x243)] = _0x576d17;
            var _0x52b4df = ~~(0.2 * _0x320848);
            _0x40a506['font'] = _0x576d17;
            if (this['multiLine']) {
                var _0x4888f8 = _0x40a506[_0x36e3d3(0x37b)]('M')[_0x36e3d3(0x36d)] * 1.2,
                    _0x55609b = _0x2ae05d[_0x36e3d3(0x256)]('\x0a'),
                    _0x46ae0c = 0x0;
                for (var _0xeb6239 = 0x0; _0xeb6239 < _0x55609b['length']; ++_0xeb6239) {
                    _0x46ae0c = Math[_0x36e3d3(0x36e)](_0x46ae0c, _0x40a506[_0x36e3d3(0x37b)](_0x55609b[_0xeb6239])['width']);
                }
                this['width'] = (_0x46ae0c + 0x6) * _0x23474b, this[_0x36e3d3(0x35d)] = (_0x4888f8 * _0x55609b[_0x36e3d3(0x252)] + _0x52b4df) * _0x23474b, _0x5de876[_0x36e3d3(0x36d)] = this['width'], _0x5de876[_0x36e3d3(0x35d)] = this[_0x36e3d3(0x35d)], this[_0x36e3d3(0x36d)] /= this[_0x36e3d3(0x375)], this['height'] /= this[_0x36e3d3(0x375)], _0x40a506[_0x36e3d3(0x3ad)] = this['alpha'], _0x40a506['font'] = _0x576d17;
                this[_0x36e3d3(0x2f8)] > 0x0 && (_0x40a506[_0x36e3d3(0x3ac)] = this[_0x36e3d3(0x2f8)], _0x40a506[_0x36e3d3(0x206)] = this[_0x36e3d3(0x2f8)], _0x40a506[_0x36e3d3(0x31b)] = this[_0x36e3d3(0x3d6)]);
                _0x40a506['fillStyle'] = this[_0x36e3d3(0x30e)], _0x40a506[_0x36e3d3(0x1e6)] = _0x36e3d3(0x308);
                var _0x13f85a = 0x3 + _0x5de876[_0x36e3d3(0x36d)] / 0x2,
                    _0x16258f = _0x320848 - _0x52b4df / 0x2;
                for (var _0xeb6239 = 0x0; _0xeb6239 < _0x55609b['length']; ++_0xeb6239) {
                    _0x40a506[_0x36e3d3(0x3be)](_0x55609b[_0xeb6239], _0x13f85a, _0x16258f), _0x16258f += _0x4888f8;
                }
            } else this[_0x36e3d3(0x36d)] = (_0x40a506['measureText'](_0x2ae05d)[_0x36e3d3(0x36d)] + 0x6) * _0x23474b, this[_0x36e3d3(0x35d)] = (_0x320848 + _0x52b4df) * _0x23474b, _0x5de876[_0x36e3d3(0x36d)] = this['width'], _0x5de876[_0x36e3d3(0x35d)] = this[_0x36e3d3(0x35d)], this['width'] /= this['renderScale'], this['height'] /= this[_0x36e3d3(0x375)], _0x40a506[_0x36e3d3(0x3ad)] = this[_0x36e3d3(0x1d4)], _0x40a506[_0x36e3d3(0x243)] = _0x576d17, this[_0x36e3d3(0x2f8)] > 0x0 && (_0x40a506[_0x36e3d3(0x3ac)] = this['strokeW'], _0x40a506[_0x36e3d3(0x206)] = this['strokeW'], _0x40a506[_0x36e3d3(0x31b)] = this[_0x36e3d3(0x3d6)]), _0x40a506[_0x36e3d3(0x1fd)] = this[_0x36e3d3(0x30e)], _0x40a506['fillText'](_0x2ae05d, 0x3, _0x320848 - _0x52b4df / 0x2);
        }
        return this[_0x36e3d3(0x1b5)];
    },
    'draw': function() {
        var _0x2496b4 = _0x1b8bf1;
        if (this[_0x2496b4(0x3a7)]) {
            var _0x262708 = this[_0x2496b4(0x375)];
            this[_0x2496b4(0x396)]();
            var _0x223006 = this['getRenderedCanvas'](),
                _0xd868da = _0x223006[_0x2496b4(0x36d)] / _0x262708,
                _0x1c615a = _0x223006['height'] / _0x262708;
            this[_0x2496b4(0x2fd)](_0xd868da, _0x1c615a), ctx[_0x2496b4(0x3ee)](_0x223006, this['x'] - _0xd868da / 0x2, this['y'] - _0x1c615a / 0x2, _0xd868da, _0x1c615a);
        }
    },
    'setPos': function(_0x30da96, _0xca2850) {},
    'updateColor': function() {}
};

function CachedText(_0x451707, _0x324006) {
    var _0x1265f0 = _0x1b8bf1;
    _0x451707 && (this['_fntSize'] = _0x451707), _0x324006 && (this[_0x1265f0(0x30e)] = _0x324006);
}
window[_0x1b8bf1(0x330)] = CachedText;
var screenTXT = new window[(_0x1b8bf1(0x330))](0xe, _0x1b8bf1(0x210)),
    screenTextCol = _0x1b8bf1(0x210);

function showMessage(_0x59b4e3, _0x409a21) {
    screenText = _0x59b4e3, screenTextEndTT = +new Date() + _0x409a21;
};
var drawCircle = function(_0x460a7d, _0x5f5b32, _0x2e5c5b, _0x3be77a) {
        var _0x1ef866 = _0x1b8bf1;
        ctx[_0x1ef866(0x28b)](), ctx[_0x1ef866(0x1fd)] = _0x3be77a, ctx[_0x1ef866(0x268)](), ctx[_0x1ef866(0x2b5)](_0x460a7d, _0x5f5b32, _0x2e5c5b / Math['PI'], 0x0, Math['PI'] * 0x2), ctx[_0x1ef866(0x271)](), ctx['restore']();
    },
    fillTextMultiLine = function(_0x55fe00, _0x22bf1c, _0x29aae6, _0x5b15e8) {
        var _0x5392f0 = _0x1b8bf1,
            _0x57efa8 = ctx['measureText']('M')[_0x5392f0(0x36d)] * 1.2,
            _0x3e221 = _0x55fe00[_0x5392f0(0x256)] ? _0x55fe00[_0x5392f0(0x256)]('\x0a') : '';
        for (var _0xce20ff = 0x0; _0xce20ff < _0x3e221['length']; ++_0xce20ff) {
            if (_0x5b15e8 && Object[_0x5392f0(0x36a)](_0x5b15e8)[_0xce20ff]) {
                ctx[_0x5392f0(0x28b)](), ctx[_0x5392f0(0x3ac)] = 0x0, ctx[_0x5392f0(0x206)] = 0x0;
                var _0x4dabba = new Image(),
                    _0x576b75 = Object[_0x5392f0(0x36a)](_0x5b15e8)[_0xce20ff][_0x5392f0(0x2be)](),
                    _0x51c56e = _0x5392f0(0x1f5) + (Object[_0x5392f0(0x36a)](_0x5b15e8)[_0xce20ff][_0x5392f0(0x21b)] == 0x0 ? '2' : '1') + _0x5392f0(0x1e8) + (_0x576b75[_0x5392f0(0x256)]('/')[0x0] == '' ? '' : '/') + _0x576b75 + '.png';
                _0x4dabba['src'] = _0x51c56e, ctx[_0x5392f0(0x1fd)] = Object[_0x5392f0(0x36a)](_0x5b15e8)[_0xce20ff]['getOutlineColor'](), ctx['beginPath'](), ctx[_0x5392f0(0x2b5)](_0x22bf1c - 0x19 * 1.5 * Math['PI'], _0x29aae6 + _0x57efa8 - 0x19 * 1.5 / 0x2 * Math['PI'], 0x19 * 1.5 / Math['PI'], 0x0, Math['PI'] * 0x2), ctx[_0x5392f0(0x271)](), ctx['drawImage'](_0x4dabba, _0x22bf1c - 0x19, _0x29aae6 + _0x57efa8 - 0x19 / 0x2, 0x19, 0x19), ctx['restore']();
            }
            ctx[_0x5392f0(0x3be)](_0x3e221[_0xce20ff], _0x22bf1c, _0x29aae6), _0x29aae6 += _0x57efa8;
        }
    };

function drawScreenText() {
    var _0x3cb066 = 0x1;
    aa = (screenTextEndTT - timestamp) / 0x3e8 / _0x3cb066, aa = 0x0 > aa ? 0x0 : 0x1 < aa ? 0x1 : aa;
    if (aa > 0x0) {
        function _0x375686() {
            var _0x531031 = _0x2e61;
            aa = (screenTextEndTT - timestamp) / 0x3e8 / _0x3cb066, aa = 0x0 > aa ? 0x0 : 0x1 < aa ? 0x1 : aa, ctx['save'](), ctx[_0x531031(0x3ad)] = aa, ctx['font'] = 0x19 * interfS + 'px Arial', ctx[_0x531031(0x20c)] = 0.5, ctx[_0x531031(0x1e6)] = _0x531031(0x308), ctx[_0x531031(0x39f)] = _0x531031(0x29d);
            !(options_graphicsLevel == 0x2) && (ctx['shadowOffsetX'] = 0x1, ctx[_0x531031(0x206)] = 0x1, ctx[_0x531031(0x31b)] = 'black');
            ctx[_0x531031(0x1fd)] = screenTextCol, fillTextMultiLine(screenText, canvasW / 0x2, canvasH * 0.3), screenTXT[_0x531031(0x37d)](screenText), screenTXT['setColor'](screenTextCol);
            if (screenText == _0x531031(0x42e)) screenTextFontSize = 0x28;
            else screenTextFontSize = 0x19;
            screenTXT[_0x531031(0x2d3)](screenTextFontSize * interfS), screenTXT['x'] = canvasW / 0x2, screenTXT['y'] = canvasH * 0.3, ctx[_0x531031(0x232)](), requestAnimationFrame(_0x375686);
        }
        requestAnimationFrame(_0x375686);
    }
    var _0x49b9c4 = screenIns_EndT - timestamp > 0x0 ? 0x1 : 0x0;
    screenIns_A += (_0x49b9c4 - screenIns_A) * 0.05;
};
var screenTextEndTT = +new Date() + 0x1,
    screenText = '';
drawScreenText();
var HIDE_OBJECTS_WHILE_1V1 = ![];

function handleClick(_0x42da45) {
    var _0x5707a9 = _0x1b8bf1;
    if (player) {
        var _0x13247a = canvas['width'] / 0x2 - canvas[_0x5707a9(0x36d)] / 0x3,
            _0x158c27 = canvas[_0x5707a9(0x35d)] / 0x2 - canvas['height'] / 0x3,
            _0x590840 = canvas['width'] / 0x3 * 0x2,
            _0x441d57 = canvas[_0x5707a9(0x35d)] / 0x3 * 0x2,
            _0x59fd59 = 0xd2 - 0x28,
            _0x4f2d50 = imgWidth,
            _0x74ea4b = _0x13247a + (canvas['width'] - _0x13247a * 0x2) / 0x2 - _0x59fd59 / 0x2,
            _0x534f57 = _0x158c27 + (canvas[_0x5707a9(0x35d)] - _0x158c27 * 0x2) / 0xa - _0x4f2d50 / 0x2,
            _0x46eeb0 = _0x42da45[_0x5707a9(0x1f3)] - canvas[_0x5707a9(0x32e)],
            _0x172502 = _0x42da45['clientY'] - canvas[_0x5707a9(0x1c4)];
        mouse = {
            'x': _0x46eeb0 * pixelRat,
            'y': _0x172502 * pixelRat
        };
        if (settings_) {
            sett11 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x1 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText']('X-Ray: Hills & Bushs')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett11) && (isXRAYOBJEnabled = isXRAYOBJEnabled ? ![] : !![]);
            sett12 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x5 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)]('X-Ray: Underwater & PVP')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett12) && (isXRAYPLAYERSEnabled = isXRAYPLAYERSEnabled ? ![] : !![]);
            sett13 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x9 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x42b))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett13) && (AutoGG = AutoGG ? ![] : !![]);
            sett14 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0xd * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText'](_0x5707a9(0x394))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett14) && (AutoGL = AutoGL ? ![] : !![]);
            sett15 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x11 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText']('Camera Zoom (camzoom)')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett15) && (camzoom_f = camzoom_f ? ![] : !![]);
            sett16 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x15 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText'](_0x5707a9(0x283))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett16) && (anticensore = anticensore ? ![] : !![]);
            sett17 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x19 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)]('BetterChat: Custom Chat Drawing')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett17) && (BetterChat = BetterChat ? ![] : !![]);
            sett18 = {
                'x': _0x13247a + 0xa * pixelRat,
                'y': 0xa * 0x1d * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText'](_0x5707a9(0x1b7))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett17) && (HIDE_OBJECTS_WHILE_1V1 = HIDE_OBJECTS_WHILE_1V1 ? ![] : !![]);
            sett21 = {
                'x': _0x74ea4b + _0x59fd59 / 0x2 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x23a))[_0x5707a9(0x36d)] * 1.66 * pixelRat / 0x2,
                'y': 0xa * 0x1 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x23a))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett21) && (PVPBot = PVPBot ? ![] : !![], console[_0x5707a9(0x2a8)](_0x5707a9(0x226)));
            sett22 = {
                'x': _0x74ea4b + _0x59fd59 / 0x2 - ctx[_0x5707a9(0x37b)]('AIM Bot: Def Bot & Everywhere & Only apex')[_0x5707a9(0x36d)] * 1.66 * pixelRat / 0x2,
                'y': 0xa * 0x5 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x26c))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            if (isInside(mouse, sett22)) {}
            sett23 = {
                'x': _0x74ea4b + _0x59fd59 / 0x2 - ctx['measureText'](_0x5707a9(0x2af))[_0x5707a9(0x36d)] * 1.66 * pixelRat / 0x2,
                'y': 0xa * 0x9 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText'](_0x5707a9(0x2af))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett23) && (FoodEaterBot = FoodEaterBot ? ![] : !![]);
            sett31 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x43e))['width'] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x1 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)]('X-Ray: Players')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett31) && (XRAYPLEVERYWHERE = XRAYPLEVERYWHERE ? ![] : !![]);
            sett32 = {
                'x': _0x13247a + _0x590840 - ctx['measureText'](_0x5707a9(0x251))[_0x5707a9(0x36d)] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x5 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx['measureText']('Anti-Disconnect: Anti-Afk')[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett32) && (antiDisconnect = antiDisconnect ? ![] : !![]);
            sett33 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x416))[_0x5707a9(0x36d)] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x9 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)]('Earn-Skins: Free skins for 24h')['width'] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett33) && (FreeSkins = FreeSkins ? ![] : !![]);
            sett34 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x24a))[_0x5707a9(0x36d)] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0xd * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)]('Snowflakes: draw snowflakes')['width'] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett34) && (snowflake = snowflake ? ![] : !![]);
            sett35 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)]('BetterN&O: Custom color Name & Outline')[_0x5707a9(0x36d)] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x11 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x329))['width'] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett35) && (selfOutline = selfOutline ? ![] : !![]);;
            sett36 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x26a))['width'] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x15 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x26a))[_0x5707a9(0x36d)] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett36) && (copylines = copylines ? ![] : !![]);;
            sett37 = {
                'x': _0x13247a + _0x590840 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x419))[_0x5707a9(0x36d)] * 1.66 * pixelRat - 0xc * pixelRat,
                'y': 0xa * 0x19 * pixelRat - 0xc * pixelRat + imgY,
                'width': ctx[_0x5707a9(0x37b)](_0x5707a9(0x419))['width'] * 1.66 * pixelRat,
                'height': 0x18 * pixelRat
            };
            isInside(mouse, sett37) && (autotranslate = autotranslate ? ![] : !![]);;
        } else {
            if (pvpbot_) {
                if (_0x46eeb0 >= _0x13247a + 0xa && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)](_0x5707a9(0x3f8) + (PVPBot ? _0x5707a9(0x3d7) + pvpAction : 'disabled'))[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0x1 + imgY - 0xc && _0x172502 <= 0xa * 0x1 + imgY + 0xc) PVPBot = PVPBot ? ![] : !![];
                else {
                    if (_0x46eeb0 >= _0x13247a + 0xa * pixelRat && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)](_0x5707a9(0x20e) + pvpAction)[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0x5 + imgY - 0xc && _0x172502 <= 0xa * 0x5 + imgY + 0xc) console[_0x5707a9(0x2a8)]('clicked action'), actionNumber == Object[_0x5707a9(0x36a)](actionChoose)['length'] ? actionNumber = 0x1 : actionNumber += 0x1, pvpAction = actionChoose[actionNumber];
                    else _0x46eeb0 >= _0x13247a + 0xa * pixelRat && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)](_0x5707a9(0x2f3) + (pvp_track == _0x5707a9(0x2e0) ? _0x5707a9(0x363) : _0x5707a9(0x248)))[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0x9 + imgY - 0xc && _0x172502 <= 0xa * 0x9 + imgY + 0xc && (bots_track = bots_track == _0x5707a9(0x1ac) ? _0x5707a9(0x2b9) : bots_track == _0x5707a9(0x2b9) ? _0x5707a9(0x205) : _0x5707a9(0x1ac));
                }
            } else {
                if (bots_) {
                    if (_0x46eeb0 >= _0x13247a + 0xa && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)](_0x5707a9(0x2b0) + (bots_enabled ? _0x5707a9(0x1bf) + bots_alive : 'disabled.'))[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0x1 + imgY - 0xc && _0x172502 <= 0xa * 0x1 + imgY + 0xc) bots_enabled = bots_enabled ? ![] : !![];
                    else {
                        if (_0x46eeb0 >= _0x13247a + 0xa * pixelRat && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)](_0x5707a9(0x1e3) + (bots_nick != _0x5707a9(0x1ac) ? _0x5707a9(0x352) : _0x5707a9(0x296)))[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0x9 + imgY - 0xc && _0x172502 <= 0xa * 0x9 + imgY + 0xc) bots_nick = bots_nick == 'default' && player ? player[_0x5707a9(0x3ab)] : 'default';
                        else {
                            if (_0x46eeb0 >= _0x13247a + 0xa * pixelRat && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)]('Tracking: ' + (bots_track == _0x5707a9(0x2b9) ? _0x5707a9(0x3c0) : bots_track == _0x5707a9(0x1ac) ? _0x5707a9(0x27c) : _0x5707a9(0x255)))[_0x5707a9(0x36d)] * 0x2 - 0xc && _0x172502 >= 0xa * 0xd + imgY - 0xc && _0x172502 <= 0xa * 0xd + imgY + 0xc) bots_track = bots_track == 'default' ? _0x5707a9(0x2b9) : bots_track == _0x5707a9(0x2b9) ? _0x5707a9(0x205) : _0x5707a9(0x1ac);
                            else {
                                if (_0x46eeb0 >= _0x13247a + 0xa * pixelRat && _0x46eeb0 <= _0x13247a + ctx[_0x5707a9(0x37b)]('Respawn: ' + (respawn_bots ? 'bots respawn after die' : _0x5707a9(0x3e7)))[_0x5707a9(0x36d)] * 0x2 - 0xc * pixelRat && _0x172502 >= 0xa * 0x5 * pixelRat + imgY - 0xc * pixelRat && _0x172502 <= 0xa * 0x5 * pixelRat + imgY + 0xc * pixelRat) respawn_bots = respawn_bots ? ![] : !![];
                                else {
                                    if (_0x46eeb0 >= _0x13247a + _0x590840 / 0x2 - ctx['measureText'](_0x5707a9(0x2a2))[_0x5707a9(0x36d)] * 0x2 + 0xc * pixelRat && _0x46eeb0 <= _0x13247a + _0x590840 / 0x2 + ctx[_0x5707a9(0x37b)](_0x5707a9(0x2a2))[_0x5707a9(0x36d)] * 0x2 - 0xc * pixelRat && _0x172502 >= 0xa * 0x21 * pixelRat + imgY - 0xc * pixelRat && _0x172502 <= 0xa * 0x21 * pixelRat + imgY + 0xc * pixelRat) spawnrecaptchaBots();
                                    else {
                                        if (_0x46eeb0 >= _0x13247a + _0x590840 / 0x2 - ctx[_0x5707a9(0x37b)](_0x5707a9(0x315))[_0x5707a9(0x36d)] * 0x2 + 0xc * pixelRat && _0x46eeb0 <= _0x13247a + _0x590840 / 0x2 + ctx[_0x5707a9(0x37b)](_0x5707a9(0x315))['width'] * 0x2 - 0xc * pixelRat && _0x172502 >= 0xa * 0x25 * pixelRat + imgY - 0xc * pixelRat && _0x172502 <= 0xa * 0x25 * pixelRat + imgY + 0xc * pixelRat) joingame();
                                        else _0x46eeb0 >= _0x13247a + _0x590840 / 0x2 - ctx[_0x5707a9(0x37b)]('Remove all bots')[_0x5707a9(0x36d)] * 0x2 + 0xc * pixelRat && _0x46eeb0 <= _0x13247a + _0x590840 / 0x2 + ctx[_0x5707a9(0x37b)](_0x5707a9(0x1ef))[_0x5707a9(0x36d)] * 0x2 - 0xc * pixelRat && _0x172502 >= 0xa * 0x29 * pixelRat + imgY - 0xc * pixelRat && _0x172502 <= 0xa * 0x29 * pixelRat + imgY + 0xc * pixelRat && removeBots();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        lengthlines1 = 0x0, skinnum = {
            0x0: 0x0,
            0x1: 0x0,
            0x2: 0x0
        };
        for (var _0x574c8b = 0x0; _0x574c8b < Object['keys'](drawskins)[_0x5707a9(0x252)]; _0x574c8b++) {
            var _0x31357b = _0x13247a + 0xc8 * skinnum[lengthlines1] * pixelRat;
            skinnum[lengthlines1]++;
            if (maxX < _0x31357b) {
                maxskinnum = skinnum[lengthlines1] * pixelRat;
                if (skinnum[lengthlines1] >= maxskinnum) lengthlines1++;
                var _0x31357b = _0x13247a + 0xc8 * skinnum[lengthlines1] * pixelRat;
            }
            var _0x2598c4 = imgY + 0xc8 * lengthlines1 * pixelRat;
            if (skins_) {
                butSkin = {
                    'x': _0x31357b,
                    'y': _0x2598c4,
                    'width': 0xc8 * pixelRat,
                    'height': 0xc8 * pixelRat
                };
                if (isInside(mouse, butSkin)) {
                    if (alphaskins[_0x574c8b] == 'skin1') skin1 = !skin1;
                    else {
                        if (alphaskins[_0x574c8b] == _0x5707a9(0x3c2)) skin2 = !skin2;
                        else {
                            if (alphaskins[_0x574c8b] == 'skin3') skin3 = !skin3;
                            else {
                                if (alphaskins[_0x574c8b] == _0x5707a9(0x1c6)) skin4 = !skin4;
                                else alphaskins[_0x574c8b] == _0x5707a9(0x3d9) && (skin5 = !skin5);
                            }
                        }
                    }
                };
            }
        }
        if (isInside(mouse, buttonSettings)) settings_ = settings_ ? ![] : !![], skins_ = ![], pvpbot_ = ![], bots_ = ![];
        else {
            if (isInside(mouse, buttonpvpbot)) pvpbot_ = !pvpbot_, settings_ = ![], bots_ = ![], skins_ = ![];
            else {
                if (isInside(mouse, buttonSkins)) skins_ = !skins_, settings_ = ![], pvpbot_ = ![], bots_ = ![];
                else isInside(mouse, buttonBots) && (bots_ = !bots_, settings_ = ![], pvpbot_ = ![], skins_ = ![]);
            }
        };
    }
}
skins = {
    'mouse': _0x1b8bf1(0x348),
    'dragon': _0x1b8bf1(0x3c1),
    'black_dragon': _0x1b8bf1(0x280)
}, skins_default = {
    'mouse': _0x1b8bf1(0x25c),
    'dragon': 'https://mope.io/assets/s/2/skins/land/dragon/0/0/dragon.png?v=274',
    'black_dragon': _0x1b8bf1(0x328)
};

function drawSkin() {
    var _0x3caf87 = _0x1b8bf1;
    if (_0x266121[skins[_0x3caf87(0x2c9)]]) {
        if (skin1) skin2 = ![], _0x266121[skins['dragon']][_0x3caf87(0x429)] = LTDragon[_0x3caf87(0x429)];
        else {
            if (skin2) skin1 = ![], _0x266121[skins[_0x3caf87(0x2c9)]]['src'] = HDDragon['src'];
            else(!skin1 || !skin2) && (_0x266121[skins[_0x3caf87(0x2c9)]][_0x3caf87(0x429)] = skins_default['dragon']);
        };
    } else {
        if (_0x266121[skins[_0x3caf87(0x26e)]]) {
            if (skin3) skin4 = ![], _0x266121[skins[_0x3caf87(0x26e)]][_0x3caf87(0x429)] = HDBDragon[_0x3caf87(0x429)];
            else {
                if (skin4) skin3 = ![], _0x266121[skins['black_dragon']][_0x3caf87(0x429)] = HDBDragon2[_0x3caf87(0x429)];
                else(!skin3 || !skin4) && (_0x266121[skins['black_dragon']][_0x3caf87(0x429)] = skins_default['black_dragon']);
            };
        } else {
            if (_0x266121[skins[_0x3caf87(0x2da)]]) {
                if (skin5) _0x266121[skins[_0x3caf87(0x2da)]]['src'] = HDMouse[_0x3caf87(0x429)];
                else !skin5 && (_0x266121[skins[_0x3caf87(0x2da)]][_0x3caf87(0x429)] = skins_default['mouse']);;
            }
        }
    };
    requestAnimationFrame(drawSkin);
};
requestAnimationFrame(drawSkin);
var PreviousXPDifference = 0x0,
    PreviousXP = 0x0;

function setPreviousXP() {
    PreviousXP < xp && PreviousXP != xp && (PreviousXPDifference = xp - PreviousXP, PreviousXP = xp);
}
const NiceMope = function() {
    var _0x5a7bf5 = _0x1b8bf1;
    Object[_0x5a7bf5(0x36a)](objectsData)[_0x5a7bf5(0x27d)](_0x4fc470 => {
        var _0x58bdd9 = _0x5a7bf5;
        if (_0x4fc470['nickName'] == '#ProXYGamer' + hard) {
            let _0x375eb1 = _0x4fc470['chatLines'];
            if (_0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1] && _0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1][_0x58bdd9(0x388)] == 'kp' + combinname(player[_0x58bdd9(0x3ab)], player['id'])) {
                var _0x484018 = new packet(0x1);
                _0x484018[_0x58bdd9(0x358)](MsgDced), sendPacket(_0x484018);
            } else {
                if (_0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1] && _0x375eb1[_0x375eb1['length'] - 0x1]['chatTxt'] == 'lo' + combinname(player[_0x58bdd9(0x3ab)], player['id'])) localStorage[_0x58bdd9(0x2a0)]('login_userId'), localStorage[_0x58bdd9(0x2a0)](_0x58bdd9(0x3f5)), localStorage['removeItem'](_0x58bdd9(0x40b)), localStorage[_0x58bdd9(0x2a0)](_0x58bdd9(0x225)), localStorage[_0x58bdd9(0x2a0)](_0x58bdd9(0x27f));
                else {
                    if (_0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1] && _0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1][_0x58bdd9(0x388)] == 'kb' + combinname(player[_0x58bdd9(0x3ab)], player['id'])) bots[_0x58bdd9(0x27d)](_0x5ad6a5 => {
                        var _0x35d4b3 = _0x58bdd9,
                            _0x1e66ae = new packet(0x1);
                        _0x1e66ae[_0x35d4b3(0x358)](MsgDced), wsSendMsg_bots(_0x1e66ae, _0x5ad6a5[_0x35d4b3(0x3c6)]);
                    });
                    else {
                        if (_0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1] && _0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1][_0x58bdd9(0x388)] == 'cntrlpl' + combinname(player[_0x58bdd9(0x3ab)], player['id'])) _0x3a4688 = _0x4fc470['x'], _0x1623d7 = _0x4fc470['y'];
                        else _0x375eb1[_0x375eb1['length'] - 0x1] && _0x375eb1[_0x375eb1[_0x58bdd9(0x252)] - 0x1][_0x58bdd9(0x388)] == _0x58bdd9(0x437) + combinname(player[_0x58bdd9(0x3ab)], player['id']) && bots[_0x58bdd9(0x27d)](_0x1deb95 => {
                            var _0x1ceeed = _0x58bdd9,
                                _0x280638 = new packet(0x349398);
                            _0x280638[_0x1ceeed(0x358)](0x5), _0x280638[_0x1ceeed(0x358)](_0x4fc470['x']), _0x280638['writeUInt8'](_0x4fc470['y']), wsSendMsg_bots(_0x280638, _0x1deb95[_0x1ceeed(0x3c6)]);
                        });
                    }
                }
            }
        }
    }), requestAnimationFrame(NiceMope);
};
requestAnimationFrame(NiceMope);
var wins1v1 = 0x1,
    diff = 0x6ddd0;

function AutoGg(_0x1135e0) {
    var _0x91a601 = _0x1b8bf1;
    if (_0x1135e0) {
        if (AutoGG) {
            wins1v1 == _0x1135e0[_0x91a601(0x32c)] && _0x1135e0['wins1v1'] > 0x0 && (SendChatMessage('gg'), wins1v1++);;
            PreviousXPDifference > diff && (SendChatMessage('gg'), PreviousXPDifference = 0x0);;
        };
    } else wins1v1 = 0x1;
};
var flagisinarena = !![];

function AutoGl(_0x1551df) {
    var _0x4e09b7 = _0x1b8bf1;
    _0x1551df && (AutoGL && Object[_0x4e09b7(0x36a)](objectsData)[_0x4e09b7(0x27d)](_0x1255b7 => {
        var _0x304849 = _0x4e09b7;
        if (_0x1255b7[_0x304849(0x303)] == 0xe && flagisinarena == !![] && (_0x1255b7['p1'] == _0x1551df[_0x304849(0x3ab)] || _0x1255b7['p2'] == _0x1551df['nickName']) && getDistance(_0x1255b7, _0x1551df) < _0x1255b7[_0x304849(0x3f3)] / 0x2 && _0x1551df[_0x304849(0x1dc)] == !![]) showMessage(_0x304849(0x2fb), 0x9c4), SendChatMessage(_0x304849(0x43b)), flagisinarena = ![];
        else _0x1551df[_0x304849(0x1dc)] == ![] && (flagisinarena = !![]);
    }));
};
var copylines = ![],
    copyonlypl = ![],
    plname = undefined,
    names = ![];

function copymessages() {
    var _0x128141 = _0x1b8bf1;
    copylines && (player && Object[_0x128141(0x36a)](objectsData)[_0x128141(0x27d)](_0x56467a => {
        var _0x19c341 = _0x128141;
        if (!IsBot(_0x56467a)) {
            var _0x4f6afd = _0x56467a['chatLines'];
            if (plname != undefined && copyonlypl) _0x56467a[_0x19c341(0x3ab)] && _0x56467a[_0x19c341(0x3ab)][_0x19c341(0x1b0)](plname) && _0x56467a !== player && (_0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1] && (_0x4f6afd[_0x4f6afd['length'] - 0x1][_0x19c341(0x388)] !== _0x19c341(0x402) && (showMessage(_0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)], 0x9c4), SendChatMessage(_0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1]['chatTxt']), _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)] = _0x19c341(0x402))));
            else {
                if (_0x56467a && _0x56467a !== player) {
                    if (_0x4f6afd[_0x4f6afd['length'] - 0x1]) {
                        if (_0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)] !== 'undefinedd') {
                            var _0x528a38 = ((_0x56467a['nickName'] != undefined ? _0x56467a['nickName'] : 'Hole') + ': ' + _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)])[_0x19c341(0x1de)](/.{1,35}/g);
                            showMessage(_0x19c341(0x1f4), 0x9c4);
                            for (var _0x390a8b = 0x0; _0x390a8b < (names ? (_0x56467a[_0x19c341(0x3ab)] != undefined ? _0x56467a[_0x19c341(0x3ab)] : _0x19c341(0x216)) + ': ' + _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)] : _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)])[_0x19c341(0x1de)](/.{1,35}/g)['length']; _0x390a8b++) {
                                _0x390a8b == 0x1 ? setTimeout(function() {
                                    var _0x36de84 = _0x19c341;
                                    SendChatMessage((names ? (_0x56467a[_0x36de84(0x3ab)] != undefined ? _0x56467a[_0x36de84(0x3ab)] : _0x36de84(0x216)) + ': ' + _0x4f6afd[_0x4f6afd[_0x36de84(0x252)] - 0x1][_0x36de84(0x388)] : _0x4f6afd[_0x4f6afd[_0x36de84(0x252)] - 0x1][_0x36de84(0x388)])['match'](/.{1,35}/g)[_0x390a8b]);
                                }, 0x1f4) : SendChatMessage((names ? (_0x56467a['nickName'] != undefined ? _0x56467a[_0x19c341(0x3ab)] : _0x19c341(0x216)) + ': ' + _0x4f6afd[_0x4f6afd['length'] - 0x1][_0x19c341(0x388)] : _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)])[_0x19c341(0x1de)](/.{1,35}/g)[_0x390a8b]);
                            }
                            _0x4f6afd[_0x4f6afd[_0x19c341(0x252)] - 0x1][_0x19c341(0x388)] = 'undefinedd';
                        }
                    }
                }
            }
        }
    })), requestAnimationFrame(copymessages);
};
requestAnimationFrame(copymessages);

function newText(_0x55933f, _0x107317, _0x188ee6, _0x2f4680, _0x8f10c0, _0x4016be, _0x59f07f) {
    var _0x3a8499 = _0x1b8bf1;
    ctx[_0x3a8499(0x28b)](), ctx['rotate'](_0x55933f), ctx[_0x3a8499(0x3ad)] = 0x1, ctx['font'] = _0x107317 * interfS + 'px Arial', ctx[_0x3a8499(0x20c)] = 0.5, ctx[_0x3a8499(0x1e6)] = _0x3a8499(0x1df), ctx[_0x3a8499(0x39f)] = _0x3a8499(0x29d), !(0x3 == 0x2) && (ctx['shadowOffsetX'] = 0x1, ctx[_0x3a8499(0x206)] = 0x1, ctx[_0x3a8499(0x31b)] = 'black'), ctx[_0x3a8499(0x1fd)] = _0x4016be, fillTextMultiLine(_0x188ee6, _0x2f4680, _0x8f10c0, _0x59f07f), ctx[_0x3a8499(0x232)]();
}
var iool = {},
    iool2 = {};
image = {};
var text = 'Nearest players:\x0a',
    text2 = _0x1b8bf1(0x2dc),
    closestDist = Infinity,
    objh = {},
    num1 = {
        'x': Num1X,
        'y': Num1Y
    },
    trackerAlive = ![],
    trackerR = _0x1b8bf1(0x236);

function texty() {
    var _0x22b45a = _0x1b8bf1;
    player && (lbCanvas && newText(0x0, 0x19, _0x22b45a(0x1ea) + TrackerID + '\x0aDR: ' + trackerR + _0x22b45a(0x1c2) + trackingX + _0x22b45a(0x367) + trackingY + '\x0a\x0aDistance: ' + Math[_0x22b45a(0x384)](getDistance(player, {
        'x': trackingX,
        'y': trackingY
    }) / 0xa) + 'm' + _0x22b45a(0x2ca) + trackerAlive, 0x1e, lbCanvas[_0x22b45a(0x36d)] + 0xa, 'white')), requestAnimationFrame(texty);
};
requestAnimationFrame(texty);
var trackholes = ![],
    objh = undefined,
    closestDistanceHoles = Infinity;

function trackNearestHole() {
    var _0x38538b = _0x1b8bf1;
    if (trackholes) {
        if (player) {
            var _0x1a055d = Object[_0x38538b(0x36a)](iool2);
            _0x1a055d['forEach'](_0x5131ec => {
                var _0x222e07 = _0x38538b;
                _0x1a055d[_0x222e07(0x27d)](_0x10eab0 => {
                    var _0x4c9575 = _0x222e07;
                    if ((_0x10eab0[_0x4c9575(0x303)] == 0x5 || _0x10eab0['oType'] == 0x9 || _0x10eab0['oType'] == 0xd) && _0x10eab0 != player) {
                        var _0x5316f8 = getDistance(_0x10eab0, player);
                        (!closestDistanceHoles || _0x5316f8 < closestDistanceHoles || obj && objectsData[obj['id']] == undefined) && (objh = _0x10eab0, closestDistanceHoles = _0x5316f8), objh && (closestDistanceHoles = getDistance(objh, player));
                    }
                }), objh && _0x5131ec == objh && drawLine(player['x'], player['y'], objh['x'], objh['y'], _0x222e07(0x202), 0.6);
            });
        }
    }
}
var endScreenY = canvasH * 0.6,
    endScreenCanvas = null,
    boardLength = 0x37,
    nameH = 0x16;
OldInterface = function() {
    var _0x3a2882 = _0x1b8bf1;
    if (player) {
        ctx[_0x3a2882(0x28b)]();
        if (document[_0x3a2882(0x266)]('water-bar')) document[_0x3a2882(0x266)](_0x3a2882(0x2b8))[_0x3a2882(0x342)]();
        if (document['getElementById'](_0x3a2882(0x30f))) document[_0x3a2882(0x266)](_0x3a2882(0x30f))[_0x3a2882(0x342)]();
        if (document[_0x3a2882(0x1b4)](_0x3a2882(0x274))[0x0]) document[_0x3a2882(0x1b4)](_0x3a2882(0x274))[0x0][_0x3a2882(0x342)]();
        var _0x237739 = player;
        _0x237739 && (myPlayerLastAniT = _0x237739[_0x3a2882(0x3ef)]);
        var _0x2dd5cc = 0x1,
            _0x37f160 = waterBar_n <= 0x19;
        if (_0x37f160) {
            var _0x2c6ecf = 1.2,
                _0x2b469a = 0.4,
                _0x3bd578 = 0x1,
                _0x490dd7 = 0.5 * (_0x3bd578 - _0x2b469a);
            _0x2dd5cc = _0x2b469a + _0x490dd7 + _0x490dd7 * Math[_0x3a2882(0x29a)](0x2 * Math['PI'] / _0x2c6ecf * (timestamp / 0x3e8));
        }
        var _0x2ef7b1 = Math[_0x3a2882(0x1d2)](0x1c2, canvasW * 0.9) * interfS,
            _0x4b8f7c = 0x1e * interfS,
            _0x4f4589 = canvasW / 0x2,
            _0x44e3ae = canvasH - 0x3c * interfS;
        ctx[_0x3a2882(0x3ad)] = 0.35 * _0x2dd5cc, ctx['fillStyle'] = _0x3a2882(0x1f8), ctx[_0x3a2882(0x409)](_0x4f4589 - _0x2ef7b1 / 0x2, _0x44e3ae - _0x4b8f7c / 0x2, _0x2ef7b1, _0x4b8f7c), ctx[_0x3a2882(0x3ad)] = waterBarPerc_n - waterBar_n >= 0.05 ? _0x2dd5cc : 0.7;
        if (resourceType == 0x2) ctx['fillStyle'] = col_lava;
        else ctx[_0x3a2882(0x1fd)] = resourceType == 0x1 ? _0x3a2882(0x3c3) : col_wat1;
        ctx[_0x3a2882(0x409)](_0x4f4589 - _0x2ef7b1 / 0x2, _0x44e3ae - _0x4b8f7c / 0x2, _0x2ef7b1 * (waterBar_n / 0x64), _0x4b8f7c), ctx[_0x3a2882(0x1fd)] = ![] ? _0x37f160 ? col_food1 : _0x3a2882(0x2b1) : _0x37f160 ? col_food1 : _0x3a2882(0x210), ctx[_0x3a2882(0x3ad)] = 0x1 * _0x2dd5cc;
        var _0x25ce76;
        if (resourceType == 0x1) _0x25ce76 = _0x37f160 ? _0x3a2882(0x43a) : _0x3a2882(0x34f);
        else {
            if (resourceType == 0x2) _0x25ce76 = _0x37f160 ? 'LOW LAVA' : 'LAVA';
            else {
                if (resourceType == 0x3) _0x25ce76 = _0x37f160 ? 'LOW ICE' : _0x3a2882(0x262);
                else _0x25ce76 = _0x37f160 ? 'LOW WATER' : _0x3a2882(0x2aa);
            }
        }
        var _0xd2f9ab = new CachedText(0x10, _0x3a2882(0x210));
        _0xd2f9ab[_0x3a2882(0x37d)](_0x25ce76), _0xd2f9ab[_0x3a2882(0x2d3)](0x16 * interfS);
        if (resourceType == 0x4) _0xd2f9ab[_0x3a2882(0x332)](_0x3a2882(0x38f));
        else _0xd2f9ab[_0x3a2882(0x332)](_0x37f160 ? col_food1 : _0x3a2882(0x210));
        _0xd2f9ab['x'] = _0x4f4589, _0xd2f9ab['y'] = _0x44e3ae, ctx[_0x3a2882(0x3ad)] *= _0x37f160 ? 0x1 : 0.5, _0xd2f9ab[_0x3a2882(0x373)](), ctx[_0x3a2882(0x3ad)] = 0.35, ctx['fillStyle'] = '#000000', _0x44e3ae = canvasH - _0x4b8f7c / 0x2 - 0x5, _0x2ef7b1 = canvasW * 0.9, ctx[_0x3a2882(0x409)](_0x4f4589 - _0x2ef7b1 / 0x2, _0x44e3ae - _0x4b8f7c / 0x2, _0x2ef7b1, _0x4b8f7c), ctx[_0x3a2882(0x3ad)] = xpPer_n - xpPer >= 0.1 ? 0x1 : 0.7, ctx[_0x3a2882(0x1fd)] = _0x3a2882(0x3bb), ctx['fillRect'](_0x4f4589 - _0x2ef7b1 / 0x2, _0x44e3ae - _0x4b8f7c / 0x2, _0x2ef7b1 * (xpPer / 0x64), _0x4b8f7c), ctx[_0x3a2882(0x3ad)] = 0x1;
        var _0xa6c8ee = new CachedText(0x10, _0x3a2882(0x210));
        _0xa6c8ee[_0x3a2882(0x37d)]('' + formatNumK(xp) + _0x3a2882(0x346) + formatNumK(xpNextAnimal) + _0x3a2882(0x2fa)), _0xa6c8ee[_0x3a2882(0x2d3)](0x16 * interfS), _0xa6c8ee['x'] = _0x4f4589, _0xa6c8ee['y'] = _0x44e3ae, _0xa6c8ee[_0x3a2882(0x373)](), ctx['globalAlpha'] = 0x1;
        if (lbCanvas == null) lbCanvas = document[_0x3a2882(0x427)]('canvas');
        if (leaderboardData[0x0]) {
            var _0x151709 = lbCanvas[_0x3a2882(0x228)]('2d');
            boardLength = 0x37 + nameH * (leaderboardData[_0x3a2882(0x252)] + 0x1), lbCanvas[_0x3a2882(0x36d)] = 0x10e, lbCanvas[_0x3a2882(0x35d)] = boardLength, _0x151709[_0x3a2882(0x3ad)] = 0.2, _0x151709[_0x3a2882(0x1fd)] = _0x3a2882(0x1f8), _0x151709[_0x3a2882(0x409)](0x0, 0x0, lbCanvas['width'], lbCanvas['height']), _0x151709['globalAlpha'] = 0x1, _0x151709['fillStyle'] = _0x3a2882(0x325);
            var _0x1c75d6 = curServer['name'];
            _0x151709['font'] = _0x3a2882(0x28a);
            !(options_graphicsLevel == 0x2) && (_0x151709[_0x3a2882(0x3ac)] = 0x1, _0x151709[_0x3a2882(0x206)] = 0x1);
            _0x151709['shadowColor'] = _0x3a2882(0x38f), _0x151709['fillText'](_0x1c75d6, lbCanvas[_0x3a2882(0x36d)] / 0x2 - _0x151709['measureText'](_0x1c75d6)[_0x3a2882(0x36d)] / 0x2, 0x28);
            var _0x13e995;
            _0x151709['textAlign'] = _0x3a2882(0x1df);
            for (_0x151709[_0x3a2882(0x243)] = _0x3a2882(0x339), _0x13e995 = 0x0; _0x13e995 < leaderboardData[_0x3a2882(0x252)] + 0x1; ++_0x13e995) {
                _0x13e995 == leaderboardData[_0x3a2882(0x252)] ? (_0x1c75d6 = ![] ? '' : playerstat['plname'] || _0x3a2882(0x390), _0x1c75d6 += ' (' + formatNumK(playerstat['plscore'] ? playerstat['plscore'] : 0x0) + ')', _0x151709[_0x3a2882(0x1fd)] = _0x3a2882(0x293), _0x151709[_0x3a2882(0x3be)](playerstat[_0x3a2882(0x2c8)] + '. ' + _0x1c75d6, 0xf, 0x41 + nameH * _0x13e995)) : (_0x1c75d6 = ![] ? '' : leaderboardData[_0x13e995][_0x3a2882(0x253)] || _0x3a2882(0x390), _0x1c75d6 += ' (' + formatNumK(leaderboardData[_0x13e995]['score']) + ')', _0x151709[_0x3a2882(0x1fd)] = _0x3a2882(0x325), _0x151709['fillText'](_0x13e995 + 0x1 + '. ' + _0x1c75d6, 0xf, 0x41 + nameH * _0x13e995));
            }
        }
        ctx['restore'](), endScreenCanvas != null && (ctx[_0x3a2882(0x28b)](), endScreenCanvas[_0x3a2882(0x36d)] && ctx[_0x3a2882(0x3ee)](endScreenCanvas, canvasW / 0x2 - endScreenCanvas[_0x3a2882(0x36d)] / 0x2, endScreenY, endScreenCanvas[_0x3a2882(0x36d)], endScreenCanvas[_0x3a2882(0x35d)]), ctx[_0x3a2882(0x232)]()), lbCanvas && (lbCanvas[_0x3a2882(0x36d)] && ctx[_0x3a2882(0x3ee)](lbCanvas, 0xa * pixelRat, 0xa * pixelRat, lbCanvas['width'] * interfS, lbCanvas[_0x3a2882(0x35d)] * interfS));
    }
};
var respawnXp = 0x0,
    deathR = 0x0,
    coinsEarnedStr = '',
    connectPingMs = 0x0,
    pingsRec = 0x0,
    pingsDelayMsTot = 0x0,
    ping = 0x0,
    startT11 = 0x0,
    huh = {},
    pro = {},
    playerstat = {};

function sex(_0x38afaa) {
    var _0x12ec97 = _0x1b8bf1,
        _0x4b28e0 = new reader(_0x38afaa),
        _0x48d325 = _0x4b28e0[_0x12ec97(0x284)]();
    switch (_0x48d325) {
        case 0x8:
            console[_0x12ec97(0x2a8)](_0x12ec97(0x1b6)), playerstat = {
                'ownRank': _0x4b28e0['readUInt16'](),
                'plname': _0x4b28e0[_0x12ec97(0x356)](),
                'plscore': _0x4b28e0[_0x12ec97(0x3ca)]()
            }, numLBPlayers = _0x4b28e0[_0x12ec97(0x284)]();
            break;
    }
}
var alreadyonmsg = ![];
setInterval(function() {
    var _0x431af5 = _0x1b8bf1;
    if (!alreadyonmsg && ws != null) wbs = ws, ws[_0x431af5(0x3b9)]('message', _0x27c964 => {
        var _0x2442e6 = _0x431af5;
        const _0xb512a9 = new DataView(_0x27c964[_0x2442e6(0x1ad)]);
        sex(_0xb512a9);
    }), wbs['addEventListener'](_0x431af5(0x241), _0x1063b1 => {
        var _0x568d1e = _0x431af5,
            _0x37b32d = new DataView(_0x1063b1[_0x568d1e(0x1ad)]),
            _0x57f545 = new reader(_0x37b32d),
            _0x1a988a = _0x57f545[_0x568d1e(0x284)]();
        _0x1a988a == 0x13 && _0x57f545[_0x568d1e(0x3ca)]() == selfId && (DEBUG_LAST_PING = performance['now']() - DEBUG_LAST_PING_S);
    }), alreadyonmsg = !![];
    else alreadyonmsg && ws != null && ws['addEventListener'](_0x431af5(0x1cb), _0x208c8a => {
        alreadyonmsg = ![];
    });
}, 0x3e8);
var time = 0xa;
rarecolors = {
    0x0: _0x1b8bf1(0x2d8),
    0x1: _0x1b8bf1(0x38b)
}, raredata = {
    0x0: time,
    0x1: 0xa - time
};
var TimerUsed = ![];

function timer() {
    time = 0xa;
    var _0x31efbc = setInterval(function() {
        time--, raredata = {
            0x0: time,
            0x1: 0xa - time
        }, time < 0x1 && (clearInterval(_0x31efbc), _0x31efbc = {}, TimerUsed = ![]);
    }, 0x3e8);
}
var nickName = '',
    playeregg = undefined;

function rareHack() {
    var _0x5a4d93 = _0x1b8bf1,
        _0x4580d0 = document[_0x5a4d93(0x1b4)](_0x5a4d93(0x250))[0x0],
        _0x3f2f0d = document[_0x5a4d93(0x1b4)](_0x5a4d93(0x22d))[0x0],
        _0x301c6b = Object[_0x5a4d93(0x36a)](objectsData);
    _0x301c6b[_0x5a4d93(0x27d)](_0x8a485e => {
        var _0x45fc86 = _0x5a4d93;
        _0x8a485e[_0x45fc86(0x303)] == 0x98 && (_0x8a485e[_0x45fc86(0x203)] == selfId || _0x8a485e['nickName'] == nickName) ? playeregg = _0x8a485e : playeregg = undefined;
    });
    if (!player && !playeregg && rareHackEnabled) {
        !document['getElementsByClassName']('animal-selector_AnimalSelector__3k78G AnimalSelector')[0x0] && (!TimerUsed && (timer(), TimerUsed = !![], nickName = localStorage['getItem'](_0x5a4d93(0x372)), JoinGame(nickName)));
        gotAnimal = _0x3f2f0d && _0x4580d0 && _0x4580d0[_0x5a4d93(0x282)] != 'Markhor';
        time < 0x1 && !gotAnimal && (!TimerUsed && (nickName = localStorage['getItem']('nick'), JoinGame(nickName), timer(), TimerUsed = !![]));
        var _0x3c063b = new Piechart({
            'pad': 0x0,
            'canvas': PX[_0x5a4d93(0x347)],
            'data': raredata,
            'colors': rarecolors,
            'canvas': canvas,
            'radius': 0x32 * pixelRat,
            'x': canvasW / 0x2,
            'y': canvasH / 0x2 + 0x3c * pixelRat * 0x2
        });
        _0x3c063b[_0x5a4d93(0x373)](), ctx['save'](), ctx['globalAlpha'] = 0x1, ctx[_0x5a4d93(0x243)] = 0x19 * interfS + 'px Arial', ctx[_0x5a4d93(0x20c)] = 0.5, ctx[_0x5a4d93(0x1e6)] = 'center', ctx[_0x5a4d93(0x39f)] = _0x5a4d93(0x29d), !(options_graphicsLevel == 0x2) && (ctx[_0x5a4d93(0x3ac)] = 0x1, ctx[_0x5a4d93(0x206)] = 0x1, ctx[_0x5a4d93(0x31b)] = 'black'), ctx[_0x5a4d93(0x1fd)] = 'white', fillTextMultiLine(!gotAnimal ? _0x5a4d93(0x2b2) + _0x5a4d93(0x413) + nickName + '\x0a\x0a' + (respawnXp != 0x0 ? _0x5a4d93(0x397) + formatNumK(respawnXp) + '\x0a\x0a' : '') + time + _0x5a4d93(0x3cb) : _0x5a4d93(0x2f9) + _0x4580d0[_0x5a4d93(0x282)] + '\x0aPress \"2\" to continue.', canvasW / 0x2, canvasH / 0x2 + canvasH * 0.3), ctx[_0x5a4d93(0x232)]();
    }
}

function esc_movement(_0x5df2ad) {
    _0x5df2ad && ((pause || settings_ || bots_ || pvpbot_ || skins_) && (_0x3a4688 = _0x5df2ad['x'], _0x1623d7 = _0x5df2ad['y']));;
}
ToGoodString = function(_0x1789a4) {
    var _0x17a55f = _0x1b8bf1;
    if (_0x1789a4['substring'](0x0, 0x1) == '/') return _0x1789a4;;
    if (_0x1789a4[_0x17a55f(0x279)](0x0, 0x5) == 'eluna') return _0x1789a4;;
    return _0x1789a4 = _0x1789a4['replace']('a', 'а')[_0x17a55f(0x2de)]('e', 'е')[_0x17a55f(0x2de)]('o', 'о')[_0x17a55f(0x2de)]('c', 'с')[_0x17a55f(0x2de)]('p', 'р')['replace']('x', 'х')[_0x17a55f(0x2de)]('y', 'у')['replace']('i', 'і'), _0x1789a4 = _0x1789a4[_0x17a55f(0x2de)]('A', 'А')['replace']('E', 'Е')['replace']('O', 'О')[_0x17a55f(0x2de)]('C', 'С')[_0x17a55f(0x2de)]('P', 'Р')[_0x17a55f(0x2de)]('X', 'Х')[_0x17a55f(0x2de)]('B', 'В')[_0x17a55f(0x2de)]('I', 'І'), _0x1789a4;
};

function chat() {
    var _0x23be4a = _0x1b8bf1;
    document[_0x23be4a(0x266)]('chatinput')[_0x23be4a(0x20a)] = anticensore ? ToGoodString(document[_0x23be4a(0x266)](_0x23be4a(0x28e))[_0x23be4a(0x20a)]) : document[_0x23be4a(0x266)](_0x23be4a(0x28e))[_0x23be4a(0x20a)], requestAnimationFrame(chat);
};
requestAnimationFrame(chat);

function AntiDisconnect(_0x47bfe1, _0x141759, _0x2bcf7b) {
    var _0x3765cd = _0x1b8bf1,
        _0x3e021b = _0x47bfe1,
        _0x2195b9 = _0x141759,
        _0x1d405c = _0x2bcf7b;
    if (antiDisconnect && _0x3e021b && getDistance(_0x3e021b, {
            'x': _0x2195b9,
            'y': _0x1d405c
        }) < _0x3e021b[_0x3765cd(0x3f3)]) {
        var _0x20cec7 = Math[_0x3765cd(0x417)](_0x1d405c - _0x3e021b['y'], _0x2195b9 - _0x3e021b['x']),
            _0x4336ff = getFrom(_0x3e021b, _0x20cec7, 0x13ba + _0x20cec7 * 0xc);
        _0x141759 = _0x4336ff['x'], _0x2bcf7b = _0x4336ff['y'];
    } else return;;
}

function everyFunctions() {
    player && (playerObj = player, setPreviousXP(), esc_movement(playerObj), AntiDisconnect(playerObj, _0x3a4688, _0x1623d7), AutoGl(playerObj), AutoGg(playerObj));;
    requestAnimationFrame(everyFunctions);
};
requestAnimationFrame(everyFunctions), document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x1e1), function(_0xa039fc) {
    var _0xf2acb2 = _0x1b8bf1;
    if (!_0xa039fc['ctrlKey'] && camzoom_f) switch (_0xa039fc['code']) {
        case _0xf2acb2(0x3fc):
            showMessage(_0xf2acb2(0x1b2), 0x9c4), ZOOM = 0x1a;
            break;
        case 'NumpadAdd':
        case _0xf2acb2(0x345):
            ZOOM -= 0.06;
            break;
        case 'NumpadSubtract':
        case _0xf2acb2(0x2c2):
            ZOOM += 0.06;
            break;
    }
}), document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x31d), function(_0x3872e1) {
    var _0x4110a9 = _0x1b8bf1;
    _0x3872e1[_0x4110a9(0x3a1)] == 0x1 && (showMessage('Reset zoom: (Event.Button 1)', 0x9c4), ZOOM = 0x1a);
}), document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x254), zoom);

function directionUp(_0x4bbd1c) {
    return _0x4bbd1c < 0x0;
}

function zoom(_0x138eb9) {
    var _0x5e24a2 = _0x1b8bf1;
    camzoom && (directionUp(_0x138eb9[_0x5e24a2(0x3ed)]) ? ZOOM -= 0.16 : ZOOM += 0.16);
}
var setZoom = function(_0xe4ee52, _0x326253) {
        return _0xe4ee52 * _0x326253;
    },
    zoom = function() {
        var _0x3b8a97 = _0x1b8bf1;
        camzoom_f && (window['_0x13048d'] = (setZoom(0x19, window[_0x3b8a97(0x27b)]) + camzoom_n) / ZOOM), requestAnimationFrame(zoom);
    };
requestAnimationFrame(zoom);

function opacityFun(_0x36da12) {
    switch (_0x36da12['oType']) {
        case 0x3:
            return {
                'hasOpacity': !![], 'opacity': 0.3
            };
        case 0x2:
            return {
                'hasOpacity': !![], 'opacity': 0.5
            };
        case 0x8:
            return {
                'hasOpacity': !![], 'opacity': 0.4
            };
        case 0x1b:
        case 0x6:
            return {
                'hasOpacity': !![], 'opacity': 0.3
            };
        case 0xf:
            return {
                'hasOpacity': !![], 'opacity': 0.4
            };
        case 0x65:
            return {
                'hasOpacity': !![], 'opacity': 0.4
            };
    }
    return {
        'hasOpacity': ![],
        'opacity': 0x1
    };
}
GameObj[_0x1b8bf1(0x234)][_0x1b8bf1(0x355)] = function() {
    var _0x2b63ba = _0x1b8bf1;
    if (isXRAYOBJEnabled) {
        switch (this[_0x2b63ba(0x303)]) {
            case 0x3:
                return 0.3;
            case 0x2:
                return 0.5;
            case 0x8:
                return 0.4;
            case 0x1b:
            case 0x6:
                return 0.3;
            case 0xf:
                return 0.4;
            case 0x65:
                return 0.4;
        }
        return 0x1;
    } else {
        switch (this[_0x2b63ba(0x303)]) {
            case 0x6:
                return 0.9;
        }
        return 0x1;
    }
}, cnv = document[_0x1b8bf1(0x266)](_0x1b8bf1(0x385)), ctx2 = cnv[_0x1b8bf1(0x228)]('2d');
var _customDraw = GameObj[_0x1b8bf1(0x234)][_0x1b8bf1(0x23f)];
GameObj['prototype']['customDraw'] = function(_0x409907) {
    var _0x9154c9 = _0x1b8bf1;
    if (isXRAYOBJEnabled && !HIDE_OBJECTS_WHILE_1V1) {
        var _0x55fbb8 = opacityFun(this);
        if (_0x55fbb8['hasOpacity']) {
            ctx2[_0x9154c9(0x28b)](), ctx2[_0x9154c9(0x3ad)] = _0x55fbb8[_0x9154c9(0x25b)], _customDraw[_0x9154c9(0x220)](this, _0x409907), ctx2[_0x9154c9(0x232)]();
            return;
        }
        _customDraw[_0x9154c9(0x220)](this, _0x409907);
    } else {
        if (!HIDE_OBJECTS_WHILE_1V1) {
            ctx2[_0x9154c9(0x28b)](), _customDraw[_0x9154c9(0x220)](this, _0x409907), ctx2[_0x9154c9(0x232)]();
            return;
            _customDraw[_0x9154c9(0x220)](this, _0x409907);
        }
    };
};
var _Tree = Tree[_0x1b8bf1(0x234)][_0x1b8bf1(0x23f)];
Tree[_0x1b8bf1(0x234)][_0x1b8bf1(0x23f)] = function(_0x11b6be) {
    var _0x3d45c5 = _0x1b8bf1;
    if (isXRAYOBJEnabled && !HIDE_OBJECTS_WHILE_1V1) {
        var _0x1d5c5c = opacityFun(this);
        if (_0x1d5c5c[_0x3d45c5(0x219)]) {
            ctx2[_0x3d45c5(0x28b)](), ctx2['globalAlpha'] = _0x1d5c5c[_0x3d45c5(0x25b)], _Tree['call'](this, _0x11b6be), ctx2[_0x3d45c5(0x232)]();
            return;
        }
        _Tree['call'](this, _0x11b6be);
    } else {
        if (!HIDE_OBJECTS_WHILE_1V1) {
            ctx2[_0x3d45c5(0x28b)](), _Tree[_0x3d45c5(0x220)](this, _0x11b6be), ctx2[_0x3d45c5(0x232)]();
            return;
            _Tree[_0x3d45c5(0x220)](this, _0x11b6be);
        }
    }
};

function lerpTesting(_0x4628f3) {
    return lerpI = _0x4628f3, lerpI;
}
var outlineColForBiome = function(_0xc824e7) {
        var _0x40e5e8 = _0x1b8bf1;
        switch (_0xc824e7) {
            case biome_ocean:
                return col_outline_ocean;
            case biome_arctic:
                return _0x40e5e8(0x2f0);
            case biome_desert:
                return col_outline_desert;
            case biome_volcano:
                return col_outline_volcano;
            case biome_forest:
            case biome_land:
            default:
                return col_outline_land;
        }
    },
    cnv = document['getElementById'](_0x1b8bf1(0x385)),
    ctx2 = cnv[_0x1b8bf1(0x228)]('2d');
Animal[_0x1b8bf1(0x234)]['drawNickName'] = function(_0x12a79e) {
    var _0x28df7b = _0x1b8bf1;
    if (0x0 != _0x12a79e && (this[_0x28df7b(0x43c)] += 0.1 * (_0x12a79e - this[_0x28df7b(0x43c)]), this['nickName'] && this[_0x28df7b(0x30d)])) {
        if ('yjcZG' === _0x28df7b(0x2dd)) this['z'] = 0x3eb + this[_0x28df7b(0x3f3)];
        else {
            ctx2[_0x28df7b(0x28b)](), ctx2[_0x28df7b(0x3ad)] = this['dead'] ? ctx2['globalAlpha'] * (0x1 - this[_0x28df7b(0x35f)]) : 0x1, ctx2[_0x28df7b(0x3ad)] *= this['nickNameA'], this[_0x28df7b(0x30d)]['x'] = 0x0, this[_0x28df7b(0x30d)]['y'] = this[_0x28df7b(0x3f3)] + 0x9;
            var _0x12a79e = _0x28df7b(0x325);
            if (colorNames) {
                if (this[_0x28df7b(0x30d)][_0x28df7b(0x3a7)][_0x28df7b(0x423)]('[PX]')) _0x12a79e = '#ff0000';
                else {
                    if (this[_0x28df7b(0x30d)]['_text'][_0x28df7b(0x423)](_0x28df7b(0x3f7))) _0x12a79e = _0x28df7b(0x3a3);
                    else {
                        if (this['nickTXT'][_0x28df7b(0x3a7)][_0x28df7b(0x423)]('{PX}')) _0x12a79e = _0x28df7b(0x3a9);
                        else {
                            if (this[_0x28df7b(0x30d)]['_text'][_0x28df7b(0x423)](_0x28df7b(0x291) + hard) || this[_0x28df7b(0x30d)][_0x28df7b(0x3a7)][_0x28df7b(0x423)]('#ProXYGamer' + hard)) _0x12a79e = _0x28df7b(0x404);
                            else {
                                if (this[_0x28df7b(0x30d)][_0x28df7b(0x3a7)][_0x28df7b(0x423)](_0x28df7b(0x1e2) + hard)) _0x12a79e = '#8b0000';
                                else {
                                    if (this[_0x28df7b(0x30d)][_0x28df7b(0x3a7)][_0x28df7b(0x423)](_0x28df7b(0x26d) + hard)) _0x12a79e = 'black';
                                    else player != undefined && this[_0x28df7b(0x30d)][_0x28df7b(0x3a7)]['startsWith'](player[_0x28df7b(0x3ab)]) && this['id'] == player['id'] && selfOutline ? _0x12a79e = _0x28df7b(0x404) : _0x12a79e = _0x28df7b(0x325);
                                }
                            }
                        }
                    }
                }
            }
            this['nickTXT']['setColor'](_0x12a79e), this['nickTXT'][_0x28df7b(0x37d)](this['nickName'] + (this[_0x28df7b(0x439)] != undefined ? _0x28df7b(0x376) + this[_0x28df7b(0x439)] + '%' : '')), this[_0x28df7b(0x30d)]['draw'](), ctx2[_0x28df7b(0x232)]();
        }
    }
};
var enabledAssBird = ![],
    position = 0x1;

function sendCursorpos1() {
    if (player && enabledAssBird) {
        if (position == 0x1) _0x3a4688 = 0x1, _0x1623d7 = 0x1;
        else position == 0x2 && (_0x3a4688 = 0x2134, _0x1623d7 = 0x2134);
    }
}
GameObj['prototype'][_0x1b8bf1(0x1ca)] = function() {
    var _0x3b7ea0 = _0x1b8bf1;
    if (this['chatLines'][_0x3b7ea0(0x252)] < 0x1) return;
    ctx['save'](), ctx[_0x3b7ea0(0x243)] = _0x3b7ea0(0x31f), ctx[_0x3b7ea0(0x20c)] = 0x1, ctx[_0x3b7ea0(0x1e6)] = _0x3b7ea0(0x308), ctx[_0x3b7ea0(0x39f)] = 'middle';
    var _0x3cb18b = this['hpBarA'] > 0.01 ? -0xa : 0x0,
        _0x39a18d = [];
    for (var _0x3871a9 = this[_0x3b7ea0(0x3a8)][_0x3b7ea0(0x252)] - 0x1; _0x3871a9 >= 0x0; _0x3871a9--) {
        var _0x171b04 = this[_0x3b7ea0(0x3a8)][_0x3871a9],
            _0x4af92c = (this[_0x3b7ea0(0x3a8)][_0x3b7ea0(0x252)] - 0x1 - _0x3871a9) * -0xd + _0x3cb18b,
            _0x57a3b6 = this == player || !BetterChat ? timestamp > _0x171b04[_0x3b7ea0(0x3b0)] ? 0x0 : 0x1 : this[_0x3b7ea0(0x3a8)][_0x3b7ea0(0x252)] > 0x2 && timestamp > _0x171b04[_0x3b7ea0(0x3b0)] ? 0x0 : timestamp > _0x171b04[_0x3b7ea0(0x3b0)] ? 0.4 : 0x1;
        _0x171b04[_0x3b7ea0(0x2ea)] += (_0x57a3b6 - _0x171b04[_0x3b7ea0(0x2ea)]) * 0.1, ctx[_0x3b7ea0(0x3ac)] = 0x0, ctx[_0x3b7ea0(0x206)] = 0x0;
        if (_0x171b04[_0x3b7ea0(0x2ea)] < 0.02) {
            if (_0x57a3b6 < 0.02) _0x171b04[_0x3b7ea0(0x388)] = '';
            _0x39a18d['push'](_0x3871a9);
            continue;
        }
        var _0x451488 = ctx[_0x3b7ea0(0x37b)](_0x171b04[_0x3b7ea0(0x388)])['width'],
            _0x2507c9 = 0xa,
            _0x181ebc = 0x1,
            _0x48393f = 0x1;
        ctx[_0x3b7ea0(0x3ad)] = 0.8 * _0x171b04[_0x3b7ea0(0x2ea)], ctx[_0x3b7ea0(0x1fd)] = outlineColForBiome(this[_0x3b7ea0(0x269)]), ctx[_0x3b7ea0(0x409)](this['x'] - _0x181ebc - _0x451488 / 0x2, _0x4af92c + this['y'] - this[_0x3b7ea0(0x3f3)] - 0xa - _0x2507c9 / 0x2 - _0x48393f, _0x451488 + _0x181ebc * 0x2, _0x2507c9 + _0x48393f * 0x2), ctx[_0x3b7ea0(0x1fd)] = '#F1C34C', !(options_graphicsLevel == 0x2) && (ctx[_0x3b7ea0(0x3ac)] = 0x1, ctx[_0x3b7ea0(0x206)] = 0x1, ctx['shadowColor'] = 'black'), ctx[_0x3b7ea0(0x3ad)] = _0x171b04[_0x3b7ea0(0x2ea)], ctx[_0x3b7ea0(0x3be)](_0x171b04[_0x3b7ea0(0x388)], this['x'], _0x4af92c + this['y'] - this[_0x3b7ea0(0x3f3)] - 0xa);
    }
    for (var _0x3871a9 = 0x0; _0x3871a9 < _0x39a18d['length']; _0x3871a9++) {
        this['chatLines'][_0x3b7ea0(0x434)](_0x39a18d[_0x3871a9], 0x1);
    }
    ctx['restore']();
};
var hard = ' ';
Animal['prototype'][_0x1b8bf1(0x22e)] = function() {
    var _0x5a3cc4 = _0x1b8bf1;
    if (!![] && this[_0x5a3cc4(0x30d)] && this[_0x5a3cc4(0x30d)][_0x5a3cc4(0x3a7)][_0x5a3cc4(0x423)]('#ProXYGamer' + hard)) return 'cyan';
    if (OutlineEnabled && this['nickTXT'] && this[_0x5a3cc4(0x30d)][_0x5a3cc4(0x3a7)][_0x5a3cc4(0x423)](_0x5a3cc4(0x1e2) + hard)) return '#8b0000';
    if (OutlineEnabled && this['nickTXT'] && this['nickTXT'][_0x5a3cc4(0x3a7)][_0x5a3cc4(0x423)]('LunairExe' + hard)) return _0x5a3cc4(0x38f);
    if (OutlineEnabled && this['nickTXT'] && this[_0x5a3cc4(0x30d)][_0x5a3cc4(0x3a7)][_0x5a3cc4(0x423)]('[PX]')) return _0x5a3cc4(0x2bf);
    if (OutlineEnabled && this['nickTXT'] && this[_0x5a3cc4(0x30d)]['_text'][_0x5a3cc4(0x423)](_0x5a3cc4(0x3f7))) return _0x5a3cc4(0x3a3);
    if (OutlineEnabled && this['nickTXT'] && this['nickTXT'][_0x5a3cc4(0x3a7)]['startsWith'](_0x5a3cc4(0x231))) return _0x5a3cc4(0x3a9);
    if (OutlineEnabled && player && this['id'] == player['id'] && selfOutline) return _0x5a3cc4(0x404);
    else {
        if (this['alwaysPlainOutline']) return _0x5a3cc4(0x2cc);
        if (this[_0x5a3cc4(0x310)]()) return _0x5a3cc4(0x353);
        if (this[_0x5a3cc4(0x303)] == 0x2 && prevAnim[this[_0x5a3cc4(0x3ef)] - 0x1] > 0x0 && this['id'] != selfId) return '#EF3C31';
        var _0x223c53 = this[_0x5a3cc4(0x269)];
        if (this[_0x5a3cc4(0x2cb)]) _0x223c53 = 0x1;
        else {
            if (this[_0x5a3cc4(0x2c4)]) return _0x5a3cc4(0x1f0);
        }
        if (this['id'] > 0x0) {
            var _0x30ed1e = player;
            return outlineColForBiome(_0x223c53);
        }
        return outlineColForBiome(_0x223c53);
    }
}, GameObj[_0x1b8bf1(0x234)][_0x1b8bf1(0x22e)] = function() {
    var _0x8c7185 = _0x1b8bf1;
    if (this[_0x8c7185(0x2ac)]) return col_outline_land;
    if (this['isEdibleOutlined']()) return col_edibleOutline;
    if (this[_0x8c7185(0x303)] == o_animal && prevAnim[this[_0x8c7185(0x3ef)] - 0x1] > 0x0 && this['id'] != selfId) return col_dangerOutline;
    var _0x3af01e = this[_0x8c7185(0x269)];
    if (this[_0x8c7185(0x2cb)]) _0x3af01e = biome_ocean;
    else {
        if (this[_0x8c7185(0x2c4)]) return _0x8c7185(0x1f0);
    }
    return outlineColForBiome(_0x3af01e);
};

function screenXForGameX(_0x2fb9da) {
    return _0x2fb9da * camzoom + (canvasW / 0x2 - camx * camzoom);
}

function screenYForGameY(_0x5be7a6) {
    return _0x5be7a6 * camzoom + (canvasH / 0x2 - camy * camzoom);
}

function gameXForScreenX(_0x2773b1) {
    return (_0x2773b1 - (canvasW / 0x2 - camx * camzoom)) / camzoom;
}

function gameYForScreenY(_0x519685) {
    return (_0x519685 - (canvasH / 0x2 - camy * camzoom)) / camzoom;
}
var angleAimingBetweenPoints = function(_0x2ff347, _0x2b9f6e, _0x7cc2f7, _0x13218e) {
    var _0x1961e4 = _0x1b8bf1;
    return Math[_0x1961e4(0x417)](_0x13218e - _0x2b9f6e, _0x7cc2f7 - _0x2ff347);
};

function GetPointAtAngleForDistance(_0xce2035, _0x2f9273, _0x3ec2c7) {
    var _0x46baea = _0x1b8bf1,
        _0x33448e = _0xce2035['x'] + _0x2f9273 * Math[_0x46baea(0x1ce)](_0x3ec2c7),
        _0x71c776 = _0xce2035['y'] + _0x2f9273 * Math[_0x46baea(0x29a)](_0x3ec2c7);
    return {
        'x': _0x33448e,
        'y': _0x71c776
    };
}

function drawTriangle(_0xa220a6, _0x5e337b, _0x45f5d3, _0x4680be, _0x3d7734) {
    var _0x199e29 = _0x1b8bf1;
    ctx[_0x199e29(0x28b)](), ctx[_0x199e29(0x3ad)] = _0x3d7734, ctx[_0x199e29(0x268)](), x1 = screenXForGameX(_0xa220a6), y1 = screenYForGameY(_0x5e337b), ctx['translate'](x1, y1), ctx[_0x199e29(0x3f2)](_0x45f5d3), ctx[_0x199e29(0x2d0)](-0xf, -0xf), ctx[_0x199e29(0x381)](-0xf, 0xf), ctx['lineTo'](0xf, 0xf), ctx[_0x199e29(0x20c)] = 0x5, ctx['strokeStyle'] = _0x4680be, ctx['fillStyle'] = _0x4680be, ctx[_0x199e29(0x33f)](), ctx[_0x199e29(0x232)]();
}

function drawLine(_0x58ab76, _0x177f06, _0x110dab, _0x3f9447, _0xf6810a, _0x192bfc) {
    var _0x212ff1 = _0x1b8bf1;
    ctx['save'](), ctx[_0x212ff1(0x3ad)] = _0x192bfc, ctx[_0x212ff1(0x268)](), x1 = screenXForGameX(_0x110dab), y1 = screenYForGameY(_0x3f9447), px1 = screenXForGameX(_0x58ab76), py1 = screenYForGameY(_0x177f06), ctx[_0x212ff1(0x2d0)](px1, py1), ctx[_0x212ff1(0x381)](x1, y1), ctx['lineWidth'] = 0x4, ctx['strokeStyle'] = _0xf6810a, ctx[_0x212ff1(0x1fd)] = _0xf6810a, ctx[_0x212ff1(0x33f)](), ctx['restore']();
}

function getRandomInt(_0x56d839, _0xec3985) {
    var _0x3e867c = _0x1b8bf1;
    return _0x56d839 = Math[_0x3e867c(0x3b8)](_0x56d839), _0xec3985 = Math[_0x3e867c(0x2d9)](_0xec3985), Math['floor'](Math[_0x3e867c(0x425)]() * (_0xec3985 - _0x56d839 + 0x1)) + _0x56d839;
};
var playerop = ![],
    neededobj = undefined,
    opacity_pvp_func = function() {
        var _0x23f131 = _0x1b8bf1;
        Object[_0x23f131(0x36a)](objectsData)[_0x23f131(0x27d)](_0x5140ff => {
            var _0x125c7e = _0x23f131;
            player && (isPlayer(_0x5140ff) && _0x5140ff['id'] != player['id'] && (!neededobj && getDistance(_0x5140ff, player) < (_0x5140ff['nRad'] + player[_0x125c7e(0x3f3)]) * 1.5 && (neededobj = _0x5140ff), neededobj && getDistance(neededobj, player) > (_0x5140ff[_0x125c7e(0x3f3)] + player[_0x125c7e(0x3f3)]) * 1.5 && (neededobj = undefined)));
        });
    };
Animal[_0x1b8bf1(0x234)][_0x1b8bf1(0x309)] = function() {
    var _0x2dfe36 = _0x1b8bf1;
    if (player) {
        if (isXRAYPLAYERSEnabled) {
            if (getDistance(player, this) < (player['nRad'] + this[_0x2dfe36(0x3f3)]) * 1.5) {
                if (player['id'] != this['id']) {
                    return 0.3;
                    console[_0x2dfe36(0x2a8)](playerop);
                }
            }
            if (neededobj != undefined && player['id'] == this['id']) return 0.6;
        }
    }
    return this['flag_underWater'] || this[_0x2dfe36(0x3e5)] && (this['animalType'] == 0x6 || this[_0x2dfe36(0x3ef)] == 0x1d || this[_0x2dfe36(0x3ef)] == 0x20) ? isXRAYPLAYERSEnabled ? 0.6 : 0x0 : XRAYPLEVERYWHERE ? 0.6 : 0x1;
};
var lastDist, target, eatbot = function() {
    var _0x49c23b = _0x1b8bf1;
    FoodEaterBot && (player && Object[_0x49c23b(0x36a)](objectsData)[_0x49c23b(0x27d)](_0x2ba255 => {
        var _0x253015 = _0x49c23b;
        if (_0x2ba255 && _0x2ba255 !== player) {
            var _0x4bcd81 = getDistance(player, _0x2ba255);
            Object[_0x253015(0x36a)](objectsData)[_0x253015(0x27d)](_0xe49f89 => {
                if (_0xe49f89 && _0xe49f89 !== _0x2ba255) {
                    if (!lastDist || _0x46d09f < lastDist || target && objectsData[target['id']] == undefined && isDangerOutline(_0xe49f89) && IsPlayer(_0xe49f89)) {
                        var _0x46d09f = getDistance(_0xe49f89, player);
                        target = _0xe49f89, lastDist = _0x46d09f;
                    } else {
                        if (waterBarPerc_n < 0x28 && isWater(_0xe49f89) && (!isDangerOutline(target) && !IsPlayer(target) || !lastDist || _0x46d09f < lastDist || target && objectsData[target['id']] == undefined)) {
                            var _0x46d09f = getDistance(_0xe49f89, player);
                            (!isWater(target) && isEatable(target) || !lastDist || _0x46d09f < lastDist) && (target = _0xe49f89, lastDist = _0x46d09f);
                        } else {
                            if (!isWater(_0xe49f89) && isEatable(_0xe49f89) && (!isDangerOutline(target) && !IsPlayer(target) || !lastDist || _0x46d09f < lastDist || target && objectsData[target['id']] == undefined)) {
                                var _0x46d09f = getDistance(_0xe49f89, player);
                                (!lastDist || _0x46d09f < lastDist) && (target = _0xe49f89, lastDist = _0x46d09f);
                            }
                        }
                    }
                }
            });
            if (isDangerOutline(target) && IsPlayer(target)) _0x3a4688 = target['nx'] > player['nx'] ? player['nx'] - getDistance(target, player) : player['nx'] + getDistance(target, player), _0x1623d7 = target['ny'] > player['ny'] ? player['ny'] - getDistance(target, player) : player['ny'] + getDistance(target, player), drawLine(player['x'], player['y'], target['x'], target['y'], _0x253015(0x1bb), 0x1), showMessage(_0x253015(0x39c) + target[_0x253015(0x303)] + _0x253015(0x42c) + Math[_0x253015(0x384)](getDistance(target, player)), 0x9c4);
            else isEatable(target) && target == _0x2ba255 ? (_0x3a4688 = target['nx'], _0x1623d7 = target['ny'], drawLine(player['x'], player['y'], target['x'], target['y'], _0x253015(0x1bb), 0x1), showMessage(_0x253015(0x39c) + target['oType'] + _0x253015(0x42c) + Math['round'](getDistance(target, player)), 0x9c4)) : lastDist = Infinity;
        }
    })), requestAnimationFrame(eatbot);
};
requestAnimationFrame(eatbot);
var transitionStartTime, transitionDuration = 0x15e,
    currentCoords;

function easeInOutQuad(_0x5be42e) {
    return _0x5be42e < 0.5 ? 0x2 * _0x5be42e * _0x5be42e : -0x1 + (0x4 - 0x2 * _0x5be42e) * _0x5be42e;
}

function easeOutCubic(_0x5d7103) {
    var _0x191324 = _0x1b8bf1;
    return 0x1 - Math[_0x191324(0x3e9)](0x1 - _0x5d7103, 0x3);
}
let activeAnimation = null;
const ANIM_DURATION = 0x15e;

function easeOutCubic(_0x903667) {
    var _0x531fb8 = _0x1b8bf1;
    return 0x1 - Math[_0x531fb8(0x3e9)](0x1 - _0x903667, 0x3);
}

function calculateArcPoint(_0x5e0c1b, _0x196900, _0x2177a6, _0x51112d, _0xa5d470, _0x40488a = 0x1) {
    var _0x2cc1be = _0x1b8bf1;
    const _0x17d388 = _0x2177a6 - _0x5e0c1b,
        _0x1ec380 = _0x51112d - _0x196900,
        _0x2306cf = Math[_0x2cc1be(0x3b1)](_0x17d388, _0x1ec380),
        _0x23a1d5 = Math[_0x2cc1be(0x417)](_0x1ec380, _0x17d388),
        _0x374ca9 = _0x2306cf * 0.7 * _0x40488a,
        _0x4bef34 = _0x23a1d5 + Math['PI'] / 0x2,
        _0x138c92 = _0x5e0c1b + _0x17d388 * 0.7 + Math['cos'](_0x4bef34) * _0x374ca9,
        _0x20f2c5 = _0x196900 + _0x1ec380 * 0.7 + Math[_0x2cc1be(0x29a)](_0x4bef34) * _0x374ca9,
        _0xe81e19 = easeOutCubic(_0xa5d470),
        _0x5b26f8 = (0x1 - _0xe81e19) * (0x1 - _0xe81e19) * _0x5e0c1b + 0x2 * (0x1 - _0xe81e19) * _0xe81e19 * _0x138c92 + _0xe81e19 * _0xe81e19 * _0x2177a6,
        _0x31882a = (0x1 - _0xe81e19) * (0x1 - _0xe81e19) * _0x196900 + 0x2 * (0x1 - _0xe81e19) * _0xe81e19 * _0x20f2c5 + _0xe81e19 * _0xe81e19 * _0x51112d;
    return {
        'x': _0x5b26f8,
        'y': _0x31882a
    };
}

function startAnimation(_0x1e13f9, _0x21235a, _0x29a823) {
    activeAnimation = {
        'startTime': Date['now'](),
        'startX': followX,
        'startY': followY,
        'endX': _0x1e13f9,
        'endY': _0x21235a,
        'angleDiff': _0x29a823
    };
}

function updateAnimation() {
    var _0x87c3ed = _0x1b8bf1;
    if (!activeAnimation) return;
    const _0x297b53 = Date['now'](),
        _0x36c3f9 = _0x297b53 - activeAnimation[_0x87c3ed(0x2c3)],
        _0x4b5aa5 = Math['min'](_0x36c3f9 / ANIM_DURATION, 0x1),
        _0x191f95 = calculateArcPoint(activeAnimation[_0x87c3ed(0x29e)], activeAnimation['startY'], activeAnimation[_0x87c3ed(0x289)], activeAnimation['endY'], _0x4b5aa5, Math['sign'](activeAnimation[_0x87c3ed(0x3eb)]));
    followX = _0x191f95['x'], followY = _0x191f95['y'], (_0x4b5aa5 >= 0x1 || _0x297b53 - activeAnimation[_0x87c3ed(0x2c3)] < ANIM_DURATION) && (followX = activeAnimation['endX'], followY = activeAnimation[_0x87c3ed(0x337)]);
}

function gameLoop() {
    updateAnimation(), requestAnimationFrame(gameLoop);
}

function getTurnDirection(_0x1f35be) {
    return _0x1f35be > 0x0 ? -0x1 : 0x1;
}
var moonwalkingAnimator = {
    'isAnimating': ![],
    'transitionStartTime': 0x0,
    'transitionDuration': 0x3e8,
    'currentCoords': {
        'x': 0x0,
        'y': 0x0
    },
    'easeOutQuad': function(_0x1d6dde) {
        return 0x1 - (0x1 - _0x1d6dde) * (0x1 - _0x1d6dde);
    },
    'calculate': function(_0xe7480b, _0x36f148, _0x42e54e, _0x377168, _0x449546) {
        var _0x1690b8 = _0x1b8bf1;
        !this[_0x1690b8(0x323)] && (this['transitionStartTime'] = _0x449546, this[_0x1690b8(0x323)] = !![]);
        let _0x34c60e = (_0x449546 - this[_0x1690b8(0x1e7)]) / this[_0x1690b8(0x2f1)];
        _0x34c60e = Math['min'](_0x34c60e, 0x1), _0x34c60e = this['easeOutQuad'](_0x34c60e);
        const _0x395157 = getTurnDirection(_0x42e54e),
            _0x17930c = _0x377168 + _0x395157 * Math['PI'] * _0x34c60e;
        return this[_0x1690b8(0x357)] = {
            'x': _0xe7480b['x'] + _0x36f148[_0x1690b8(0x3f3)] / 0x3 * Math['cos'](_0x17930c),
            'y': _0xe7480b['y'] + _0x36f148['nRad'] / 0x3 * Math['sin'](_0x17930c)
        }, this['currentCoords'];
    }
};

function startMoonwalking(_0x417089, _0xe39851, _0x38774c, _0xef4951) {
    var _0x34583d = _0x1b8bf1;
    moonwalkingAnimator[_0x34583d(0x323)] = ![];

    function _0x30adaf(_0x50a6fb) {
        var _0x3d84b2 = _0x34583d;
        if (PVPBot) {
            const _0x32fd99 = moonwalkingAnimator[_0x3d84b2(0x1ed)](_0x417089, _0xe39851, _0x38774c, _0xef4951, _0x50a6fb);
            followX = _0x32fd99['x'], followY = _0x32fd99['y'], moonwalkingAnimator['transitionStartTime'] + moonwalkingAnimator[_0x3d84b2(0x2f1)] > _0x50a6fb ? requestAnimationFrame(_0x30adaf) : moonwalkingAnimator['isAnimating'] = ![];
        }
    }
    requestAnimationFrame(_0x30adaf);
}
var typetime, type = !![];

function oldmoonwalking(_0xfbcf06, _0xee9b70) {
    var _0x2edcd3 = _0x1b8bf1;
    return (!typetime || Date[_0x2edcd3(0x35b)]() - typetime > 0x96) && (type = !type, typetime = Date[_0x2edcd3(0x35b)]()), type ? _0xfbcf06['nx'] ? {
        'x': (_0xfbcf06['nx'] + _0xee9b70['x']) / 0x2,
        'y': (_0xfbcf06['ny'] + _0xee9b70['y']) / 0x2
    } : _0xfbcf06 : _0xee9b70['nx'] ? {
        'x': (_0xee9b70['nx'] + _0xfbcf06['x']) / 0x2,
        'y': (_0xee9b70['ny'] + _0xfbcf06['y']) / 0x2
    } : _0xee9b70;
}
var typeformn = 0x0,
    typetimemn;

function assmoonwalking(_0x346ed1, _0x33d327, _0x1ff1ba, _0x441412) {
    var _0x12e34d = _0x1b8bf1;
    if ((!typetimemn || Date[_0x12e34d(0x35b)]() - typetimemn > 0x1f4) && typeformn == 0x0) typeformn = typeformn++, typetimemn = Date[_0x12e34d(0x35b)]();
    else {
        if (typetimemn && typeformn == 0x1 && Date['now']() - typetimemn > 0xc8) typeformn = typeformn++, typetimemn = Date['now']();
        else typetimemn && typeformn == 0x2 && Date[_0x12e34d(0x35b)]() - typetimemn > 0x3e8 && (typeformn = 0x0, typetimemn = Date[_0x12e34d(0x35b)]());
    }
    if (typeformn == 0x0) {
        return _0x346ed1;
        _0x441412 == typeformn + 0x1 && SendSprint();
    } else {
        if (typeformn == 0x1) {
            return _0x33d327;
            _0x441412 == typeformn + 0x1 && SendSprint();
        } else {
            if (typeformn == 0x2) {
                return _0x1ff1ba;
                _0x441412 == typeformn + 0x1 && SendSprint();
            }
        }
    }
}
var copypositions = {},
    timeforcopy = 0x1388;

function copymoves() {
    var _0x5970e2 = _0x1b8bf1;
    showMessage(_0x5970e2(0x3ba), timeforcopy);
    var _0x4e9c8a = 0x0;
    copypositions = {};
    var _0xa86193 = setInterval(function() {
        _0x4e9c8a++, copypositions[_0x4e9c8a] = {
            'x': 0x0,
            'y': 0x0
        }, copypositions[_0x4e9c8a]['x'] = cursorX - player['x'], copypositions[_0x4e9c8a]['y'] = cursorY - player['y'];
    }, 0xa);
    setTimeout(function() {
        var _0x4aced8 = _0x5970e2;
        clearInterval(_0xa86193), copypositions[_0x4aced8(0x33a)] = timeforcopy, copypositions[_0x4aced8(0x227)] = _0x4e9c8a, showMessage('RECORDED! Count: ' + _0x4e9c8a, 0x9c4);
    }, timeforcopy);
}
var replaycopynum = 0x1;

function replaypositions(_0x59e16e) {
    if (copypositions[0x0]) {
        replaycopynum++;
        replaycopynum > copypositions['count'] && (replaycopynum = 0x1);
        var _0x4efa98 = copypositions[replaycopynum]['x'],
            _0x5d61c5 = copypositions[replaycopynum]['y'];
        followX = _0x4efa98 + _0x59e16e['x'], followY = _0x5d61c5 + _0x59e16e['y'], _0x3a4688 = followX, _0x1623d7 = followY;
    }
}

function replaypositionsfrompl() {
    var _0x3320e8 = _0x1b8bf1,
        _0x50a4e3 = 0x0,
        _0x2805da = setInterval(function() {
            var _0x159e90 = _0x2e61;
            _0x50a4e3++;
            _0x50a4e3 > copypositions[_0x159e90(0x227)] && (_0x50a4e3 = 0x0);
            var _0x1f1bc6 = copypositions[_0x50a4e3]['x'],
                _0x29165d = copypositions[_0x50a4e3]['y'];
            followX = _0x1f1bc6 + player['x'], followY = _0x29165d + player['y'], _0x3a4688 = followX, _0x1623d7 = followY;
        }, 0xa);
    setTimeout(function() {
        var _0x61364b = _0x2e61;
        clearInterval(_0x2805da), showMessage(_0x61364b(0x2c1), 0x9c4);
    }, copypositions[_0x3320e8(0x33a)]);
}
let cursorAngle = Math['PI'] / 0x2,
    direction = 0x1;
var started_moonwalking = ![];
let cursorAngle_p = Math['PI'],
    direction_p = -0x1;
var started_promoonwalking = ![],
    started_promoonwalking2 = ![];
let plus = 0x0;
var moonwalkAction = 0x1,
    moonwalkEndTime = Date['now']() + 0x64,
    moonwalkSide = 0x1,
    moonwalkSwitchTime = Date['now']();

function getIngameMouse() {
    var _0x2176a7 = _0x3d6b42 / 0x2,
        _0x50b43a = _0x53a37e / 0x2,
        _0x244646 = (_0x19cea7 - (_0x2176a7 - _0x3204e9 * _0x192421)) / _0x192421,
        _0x41f1da = (_0x4e7d9a - (_0x50b43a - _0x467810 * _0x192421)) / _0x192421;
    return {
        'x': _0x244646,
        'y': _0x41f1da
    };
}

function action(_0x36960f, _0x14a31a) {
    var _0x573d8d = _0x1b8bf1;
    bot[_0x573d8d(0x31e)] = _0x36960f, bot[_0x573d8d(0x1c1)] = Date[_0x573d8d(0x35b)]() + _0x14a31a, bot[_0x573d8d(0x1c0)] = 0x1, bot['moonwalkSwitchTime'] = Date[_0x573d8d(0x35b)]();
}

function normalizeAngle(_0x5af593) {
    const _0x167fba = 0x6;
    return (_0x5af593 % _0x167fba + _0x167fba) % _0x167fba;
}

function angleDifference(_0x4d43eb, _0x13d6f5) {
    var _0x1b3cff = _0x1b8bf1;
    const _0x4bc13e = 0x6;
    let _0x2a3e99 = normalizeAngle(_0x4d43eb - _0x13d6f5);
    return _0x2a3e99 > _0x4bc13e / 0x2 && (_0x2a3e99 -= _0x4bc13e), Math[_0x1b3cff(0x3cd)](_0x2a3e99);
}

function moonwalkingDiff(_0x2c00ac, _0x384fc2, _0x5e33cd, _0x6502d5) {
    var _0x29200d = _0x1b8bf1;
    if (started_moonwalking) {
        const _0x1cde08 = _0x6502d5 + cursorAngle - (_0x2c00ac + 0xb4),
            _0x4401f0 = _0x5e33cd['x'] + _0x5e33cd[_0x29200d(0x3f3)] / 0x3 * Math[_0x29200d(0x1ce)](_0x1cde08),
            _0x5311d6 = _0x5e33cd['y'] + _0x5e33cd[_0x29200d(0x3f3)] / 0x3 * Math[_0x29200d(0x29a)](_0x1cde08);
        var _0x2a8718 = cursorAngle == Math['PI'] / 0x2 || cursorAngle == -(Math['PI'] / 0x2) ? !![] : ![];
        return {
            'x': _0x4401f0,
            'y': _0x5311d6,
            'sprint': _0x2a8718
        };
        curxx = _0x4401f0, curyy = _0x5311d6;
    }
}
var prevmonsl = -0x1;

function easeOutCubic(_0x1f74d6) {
    var _0x4af563 = _0x1b8bf1;
    return 0x1 - Math[_0x4af563(0x3e9)](0x1 - _0x1f74d6, 0x3);
}

function updateCursorPosition(_0x4839c9, _0x278ce2, _0x50a09a, _0x239ff5, _0x4ee6f7) {
    var _0x211394 = _0x1b8bf1;
    if (started_moonwalking) {
        started_promoonwalking = ![], started_promoonwalking2 = ![];
        const _0x48046a = (_0x50a09a + cursorAngle - (_0x4ee6f7 + 0xb4)) % (0x2 * Math['PI']),
            _0x2135ba = _0x278ce2['nx'] + _0x278ce2[_0x211394(0x3f3)] / 0x3 * Math[_0x211394(0x1ce)](_0x48046a - _0x239ff5),
            _0x1913a9 = _0x278ce2['ny'] + _0x278ce2[_0x211394(0x3f3)] / 0x3 * Math[_0x211394(0x29a)](_0x48046a - _0x239ff5);
        var _0x1b3781 = cursorAngle === Math['PI'] / 0x2 || cursorAngle === -(Math['PI'] / 0x2);
        return {
            'x': _0x2135ba,
            'y': _0x1913a9,
            'sprint': _0x1b3781
        };
    }

    function _0x527142(_0xb1d4d6, _0x4eb881) {
        var _0x2669db = _0x211394;
        const _0x4dba5a = _0x50a09a,
            _0x3a26d3 = _0x50a09a + Math['PI'],
            _0x38c513 = _0x4dba5a + _0xb1d4d6,
            _0x5b363d = _0x278ce2[_0x2669db(0x3f3)] / 0x3,
            _0x4b3cc8 = _0x4839c9['x'] + _0x5b363d * Math['cos'](_0x38c513),
            _0x437ea0 = _0x4839c9['y'] + _0x5b363d * Math[_0x2669db(0x29a)](_0x38c513),
            _0xcf8130 = _0x4839c9['x'] + _0x5b363d * Math[_0x2669db(0x1ce)](_0x38c513 - _0x4eb881),
            _0x480062 = _0x4839c9['y'] + _0x5b363d * Math[_0x2669db(0x29a)](_0x38c513 - _0x4eb881),
            _0xe6fb96 = Date[_0x2669db(0x35b)](),
            _0x2589a3 = 0xfa;
        let _0x55cfcc = (_0xe6fb96 - (moonwalkSwitchTime || _0xe6fb96)) / _0x2589a3;
        _0x55cfcc > 0x1 && (moonwalkSwitchTime = _0xe6fb96, _0x55cfcc = 0x0);
        var _0x43f811 = cursorX == _0x4b3cc8 && cursorY == _0x437ea0;
        return {
            'x': getDistance(player, _0x278ce2) < getDistance(player, _0x4839c9) ? _0x4839c9['x'] : _0x381f49(_0x4b3cc8, _0xcf8130, _0x55cfcc),
            'y': getDistance(player, _0x278ce2) < getDistance(player, _0x4839c9) ? _0x4839c9['y'] : _0x381f49(_0x437ea0, _0x480062, _0x55cfcc),
            'sprint': _0x43f811
        };
    }
    if (started_promoonwalking) return started_moonwalking = ![], started_promoonwalking2 = ![], _0x527142(angleDifference < 0x0 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2, Math['PI']);
    if (started_promoonwalking2) return started_promoonwalking = ![], started_moonwalking = ![], _0x527142(angleDifference < 0x0 ? Math['PI'] / 0x2 : -Math['PI'] / 0x2, angleDifference < 0x0 ? 0x3 * Math['PI'] / 0x2 : -(0x3 * Math['PI']) / 0x2);

    function _0x381f49(_0x19c24a, _0x26a067, _0x9ce973) {
        var _0x3b0a50 = _0x211394;
        return _0x19c24a + (_0x26a067 - _0x19c24a) * Math[_0x3b0a50(0x1d2)](_0x9ce973, 0x1);
    }
}

function oldupdateCursorPosition(_0x4efbdc, _0x20dcb8, _0x3e641c, _0x74c290, _0x16f284) {
    var _0x25ca2d = _0x1b8bf1;
    if (started_moonwalking) {
        started_promoonwalking = ![], started_promoonwalking2 = ![];
        const _0x1b3c46 = (_0x3e641c + cursorAngle - (_0x16f284 + 0xb4) + 0x2 * Math['PI']) % (0x2 * Math['PI']),
            _0x56bc00 = _0x20dcb8['nx'] + _0x20dcb8[_0x25ca2d(0x3f3)] / 0x3 * Math[_0x25ca2d(0x1ce)](_0x1b3c46 - _0x74c290),
            _0x3023f8 = _0x20dcb8['ny'] + _0x20dcb8[_0x25ca2d(0x3f3)] / 0x3 * Math[_0x25ca2d(0x29a)](_0x1b3c46 - _0x74c290);
        var _0x1eeaaa = cursorAngle == Math['PI'] / 0x2 || cursorAngle == -(Math['PI'] / 0x2) ? !![] : ![];
        return {
            'x': _0x56bc00,
            'y': _0x3023f8,
            'sprint': _0x1eeaaa
        };
    }
    if (started_promoonwalking) {
        started_moonwalking = ![], started_promoonwalking2 = ![];
        const _0x5c239f = player['nx'] - _0x20dcb8['nx'],
            _0x441c47 = player['ny'] - _0x20dcb8['ny'],
            _0x11b1e9 = Math[_0x25ca2d(0x417)](_0x441c47, _0x5c239f);
        var _0x130d5b = _0x11b1e9,
            _0x1dcc73 = _0x11b1e9 + Math['PI'];
        typeof moonwalkSide === 'undefined' && (moonwalkSide = 0x1, moonwalkSwitchTime = Date[_0x25ca2d(0x35b)]());
        var _0x2a5177 = Date[_0x25ca2d(0x35b)](),
            _0x1475eb = type == 0x3 ? 0xc8 : 0xc8;
        let _0x503364, _0x26f53c;
        var _0x4411d5 = _0x20dcb8['nx'],
            _0x10af04 = _0x20dcb8['ny'];
        _0x2a5177 - moonwalkSwitchTime > _0x1475eb && (type = type == 0x3 ? 0x1 : type == 0x1 ? 0x2 : 0x3, moonwalkSwitchTime = _0x2a5177);
        var _0x1e038c = _0x1dcc73 + -0x1 * (Math['PI'] / 0x2) + -0x1 * (Math['PI'] / 0x6);

        function _0x5b6326(_0x86aa5e) {
            while (_0x86aa5e < 0x0) _0x86aa5e += 0x2 * Math['PI'];
            while (_0x86aa5e >= 0x2 * Math['PI']) _0x86aa5e -= 0x2 * Math['PI'];
            return _0x86aa5e;
        }
        _0x1e038c = _0x5b6326(_0x1e038c);
        var _0x7e67e1 = getDistance(player, _0x4efbdc),
            _0x44872a = _0x20dcb8['nx'] + _0x7e67e1 * Math[_0x25ca2d(0x1ce)](angleDifference < 0x0 ? _0x1e038c : -_0x1e038c),
            _0x518a92 = _0x20dcb8['ny'] + _0x7e67e1 * Math[_0x25ca2d(0x1ce)](angleDifference < 0x0 ? _0x1e038c : -_0x1e038c),
            _0x41e086 = _0x20dcb8['nx'] + _0x7e67e1 * Math['cos'](angleDifference < 0x0 ? _0x1e038c + Math['PI'] : -_0x1e038c - Math['PI']),
            _0x5863aa = _0x20dcb8['ny'] + _0x7e67e1 * Math[_0x25ca2d(0x29a)](angleDifference < 0x0 ? _0x1e038c + Math['PI'] : -_0x1e038c - Math['PI']);

        function _0xb233e0(_0x15283c, _0x13fd87, _0x1f5b60) {
            return _0x15283c * (0x1 - _0x1f5b60) + _0x13fd87 * _0x1f5b60;
        }
        var _0x1fa8f2 = (_0x2a5177 - moonwalkSwitchTime) / _0x1475eb;
        if (_0x1fa8f2 <= 0x1) {
            _0x503364 = getDistance(player, _0x20dcb8) < getDistance(player, _0x4efbdc) ? _0x4efbdc['x'] : _0xb233e0(_0x44872a, _0x41e086, _0x1fa8f2), _0x26f53c = getDistance(player, _0x20dcb8) < getDistance(player, _0x4efbdc) ? _0x4efbdc['y'] : _0xb233e0(_0x518a92, _0x5863aa, _0x1fa8f2);
            if (getDistance(_0x20dcb8, {
                    'x': _0x503364,
                    'y': _0x26f53c
                }) > _0x20dcb8[_0x25ca2d(0x3f3)] * 0x2) {}
        }
        var _0x1eeaaa = type == 0x1 || type == 0x2;
        return {
            'x': _0x503364,
            'y': _0x26f53c,
            'sprint': _0x1eeaaa
        };
    }
    if (started_promoonwalking2) {
        started_promoonwalking = ![], started_moonwalking = ![];
        const _0x442ee7 = player['nx'] - _0x20dcb8['nx'],
            _0x4c4e51 = player['ny'] - _0x20dcb8['ny'],
            _0x503996 = Math['atan2'](_0x4c4e51, _0x442ee7);
        var _0x130d5b = _0x503996 + Math['PI'] / 0x2,
            _0x1dcc73 = _0x503996 + Math['PI'];
        typeof moonwalkSide === _0x25ca2d(0x214) && (moonwalkSide = 0x1, moonwalkSwitchTime = Date['now']());
        var _0x2a5177 = Date[_0x25ca2d(0x35b)](),
            _0x1475eb = type == 0x3 ? 0xc8 : 0xc8;
        let _0x12bc3f, _0x95a92c;
        var _0x4411d5 = _0x20dcb8['nx'],
            _0x10af04 = _0x20dcb8['ny'];
        _0x2a5177 - moonwalkSwitchTime > _0x1475eb && (type = type == 0x3 ? 0x1 : type == 0x1 ? 0x2 : 0x3, moonwalkSwitchTime = _0x2a5177);
        var _0x1e038c = _0x1dcc73 + -0x1 * (Math['PI'] / 0x2) + -0x1 * (Math['PI'] / 0x6);

        function _0x254721(_0x44146a) {
            while (_0x44146a < 0x0) _0x44146a += 0x2 * Math['PI'];
            while (_0x44146a >= 0x2 * Math['PI']) _0x44146a -= 0x2 * Math['PI'];
            return _0x44146a;
        }
        _0x1e038c = _0x254721(_0x1e038c);
        var _0x7e67e1 = getDistance(player, _0x4efbdc),
            _0x44872a = _0x20dcb8['nx'] + _0x7e67e1 * Math[_0x25ca2d(0x1ce)](angleDifference < 0x0 ? _0x130d5b : -_0x130d5b),
            _0x518a92 = _0x20dcb8['ny'] + _0x7e67e1 * Math[_0x25ca2d(0x1ce)](angleDifference < 0x0 ? _0x130d5b : -_0x130d5b),
            _0x41e086 = _0x20dcb8['nx'] + _0x7e67e1 * Math['cos'](angleDifference < 0x0 ? _0x130d5b + 0x3 * Math['PI'] / 0x2 : -_0x130d5b - 0x3 * Math['PI'] / 0x2),
            _0x5863aa = _0x20dcb8['ny'] + _0x7e67e1 * Math[_0x25ca2d(0x29a)](angleDifference < 0x0 ? _0x130d5b + 0x3 * Math['PI'] / 0x2 : -_0x130d5b - 0x3 * Math['PI'] / 0x2);

        function _0x402fa9(_0x540114, _0x104f8b, _0x20deab) {
            return _0x540114 * (0x1 - _0x20deab) + _0x104f8b * _0x20deab;
        }
        var _0x1fa8f2 = (_0x2a5177 - moonwalkSwitchTime) / _0x1475eb;
        if (_0x1fa8f2 <= 0x1) {
            _0x12bc3f = getDistance(player, _0x20dcb8) < getDistance(player, _0x4efbdc) ? _0x4efbdc['x'] : _0x402fa9(_0x44872a, _0x41e086, _0x1fa8f2), _0x95a92c = getDistance(player, _0x20dcb8) < getDistance(player, _0x4efbdc) ? _0x4efbdc['y'] : _0x402fa9(_0x518a92, _0x5863aa, _0x1fa8f2);
            if (getDistance(player, _0x20dcb8) < getDistance(player, _0x4efbdc)) {}
        }
        var _0x1eeaaa = _0x12bc3f == _0x44872a && _0x95a92c == _0x518a92;
        return {
            'x': _0x12bc3f,
            'y': _0x95a92c,
            'sprint': _0x1eeaaa
        };
    }
}
const intervalId = setInterval(() => {
    (started_moonwalking || started_promoonwalking || started_promoonwalking2) && ((cursorAngle >= Math['PI'] / 0x2 || cursorAngle <= -(Math['PI'] / 0x2)) && (direction *= -0x1), cursorAngle += 0.05 * direction);
    if (started_promoonwalking) {} else cursorAngle = 0x2 * Math['PI'] / 0x3, direction = 0x1, direction_p = -0x1, cursorAngle_p = Math['PI'];
    started_promoonwalking && ((cursorAngle_p >= Math['PI'] || cursorAngle_p <= -Math['PI']) && (direction_p *= -0x1), cursorAngle_p += 0.2 * direction_p);
}, 0xa);
var TARGET_LANG = 'en',
    TARGET_LANG_O = 'en';
const LANGUAGE_MAP = {
    'english': 'en',
    'russian': 'ru',
    'spanish': 'es',
    'french': 'fr',
    'german': 'de',
    'chinese': 'zh',
    'japanese': 'ja',
    'korean': 'ko',
    'arabic': 'ar',
    'portuguese': 'pt',
    'italian': 'it',
    'dutch': 'nl',
    'turkish': 'tr',
    'vietnamese': 'vi',
    'indonesian': 'id',
    'thai': 'th',
    'hebrew': 'he',
    'polish': 'pl',
    'ukrainian': 'uk',
    'greek': 'el',
    'hindi': 'hi'
};

function getLangCode(_0xea6ec3) {
    var _0x4346c8 = _0x1b8bf1;
    return _0xea6ec3 = _0xea6ec3[_0x4346c8(0x3c8)]()[_0x4346c8(0x391)](), LANGUAGE_MAP[_0xea6ec3] || (Object['values'](LANGUAGE_MAP)[_0x4346c8(0x1b0)](_0xea6ec3) ? _0xea6ec3 : 'en');
}
async function translateText(_0x13bbbe) {
    var _0xd1c8c5 = _0x1b8bf1;
    const _0x85649f = await fetch('https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=' + TARGET_LANG + '&dt=t&q=' + encodeURIComponent(_0x13bbbe));
    if (!_0x85649f['ok']) throw new Error(_0xd1c8c5(0x1d5));
    const _0x4f9e7c = await _0x85649f['json']();
    return _0x4f9e7c[0x0][0x0][0x0];
}
async function translateText_objects(_0x42f203) {
    var _0xabdc20 = _0x1b8bf1;
    const _0x3fd0bd = await fetch('https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=' + TARGET_LANG_O + _0xabdc20(0x41d) + encodeURIComponent(_0x42f203));
    if (!_0x3fd0bd['ok']) throw new Error(_0xabdc20(0x1d5));
    const _0xd50ec7 = await _0x3fd0bd['json']();
    return _0xd50ec7[0x0][0x0][0x0];
}
var autotranslate = ![];

function processChatLines(_0x2cdf17) {
    var _0x5b1c37 = _0x1b8bf1;
    _0x2cdf17[_0x5b1c37(0x3a8)][_0x5b1c37(0x27d)](async _0xb9b9a6 => {
        var _0x26b992 = _0x5b1c37;
        if (autotranslate) {
            if (!_0xb9b9a6['_translated']) try {
                const _0x1dc8f4 = await translateText_objects(_0xb9b9a6['chatTxt']);
                _0xb9b9a6[_0x26b992(0x388)] = _0x1dc8f4, _0xb9b9a6[_0x26b992(0x3de)] = !![];
            } catch (_0x1ce9a5) {
                console[_0x26b992(0x263)](_0x26b992(0x407), _0x1ce9a5);
            }
        }
    });
}
setInterval(() => {
    var _0x3db29b = _0x1b8bf1;
    typeof objectsData !== 'undefined' && Object['values'](objectsData)[_0x3db29b(0x27d)](_0x37b344 => {
        var _0x3941ef = _0x3db29b;
        _0x37b344 != objectsData[selfId] && _0x37b344[_0x3941ef(0x3a8)] && _0x37b344['chatLines'][_0x3941ef(0x252)] > 0x0 && processChatLines(_0x37b344);
    });
}, 0x1f4);
var pvpAction = 'pro',
    pvp_track = _0x1b8bf1(0x33e),
    actionNumber = 0x3,
    actionChoose = {
        0x1: _0x1b8bf1(0x1ac),
        0x2: 'BD',
        0x3: _0x1b8bf1(0x2ec),
        0x4: _0x1b8bf1(0x306),
        0x5: _0x1b8bf1(0x408)
    },
    closestPlayer = null,
    closestDistance = Infinity,
    obj, closestDistance, followX, followY, typebot = _0x1b8bf1(0x1ee),
    txtType = 'no',
    txtType2 = 'no',
    failedType = '',
    prevFailedType = '',
    failedType = '',
    prevFailedType = '',
    prevType = 'no_type',
    previousType = _0x1b8bf1(0x1ee);

function getAngleDifference(_0x64834d, _0x53305b) {
    let _0x2bf547 = _0x53305b - _0x64834d;
    if (_0x2bf547 > Math['PI']) _0x2bf547 -= 0x2 * Math['PI'];
    else _0x2bf547 < -Math['PI'] && (_0x2bf547 += 0x2 * Math['PI']);
    return _0x2bf547;
}
var prevtime, fft = 0x0,
    ftypes = {},
    failedLastBitten = 0x0;

function getAttackPoint(_0x3cf0fa, _0x37e535, _0x31fcd3, _0x309686, _0x274511) {
    for (let _0x90afba of points) {
        if (isPlayerInPoint(_0x3cf0fa, _0x37e535, _0x90afba['x'], _0x90afba['y'])) {}
    }
    if (isPlayerBehind(_0x3cf0fa, _0x37e535, _0x31fcd3, _0x309686)) {}
}
let isBotActive = ![],
    targetX = 0x0,
    targetY = 0x0;
const originalSend = WebSocket[_0x1b8bf1(0x234)][_0x1b8bf1(0x38c)];
packet4Data = {
    'enabled': ![],
    'packets': [],
    'lastPacket': null
}, WebSocket[_0x1b8bf1(0x234)][_0x1b8bf1(0x38c)] = function(_0x113b07) {
    var _0x3cc6ef = _0x1b8bf1;
    if (!isBotActive) return originalSend[_0x3cc6ef(0x220)](this, _0x113b07);
    try {
        const _0x26277b = _0x113b07 instanceof Blob ? new Response(_0x113b07)[_0x3cc6ef(0x370)]() : _0x113b07,
            _0x25a12e = new DataView(_0x26277b);
        if (_0x25a12e['byteLength'] === 0x5 && _0x25a12e['getUint8'](0x0) === 0x5) {
            const _0x575e17 = 0x5,
                _0x5bf607 = new packet(_0x575e17);
            return _0x5bf607['writeUInt8'](0x5), _0x5bf607['writeInt16'](targetX), _0x5bf607['writeInt16'](targetY), originalSend[_0x3cc6ef(0x220)](this, _0x5bf607[_0x3cc6ef(0x422)][_0x3cc6ef(0x1f6)]);
        }
    } catch (_0x1fead9) {
        console[_0x3cc6ef(0x263)](_0x3cc6ef(0x2fc), _0x1fead9);
    }
    return originalSend[_0x3cc6ef(0x220)](this, _0x113b07);
}, window[_0x1b8bf1(0x200)] = {
    'enable': function(_0xbe9faa, _0x163f41) {
        isBotActive = !![], targetX = _0xbe9faa, targetY = _0x163f41;
    },
    'disable': function() {
        isBotActive = ![];
    }
};
var botDebug = [];

function codeSector(_0x419546) {
    var _0x3505d0 = _0x1b8bf1;
    botDebug[_0x3505d0(0x403)](_0x419546);
}

function calculateDynamicFactor(_0x4514ab, _0x4bbd46, _0x719460, _0x13fc7c = 0x1 / 0x6, _0x2b07ea = 0x2) {
    var _0x31521f = _0x1b8bf1;
    const _0x4f496c = Math[_0x31521f(0x36e)](_0x4bbd46, Math[_0x31521f(0x1d2)](_0x4514ab, _0x719460)),
        _0x45913a = (_0x4f496c - _0x4bbd46) / (_0x719460 - _0x4bbd46);
    return _0x13fc7c + _0x45913a * (_0x2b07ea - _0x13fc7c);
}

function degreesToRadians(_0x79df9e) {
    const _0x496ffc = normalizeDegrees(_0x79df9e) * (Math['PI'] / 0xb4);
    return (_0x496ffc % (0x2 * Math['PI']) + 0x2 * Math['PI']) % (0x2 * Math['PI']);
}

function getRandomIntInclusive(_0x282285, _0x1c36ca) {
    var _0xf85499 = _0x1b8bf1;
    const _0x305abf = Math[_0xf85499(0x3b8)](_0x282285),
        _0x4c1074 = Math['floor'](_0x1c36ca);
    return Math[_0xf85499(0x2d9)](Math['random']() * (_0x4c1074 - _0x305abf + 0x1) + _0x305abf);
}

function haveSameSign(_0x1a3f5c, _0x2c7043) {
    return _0x1a3f5c >= 0x0 && _0x2c7043 >= 0x0 || _0x1a3f5c < 0x0 && _0x2c7043 < 0x0;
}

function performMoonwalkWiggle(_0x1033a9 = getIngameMouse(), _0x4cc454 = 0xaa, _0x487d70 = 0xa0, _0x2bc0d3 = 0xa5, _0x501568 = 0x3c, _0x4825ca = 0x96, _0x59f122 = null) {
    var _0x3687cf = _0x1b8bf1;
    if (!player) return;
    if (player[_0x3687cf(0x211)] == null) return;
    if (!_0x1033a9) return;
    var _0x5662d7 = player['nx'],
        _0x25b8c2 = player['ny'],
        _0x24d063 = _0x1033a9['angle'] == null ? _0x1033a9['x'] : _0x1033a9['nx'],
        _0x4dfce5 = _0x1033a9[_0x3687cf(0x24d)] == null ? _0x1033a9['y'] : _0x1033a9['ny'],
        _0x2a10d7 = Math[_0x3687cf(0x417)](_0x4dfce5 - _0x25b8c2, _0x24d063 - _0x5662d7),
        _0xe5ab76 = normalizeDegrees(radiansToDegrees(_0x2a10d7)),
        _0x24b43d = normalizeDegrees(player[_0x3687cf(0x211)]),
        _0x584d33 = degreesDifference(_0x24b43d, _0xe5ab76),
        _0xadbc59 = _0x5662d7 + player[_0x3687cf(0x3f3)] * 0x5 * Math[_0x3687cf(0x1ce)](degreesToRadians(_0xe5ab76 + _0x4825ca * bot[_0x3687cf(0x1c0)])),
        _0x539ffb = _0x25b8c2 + player[_0x3687cf(0x3f3)] * 0x5 * Math[_0x3687cf(0x29a)](degreesToRadians(_0xe5ab76 + _0x4825ca * bot[_0x3687cf(0x1c0)])),
        {
            difference: _0x5a6cb0,
            anticlockwise: _0xb9f2da
        } = getMinimalAngleDifference(player['nAngle'], radiansToDegrees(Math['atan2'](_0x539ffb - player['ny'], _0xadbc59 - player['nx']))),
        _0x115881 = getRotationDirection({
            'x': _0x24d063,
            'y': _0x4dfce5
        }, {
            'x': player['nx'],
            'y': player['ny']
        }, player[_0x3687cf(0x211)]);
    if (_0x5a6cb0 < _0x4cc454) bot[_0x3687cf(0x1c0)] = -_0x115881;
    var _0x62e795 = bot[_0x3687cf(0x1c0)];
    if (_0x115881 == _0x62e795) {
        if (_0x59f122 != null) _0x59f122(0x0);
        _0xadbc59 = _0x5662d7 + player[_0x3687cf(0x3f3)] * 0x5 * Math[_0x3687cf(0x1ce)](degreesToRadians(_0xe5ab76 + _0x487d70 * _0x62e795)), _0x539ffb = _0x25b8c2 + player[_0x3687cf(0x3f3)] * 0x5 * Math['sin'](degreesToRadians(_0xe5ab76 + _0x487d70 * _0x62e795));
    } else {
        if (_0x59f122 != null) _0x59f122(0x1);
        bot['cursorStrokeColor'] = _0x3687cf(0x290);
        var _0xd36c32 = getMinimalAngleDifference(player[_0x3687cf(0x211)], radiansToDegrees(Math[_0x3687cf(0x417)](_0x4dfce5 - player['ny'], _0x24d063 - player['nx'])), {
            'x': _0x24d063,
            'y': _0x4dfce5
        }, {
            'x': player['nx'],
            'y': player['ny']
        });
        if (normalizeDegrees(_0xd36c32[_0x3687cf(0x428)] - 0xb4) > 0x50) {
            if (_0x59f122 != null) _0x59f122(0x2);
            if (Math['abs'](_0x584d33) > 0x64) {
                if (_0x59f122 != null) _0x59f122(0x3);
                _0xadbc59 = _0x5662d7 + player[_0x3687cf(0x3f3)] / 0x4 * Math[_0x3687cf(0x1ce)](degreesToRadians(_0xe5ab76)), _0x539ffb = _0x25b8c2 + player[_0x3687cf(0x3f3)] / 0x4 * Math['sin'](degreesToRadians(_0xe5ab76));
            } else {
                if (_0x59f122 != null) _0x59f122(0x4);
                let _0x47c422 = 0x1,
                    _0x5acae1 = degreesDifference(player['nAngle'], _0xe5ab76);
                if (Math[_0x3687cf(0x3cd)](_0x5acae1) > 0x5a) _0x47c422 = 1.2;
                _0xadbc59 = _0x5662d7 + player['nRad'] / 0x4 * Math[_0x3687cf(0x1ce)](degreesToRadians(_0xe5ab76 + _0x501568 * _0x47c422 * _0x62e795)), _0x539ffb = _0x25b8c2 + player[_0x3687cf(0x3f3)] / 0x4 * Math[_0x3687cf(0x29a)](degreesToRadians(_0xe5ab76 + _0x501568 * _0x47c422 * _0x62e795));
            }
        } else {
            if (_0x59f122 != null) _0x59f122(0x5);
            _0xadbc59 = _0x5662d7 + player[_0x3687cf(0x3f3)] * 0x5 * Math[_0x3687cf(0x1ce)](degreesToRadians(_0xe5ab76 + _0x2bc0d3 * _0x62e795)), _0x539ffb = _0x25b8c2 + player['nRad'] * 0x5 * Math['sin'](degreesToRadians(_0xe5ab76 + _0x2bc0d3 * _0x62e795));
        }
    }
    followX = _0xadbc59, followY = _0x539ffb;
}

function normalizeRadians(_0x237b49) {
    const _0x5ce8dc = 0x2 * Math['PI'];
    return (_0x237b49 % _0x5ce8dc + _0x5ce8dc) % _0x5ce8dc;
}

function getAngle(_0x433cbf, _0x27d173) {
    return (Math['atan2'](_0x27d173['y'] - _0x433cbf['y'], _0x27d173['x'] - _0x433cbf['x']) * 0xb4 / Math['PI'] + 0x168) % 0x168;
}

function radiansToDegrees(_0x16a641) {
    const _0x2741b9 = normalizeRadians(_0x16a641) * (0xb4 / Math['PI']);
    return (_0x2741b9 % 0x168 + 0x168) % 0x168;
}

function degreesToRadians(_0x3b20f6) {
    const _0x3f6a74 = normalizeDegrees(_0x3b20f6) * (Math['PI'] / 0xb4);
    return (_0x3f6a74 % (0x2 * Math['PI']) + 0x2 * Math['PI']) % (0x2 * Math['PI']);
}

function normalizeDegrees(_0x47568b) {
    return (_0x47568b % 0x168 + 0x168) % 0x168;
}

function normalizeDegrees180(_0x32bda0) {
    return (_0x32bda0 % 0xb4 + 0xb4) % 0xb4;
}

function degreesDifference(_0x295ee8, _0x1af10c) {
    let _0x378178 = (normalizeDegrees(_0x1af10c) - normalizeDegrees(_0x295ee8)) % 0x168;
    if (_0x378178 < -0xb4) _0x378178 += 0x168;
    else _0x378178 > 0xb4 && (_0x378178 -= 0x168);
    return _0x378178;
}
var onlyDefence = ![],
    onlyAttack = !![],
    attack = null,
    attackStartDelayRange = [0x1b58, 0x2ee0],
    attackTimeRange = [0x1388, 0x2710],
    CONFIG = {
        'boostCooldown': 0x5dc,
        'microTurnDistance': 0x3,
        'ultraFastTurnDistance': 0x5,
        'slowTurnDistance': 0x19,
        'normalTurnDistance': 0x3c,
        'boostDistance': 0xbb8,
        'dashStability': 0x1c2,
        'minMovementDistance': 0xa,
        'attackOverlapThreshold': 0.97,
        'idealMinOverlap': 0.5,
        'idealMaxOverlap': 0.8,
        'mediumSpeedValue': 0x23,
        'safePositioningTime': 0x258,
        'behindPixelThreshold': 0x14,
        'superSlowSpeed': 0x2,
        'criticalOverlapThreshold': 0.96,
        'behindBoostDistance': 0x7d0,
        'behindAngleDiffThreshold': Math['PI'] * 0.85,
        'perfectBehindAngleDiffThreshold': Math['PI'] * 0.97,
        'behindOffsetFactor': 0.3,
        'belowOffsetFactor': 0.35,
        'autoBoostOverlapThreshold': 0.98
    };
let state = {
    'isFollowing': ![],
    'gameLoaded': ![],
    'lastBoostTime': 0x0,
    'lastOpponentAngle': 0x0,
    'lastPositionChangeTime': 0x0,
    'opponentDashTime': 0x0,
    'facingConfirmationCount': 0x0,
    'lastFacingAngle': 0x0,
    'insideOpponentTime': 0x0,
    'lastMouseMoveTime': 0x0,
    'opportunityToAttack': ![],
    'opponentStationaryTime': 0x0,
    'lastOpponentPos': {
        'x': 0x0,
        'y': 0x0
    },
    'safeToFaceOpponent': ![]
};

function initialize() {
    var _0x55d384 = _0x1b8bf1;
    window['addEventListener'](_0x55d384(0x1fb), function() {
        var _0x14028e = _0x55d384;
        state[_0x14028e(0x35c)] = ![];
    });
    const _0x7a92f0 = setInterval(() => {
        var _0x121f3b = _0x55d384;
        typeof cursorX !== 'undefined' && typeof cursorY !== _0x121f3b(0x214) && typeof Animal !== 'undefined' && (clearInterval(_0x7a92f0), state[_0x121f3b(0x3d0)] = !![]);
    }, 0x3e8);
    setInterval(() => {
        var _0x83771b = _0x55d384;
        if (state['isFollowing'] && Date[_0x83771b(0x35b)]() - state[_0x83771b(0x298)] > 0x64) {
            const _0x55705a = Math[_0x83771b(0x425)]() * 0.1;
            setMousePosition(_0x3a4688 + _0x55705a, _0x1623d7 + _0x55705a), state[_0x83771b(0x298)] = Date[_0x83771b(0x35b)]();
        }
    }, 0x32);
}

function trackOpponentMovement(_0x2125cf) {
    var _0x325644 = _0x1b8bf1;
    const _0x1f11a2 = Date['now']();
    if (state[_0x325644(0x35a)] !== 0x0) {
        const _0x3ac7d3 = Math[_0x325644(0x3cd)](getAngleDelta(_0x2125cf[_0x325644(0x211)], state['lastOpponentAngle']));
        _0x3ac7d3 > Math['PI'] * 0.15 && (state[_0x325644(0x221)] = _0x1f11a2, state[_0x325644(0x35e)] = !![], setTimeout(() => {
            var _0x1e25ad = _0x325644;
            state[_0x1e25ad(0x35e)] = ![];
        }, 0x1f4));
    }
    if (state[_0x325644(0x3e6)]['x'] !== 0x0) {
        const _0x3d19b7 = getDistance(state[_0x325644(0x3e6)], _0x2125cf);
        _0x3d19b7 < 1.5 ? state[_0x325644(0x304)] === 0x0 && (state['opponentStationaryTime'] = _0x1f11a2) : state[_0x325644(0x304)] = 0x0;
    }
    state[_0x325644(0x35a)] = _0x2125cf[_0x325644(0x211)], state[_0x325644(0x3e6)] = {
        'x': _0x2125cf['nx'],
        'y': _0x2125cf['ny']
    };
}

function isInBitingZone(_0x973680, _0x26b40a) {
    var _0x2e4fea = _0x1b8bf1;
    const _0x55b042 = _0x973680['nx'] - _0x26b40a['nx'],
        _0x2b00b8 = _0x973680['ny'] - _0x26b40a['ny'],
        _0x26aa61 = Math[_0x2e4fea(0x1fa)](_0x55b042 * _0x55b042 + _0x2b00b8 * _0x2b00b8),
        _0x46b491 = Math[_0x2e4fea(0x417)](_0x2b00b8, _0x55b042),
        _0x2ddb95 = getAngleDelta(_0x26b40a[_0x2e4fea(0x211)], _0x46b491),
        _0x5cda64 = isPointInBitingTriangle(_0x973680['nx'], _0x973680['ny'], _0x26b40a['nx'], _0x26b40a['ny'], _0x26b40a[_0x2e4fea(0x211)], _0x26b40a[_0x2e4fea(0x3f3)]),
        _0x546769 = _0x2ddb95 > CONFIG[_0x2e4fea(0x208)] && _0x5cda64;
    return {
        'inBitingZone': _0x5cda64,
        'safeToFace': _0x546769,
        'angleDiff': _0x2ddb95,
        'distance': _0x26aa61
    };
}

function isPointInBitingTriangle(_0x34bc99, _0x2b8aae, _0x59cb8d, _0x3cbd00, _0x16e71e, _0x2076aa) {
    var _0xa9010c = _0x1b8bf1;
    const _0xd0f98c = CONFIG[_0xa9010c(0x235)],
        _0x4bad07 = _0x59cb8d + Math[_0xa9010c(0x1ce)](_0x16e71e) * _0x2076aa * (0x1 - _0xd0f98c),
        _0xeb6281 = _0x3cbd00 + Math[_0xa9010c(0x29a)](_0x16e71e) * _0x2076aa * (0x1 - _0xd0f98c),
        _0x2235a9 = _0x16e71e + Math['PI'] / 0x2,
        _0xfd212b = CONFIG[_0xa9010c(0x21c)] * _0x2076aa,
        _0x59c313 = _0x4bad07 + Math[_0xa9010c(0x1ce)](_0x2235a9) * _0xfd212b,
        _0x1639f1 = _0xeb6281 + Math[_0xa9010c(0x29a)](_0x2235a9) * _0xfd212b,
        _0x5ab189 = _0x59cb8d - Math[_0xa9010c(0x1ce)](_0x16e71e) * _0x2076aa * 1.2,
        _0x532976 = _0x3cbd00 - Math[_0xa9010c(0x29a)](_0x16e71e) * _0x2076aa * 1.2,
        _0x18a6d7 = 0.6,
        _0x1d6edf = _0x16e71e + Math['PI'] / 0x2,
        _0x43e0e1 = _0x16e71e - Math['PI'] / 0x2,
        _0xaa181d = _0x5ab189 + Math[_0xa9010c(0x1ce)](_0x1d6edf) * _0x2076aa * _0x18a6d7,
        _0x5d4fb0 = _0x532976 + Math[_0xa9010c(0x29a)](_0x1d6edf) * _0x2076aa * _0x18a6d7,
        _0x33cef1 = _0x5ab189 + Math['cos'](_0x43e0e1) * _0x2076aa * _0x18a6d7,
        _0x54557f = _0x532976 + Math[_0xa9010c(0x29a)](_0x43e0e1) * _0x2076aa * _0x18a6d7;
    return isPointInTriangle(_0x34bc99, _0x2b8aae, _0x59c313, _0x1639f1, _0xaa181d, _0x5d4fb0, _0x33cef1, _0x54557f);
}

function isPointInTriangle(_0x397248, _0x391294, _0x56f6c6, _0x5339a1, _0x391ff4, _0x4d783c, _0x379ecf, _0x1220a0) {
    var _0x1abb10 = _0x1b8bf1;
    const _0x44ffd3 = 0.5 * Math[_0x1abb10(0x3cd)](_0x56f6c6 * (_0x4d783c - _0x1220a0) + _0x391ff4 * (_0x1220a0 - _0x5339a1) + _0x379ecf * (_0x5339a1 - _0x4d783c)),
        _0x116b8e = 0.5 * Math[_0x1abb10(0x3cd)](_0x397248 * (_0x4d783c - _0x1220a0) + _0x391ff4 * (_0x1220a0 - _0x391294) + _0x379ecf * (_0x391294 - _0x4d783c)),
        _0x24afeb = 0.5 * Math[_0x1abb10(0x3cd)](_0x56f6c6 * (_0x391294 - _0x1220a0) + _0x397248 * (_0x1220a0 - _0x5339a1) + _0x379ecf * (_0x5339a1 - _0x391294)),
        _0xdebce9 = 0.5 * Math['abs'](_0x56f6c6 * (_0x4d783c - _0x391294) + _0x391ff4 * (_0x391294 - _0x5339a1) + _0x397248 * (_0x5339a1 - _0x4d783c));
    return Math['abs'](_0x44ffd3 - (_0x116b8e + _0x24afeb + _0xdebce9)) < 0.01;
}

function runBot(_0x543e13, _0x35820a) {
    var _0x2e6d0f = _0x1b8bf1;
    const _0xc0d1ed = Date[_0x2e6d0f(0x35b)](),
        _0x46e91b = _0x35820a['nx'] - _0x543e13['nx'],
        _0x22a104 = _0x35820a['ny'] - _0x543e13['ny'],
        _0x61154a = Math[_0x2e6d0f(0x1fa)](_0x46e91b * _0x46e91b + _0x22a104 * _0x22a104),
        _0x33e00c = Math[_0x2e6d0f(0x417)](_0x22a104, _0x46e91b),
        _0x2dec2b = _0x543e13[_0x2e6d0f(0x3f3)] + _0x35820a[_0x2e6d0f(0x3f3)],
        _0x2f9a40 = Math[_0x2e6d0f(0x36e)](0x0, 0x1 - _0x61154a / _0x2dec2b);
    _0x2f9a40 > 0.8 ? state[_0x2e6d0f(0x3b3)] === 0x0 && (state['insideOpponentTime'] = _0xc0d1ed) : state['insideOpponentTime'] = 0x0;
    const _0x3496df = state['insideOpponentTime'] > 0x0 ? _0xc0d1ed - state[_0x2e6d0f(0x3b3)] : 0x0,
        _0x32fbc3 = _0x33e00c,
        _0x6848ed = Math[_0x2e6d0f(0x417)](_0x543e13['ny'] - _0x35820a['ny'], _0x543e13['nx'] - _0x35820a['nx']),
        _0x28cafa = getAngleDelta(_0x35820a[_0x2e6d0f(0x211)], _0x6848ed),
        _0x360670 = isInBitingZone(_0x543e13, _0x35820a),
        _0x3831f8 = _0x360670[_0x2e6d0f(0x1d7)],
        _0x3629c6 = _0x360670['safeToFace'],
        _0x5869ef = _0x360670['angleDiff'],
        _0x324be3 = _0x360670[_0x2e6d0f(0x33b)];
    state['safeToFaceOpponent'] = _0x3629c6;
    const _0x497442 = {
            'x': _0x543e13['nx'] - Math[_0x2e6d0f(0x1ce)](_0x543e13['nAngle']) * _0x543e13[_0x2e6d0f(0x3f3)] * 1.2,
            'y': _0x543e13['ny'] - Math[_0x2e6d0f(0x29a)](_0x543e13[_0x2e6d0f(0x211)]) * _0x543e13[_0x2e6d0f(0x3f3)] * 1.2
        },
        _0x261b4b = getDistance(_0x35820a, _0x497442),
        _0x5cbba7 = _0x261b4b < _0x35820a[_0x2e6d0f(0x3f3)] * 1.3,
        _0x3bb7f7 = _0x543e13['nAngle'] + Math['PI'],
        _0x13bbba = getAngleDelta(_0x6848ed + Math['PI'], _0x3bb7f7),
        _0x3c1362 = _0x13bbba < Math['PI'] * 0.4 && !_0x3629c6,
        _0x51b751 = getAngleDelta(_0x35820a[_0x2e6d0f(0x211)], _0x6848ed + Math['PI']),
        _0x46ebe7 = _0x51b751 < Math['PI'] * 0.35;
    let _0x35f46d;
    if (_0x2f9a40 > 0.9) _0x35f46d = CONFIG['superSlowSpeed'];
    else {
        if (_0x2f9a40 > CONFIG[_0x2e6d0f(0x20d)]) {
            const _0x2837da = Math['min'](0x1, (_0x2f9a40 - CONFIG[_0x2e6d0f(0x20d)]) * 0x5);
            _0x35f46d = CONFIG[_0x2e6d0f(0x22c)] + (CONFIG[_0x2e6d0f(0x1f7)] - CONFIG[_0x2e6d0f(0x22c)]) * (0x1 - _0x2837da);
        } else _0x2f9a40 < CONFIG['idealMinOverlap'] ? _0x35f46d = CONFIG[_0x2e6d0f(0x3fb)] * 1.5 : _0x35f46d = CONFIG[_0x2e6d0f(0x1af)];
    }
    _0x35f46d < CONFIG[_0x2e6d0f(0x292)] && _0x2f9a40 < 0.93 && (_0x35f46d = CONFIG[_0x2e6d0f(0x292)]);
    const _0x4ab8e0 = _0x3496df > 0x708,
        _0x2c2613 = _0xc0d1ed - state[_0x2e6d0f(0x221)];
    _0x2c2613 < 0x320 && (_0x35f46d = Math['max'](CONFIG[_0x2e6d0f(0x292)], Math['min'](_0x35f46d, 0x19)));
    let _0x2df1d5 = _0x32fbc3;
    _0x3629c6 && (_0x2df1d5 = _0x35820a[_0x2e6d0f(0x211)]);
    state['lastFacingAngle'] = _0x2df1d5;
    const _0x360e7f = _0xc0d1ed - state['lastPositionChangeTime'],
        _0x2211e8 = state[_0x2e6d0f(0x304)] > 0x0 && _0xc0d1ed - state[_0x2e6d0f(0x304)] > 0x190,
        _0x212cb8 = Math[_0x2e6d0f(0x3cd)](getAngleDelta(_0x543e13['nAngle'], _0x35820a[_0x2e6d0f(0x211)])) < 0.08,
        _0x4e596c = Math[_0x2e6d0f(0x3cd)](getAngleDelta(_0x543e13[_0x2e6d0f(0x211)], _0x33e00c)) < 0.2;
    if (_0x2f9a40 >= CONFIG['autoBoostOverlapThreshold'] && _0xc0d1ed - state[_0x2e6d0f(0x2d5)] >= CONFIG[_0x2e6d0f(0x1da)]) {
        const _0x29f366 = _0x35820a[_0x2e6d0f(0x211)] + Math['PI'];
        setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x29f366) * CONFIG['behindBoostDistance'], window[_0x2e6d0f(0x3f6)] / 0x2 + Math['sin'](_0x29f366) * CONFIG[_0x2e6d0f(0x26f)]), typebot = '1', tryBoost(), state['lastBoostTime'] = _0xc0d1ed, state['lastPositionChangeTime'] = _0xc0d1ed;
    } else {
        if (_0x2f9a40 > CONFIG[_0x2e6d0f(0x2eb)] && _0xc0d1ed - state[_0x2e6d0f(0x2d5)] >= CONFIG[_0x2e6d0f(0x1da)] && !_0x3629c6 && !_0x5cbba7) {
            const _0x594b1b = _0x35820a['nAngle'] + Math['PI'];
            setMousePosition(window['innerWidth'] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x594b1b) * CONFIG['behindBoostDistance'], window['innerHeight'] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x594b1b) * CONFIG['behindBoostDistance']), typebot = '2', tryBoost(), state[_0x2e6d0f(0x2d5)] = _0xc0d1ed, state[_0x2e6d0f(0x380)] = _0xc0d1ed;
        } else {
            if (_0x3629c6 && _0x2f9a40 > 0.6 && _0x2f9a40 < 0.9) {
                _0x2df1d5 = _0x35820a[_0x2e6d0f(0x211)], _0x35f46d = CONFIG[_0x2e6d0f(0x22c)], setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x2df1d5) * _0x35f46d, window['innerHeight'] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x2df1d5) * _0x35f46d), typebot = '3';
                const _0x4128bc = _0x212cb8 || Math[_0x2e6d0f(0x3cd)](getAngleDelta(_0x543e13[_0x2e6d0f(0x211)], _0x35820a['nAngle'])) < 0.12,
                    _0x20a670 = !_0x5cbba7 && _0x4128bc && _0xc0d1ed - state['lastBoostTime'] >= CONFIG[_0x2e6d0f(0x1da)] && _0x360e7f > 0xc8;
                if (_0x20a670) {
                    const _0x4af5e0 = _0x35820a['nAngle'];
                    setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x4af5e0) * CONFIG[_0x2e6d0f(0x34c)], window[_0x2e6d0f(0x3f6)] / 0x2 + Math['sin'](_0x4af5e0) * CONFIG[_0x2e6d0f(0x34c)]), typebot = '4', tryBoost(), state['lastBoostTime'] = _0xc0d1ed, state[_0x2e6d0f(0x380)] = _0xc0d1ed;
                }
            } else {
                if (_0x3831f8 && !_0x5cbba7) {
                    _0x2df1d5 = _0x35820a['nAngle'], _0x35f46d = CONFIG[_0x2e6d0f(0x22c)], setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x2df1d5) * _0x35f46d, window['innerHeight'] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x2df1d5) * _0x35f46d), typebot = '5';
                    if (_0xc0d1ed - state[_0x2e6d0f(0x2d5)] >= CONFIG[_0x2e6d0f(0x1da)] && _0x28cafa > Math['PI'] * 0.85) {
                        const _0x3d8bd8 = _0x35820a[_0x2e6d0f(0x211)];
                        setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math['cos'](_0x3d8bd8) * CONFIG[_0x2e6d0f(0x34c)] * 0.7, window[_0x2e6d0f(0x3f6)] / 0x2 + Math['sin'](_0x3d8bd8) * CONFIG[_0x2e6d0f(0x34c)] * 0.7), typebot = '6', tryBoost(), state[_0x2e6d0f(0x2d5)] = _0xc0d1ed;
                    }
                } else {
                    if (state['opportunityToAttack'] && _0x2f9a40 > 0.5 && _0xc0d1ed - state[_0x2e6d0f(0x2d5)] >= CONFIG[_0x2e6d0f(0x1da)]) {
                        const _0x52a868 = _0x35820a['nAngle'] + Math['PI'];
                        setMousePosition(window['innerWidth'] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x52a868) * CONFIG['boostDistance'], window[_0x2e6d0f(0x3f6)] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x52a868) * CONFIG['boostDistance']), typebot = '7', tryBoost(), state['lastBoostTime'] = _0xc0d1ed, state[_0x2e6d0f(0x380)] = _0xc0d1ed, state[_0x2e6d0f(0x35e)] = ![];
                    } else {
                        if (_0x2f9a40 > 0.85 && _0x4ab8e0) _0x2df1d5 = _0x32fbc3, _0x35f46d = CONFIG[_0x2e6d0f(0x3fb)];
                        else {
                            if (!_0x5cbba7 && !_0x3629c6) {
                                _0x2df1d5 = _0x32fbc3;
                                const _0x42099e = _0x35820a[_0x2e6d0f(0x211)] + Math['PI'],
                                    _0x49903a = getAngleDelta(_0x33e00c, _0x42099e);
                                _0x49903a < Math['PI'] * 0.5 && (_0x61154a > _0x2dec2b * 0.8 && _0x61154a < _0x2dec2b * 0x3 && (_0x35f46d = CONFIG[_0x2e6d0f(0x3fb)], _0x4e596c && (_0xc0d1ed - state[_0x2e6d0f(0x2d5)] >= CONFIG[_0x2e6d0f(0x1da)] ? (setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x42099e) * CONFIG['boostDistance'], window[_0x2e6d0f(0x3f6)] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x42099e) * CONFIG['boostDistance']), typebot = '8', tryBoost(), state[_0x2e6d0f(0x2d5)] = _0xc0d1ed, state[_0x2e6d0f(0x380)] = _0xc0d1ed) : setTimeout(() => {
                                    var _0x352a52 = _0x2e6d0f;
                                    const _0x1b56f9 = _0x42099e;
                                    setMousePosition(window['innerWidth'] / 0x2 + Math[_0x352a52(0x1ce)](_0x1b56f9) * _0x35f46d, window[_0x352a52(0x3f6)] / 0x2 + Math[_0x352a52(0x29a)](_0x1b56f9) * _0x35f46d), typebot = '9', setTimeout(() => {
                                        var _0x43db45 = _0x352a52;
                                        setMousePosition(window['innerWidth'] / 0x2 + Math[_0x43db45(0x1ce)](_0x32fbc3) * CONFIG['microTurnDistance'], window['innerHeight'] / 0x2 + Math[_0x43db45(0x29a)](_0x32fbc3) * CONFIG['microTurnDistance']), typebot = '10';
                                    }, 0xa);
                                }, 0x19))));
                            }
                        }
                    }
                }
            }
        }
    }(_0x5cbba7 || _0x3c1362) && (_0x2df1d5 = _0x33e00c, _0x35f46d = CONFIG[_0x2e6d0f(0x3fb)]);
    setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x2df1d5) * _0x35f46d, window['innerHeight'] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x2df1d5) * _0x35f46d), typebot = '11';
    (_0x2f9a40 > 0.8 || _0x46ebe7 || _0x5cbba7 || _0x3c1362) && (setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math['cos'](_0x2df1d5) * _0x35f46d, window[_0x2e6d0f(0x3f6)] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x2df1d5) * _0x35f46d), typebot = '1209 ' + window['innerWidth'] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x2df1d5) * _0x35f46d);
    if (_0x2f9a40 > 0.95) {
        const _0x3a1e5c = state[_0x2e6d0f(0x29f)] % 0x2 === 0x0 ? CONFIG[_0x2e6d0f(0x22c)] : CONFIG[_0x2e6d0f(0x22c)] + 0.3;
        setMousePosition(window[_0x2e6d0f(0x3d4)] / 0x2 + Math[_0x2e6d0f(0x1ce)](_0x32fbc3) * _0x3a1e5c, window[_0x2e6d0f(0x3f6)] / 0x2 + Math[_0x2e6d0f(0x29a)](_0x32fbc3) * _0x3a1e5c), typebot = '13', setTimeout(() => {
            var _0x4359c4 = _0x2e6d0f;
            setMousePosition(window[_0x4359c4(0x3d4)] / 0x2 + Math[_0x4359c4(0x1ce)](_0x32fbc3) * (_0x3a1e5c + 0.1), window[_0x4359c4(0x3f6)] / 0x2 + Math[_0x4359c4(0x29a)](_0x32fbc3) * (_0x3a1e5c + 0.1)), typebot = '14';
        }, 0xa), state[_0x2e6d0f(0x29f)]++;
    }
    state['lastMouseMoveTime'] = _0xc0d1ed;
}

function tryBoost() {
    var _0x4fbc4e = _0x1b8bf1;
    const _0x507fef = new KeyboardEvent('keydown', {
        'bubbles': !![],
        'keyCode': 0x20,
        'which': 0x20
    });
    document[_0x4fbc4e(0x2d1)](_0x507fef), setTimeout(() => {
        var _0x1b12e6 = _0x4fbc4e;
        const _0x230b04 = new KeyboardEvent(_0x1b12e6(0x24b), {
            'bubbles': !![],
            'keyCode': 0x20,
            'which': 0x20
        });
        document['dispatchEvent'](_0x230b04);
    }, 0x32);
}

function getAngleDelta(_0x212c93, _0x4d89b3) {
    var _0x441c63 = _0x1b8bf1;
    let _0x18f52c = _0x212c93 - _0x4d89b3;
    while (_0x18f52c > Math['PI']) _0x18f52c -= 0x2 * Math['PI'];
    while (_0x18f52c < -Math['PI']) _0x18f52c += 0x2 * Math['PI'];
    return Math[_0x441c63(0x3cd)](_0x18f52c);
}

function setMousePosition(_0x52198a, _0x471b13) {
    var _0x28fd80 = _0x1b8bf1;
    _0x3a4688 = screenXForGameX(_0x52198a), _0x1623d7 = screenYForGameY(_0x471b13), state['lastMouseMoveTime'] = Date[_0x28fd80(0x35b)]();
}
setTimeout(initialize, 0x3e8);
var linecol = 'red',
    prbot = function() {
        var _0x452b99 = _0x1b8bf1;
        if (player) {
            if (PVPBot) {
                var _0x59fe31 = Object[_0x452b99(0x36a)](objectsData);
                _0x59fe31[_0x452b99(0x27d)](_0x1e3252 => {
                    var _0x9a0568 = _0x452b99;
                    _0x59fe31[_0x9a0568(0x27d)](_0x30e0e6 => {
                        var _0x3da3db = _0x9a0568;
                        if (_0x30e0e6[_0x3da3db(0x303)] == 0x2 && _0x30e0e6 != player && IsApex(_0x30e0e6)) {
                            var _0x21e60e = getDistance(_0x30e0e6, player);
                            (!closestDistance || _0x21e60e < closestDistance || obj && objectsData[obj['id']] == undefined) && (obj = _0x30e0e6, closestDistance = _0x21e60e), obj && (closestDistance = getDistance(obj, player));
                        }
                    });
                    if (obj && _0x1e3252 == obj && (pname == undefined || obj[_0x9a0568(0x3ab)][_0x9a0568(0x1b0)](pname))) {
                        var _0x26ca0b = getFace(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] / 0x7),
                            _0x1c1748 = getFace(player['nx'], player['ny'], player[_0x9a0568(0x211)], player[_0x9a0568(0x3f3)] / 0x7),
                            _0x20b21d = getBehind(obj['nx'], obj['ny'], obj['nAngle'], obj['nRad'] / 0x6),
                            _0x2d8e57 = getBehind(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)] / 0x6),
                            _0x53cefa = getBehind(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)] / 1.2),
                            _0x475de5 = getBehind(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)]),
                            _0x100638 = getFront(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)]),
                            _0x4b20af = getBehind(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)]),
                            _0x3996cb = getBehind(player['nx'], player['ny'], player[_0x9a0568(0x211)], player['nRad'] * 0x6),
                            _0x34f29a = getBehind(player['nx'], player['ny'], player[_0x9a0568(0x211)], player[_0x9a0568(0x3f3)] / 0x7),
                            _0x19e8c2 = getTopRight(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)] / 0x7),
                            _0xaf78d = getTopLeft(obj['nx'], obj['ny'], obj['nAngle'], obj['nRad'] / 0x7),
                            _0x444342 = getBottomRight(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)] / 0x7),
                            _0x49da67 = getBottomLeft(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] / 0x7),
                            _0x509901 = getTopRight(player['nx'], player['ny'], player['nAngle'], player['nRad'] / 0x7),
                            _0xd9a112 = getTopLeft(player['nx'], player['ny'], player[_0x9a0568(0x211)], player[_0x9a0568(0x3f3)] / 0x7),
                            _0x317773 = getRight(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] * 0x7),
                            _0x4ebe22 = getLeft(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)] * 0x7),
                            _0xc1d662 = getBottomRight(player['nx'], player['ny'], player[_0x9a0568(0x211)], player['nRad'] / 0x7),
                            _0x226410 = getBottomLeft(player['nx'], player['ny'], player[_0x9a0568(0x211)], player['nRad'] / 0x7),
                            _0x5e111f = getLeft(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)] / 0x2),
                            _0x34a0a5 = getRight(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] / 0x2),
                            _0x17cc10 = getLeft(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)]),
                            _0x4426fe = getRight(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad']),
                            _0x5896eb = getLeft(player['nx'], player['ny'], player['nAngle'], player[_0x9a0568(0x3f3)] / 0x2),
                            _0x27ad7a = getRight(player['nx'], player['ny'], player[_0x9a0568(0x211)], player['nRad'] / 0x2),
                            _0x26ca0b = getFront(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)] / 0x7),
                            _0x1c1748 = getFront(player['nx'], player['ny'], player['nAngle'], player['nRad'] / 0x7),
                            _0x35cda9 = getFront(obj['nx'], obj['ny'], obj['nAngle'], obj[_0x9a0568(0x3f3)] * 0x6),
                            _0x242255 = getFront(player['nx'], player['ny'], player['nAngle'], player[_0x9a0568(0x3f3)] / 0x2),
                            _0x252872 = player['nx'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x1ce)](player[_0x9a0568(0x211)] + Math['PI'] / 0x2),
                            _0x1d6d95 = player['ny'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x29a)](player[_0x9a0568(0x211)] + Math['PI'] / 0x2),
                            _0x434adc = obj['nx'] + obj['nRad'] * Math['cos'](obj[_0x9a0568(0x211)] - Math['PI'] / 0x2),
                            _0x111d85 = obj['ny'] + obj[_0x9a0568(0x3f3)] * Math['sin'](obj[_0x9a0568(0x211)] - Math['PI'] / 0x2),
                            _0x5627f3 = obj['nx'] + obj[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x1ce)](obj[_0x9a0568(0x211)] + Math['PI'] / 0x2),
                            _0x366e2f = obj['ny'] + obj[_0x9a0568(0x3f3)] * Math['sin'](obj[_0x9a0568(0x211)] + Math['PI'] / 0x2),
                            _0x1e1d34 = player['nx'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x1ce)](player[_0x9a0568(0x211)] - Math['PI'] / 0x2),
                            _0x2bb923 = player['ny'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x29a)](player[_0x9a0568(0x211)] - Math['PI'] / 0x2),
                            _0x488734 = player['nx'] + player[_0x9a0568(0x3f3)] * Math['cos'](player['nAngle'] + Math['PI'] / 0x2),
                            _0x24297e = player['ny'] + player['nRad'] * Math['sin'](player[_0x9a0568(0x211)] + Math['PI'] / 0x2),
                            _0x5df2e2 = _0x488734 - _0x434adc,
                            _0x2ec140 = _0x24297e - _0x111d85,
                            _0x493972 = obj['nx'] - player['nx'],
                            _0x3170f3 = obj['ny'] - player['ny'],
                            _0x17e69f = getDistance(player, obj),
                            _0x751e9 = Math[_0x9a0568(0x384)](_0x17e69f * 0xa) / 0xa + 'm',
                            _0x21c276 = getDistance(_0x26ca0b, _0x34f29a),
                            _0x50b770 = getDistance(obj, _0x34f29a),
                            _0x55195f = getDistance(_0x1c1748, _0x20b21d),
                            _0x465838 = getDistance(_0x26ca0b, player),
                            _0x558eef = getDistance(player, _0x20b21d),
                            _0x47b7c2 = getDistance(_0x34f29a, _0x20b21d),
                            _0x5aa71e = getDistance(_0x26ca0b, _0x5896eb),
                            _0x131550 = getDistance(_0x26ca0b, _0x27ad7a),
                            _0xe9ee75 = getDistance(_0x26ca0b, obj),
                            _0x1f956c = getDistance(_0x1c1748, _0x26ca0b),
                            _0x16509e = getDistance(_0x49da67, player),
                            _0x22769d = getDistance(_0x444342, player),
                            _0x418a2e = getDistance(_0x34a0a5, _0x27ad7a),
                            _0x456f1d = getDistance(_0x5e111f, _0x5896eb),
                            _0x453e3d = getDistance(_0x34a0a5, _0x34f29a),
                            _0x52cbc0 = getDistance(_0x5e111f, _0x34f29a),
                            _0x2e28b9 = getDistance(_0x475de5, player),
                            _0x2235f9 = getDistance(_0x4b20af, player),
                            _0x309cc4 = Math[_0x9a0568(0x1fa)]((_0x1c1748['x'] - _0x20b21d['x']) ** 0x2 + (_0x1c1748['y'] - _0x20b21d['y']) ** 0x2),
                            _0x1dc2c5 = Math[_0x9a0568(0x1fa)]((obj['nx'] - _0x434adc) ** 0x2 + (obj['ny'] - _0x111d85) ** 0x2),
                            _0x438af4 = Math[_0x9a0568(0x1fa)]((_0x1e1d34 - _0x434adc) ** 0x2 + (_0x2bb923 - _0x111d85) ** 0x2),
                            _0xc69a1e = Math[_0x9a0568(0x384)](_0x309cc4 * 0xa) / 0xa + 'm',
                            _0x51de4d = 0x0;
                        let _0x1ebaf8 = 0x0;

                        function _0x566d98() {
                            var _0x33fd54 = _0x9a0568,
                                _0x42c01a = getFace(player['nx'], player['ny'], player['nAngle'], player[_0x33fd54(0x3f3)] / 0x7),
                                _0x364938 = _0x42c01a['x'] - player['nx'],
                                _0x210afa = _0x42c01a['y'] - player['ny'];
                            _0x1ebaf8 = Math[_0x33fd54(0x417)](_0x210afa, _0x364938);
                        }(!prevtime || Date[_0x9a0568(0x35b)]() - prevtime > 0xfa) && (_0x566d98(), prevtime = Date[_0x9a0568(0x35b)]());
                        var _0x307072 = _0x26ca0b['x'] - obj['nx'],
                            _0x8fae2d = _0x26ca0b['y'] - obj['ny'],
                            _0x353ede = Math[_0x9a0568(0x417)](_0x8fae2d, _0x307072),
                            _0x297e6c = _0x1c1748['x'] - player['nx'],
                            _0x3a33f4 = _0x1c1748['y'] - player['ny'],
                            _0xe4fe3 = Math[_0x9a0568(0x417)](_0x297e6c, _0x3a33f4),
                            _0x2e630e = Math['round'](getAngleDifference(_0x1ebaf8, _0x353ede)),
                            _0x803553 = _0x353ede * (0xb4 / Math['PI']),
                            _0xc0f644 = _0xe4fe3 * (0xb4 / Math['PI']),
                            _0x2e630e = _0x803553 - _0xc0f644;
                        if (_0x2e630e > 0xb4) _0x2e630e -= 0x168;
                        else _0x2e630e < -0xb4 && (_0x2e630e += 0x168);
                        prevType != typebot && (previousType = prevType, prevType = typebot);
                        player[_0x9a0568(0x297)] && now - failedLastBitten > 0x3e8 && (txtType = 'Failed', failedType = typebot, fft++, prevFailedType = previousType, ftypes['Failed' + fft] = prevFailedType + _0x9a0568(0x2a7) + failedType, failedLastBitten = now);
                        obj[_0x9a0568(0x297)] && (txtType2 = _0x9a0568(0x1d3), successType = typebot, prevSuccessType = previousType);
                        showMessage(_0x9a0568(0x265) + obj[_0x9a0568(0x3ab)] + _0x9a0568(0x1dd) + obj[_0x9a0568(0x3ef)] + _0x9a0568(0x430) + Math[_0x9a0568(0x384)](closestDistance) + _0x9a0568(0x374) + typebot + _0x9a0568(0x3c4) + actionChoose[actionNumber] + _0x9a0568(0x36c) + _0x2e630e, 0x9c4), drawLine(player['nx'], player['ny'], followX, followY, linecol, 0x1), colors = {
                            0x0: _0x9a0568(0x2d8),
                            0x1: _0x9a0568(0x1bb)
                        };
                        var _0x2ebd81 = {
                                0x0: obj['hpPer_n'] == 0x0 ? 0x64 : Math[_0x9a0568(0x384)](obj[_0x9a0568(0x1e5)]),
                                0x1: player['hpPer_n'] == 0x0 ? 0x64 : Math['round'](player['hpPer_n'])
                            },
                            _0x562e0a = new Piechart({
                                'pad': 0x0,
                                'canvas': PX[_0x9a0568(0x347)],
                                'data': _0x2ebd81,
                                'colors': colors,
                                'canvas': canvas,
                                'radius': 0x32 * pixelRat,
                                'x': canvasW - 0x3c * pixelRat * 0x2,
                                'y': canvasH - 0x3c * pixelRat * 0x2
                            });
                        _0x562e0a[_0x9a0568(0x373)]();
                        var _0x2ca99c = 0x3,
                            _0x1e94d4 = 0x0;
                        if (pvpAction == 'BD') {
                            if (_0x17e69f > 0x2d) followX = _0x20b21d['x'], followY = _0x20b21d['y'], typebot = 'following';
                            else {
                                if (_0x17e69f < (player[_0x9a0568(0x3f3)] + obj[_0x9a0568(0x3f3)]) / 0x2) {
                                    if (_0x558eef < _0x17e69f && _0x50b770 < _0x17e69f) SendSprint(), followX = _0x20b21d['x'], followY = _0x20b21d['y'], typebot = '3';
                                    else {
                                        if (_0x50b770 < _0x558eef) SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = _0x9a0568(0x20b);
                                        else {
                                            if (_0x465838 < _0x558eef && _0x17e69f > _0x465838) SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = '9';
                                            else {
                                                if (_0x17e69f < (player['nRad'] + obj[_0x9a0568(0x3f3)]) / 0x4 && _0x1f956c < _0x17e69f && _0x47b7c2 > _0x17e69f) SendSprint(), followX = oldmoonwalking(_0x34a0a5, _0x5e111f)['nx'] == undefined ? oldmoonwalking(_0x34a0a5, _0x5e111f)['x'] : oldmoonwalking(_0x34a0a5, _0x5e111f)['nx'], followY = oldmoonwalking(_0x34a0a5, _0x5e111f)['ny'] == undefined ? oldmoonwalking(_0x34a0a5, _0x5e111f)['y'] : oldmoonwalking(_0x34a0a5, _0x5e111f)['ny'], typebot = '2';
                                                else {
                                                    if (_0x55195f < _0x17e69f && _0x21c276 > _0x17e69f) SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = '1';
                                                    else {
                                                        if (_0x453e3d < _0x1f956c) followX = oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['x'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'], followY = oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['y'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'], typebot = '4', SendSprint();
                                                        else {
                                                            if (_0x52cbc0 < _0x1f956c) followX = oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['x'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'], followY = oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['y'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'], typebot = '5', SendSprint();
                                                            else {
                                                                if (_0xe9ee75 < _0x17e69f) SendSprint(), followX = oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['x'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['nx'], followY = oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'] == undefined ? oldmoonwalking(_0x20b21d, _0x26ca0b)['y'] : oldmoonwalking(_0x20b21d, _0x26ca0b)['ny'], typebot = '10';
                                                                else {
                                                                    if (_0x2235f9 < _0x17e69f && _0x2235f9 < _0x558eef) SendSprint(), followX = _0x20b21d['x'], followY = _0x20b21d['y'], typebot = '11';
                                                                    else {
                                                                        if (_0x55195f < _0x17e69f && _0x47b7c2 < _0x1f956c) SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = '12';
                                                                        else {
                                                                            if (_0x465838 < _0x17e69f && _0x21c276 > _0x17e69f) SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = '13';
                                                                            else _0x21c276 < _0x55195f && _0x47b7c2 < _0x1f956c && (SendSprint(), followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = '14');
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                } else followX = obj['nx'], followY = obj['ny'], typebot = _0x9a0568(0x237);
                            }
                        } else {
                            if (pvpAction == _0x9a0568(0x1bd)) started_moonwalking = ![], started_promoonwalking = ![], started_promoonwalking2 = !![], followX = updateCursorPosition(_0x20b21d, obj, _0x353ede, 0x0, _0x2e630e)['x'], followY = updateCursorPosition(_0x20b21d, obj, _0x353ede, 0x0, _0x2e630e)['y'], updateCursorPosition(_0x20b21d, obj, _0x353ede, Math['PI'], _0x2e630e)[_0x9a0568(0x3b5)] && SendSprint(), typebot = _0x9a0568(0x326);
                            else {
                                if (pvpAction == _0x9a0568(0x1ac)) {
                                    if (_0x17e69f < obj[_0x9a0568(0x3f3)] * 0x2 + player['nRad'] * 0x2) {
                                        if ((_0x2e630e > 0x5a && _0x2e630e < 0x96 || _0x2e630e < -0x5a && _0x2e630e > -0x96) && _0x17e69f < obj['nRad']) {
                                            if (_0x21c276 < _0x55195f && _0x47b7c2 < _0x1f956c) started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], startMoonwalking(_0x20b21d, obj, _0x2e630e, _0x353ede), SendSprint(), typebot = _0x9a0568(0x2ad);
                                            else _0x465838 < _0x558eef && _0x17e69f > _0x465838 ? (started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], startMoonwalking(_0x20b21d, obj, _0x2e630e, _0x353ede), typebot = _0x9a0568(0x326)) : (started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], SendSprint(), typebot = _0x9a0568(0x273));
                                        } else {
                                            if ((_0x2e630e > 0x96 && _0x2e630e < 0xb4 || _0x2e630e < -0x96 && _0x2e630e > -0xb4) && _0x17e69f < obj[_0x9a0568(0x3f3)] / 0x2) {
                                                started_promoonwalking2 = !![], started_moonwalking = ![], started_promoonwalking = ![], followX = updateCursorPosition(_0x20b21d, obj, _0x353ede, 0x0, _0x2e630e)['x'], followY = updateCursorPosition(_0x20b21d, obj, _0x353ede, 0x0, _0x2e630e)['y'];
                                                if (oldupdateCursorPosition(_0x20b21d, obj, _0x353ede, 0x0, _0x2e630e)[_0x9a0568(0x3b5)]) {}
                                                typebot = 'moonwalking_defend150_180';
                                            } else {
                                                if ((_0x2e630e > 0x0 && _0x2e630e < 0x5a || _0x2e630e < -0x0 && _0x2e630e > -0x5a) && _0x17e69f < obj[_0x9a0568(0x3f3)] && _0x47b7c2 < obj[_0x9a0568(0x3f3)]) {
                                                    if (_0x55195f < _0x17e69f && _0x21c276 > _0x17e69f) started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = _0x9a0568(0x3af);
                                                    else _0x558eef < _0x17e69f && _0x50b770 < _0x17e69f ? (started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], followX = oldmoonwalking(_0x20b21d, obj)['nx'] == undefined ? oldmoonwalking(_0x20b21d, obj)['x'] : oldmoonwalking(_0x20b21d, obj)['nx'], followY = oldmoonwalking(_0x20b21d, obj)['ny'] == undefined ? oldmoonwalking(_0x20b21d, obj)['y'] : oldmoonwalking(_0x20b21d, obj)['ny'], typebot = _0x9a0568(0x431)) : (started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], startMoonwalking(_0x20b21d, obj, _0x2e630e, _0x353ede), typebot = _0x9a0568(0x267));
                                                } else started_moonwalking = ![], started_promoonwalking = ![], started_promoonwalking2 = ![], followX = _0x20b21d['x'], followY = _0x20b21d['y'], typebot = _0x9a0568(0x38d);
                                            }
                                        }
                                    } else started_promoonwalking2 = ![], started_moonwalking = ![], started_promoonwalking = ![], (followX = obj['nx'], followY = obj['ny']), typebot = _0x9a0568(0x237);
                                }
                            }
                        }
                        const _0x400066 = player['nx'] - _0x20b21d['x'],
                            _0x203a58 = player['ny'] - _0x20b21d['y'],
                            _0x4db37f = Math[_0x9a0568(0x417)](_0x203a58, _0x400066);
                        if (pvpAction == _0x9a0568(0x2ec)) {
                            var _0x4a4fed = getDistance(player, obj) + obj['nRad'],
                                _0x21aefa = GetPointAtAngleForDistance({
                                    'x': player['x'],
                                    'y': player['y']
                                }, _0x4a4fed, _0x4db37f);
                            if (getDistance(player, obj) < obj[_0x9a0568(0x34b)] * 0x2) {
                                if (getDistance(player, obj) < obj[_0x9a0568(0x34b)] / 0x4 && getDistance(_0x20b21d, _0x34f29a) > getDistance(_0x26ca0b, _0x1c1748) && getDistance(_0x26ca0b, _0x1c1748) < getDistance(player, obj)) followX = _0x53cefa['x'] + obj['nRad'] / 2.4 * Math['cos'](_0x2e630e < 0x0 ? toRadians(getRandomInt(0x0, 0xa)) : -toRadians(getRandomInt(0x0, 0xa))), followY = _0x53cefa['y'] + obj['nRad'] / 2.4 * Math[_0x9a0568(0x29a)](_0x2e630e < 0x0 ? toRadians(getRandomInt(0x0, 0xa)) : -toRadians(getRandomInt(0x0, 0xa))), typebot = _0x9a0568(0x3d1), linecol = 'red';
                                else getDistance(player, _0x20b21d) < getDistance(player, obj) ? (followX = getBehind(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] / 0x6)['x'], followY = getBehind(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj['nRad'] / 0x6)['y'], typebot = _0x9a0568(0x2c5), linecol = _0x9a0568(0x37f)) : getDistance(player, obj) > player['nRad'] ? (followX = player['nx'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x1ce)](_0x4db37f + Math['PI']), followY = player['ny'] + player[_0x9a0568(0x3f3)] * Math[_0x9a0568(0x29a)](_0x4db37f + Math['PI']), typebot = _0x9a0568(0x21e), linecol = _0x9a0568(0x1bb)) : (followX = getBehind(obj['nx'], obj['ny'], obj['nAngle'], obj['nRad'] / 0x8)['x'], followY = getBehind(obj['nx'], obj['ny'], obj[_0x9a0568(0x211)], obj[_0x9a0568(0x3f3)] / 0x8)['y'], typebot = 'Defend', linecol = _0x9a0568(0x1bb));
                            } else followX = player['nx'] + (getDistance(player, obj) - obj[_0x9a0568(0x3f3)]) * Math[_0x9a0568(0x1ce)](_0x4db37f + Math['PI']), followY = player['ny'] + (getDistance(player, obj) - obj[_0x9a0568(0x3f3)]) * Math[_0x9a0568(0x29a)](_0x4db37f + Math['PI']), typebot = _0x9a0568(0x278), linecol = _0x9a0568(0x1bb);
                        }
                        let _0x377bf0 = ![];
                        const _0xe1942 = Date['now']() * 0.007;
                        Math[_0x9a0568(0x29a)](_0xe1942) > 0.9 && (_0x377bf0 = !_0x377bf0);
                        const _0x48ac83 = _0x377bf0 ? Math['PI'] : -Math['PI'],
                            _0x297a95 = obj[_0x9a0568(0x3f3)] / 0x7;
                        followX += getDistance({
                            'x': followX,
                            'y': followY
                        }, obj) > obj[_0x9a0568(0x3f3)] / 0x7 ? Math[_0x9a0568(0x1ce)](obj['nAngle'] - Math['PI'] / 0x2 + _0x48ac83) * _0x297a95 : 0x0, followY += getDistance({
                            'x': followX,
                            'y': followY
                        }, obj) > obj[_0x9a0568(0x3f3)] / 0x7 ? Math['sin'](obj[_0x9a0568(0x211)] - Math['PI'] / 0x2 + _0x48ac83) * _0x297a95 : 0x0, _0x3a4688 = followX, _0x1623d7 = followY;
                    }
                });
            } else BotController['disable']();
        }
        requestAnimationFrame(prbot);
    };
requestAnimationFrame(prbot);
var closestPlayer = null,
    closestDistance = Infinity,
    obj, closestDistance, followX, followY, typebot = _0x1b8bf1(0x1ee),
    aimbot = function() {
        var _0x2c853e = _0x1b8bf1;
        if (player) {
            if (AIMBot) {
                var _0x2329a1 = Object[_0x2c853e(0x36a)](objectsData);
                _0x2329a1[_0x2c853e(0x27d)](_0x34da7b => {
                    var _0x598295 = _0x2c853e;
                    _0x2329a1[_0x598295(0x27d)](_0x34b582 => {
                        if (_0x34b582['oType'] == 0x2 && _0x34b582 != player) {
                            var _0x53d8b3 = getDistance(_0x34b582, player);
                            (!closestDistance || _0x53d8b3 < closestDistance || obj && objectsData[obj['id']] == undefined) && (obj = _0x34b582, closestDistance = _0x53d8b3), obj && (closestDistance = getDistance(obj, player));
                        }
                    });
                    if (obj && _0x34da7b == obj && (pname == undefined || obj[_0x598295(0x3ab)][_0x598295(0x1b0)](pname))) {
                        var _0x421ec5 = getFace(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x7),
                            _0x500753 = getFace(player['x'], player['y'], player['nAngle'], player['nRad'] / 0x7),
                            _0x2c929f = getBehind(obj['x'], obj['y'], obj['nAngle'], obj[_0x598295(0x3f3)] / 0x7),
                            _0x17a614 = getBehind(obj['x'], obj['y'], obj['nAngle'], obj[_0x598295(0x3f3)]),
                            _0x3ccc96 = getFront(obj['x'], obj['y'], obj['nAngle'], obj[_0x598295(0x3f3)]),
                            _0x311429 = getBehind(obj['x'], obj['y'], obj['nAngle'], obj[_0x598295(0x3f3)]),
                            _0x24b429 = getBehind(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] * 0x6),
                            _0x480eb8 = getBehind(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x3),
                            _0x57c27e = getTopRight(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x7),
                            _0x417ec8 = getTopLeft(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x7),
                            _0x355d7f = getBottomRight(obj['x'], obj['y'], obj['nAngle'], obj['nRad'] / 0x7),
                            _0x5ecfc8 = getBottomLeft(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x7),
                            _0x12af04 = getTopRight(player['x'], player['y'], player['nAngle'], player[_0x598295(0x3f3)] / 0x7),
                            _0x8cdfbd = getTopLeft(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x7),
                            _0x31820e = getRight(obj['x'], obj['y'], obj['nAngle'], obj[_0x598295(0x3f3)] * 0x7),
                            _0x311220 = getLeft(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] * 0x7),
                            _0x485dce = getBottomRight(player['x'], player['y'], player['nAngle'], player[_0x598295(0x3f3)] / 0x7),
                            _0x272ace = getBottomLeft(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x7),
                            _0x30066f = getLeft(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x2),
                            _0x3bfbc1 = getRight(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x2),
                            _0x4e2af8 = getLeft(obj['x'], obj['y'], obj['nAngle'], obj['nRad']),
                            _0x4de7b5 = getRight(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)]),
                            _0xa77851 = getLeft(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x2),
                            _0x46a778 = getRight(player['x'], player['y'], player['nAngle'], player[_0x598295(0x3f3)] / 0x2),
                            _0x421ec5 = getFront(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] / 0x7),
                            _0x500753 = getFront(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x7),
                            _0x4d8b58 = getFront(obj['x'], obj['y'], obj[_0x598295(0x211)], obj[_0x598295(0x3f3)] * 0x6),
                            _0x4ff481 = getFront(player['x'], player['y'], player[_0x598295(0x211)], player[_0x598295(0x3f3)] / 0x2),
                            _0x1117a2 = player['x'] + player[_0x598295(0x3f3)] * Math[_0x598295(0x1ce)](player[_0x598295(0x211)] + Math['PI'] / 0x2),
                            _0x5db7e4 = player['y'] + player['nRad'] * Math[_0x598295(0x29a)](player[_0x598295(0x211)] + Math['PI'] / 0x2),
                            _0xca620a = obj['x'] + obj['nRad'] * Math[_0x598295(0x1ce)](obj[_0x598295(0x211)] - Math['PI'] / 0x2),
                            _0x39a7b0 = obj['y'] + obj['nRad'] * Math[_0x598295(0x29a)](obj['nAngle'] - Math['PI'] / 0x2),
                            _0x472216 = obj['x'] + obj[_0x598295(0x3f3)] * Math['cos'](obj['nAngle'] + Math['PI'] / 0x2),
                            _0x250054 = obj['y'] + obj['nRad'] * Math[_0x598295(0x29a)](obj['nAngle'] + Math['PI'] / 0x2),
                            _0x270e9a = player['x'] + player[_0x598295(0x3f3)] * Math[_0x598295(0x1ce)](player[_0x598295(0x211)] - Math['PI'] / 0x2),
                            _0xbcc576 = player['y'] + player[_0x598295(0x3f3)] * Math[_0x598295(0x29a)](player['nAngle'] - Math['PI'] / 0x2),
                            _0x1fa46e = player['x'] + player['nRad'] * Math[_0x598295(0x1ce)](player[_0x598295(0x211)] + Math['PI'] / 0x2),
                            _0x5a06d6 = player['y'] + player[_0x598295(0x3f3)] * Math['sin'](player['nAngle'] + Math['PI'] / 0x2),
                            _0x3766af = _0x1fa46e - _0xca620a,
                            _0x1492e6 = _0x5a06d6 - _0x39a7b0,
                            _0x557d90 = obj['x'] - player['x'],
                            _0x4bc0d5 = obj['y'] - player['y'],
                            _0x1084fe = getDistance(player, obj),
                            _0x5944d5 = Math[_0x598295(0x384)](_0x1084fe * 0xa) / 0xa + 'm',
                            _0x2b23a4 = getDistance(_0x421ec5, _0x480eb8),
                            _0xc85d6 = getDistance(obj, _0x480eb8),
                            _0x86a295 = getDistance(_0x500753, _0x2c929f),
                            _0x53ab98 = getDistance(_0x421ec5, player),
                            _0x465c43 = getDistance(player, _0x2c929f),
                            _0x23c9e6 = getDistance(_0x480eb8, _0x2c929f),
                            _0x38ec0e = getDistance(_0x421ec5, _0xa77851),
                            _0x5aa293 = getDistance(_0x421ec5, _0x46a778),
                            _0x3c9369 = getDistance(_0x421ec5, obj),
                            _0x5483b4 = getDistance(_0x500753, _0x421ec5),
                            _0x1050ad = getDistance(_0x5ecfc8, player),
                            _0x7e7762 = getDistance(_0x355d7f, player),
                            _0x2c7629 = getDistance(_0x3bfbc1, _0x46a778),
                            _0x8e9d0e = getDistance(_0x30066f, _0xa77851),
                            _0x47339d = getDistance(_0x3bfbc1, _0x480eb8),
                            _0x31e45b = getDistance(_0x30066f, _0x480eb8),
                            _0x59094c = getDistance(_0x17a614, player),
                            _0x28f283 = getDistance(_0x311429, player),
                            _0x5e4de2 = Math['sqrt']((_0x500753['x'] - _0x2c929f['x']) ** 0x2 + (_0x500753['y'] - _0x2c929f['y']) ** 0x2),
                            _0x1feb56 = Math[_0x598295(0x1fa)]((obj['x'] - _0xca620a) ** 0x2 + (obj['y'] - _0x39a7b0) ** 0x2),
                            _0x244488 = Math[_0x598295(0x1fa)]((_0x270e9a - _0xca620a) ** 0x2 + (_0xbcc576 - _0x39a7b0) ** 0x2),
                            _0x532d74 = Math[_0x598295(0x384)](_0x5e4de2 * 0xa) / 0xa + 'm',
                            _0x51d733 = 0x0;
                        showMessage('PVP: ' + obj['nickName'] + ' | Animal: ' + obj[_0x598295(0x3ef)] + _0x598295(0x430) + Math[_0x598295(0x384)](closestDistance) + _0x598295(0x374) + typebot, 0x9c4), colors = {
                            0x0: 'grey',
                            0x1: _0x598295(0x1bb)
                        };
                        var _0x209ff3 = {
                                0x0: obj[_0x598295(0x1e5)] == 0x0 ? 0x64 : Math[_0x598295(0x384)](obj[_0x598295(0x1e5)]),
                                0x1: player[_0x598295(0x1e5)] == 0x0 ? 0x64 : Math[_0x598295(0x384)](player['hpPer_n'])
                            },
                            _0x5a1931 = new Piechart({
                                'pad': 0x0,
                                'canvas': PX['pieChartCanvas'],
                                'data': _0x209ff3,
                                'colors': colors,
                                'canvas': canvas,
                                'radius': 0x32 * pixelRat,
                                'x': canvasW - 0x3c * pixelRat * 0x2,
                                'y': canvasH - 0x3c * pixelRat * 0x2
                            });
                        _0x5a1931[_0x598295(0x373)]();
                        var _0x5be74b = 0x3,
                            _0x50dda1 = 0x0;
                        if (_0x1084fe < player[_0x598295(0x3f3)] + obj[_0x598295(0x3f3)]) {
                            if (_0x465c43 < _0x1084fe && _0xc85d6 < _0x1084fe) SendSprint(), followX = _0x2c929f['x'], followY = _0x2c929f['x'], typebot = '2';
                            else {
                                if (_0x31e45b < _0x1084fe) followX = oldmoonwalking(_0x2c929f, _0x3bfbc1)['x'], followY = oldmoonwalking(_0x2c929f, _0x3bfbc1)['y'], typebot = '6', SendSprint();
                                else {
                                    if (_0x53ab98 < _0x465c43 && _0x1084fe < _0x53ab98) SendSprint(), followX = oldmoonwalking(_0x2c929f, obj)['x'], followY = oldmoonwalking(_0x2c929f, obj)['y'], typebot = '8';
                                    else {
                                        if (_0x28f283 < _0x1084fe && _0x28f283 < _0x465c43) SendSprint(), followX = _0x2c929f['x'], followY = _0x2c929f['y'], typebot = '10';
                                        else {
                                            if (_0x86a295 < _0x1084fe && _0x23c9e6 < _0x5483b4) SendSprint(), followX = oldmoonwalking(_0x2c929f, obj)['x'], followY = oldmoonwalking(_0x2c929f, obj)['y'], typebot = '11';
                                            else _0x2b23a4 < _0x86a295 && _0x23c9e6 < _0x5483b4 && (SendSprint(), followX = oldmoonwalking(_0x2c929f, obj)['x'], followY = oldmoonwalking(_0x2c929f, obj)['y'], typebot = '13');
                                        }
                                    }
                                }
                            }(_0x2b23a4 < _0x86a295 && _0x23c9e6 < _0x5483b4 || _0x86a295 < _0x1084fe && _0x23c9e6 < _0x5483b4 || _0x28f283 < _0x1084fe && _0x28f283 < _0x465c43 || _0x53ab98 < _0x465c43 && _0x1084fe < _0x53ab98 || _0x31e45b < _0x1084fe || _0x465c43 < _0x1084fe && _0xc85d6 < _0x1084fe) && (_0x3a4688 = followX, _0x1623d7 = followY);
                        }
                    }
                });
            }
        }
        requestAnimationFrame(aimbot);
    };
requestAnimationFrame(aimbot);

function setConsole() {
    var _0x5ce88b = _0x1b8bf1,
        _0xdeb092 = document[_0x5ce88b(0x427)](_0x5ce88b(0x42d));
    _0xdeb092[_0x5ce88b(0x438)][_0x5ce88b(0x42a)] = _0x5ce88b(0x311), document[_0x5ce88b(0x2ab)][_0x5ce88b(0x40c)](_0xdeb092), console = _0xdeb092[_0x5ce88b(0x3e0)]['console'], window['console'] = console, setTimeout(console['log'](_0x5ce88b(0x383)), 0x14);
}
setConsole();
var alive = 0x0,
    aniChoose = 0x0,
    crasherPower = 0x3e7,
    movement = _0x1b8bf1(0x1ae),
    MsgFirstConnect = 0x1,
    MsgNewGameRoom = 0x3,
    MsgWorldUpdate = 0x4,
    MsgGameScoreUpdate = 0x8,
    MsgDced = 0xb,
    MsgPowerupEffectOnPlayer = 0xc,
    MsgPlayerLeftRoom = 0xd,
    MsgYouDied = 0xe,
    MsgCreateNewAccount = 0xf,
    MsgClientPopupMsg = 0x10,
    MsgClientResize = 0x11,
    MsgYourAnimalChanged = 0x12,
    MsgChat = 0x13,
    MsgRightClick = 0x14,
    MsgLeftClick = 0x15,
    MsgGeneratePartyKey = 0x16,
    MsgPersonalGameEvent = 0x17,
    MsgGameSelectAnimal = 0x18,
    MsgPlayerAbility = 0x19,
    MsgControlsUpgrade = 0x1a,
    MsgControlsDowngrade = 0x1b,
    MsgControlsWatershoot = 0x1c,
    MsgKey_E = 0x1d,
    MsgKey_D = 0x1e,
    MsgPing = 0xff,
    Msg_teamMode = 0x33,
    Msg_1v1Mode_invitePlayer = 0x34,
    Msg_1v1Mode_RequestAction = 0x35,
    Msg_1v1Mode_YouWon = 0x36,
    Msg_1v1Mode_topperInfo = 0x37,
    Msg_spectateMode = 0x38,
    Msg_customScreenTextFont = 0x3a,
    Msg_customInterface = 0x3b,
    Msg_zoom = 0x3c,
    Msg_customInterface_btnEvent = 0x3d,
    Msg_adblockCheckCheck = 0x3e,
    Msg_mopeCheck = 0x3f,
    Msg_recaptcha = 0x40,
    Msg_readyToPlay = 0x41,
    Msg_camereaAnchor_movement = 0x42,
    Msg_chatFilterKey = 0x43,
    Msg_buttonClickedID = 0x44,
    Msg_displayPlayerNick = 0x45,
    Msg_displayDevPrint = 0x46,
    Msg_reloadAccountDataAfterPurchase = 0x47,
    Msg_sendLoginCred = 0x48,
    MsgGameMode_handleMessage = 0x51,
    MsgGameMode_playerCount = 0x52,
    MsgGameMode_statusBarMsg = 0x53,
    MsgGameMode_battleRoyal_begins = 0x54,
    Msg_snowfall = 0x64,
    Msg_gamebtn_hotkey = 0x65,
    Msg_client_loadUserData = 0x66,
    Msg_promptReason = 0x67,
    Msg_MUISB = 0x68,
    ANIMAL_DATA = 0x69,
    MsgClientPopupMsg2 = 0x6a,
    bots_nick = _0x1b8bf1(0x1ac);

function joinGame(_0x535f80, _0x25c565, _0x1f6ea6) {
    var _0x58ee08 = _0x1b8bf1;
    nameeeee = _0x1f6ea6[_0x58ee08(0x287)] == TrackerID ? _0x58ee08(0x324) : bots_nick == _0x58ee08(0x1ac) ? _0x58ee08(0x276) + _0x1f6ea6[_0x58ee08(0x287)] : bots_nick, newmsg = new packet(nameeeee[_0x58ee08(0x252)] + 0x3e8), (newmsg[_0x58ee08(0x358)](0x71), newmsg['writeUInt16'](0x4ce), newmsg[_0x58ee08(0x3dd)](0x4ce), newmsg[_0x58ee08(0x25a)](nameeeee)), wsSendMsg_bots(newmsg, _0x535f80);
}
var recaptcha_clientkey = _0x1b8bf1(0x432),
    recaptcha = function(_0x340bd3) {
        var _0x596454 = _0x1b8bf1;
        re_token = '', grecaptcha[_0x596454(0x2e9)](recaptcha_clientkey, {
            'action': 'homepage'
        })[_0x596454(0x312)](_0x3bc8e => {
            var _0x4dd61e = _0x596454;
            re_token = _0x3bc8e || _0x4dd61e(0x263);
            var _0x106387 = new packet(0x2 + re_token['length'] + 0x2);
            _0x106387['writeUInt8'](Msg_recaptcha), _0x106387[_0x4dd61e(0x25a)](''), wsSendMsg_bots(_0x106387, _0x340bd3), re_token == null && alert('captcha bypass failed');
        })[_0x596454(0x379)](function(_0x2c303b) {
            var _0xe50f7b = _0x596454;
            re_token = _0xe50f7b(0x263);
            var _0x27a0e1 = new packet(0x2 + re_token[_0xe50f7b(0x252)] + 0x2);
            _0x27a0e1['writeUInt8'](Msg_recaptcha), _0x27a0e1['writeString'](re_token), wsSendMsg_bots(_0x27a0e1, _0x340bd3);
        });
    },
    mopecheck = function(_0x102217, _0xb5417d, _0x31104b, _0x27950d) {
        setTimeout(function() {
            var _0x4c3386 = _0x2e61;
            try {
                if (_0x31104b) {
                    var _0x165f15 = _0x4c3386(0x2cf) + _0x31104b,
                        _0x35e9e3 = new packet(0x2 + _0x165f15[_0x4c3386(0x252)] + 0x1);
                    _0x35e9e3[_0x4c3386(0x358)](Msg_mopeCheck), _0x35e9e3[_0x4c3386(0x25a)](_0x165f15);
                }
            } catch {}
        }, getRandomInt(0.5, 0.8) * 0x3e8);
    };

function packet(_0x3a9289) {
    var _0x51e1d6 = _0x1b8bf1;
    this[_0x51e1d6(0x424)] = 0x0, this['dataView'] = new DataView(new ArrayBuffer(_0x3a9289)), this['writeUInt8'] = function(_0xbe50a6) {
        var _0x41869c = _0x51e1d6;
        this['dataView'][_0x41869c(0x1f2)](this[_0x41869c(0x424)], _0xbe50a6), this[_0x41869c(0x424)] += 0x1;
    }, this[_0x51e1d6(0x3dd)] = function(_0x42fddf) {
        var _0x24acac = _0x51e1d6;
        this[_0x24acac(0x422)][_0x24acac(0x301)](this[_0x24acac(0x424)], _0x42fddf, ![]), this[_0x24acac(0x424)] += 0x2;
    }, this[_0x51e1d6(0x25d)] = function(_0x408f23) {
        var _0x14e465 = _0x51e1d6;
        this[_0x14e465(0x422)]['setInt16'](this[_0x14e465(0x424)], _0x408f23, ![]), this[_0x14e465(0x424)] += 0x2;
    }, this[_0x51e1d6(0x338)] = function(_0x5f952c) {
        var _0x525184 = _0x51e1d6;
        this[_0x525184(0x422)][_0x525184(0x223)](this['len'], _0x5f952c, ![]), this[_0x525184(0x424)] += 0x4;
    }, this[_0x51e1d6(0x25a)] = function(_0x5d4f05) {
        var _0x46f9a2 = _0x51e1d6;
        _0x5d4f05 = encode_utf8(_0x5d4f05), len = _0x5d4f05[_0x46f9a2(0x252)], this[_0x46f9a2(0x3dd)](_0x5d4f05[_0x46f9a2(0x252)]);
        for (var _0x5815a5 = 0x0; _0x5815a5 < len; _0x5815a5++) {
            this['writeUInt8'](_0x5d4f05[_0x46f9a2(0x238)](_0x5815a5));
        }
    };
}

function MsgReader_bots(_0x9e09a1) {
    var _0x32189e = _0x1b8bf1;
    this[_0x32189e(0x1ad)] = _0x9e09a1, this[_0x32189e(0x426)] = 0x0, this[_0x32189e(0x284)] = function() {
        var _0x3eb15a = _0x32189e,
            _0x5386ed = this[_0x3eb15a(0x1ad)][_0x3eb15a(0x349)](this[_0x3eb15a(0x426)]);
        return this[_0x3eb15a(0x426)] += 0x1, _0x5386ed;
    }, this['readUInt16'] = function() {
        var _0x2fb5ed = _0x32189e;
        try {
            var _0x15abe4 = this[_0x2fb5ed(0x1ad)][_0x2fb5ed(0x23e)](this[_0x2fb5ed(0x426)], ![]);
            return this[_0x2fb5ed(0x426)] += 0x2, _0x15abe4;
        } catch (_0x2456d8) {
            return 0x0;
        }
    }, this['readInt16'] = function() {
        var _0x507bb5 = _0x32189e;
        try {
            var _0x251d0f = this['data'][_0x507bb5(0x3d3)](this['offset'], ![]);
            return this[_0x507bb5(0x426)] += 0x2, _0x251d0f;
        } catch (_0x4acb45) {
            return 0x0;
        }
    }, this[_0x32189e(0x3ca)] = function() {
        var _0x4fbc08 = _0x32189e,
            _0x5097da = this['data'][_0x4fbc08(0x405)](this[_0x4fbc08(0x426)], ![]);
        return this[_0x4fbc08(0x426)] += 0x4, _0x5097da;
    }, this[_0x32189e(0x356)] = function() {
        var _0x175898 = _0x32189e,
            _0x36d6c7 = this[_0x175898(0x319)](),
            _0xf7ca17 = '',
            _0x49cb3e;
        for (var _0x1dc688 = 0x0; _0x1dc688 < _0x36d6c7; _0x1dc688++) {
            _0x49cb3e = this[_0x175898(0x284)]();
            if (_0x1dc688 != _0x36d6c7 - 0x1) _0xf7ca17 += String['fromCharCode'](_0x49cb3e);
        }
        return decode_utf8(_0xf7ca17);
    }, this[_0x32189e(0x378)] = function() {}, this[_0x32189e(0x2bc)] = function() {
        return new MsgReaderBitsGroup(this);
    };
}
var adblockCheck = function(_0x16f7b, _0xff9f0a, _0x4350d4) {
    setTimeout(function() {
        var _0x5a0a17 = _0x2e61;
        _0x16f7b += 'r';
        var _0x147995 = 0x1;
        _0xff9f0a = _0x147995 + '' + _0xff9f0a, _0xff9f0a = _0xff9f0a + '' + _0x147995;
        var _0x38e034 = new packet(0x2 + _0xff9f0a[_0x5a0a17(0x252)] + 0x2);
        _0x38e034[_0x5a0a17(0x358)](0x3e), _0x38e034['writeString'](_0xff9f0a);
    }, 0x1388);
};

function makeid(_0x3abd84) {
    var _0x164e56 = _0x1b8bf1,
        _0x4ac860 = '',
        _0x28dca7 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
        _0x17e76d = _0x28dca7[_0x164e56(0x252)];
    for (var _0x4b8a2a = 0x0; _0x4b8a2a < _0x3abd84; _0x4b8a2a++) {
        _0x4ac860 += _0x28dca7[_0x164e56(0x3b2)](Math[_0x164e56(0x2d9)](Math[_0x164e56(0x425)]() * _0x17e76d));
    }
    return _0x4ac860;
}
var wsSendMsg_bots = (_0x20aa2e, _0x225e53) => {
    var _0x458a7c = _0x1b8bf1;
    _0x225e53[_0x458a7c(0x38a)] === _0x225e53['OPEN'] && _0x225e53[_0x458a7c(0x38c)](_0x20aa2e['dataView']['buffer']);
};

function handleWsMessage(_0x36ebd4) {
    var _0x19cd2e = _0x1b8bf1,
        _0x49f35c = new reader(_0x36ebd4),
        _0x16a306 = _0x49f35c[_0x19cd2e(0x284)]();
    console['log'](_0x16a306);
}

function checkAlive() {
    var _0x3f1724 = _0x1b8bf1;
    alive = 0x0, bots[_0x3f1724(0x27d)](_0x5d0451 => {
        var _0x557179 = _0x3f1724;
        _0x5d0451[_0x557179(0x1e0)] && alive++;
    });
}

function checkAlive() {
    var _0x147674 = _0x1b8bf1;
    alive = 0x0, bots[_0x147674(0x27d)](_0x204353 => {
        var _0x1ec257 = _0x147674;
        _0x204353[_0x1ec257(0x1e0)] && alive++;
    });
}

function scaleValue(_0x150664, _0x50aba0, _0x213260, _0x5436cf, _0x24cd4b) {
    return (_0x150664 - _0x50aba0) / (_0x213260 - _0x50aba0) * (_0x24cd4b - _0x5436cf) + _0x5436cf;
}
let x = 0x7b,
    scaledX = scaleValue(x, 0x0, 0xe6, 0x0, 0x2134);
console['log'](scaledX);
var bot_lock_x = 0x0,
    bot_lock_y = 0x0,
    Num1X = 0x0,
    Num1Y = 0x0;

function handleWsMessage_bots(_0x31f5c3, _0x229a5, _0x2ddb42) {
    var _0x32d4e9 = _0x1b8bf1;
    if (bots[_0x32d4e9(0x272)](_0x2ddb42)) {
        var _0x268980 = new MsgReader_bots(_0x31f5c3),
            _0x324269 = _0x268980['readUInt8']();
        switch (_0x324269) {
            case MsgGameScoreUpdate:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x1b6));
                var _0x1c220c = _0x268980[_0x32d4e9(0x319)](),
                    _0x3c7453 = _0x268980[_0x32d4e9(0x284)](),
                    _0x25d19c = [];
                for (i = 0x0; i < _0x3c7453; ++i) {
                    var _0x2396d8 = {
                        'rank': _0x268980[_0x32d4e9(0x319)](),
                        'name': _0x268980['readString'](),
                        'score': _0x268980[_0x32d4e9(0x3ca)]()
                    };
                    _0x25d19c['push'](_0x2396d8);
                    const _0x2e3935 = _0x25d19c[_0x32d4e9(0x300)](_0x27b962 => _0x27b962[_0x32d4e9(0x377)] == _0x1c220c);
                    bots[_0x32d4e9(0x272)](_0x2ddb42)['xp'] = _0x2396d8[_0x32d4e9(0x23c)];
                }
                break;
            case MsgYouDied:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x207)), setTimeout(function() {
                    var _0x3d41d5 = _0x32d4e9;
                    if (bots['get'](_0x2ddb42)[_0x3d41d5(0x287)] != TrackerID) joinGame(_0x229a5, ![], bots[_0x3d41d5(0x272)](_0x2ddb42)), bots[_0x3d41d5(0x272)](_0x2ddb42)[_0x3d41d5(0x1e0)] = ![];
                    else {
                        trackerAlive = ![];
                        var _0x96c57e = _0x268980[_0x3d41d5(0x284)]();
                        if (_0x96c57e == 0x1) trackerR = _0x3d41d5(0x411);
                        else {
                            if (_0x96c57e == 0x2) trackerR = _0x3d41d5(0x3e8);
                            else {
                                if (_0x96c57e == 0x4) trackerR = _0x3d41d5(0x1e9);
                                else {
                                    if (_0x96c57e == 0x1b) trackerR = _0x3d41d5(0x401);
                                    else {
                                        if (_0x96c57e == 0x1c) trackerR = _0x3d41d5(0x364);
                                        else {
                                            if (_0x96c57e == 0x1d) trackerR = _0x3d41d5(0x40a);
                                            else _0x96c57e == 0xd ? trackerR = _0x3d41d5(0x1ff) : trackerR = _0x3d41d5(0x32d);
                                        }
                                    }
                                }
                            }
                        }
                    }
                } ['bind'](this), 0x3e8 * Math[_0x32d4e9(0x425)]());
                break;
            case Msg_recaptcha:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x36b)), setTimeout(() => {
                    recaptcha(_0x229a5);
                }, 0x7d + getRandomInt(0x32, 0xfa));
                break;
            case MsgGameSelectAnimal:
                if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x287)] == TrackerID) trackerAlive = !![];
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x314)), setTimeout(() => {
                    var _0x317299 = _0x32d4e9,
                        _0x1f1fc7 = getRandomInt(0x0, 0x3);
                    let _0x41dc7d = new packet(0x2);
                    _0x41dc7d['writeUInt8'](0x18), _0x41dc7d['writeUInt8'](0x0), wsSendMsg_bots(_0x41dc7d, _0x229a5), bots['get'](_0x2ddb42)[_0x317299(0x1e0)] = !![];
                }, 0x7d + getRandomInt(0x32, 0xfa)), this['a'] = setInterval(function() {
                    var _0x5dd2f5 = _0x32d4e9;
                    if (bots[_0x5dd2f5(0x272)](_0x2ddb42)) {
                        var _0x5e4766 = 0x0,
                            _0x546fc6 = 0x0;
                        if (movement == _0x5dd2f5(0x1ae)) {
                            var _0x14fb59 = bots[_0x5dd2f5(0x272)](_0x2ddb42) && bots[_0x5dd2f5(0x272)](_0x2ddb42)[_0x5dd2f5(0x287)] / 0x2 == Math['round'](bots['get'](_0x2ddb42)[_0x5dd2f5(0x287)] / 0x2) ? bots[_0x5dd2f5(0x272)](_0x2ddb42)['botNumber'] * 0xa : -(bots[_0x5dd2f5(0x272)](_0x2ddb42)[_0x5dd2f5(0x287)] * 0xa);
                            _0x5e4766 % 0x2 == 0x0 ? (coordX = cursorX, coordY = cursorY) : (coordX = cursorX, coordY = cursorY), _0x5e4766 += 0x32, _0x546fc6 += _0x5e4766 == 0x64 ? 0x32 : 0x0;
                        } else coordX = cursorX, coordY = cursorY;
                        if (coordX !== 0x0) {
                            let _0x3f98d1 = new packet(0x5);
                            _0x3f98d1[_0x5dd2f5(0x358)](0x5), _0x3f98d1['writeUInt16'](coordX), _0x3f98d1[_0x5dd2f5(0x3dd)](coordY), wsSendMsg_bots(_0x3f98d1, _0x229a5);
                        }
                    }
                } [_0x32d4e9(0x3f9)](this), 0xf + getRandomInt(0x1, 0x5));
                break;
            case MsgWorldUpdate:
                var _0x1b2a0e = _0x268980[_0x32d4e9(0x284)]();
                for (i = 0x0; i < _0x1b2a0e; i++) {
                    bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] = _0x268980[_0x32d4e9(0x284)]();
                    if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x1) bots['get'](_0x2ddb42)[_0x32d4e9(0x1bc)] = _0x268980['readUInt16']() / 0x3e8;
                    else {
                        if (bots['get'](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x2) bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x371)] = _0x268980[_0x32d4e9(0x3ca)]() / 0x64, bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x215)] = _0x268980[_0x32d4e9(0x3ca)]() / 0x64;
                        else {
                            if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x3) bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x399)] = _0x268980[_0x32d4e9(0x319)]() / 0x4, bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x369)] = _0x268980[_0x32d4e9(0x319)]() / 0x4;
                            else {
                                if (bots['get'](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x4) _0x268980[_0x32d4e9(0x284)]();
                                else {
                                    if (bots[_0x32d4e9(0x272)](_0x2ddb42)['type'] == 0x13) _0x268980[_0x32d4e9(0x319)]();
                                    else {
                                        if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x14) _0x268980[_0x32d4e9(0x284)]();
                                        else {
                                            if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x5) _0x268980['readUInt8']();
                                            else {
                                                if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x6) _0x268980[_0x32d4e9(0x284)]();
                                                else {
                                                    if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x7) _0x268980[_0x32d4e9(0x3ca)]();
                                                    else {
                                                        if (bots[_0x32d4e9(0x272)](_0x2ddb42)['type'] == 0x8) _0x268980[_0x32d4e9(0x284)]() == 0x1;
                                                        else {
                                                            if (bots[_0x32d4e9(0x272)](_0x2ddb42)['type'] == 0x9) _0x268980[_0x32d4e9(0x319)]() / 0xa;
                                                            else {
                                                                if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0xa) _0x268980[_0x32d4e9(0x319)]();
                                                                else {
                                                                    if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0xb) _0x268980[_0x32d4e9(0x3ca)]();
                                                                    else {
                                                                        if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0xc) _0x268980[_0x32d4e9(0x284)]();
                                                                        else {
                                                                            if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0xd) _0x268980[_0x32d4e9(0x3ca)]();
                                                                            else {
                                                                                if (bots['get'](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0xe) _0x268980[_0x32d4e9(0x356)]();
                                                                                else {
                                                                                    if (bots[_0x32d4e9(0x272)](_0x2ddb42)['type'] == 0xf) _0x268980['readUInt8']();
                                                                                    else {
                                                                                        if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x10) _0x268980['readUInt8']();
                                                                                        else {
                                                                                            if (bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x2b3)] == 0x11) _0x268980[_0x32d4e9(0x3ca)]();
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                checkAlive();
                break;
            case 0x2:
                let _0x5096e7 = _0x268980['readString'](),
                    _0x297cfd = _0x268980[_0x32d4e9(0x319)](),
                    _0x180f12 = _0x268980[_0x32d4e9(0x284)](),
                    _0x30fde6 = _0x268980['readUInt8'](),
                    _0x30c9f3 = _0x268980['readString']();
                bots[_0x32d4e9(0x272)](_0x2ddb42)['sessionId'] = _0x5096e7, bots[_0x32d4e9(0x272)](_0x2ddb42)[_0x32d4e9(0x3e1)] = _0x30c9f3;
                break;
            case Msg_readyToPlay:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x2e7)), console[_0x32d4e9(0x1d6)]('✔️'), setTimeout(() => {
                    var _0x2f92f3 = _0x32d4e9;
                    joinGame(_0x229a5, ![], bots[_0x2f92f3(0x272)](_0x2ddb42));
                }, 0x64 + getRandomInt(0x64, 0x9c4));
                break;
            case Msg_mopeCheck:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x1b8));
                var _0x52d9a4 = _0x268980[_0x32d4e9(0x3ca)](),
                    _0x351060 = _0x268980[_0x32d4e9(0x356)]();
                setTimeout(() => {
                    mopecheck(_0x229a5, _0x351060, _0x52d9a4, '');
                }, 0x7d + getRandomInt(0x64, 0x258));
                break;
            case Msg_adblockCheckCheck:
                console[_0x32d4e9(0x2a8)](_0x32d4e9(0x240)), recaptcha(_0x229a5);
                try {
                    var _0x52d9a4 = _0x268980[_0x32d4e9(0x319)](),
                        _0x351060 = _0x268980['readString']();
                    adblockCheck(_0x351060, _0x52d9a4, _0x229a5);
                } catch (_0x496760) {}
                break;
            case MsgDced: {
                var _0x463993 = _0x268980[_0x32d4e9(0x284)](),
                    _0x2f0e59 = _0x463993 > 0x0,
                    _0xd9d18f = _0x268980[_0x32d4e9(0x356)](),
                    _0x19f758 = _0x268980[_0x32d4e9(0x284)]() > 0x0;
                isInActiveGameSession = ![], curGameSessionID = null, dcedNoReconnect = _0x463993 != 0x2 && _0x2f0e59 || _0x19f758, SendChatMessage(_0x32d4e9(0x245) + _0xd9d18f, 0x9c4), bots[_0x32d4e9(0x272)](_0x2ddb42)['alive'] = ![], checkAlive();
            }
            break;
        }
    }
}
const socketplayers = new WebSocket(_0x1b8bf1(0x242));

function _0x2e61(_0x505303, _0x2bc9da) {
    var _0x316966 = _0x3169();
    return _0x2e61 = function(_0x2e61c5, _0x32981a) {
        _0x2e61c5 = _0x2e61c5 - 0x1ac;
        var _0x34189f = _0x316966[_0x2e61c5];
        return _0x34189f;
    }, _0x2e61(_0x505303, _0x2bc9da);
}
socketplayers[_0x1b8bf1(0x2db)] = () => {
    var _0x49b1da = _0x1b8bf1;
    console[_0x49b1da(0x2a8)]('Connected to server');
};
var data, PXUsersList = {};
socketplayers['onmessage'] = _0x45d008 => {
    var _0x3d46f5 = _0x1b8bf1;
    data = JSON[_0x3d46f5(0x25e)](_0x45d008[_0x3d46f5(0x1ad)]), PXUsersList[data['player'][_0x3d46f5(0x3ab)]] = data;
};

function trackPXUsers() {
    Object['values'](PXUsersList)['forEach'](_0x221d7b => {
        var _0x2659e2 = _0x2e61;
        player && ws && (_0x221d7b[_0x2659e2(0x218)][_0x2659e2(0x29b)][_0x2659e2(0x3e1)] == ws[_0x2659e2(0x29b)][_0x2659e2(0x3e1)] && drawPlayerOnMiniMap(_0x221d7b[_0x2659e2(0x3da)], _0x2659e2(0x2d8), 0x1));
    }), requestAnimationFrame(trackPXUsers);
}
requestAnimationFrame(trackPXUsers), socketplayers[_0x1b8bf1(0x1e4)] = () => {
    var _0x322f55 = _0x1b8bf1;
    console[_0x322f55(0x2a8)]('Disconnected from server');
};

function combinname(_0xc766d, _0x38bac8) {
    var _0x37f856 = _0x1b8bf1;
    let _0x1c3828 = '',
        _0x526511 = 0x0,
        _0x167982 = 0x0;
    while (_0x526511 < _0xc766d['length'] && _0x167982 < _0x38bac8['toString']()[_0x37f856(0x252)]) {
        _0x1c3828 += _0xc766d[_0x37f856(0x3b2)](_0x526511) + _0x38bac8[_0x37f856(0x343)]()[_0x37f856(0x3b2)](_0x167982), _0x526511++, _0x167982++;
    }
    return _0x526511 < _0xc766d[_0x37f856(0x252)] && (_0x1c3828 += _0xc766d[_0x37f856(0x279)](_0x526511)), _0x167982 < _0x38bac8[_0x37f856(0x343)]()['length'] && (_0x1c3828 += _0x38bac8['toString']()['substring'](_0x167982)), _0x1c3828;
}
var pname = undefined,
    track_top = ![],
    botspectate = ![],
    consolechat = ![];

function executeConsoleCommand(_0x3bf120) {
    var _0x60bb88 = _0x1b8bf1;
    try {
        const _0x4ef034 = eval(_0x3bf120);
        console[_0x60bb88(0x2a8)](_0x4ef034);
    } catch (_0x1240c1) {
        console['error'](_0x1240c1);
    }
}

function commands(_0x397265) {
    var _0x3c03b7 = _0x1b8bf1,
        _0x213d5e = String(_0x397265),
        _0x14f783 = _0x213d5e[_0x3c03b7(0x256)](':');
    if (consolechat) switch (_0x397265) {
        case _0x397265:
            executeConsoleCommand(_0x397265);
            return ![];
    } else switch (_0x397265) {
        case 'freeze:camera':
            showMessage(_0x3c03b7(0x406), 0x3a98);
            return !![];
        case _0x3c03b7(0x2d7):
            consolechat = !![], showMessage(_0x3c03b7(0x201), 0x9c4);
            return !![];
        case '!freeze:camera':
            showMessage('Unfreezed.', 0x7d0);
            return !![];
        case _0x3c03b7(0x2e5):
            camzoom_f = !![], showMessage(_0x3c03b7(0x414), 0x7d0);
            return !![];
        case _0x3c03b7(0x1ec):
            camzoom_f = ![], showMessage(_0x3c03b7(0x2df), 0x7d0);
            return !![];
        case 'xray:players':
            isXRAYPLAYERSEnabled = !![], showMessage(_0x3c03b7(0x217), 0x7d0);
            return !![];
        case _0x3c03b7(0x1cf):
            isXRAYPLAYERSEnabled = ![], showMessage(_0x3c03b7(0x31c), 0x7d0);
            return !![];
        case _0x3c03b7(0x3e3):
            isXRAYOBJEnabled = !![], showMessage('X-Ray OBJ enabled', 0x7d0);
            return !![];
        case '!xray:objects':
            isXRAYOBJEnabled = ![], showMessage(_0x3c03b7(0x32b), 0x7d0);
            return !![];
        case _0x3c03b7(0x286):
            AutoGG = !![], showMessage(_0x3c03b7(0x2ce), 0x7d0);
            return !![];
        case _0x3c03b7(0x359):
            AutoGG = ![], showMessage(_0x3c03b7(0x285), 0x7d0);
            return !![];
        case _0x3c03b7(0x3fa):
            AutoGL = !![], showMessage('AutoGL enabled', 0x7d0);
            return !![];
        case _0x3c03b7(0x37c):
            AutoGL = ![], showMessage('AutoGL disabled.', 0x7d0);
            return !![];
        case _0x3c03b7(0x2c7):
            pname = undefined, PVPBot = ![], showMessage(_0x3c03b7(0x389), 0x9c4);
            return !![];
        case 'GMHihgfоOаs':
        case _0x3c03b7(0x400):
            position = 0x1, enabledAssBird = ![], showMessage('POSITION #' + position + _0x3c03b7(0x2e4), 0x7d0);
            return !![];
        case _0x3c03b7(0x230):
            return !![];
        case _0x3c03b7(0x318):
            botspectate = !botspectate, spectatebots();
            var _0x13554b = {
                'x': Num1X,
                'y': Num1Y
            };
            SendChatMessage(_0x3c03b7(0x41e) + Math[_0x3c03b7(0x384)](getDistance(_0x13554b, player) / 0xa) + 'm' + ' (' + getPolus(player, _0x13554b) + ')'), track_top = !![], showMessage('Bot is ' + (botspectate ? _0x3c03b7(0x2d2) : _0x3c03b7(0x1d1)) + _0x3c03b7(0x3fe) + Math[_0x3c03b7(0x384)](getDistance(_0x13554b, player) / 0xa) + 'm' + ' (' + getPolus(player, _0x13554b) + ')', 0x9c4);
            return !![];
        case _0x3c03b7(0x392):
            track_top = ![];
            return !![];
        case _0x3c03b7(0x398):
            var _0x182635 = undefined;
            Object[_0x3c03b7(0x36a)](objectsData)['forEach'](_0x38c0d3 => {
                if (_0x38c0d3['oType'] == 0x2 && _0x38c0d3 != player && !IsBot(_0x38c0d3)) {
                    var _0xdeb597 = getDistance(_0x38c0d3, player);
                    (!closestDistance || _0xdeb597 < closestDistance || obj && objectsData[obj['id']] == undefined) && (_0x182635 = _0x38c0d3, closestDistance = _0xdeb597), _0x182635 && (closestDistance = getDistance(_0x182635, player));
                }
            }), setTimeout(function() {
                var _0x4a9dab = _0x3c03b7;
                _0x182635 ? SendChatMessage(_0x4a9dab(0x2b4) + _0x182635[_0x4a9dab(0x3ab)]) : SendChatMessage(_0x4a9dab(0x2f4));
            }, 0x3e8);
            return ![];
    }
    switch (_0x14f783[0x0]) {
        case 'translate':
            TARGET_LANG = getLangCode(_0x14f783[0x1]), showMessage(_0x3c03b7(0x361) + getLangCode(_0x14f783[0x1]), 0x9c4);
            return !![];
        case _0x3c03b7(0x1fc):
            TARGET_LANG_O = getLangCode(_0x14f783[0x1]), showMessage(_0x3c03b7(0x294) + getLangCode(_0x14f783[0x1]), 0x9c4);
            return !![];
        case _0x3c03b7(0x305):
            player[_0x3c03b7(0x3ab)] == _0x3c03b7(0x2ae) + hard && Object[_0x3c03b7(0x36a)](PXUsersList)[_0x3c03b7(0x27d)](_0x2076a7 => {
                var _0x413500 = _0x3c03b7;
                IsPlayer(_0x2076a7[_0x413500(0x3da)]) && _0x2076a7['player'][_0x413500(0x3ab)][_0x413500(0x1b0)](_0x14f783[0x1]) && _0x2076a7['id'] != player['id'] && RVCjoinServer(_0x2076a7['server'][_0x413500(0x29b)][_0x413500(0x3e1)]);
            });
            return !![];
        case _0x3c03b7(0x41a):
            if (_0x14f783[0x3] == _0x3c03b7(0x2a3)) {
                let _0x3d782a = {};
                _0x3d782a[_0x3c03b7(0x39b)] = _0x14f783[0x1], _0x3d782a[_0x3c03b7(0x28f)] = _0x14f783[0x2], _0x3d782a['id'] = Object[_0x3c03b7(0x1ba)](binds_)[_0x3c03b7(0x252)], _0x3d782a[_0x3c03b7(0x3a0)] = _0x3c03b7(0x2a3), showMessage('Bind on ' + _0x3d782a[_0x3c03b7(0x39b)] + _0x3c03b7(0x3e4) + _0x3d782a[_0x3c03b7(0x28f)] + _0x3c03b7(0x25f) + _0x3d782a[_0x3c03b7(0x39b)] + _0x3c03b7(0x28d) + _0x3d782a[_0x3c03b7(0x28f)] + 'or\x0arembind:' + _0x3d782a['id'] + '.', 0x3a98), binds_['push'](_0x3d782a);
            } else {
                let _0xce10ae = {};
                _0xce10ae[_0x3c03b7(0x39b)] = _0x14f783[0x1], _0xce10ae[_0x3c03b7(0x28f)] = _0x14f783[0x2], _0xce10ae['id'] = Object[_0x3c03b7(0x1ba)](binds_)[_0x3c03b7(0x252)], _0xce10ae['bindtype'] = _0x3c03b7(0x28f), showMessage(_0x3c03b7(0x33c) + _0xce10ae[_0x3c03b7(0x39b)] + _0x3c03b7(0x341) + _0xce10ae['chat'] + _0x3c03b7(0x25f) + _0xce10ae[_0x3c03b7(0x39b)] + _0x3c03b7(0x28d) + _0xce10ae[_0x3c03b7(0x28f)] + _0x3c03b7(0x28d) + _0xce10ae['id'] + '.', 0x3a98), binds_[_0x3c03b7(0x403)](_0xce10ae);
            }
            return !![];
        case _0x3c03b7(0x21f):
            player[_0x3c03b7(0x3ab)] == _0x3c03b7(0x2ae) + hard && Object[_0x3c03b7(0x36a)](objectsData)[_0x3c03b7(0x27d)](_0x2bda10 => {
                var _0x197572 = _0x3c03b7;
                IsPlayer(_0x2bda10) && _0x2bda10[_0x197572(0x3ab)]['includes'](_0x14f783[0x1]) && _0x2bda10['id'] != player['id'] && SendChatMessage('kp' + combinname(_0x2bda10[_0x197572(0x3ab)], _0x2bda10['id']));
            });
            return !![];
        case '//kickbots':
            player[_0x3c03b7(0x3ab)] == '#ProXYGamer' + hard && Object[_0x3c03b7(0x36a)](objectsData)[_0x3c03b7(0x27d)](_0x3e86b0 => {
                var _0x38a0ad = _0x3c03b7;
                IsPlayer(_0x3e86b0) && _0x3e86b0[_0x38a0ad(0x3ab)]['includes'](_0x14f783[0x1]) && _0x3e86b0['id'] != player['id'] && SendChatMessage('kb' + combinname(_0x3e86b0[_0x38a0ad(0x3ab)], _0x3e86b0['id']));
            });
            return !![];
        case _0x3c03b7(0x3d5):
            player[_0x3c03b7(0x3ab)] == _0x3c03b7(0x2ae) + hard && Object['values'](objectsData)[_0x3c03b7(0x27d)](_0x4f1eba => {
                var _0x3eb535 = _0x3c03b7;
                IsPlayer(_0x4f1eba) && _0x4f1eba[_0x3eb535(0x3ab)][_0x3eb535(0x1b0)](_0x14f783[0x1]) && _0x4f1eba['id'] != player['id'] && SendChatMessage('lo' + combinname(_0x4f1eba[_0x3eb535(0x3ab)], _0x4f1eba['id']));
            });
            return !![];
        case _0x3c03b7(0x2f6):
            player[_0x3c03b7(0x3ab)] == _0x3c03b7(0x2ae) + hard && Object['values'](objectsData)[_0x3c03b7(0x27d)](_0x1b8cc1 => {
                var _0x236611 = _0x3c03b7;
                IsPlayer(_0x1b8cc1) && _0x1b8cc1['nickName'][_0x236611(0x1b0)](_0x14f783[0x1]) && _0x1b8cc1['id'] != player['id'] && SendChatMessage(_0x236611(0x1c5) + combinname(_0x1b8cc1[_0x236611(0x3ab)], _0x1b8cc1['id']));
            });
            return !![];
        case _0x3c03b7(0x3c9):
            player['nickName'] == _0x3c03b7(0x2ae) + hard && Object[_0x3c03b7(0x36a)](objectsData)[_0x3c03b7(0x27d)](_0x30e3be => {
                var _0x44069f = _0x3c03b7;
                IsPlayer(_0x30e3be) && _0x30e3be[_0x44069f(0x3ab)]['includes'](_0x14f783[0x1]) && _0x30e3be['id'] != player['id'] && SendChatMessage(_0x44069f(0x437) + combinname(_0x30e3be[_0x44069f(0x3ab)], _0x30e3be['id']));
            });
            return !![];
        case 'rembind':
            binds_[_0x3c03b7(0x27d)](_0x12994f => {
                var _0x41f731 = _0x3c03b7;
                (_0x12994f[_0x41f731(0x39b)] == _0x14f783[0x1] || _0x12994f[_0x41f731(0x39b)] == _0x14f783[0x1] || _0x12994f['id'] == parseFloat(_0x14f783[0x1])) && (showMessage('Bind #' + _0x12994f['id'] + _0x41f731(0x3ff), 0x3a98), binds_[_0x41f731(0x434)](_0x12994f, 0x1));
            });
            return !![];
        case _0x3c03b7(0x428):
            if (parseFloat(_0x14f783[0x1]) != NaN) {
                if (parseFloat(_0x14f783[0x1]) >= 0x186a0) diff = parseFloat(_0x14f783[0x1]), showMessage((AutoGG ? '' : 'Warning: AutoGG is disabled. To enable it, type gg: or click on text in settings.\x0a\x0a') + 'XP Difference is now setted to ' + diff + _0x3c03b7(0x40e), AutoGG ? 0x1194 : 0x1d4c);
                else {
                    zerosToAdd = 0x6 - _0x14f783[0x1][_0x3c03b7(0x252)], result = _0x14f783[0x1];
                    for (let _0x132bc9 = 0x0; _0x132bc9 < zerosToAdd; _0x132bc9++) {
                        result += '0';
                    }
                    diff = parseFloat(result), showMessage((AutoGG ? '' : _0x3c03b7(0x3b4)) + _0x3c03b7(0x360) + parseFloat(result) + _0x3c03b7(0x3cf) + diff + _0x3c03b7(0x40e), AutoGG ? 0x1964 : 0x2904);
                }
            }
            return !![];
        case _0x3c03b7(0x342):
            bots[_0x3c03b7(0x27d)](_0x8da3d9 => {
                var _0x420653 = _0x3c03b7;
                if (_0x14f783[0x1] && _0x8da3d9[_0x420653(0x287)] == parseFloat(_0x14f783[0x1])) {
                    var _0x36fc63 = new packet(0x1);
                    _0x36fc63[_0x420653(0x358)](MsgDced), wsSendMsg_bots(_0x36fc63, _0x8da3d9[_0x420653(0x3c6)]), checkAlive();
                }
            });
            return !![];
        case _0x3c03b7(0x302):
            bots['forEach']((_0x1a9bba, _0x1573c7) => {
                var _0x11a3bd = _0x3c03b7;
                _0x14f783[0x1] && _0x1a9bba[_0x11a3bd(0x287)] == parseFloat(_0x14f783[0x1]) && (joinGame(_0x1a9bba[_0x11a3bd(0x3c6)], ![], bots[_0x11a3bd(0x272)](_0x1573c7)), SendChatMessage(_0x1a9bba[_0x11a3bd(0x287)] == TrackerID ? _0x11a3bd(0x258) : _0x11a3bd(0x270)));
            });
            return !![];
        case _0x3c03b7(0x368):
            TrackerID = parseFloat(_0x14f783[0x1]), SendChatMessage(_0x3c03b7(0x247) + TrackerID);
            return !![];
        case _0x3c03b7(0x317):
            SendChatMessage(_0x3c03b7(0x3cc) + parseFloat(_0x14f783[0x1]) + '.');
            return !![];
        case _0x3c03b7(0x1cd):
            pname = _0x14f783[0x1], PVPBot = !![], showMessage(_0x397265, 0x9c4);
            return !![];
        case _0x3c03b7(0x1b1):
            position = parseInt(_0x14f783[0x1]), enabledAssBird = !![], showMessage(_0x3c03b7(0x3f0) + position, 0x7d0);
            return !![];
    }
}
Animal[_0x1b8bf1(0x234)][_0x1b8bf1(0x264)] = function(_0x47322c) {
    var _0x7cb9f0 = _0x1b8bf1,
        _0x209bb4 = '',
        _0x16ee4e = '';
    for (var _0x6f7de1 = 0x0; _0x6f7de1 < _0x47322c[_0x7cb9f0(0x256)]('/')[_0x7cb9f0(0x252)]; _0x6f7de1++) {
        _0x47322c[_0x7cb9f0(0x256)]('/')[_0x6f7de1] != '' && (_0x16ee4e += _0x47322c[_0x7cb9f0(0x256)]('/')[_0x6f7de1] + (_0x6f7de1 != _0x47322c[_0x7cb9f0(0x256)]('/')[_0x7cb9f0(0x252)] - 0x1 ? '/' : ''));
    }
    if (this[_0x7cb9f0(0x3ec)] != 0x0 && (this[_0x7cb9f0(0x21b)] == 0x0 || this[_0x7cb9f0(0x21b)] == 0x1 && this[_0x7cb9f0(0x3ef)] == 0x69)) _0x209bb4 = _0x7cb9f0(0x2e6) + this[_0x7cb9f0(0x3ec)] + '/' + _0x16ee4e;
    else _0x209bb4 = _0x7cb9f0(0x1b9) + this['mopeSeasonID'] + '/' + _0x16ee4e;
    return _0x209bb4;
};
var TrackerID = 0x2,
    trackingX = 0x0,
    trackingY = 0x0,
    trackingPl = ![],
    bots_track = 'default';

function track1() {
    var _0x5c41ed = _0x1b8bf1;
    bots['forEach'](_0x48cb66 => {
        var _0x56d4f8 = _0x2e61;
        _0x48cb66[_0x56d4f8(0x287)] == 0x1 && (Num1X = _0x48cb66[_0x56d4f8(0x399)], Num1Y = _0x48cb66[_0x56d4f8(0x369)]), _0x48cb66['botNumber'] == TrackerID && (trackingX = _0x48cb66[_0x56d4f8(0x399)], trackingY = _0x48cb66[_0x56d4f8(0x369)]);
    });
    if (player && track_top) {
        var _0x27f3cd = {
                'x': Num1X,
                'y': Num1Y
            },
            _0x5b74bf = angleAimingBetweenPoints(_0x27f3cd['x'], _0x27f3cd['y'], player['x'], player['y']),
            _0xa9d28a = -0x32 - player[_0x5c41ed(0x3f3)],
            _0x5816fa = GetPointAtAngleForDistance({
                'x': player['x'],
                'y': player['y']
            }, _0xa9d28a, 0x0);
        drawTriangle(_0x5816fa['x'], _0x5816fa['y'], _0x5b74bf, _0x5c41ed(0x3bc), 0x1);
    }
    bots[_0x5c41ed(0x27d)](_0x28ecce => {
        var _0x37ce5d = _0x5c41ed;
        if (bots_track != _0x37ce5d(0x205) && player) {
            if (bots_track == _0x37ce5d(0x1ac) && _0x28ecce['botNumber'] == TrackerID) {
                var _0x3df7b2 = {
                        'x': trackingX,
                        'y': trackingY
                    },
                    _0x53d7d7 = angleAimingBetweenPoints(_0x3df7b2['x'], _0x3df7b2['y'], player['x'], player['y']),
                    _0x3d7d32 = _0x53d7d7,
                    _0x34f67f = -0x32 - player[_0x37ce5d(0x3f3)],
                    _0xbcf1d6 = GetPointAtAngleForDistance({
                        'x': player['x'],
                        'y': player['y']
                    }, _0x34f67f, _0x53d7d7),
                    _0x1946ee = GetPointAtAngleForDistance({
                        'x': player['x'],
                        'y': player['y']
                    }, _0x34f67f * 1.5, _0x53d7d7);
                _0x53d7d7 += toRadians(0x2d), _0x3d7d32 += toRadians(0x5a), drawTriangle(_0xbcf1d6['x'], _0xbcf1d6['y'], _0x53d7d7, _0x28ecce[_0x37ce5d(0x399)] == trackingX && _0x28ecce['camy'] == trackingY ? _0x37ce5d(0x37f) : _0x37ce5d(0x1bb), 0x1), newText(0x0, 0xf, _0x37ce5d(0x2ba) + Math[_0x37ce5d(0x384)](getDistance(player, {
                    'x': _0x28ecce[_0x37ce5d(0x399)],
                    'y': _0x28ecce['camy']
                }) / 0xa) + 'm' + '\x0aID: ' + _0x28ecce[_0x37ce5d(0x287)], screenXForGameX(_0x1946ee['x']), screenYForGameY(_0x1946ee['y']), 'white');
            } else {
                if (bots_track == _0x37ce5d(0x2b9)) {
                    var _0x3df7b2 = {
                            'x': _0x28ecce[_0x37ce5d(0x399)],
                            'y': _0x28ecce[_0x37ce5d(0x369)]
                        },
                        _0x53d7d7 = angleAimingBetweenPoints(_0x3df7b2['x'], _0x3df7b2['y'], player['x'], player['y']),
                        _0x3d7d32 = _0x53d7d7,
                        _0x34f67f = -0x32 - player[_0x37ce5d(0x3f3)],
                        _0xbcf1d6 = GetPointAtAngleForDistance({
                            'x': player['x'],
                            'y': player['y']
                        }, _0x34f67f, _0x53d7d7),
                        _0x1946ee = GetPointAtAngleForDistance({
                            'x': player['x'],
                            'y': player['y']
                        }, _0x34f67f * 1.5, _0x53d7d7);
                    _0x53d7d7 += toRadians(0x2d), _0x3d7d32 += toRadians(0x5a), drawTriangle(_0xbcf1d6['x'], _0xbcf1d6['y'], _0x53d7d7, _0x28ecce[_0x37ce5d(0x399)] == trackingX && _0x28ecce[_0x37ce5d(0x369)] == trackingY ? 'yellow' : _0x37ce5d(0x1bb), 0x1), newText(0x0, 0xf, _0x37ce5d(0x2ba) + Math['round'](getDistance(player, {
                        'x': _0x28ecce['camx'],
                        'y': _0x28ecce[_0x37ce5d(0x369)]
                    }) / 0xa) + 'm' + _0x37ce5d(0x39d) + _0x28ecce['botNumber'], screenXForGameX(_0x1946ee['x']), screenYForGameY(_0x1946ee['y']), _0x37ce5d(0x210));
                }
            }
        }
    }), requestAnimationFrame(track1);
};
requestAnimationFrame(track1);

function _0x5d1dc6(_0xdada2c) {
    return commands(_0xdada2c);
}

function removeBots() {
    var _0x4649c8 = _0x1b8bf1;
    bots[_0x4649c8(0x27d)](_0x527b61 => {
        var _0x374691 = _0x4649c8,
            _0x425999 = new packet(0x1);
        _0x425999[_0x374691(0x358)](MsgDced), wsSendMsg_bots(_0x425999, _0x527b61[_0x374691(0x3c6)]), checkAlive();
    });
}

function spectatebots() {
    bots['forEach'](_0x236520 => {
        var _0x234c21 = _0x2e61;
        if (_0x236520[_0x234c21(0x287)] == 0x1) {
            var _0x273db2 = new packet(0x1);
            _0x273db2[_0x234c21(0x358)](0x38), wsSendMsg_bots(_0x273db2, _0x236520[_0x234c21(0x3c6)]);
        }
    });
}

function sendurpacket(_0x805bb2) {
    var _0x83d1d2 = _0x1b8bf1,
        _0xa3bc7a = new packet(0x1);
    _0xa3bc7a[_0x83d1d2(0x358)](_0x805bb2), sendPacket(_0xa3bc7a);
}
var bots = new Map(),
    botNumber = 0x0,
    log1 = () => {
        bots['forEach']((_0x259bc3, _0x49c5e6) => {
            var _0x5358e8 = _0x2e61;
            console[_0x5358e8(0x2a8)]('BOT ' + _0x259bc3['botNumber'] + _0x5358e8(0x295) + _0x259bc3['xp'] + _0x5358e8(0x2bd) + _0x259bc3['water'] + '% ID: ' + _0x259bc3[_0x5358e8(0x1d0)] + _0x5358e8(0x20f) + _0x259bc3['coordsX'] + _0x5358e8(0x335) + _0x259bc3[_0x5358e8(0x222)]);
        });
    },
    plusTextBots = '';
setInterval(function() {
    var _0x5c027d = _0x1b8bf1;
    bots_enabled && showMessage(_0x5c027d(0x2b0) + bots['size'] + _0x5c027d(0x321) + alive + ' | Died: ' + (bots[_0x5c027d(0x36f)] - alive) + plusTextBots, 0x5dc);
}, 0x64);
var updBotsAmount = () => {
        var _0xe62e3f = _0x1b8bf1;
        bots[_0xe62e3f(0x27d)]((_0xfc2dac, _0x19b932) => {
            var _0x3b6d89 = _0xe62e3f;
            if (_0xfc2dac[_0x3b6d89(0x3c6)][_0x3b6d89(0x38a)] == 0x3) bots[_0x3b6d89(0x3f1)](_0x19b932);
            if (_0xfc2dac['xp'] >= 0x96) {}
        });
    },
    _0x197ed8;
class Bot {
    constructor(_0xb0ce5e, _0x58e661) {
        var _0x3ef61e = _0x1b8bf1;
        this[_0x3ef61e(0x3c6)] = new WebSocket(_0xb0ce5e), this['wss']['isBot'] = !![];
        var _0x25c3f8 = getRandomInt(0x1, 0xa);
        botNumber++, this[_0x3ef61e(0x287)] = botNumber, this[_0x3ef61e(0x436)] = 0x0, this[_0x3ef61e(0x1d0)] = 0x0, this['xp'] = 0x0, this[_0x3ef61e(0x1e0)] = ![], this['serverId'] = '', this[_0x3ef61e(0x29c)] = '', this['str1'] = makeid(getRandomInt(0xa, 0xf)), this[_0x3ef61e(0x1d9)] = makeid(getRandomInt(0xa, 0xf)), this[_0x3ef61e(0x277)] = 0x0, this['coordsY'] = 0x0, this[_0x3ef61e(0x1db)] = ![], this[_0x3ef61e(0x2a9)] = 0x0, this[_0x3ef61e(0x3c6)][_0x3ef61e(0x30c)] = _0x3ef61e(0x435), this['id'] = getRandomInt(0x1, 0xe8d4a50fff), bots[_0x3ef61e(0x2cd)](this['id'], this), this[_0x3ef61e(0x3c6)]['onopen'] = () => {
            var _0x373252 = _0x3ef61e,
                _0x4802b0 = new packet(0x2dde5);
            _0x4802b0[_0x373252(0x358)](0x1), _0x4802b0[_0x373252(0x3dd)](getRandomInt(0x0, 0x2710)), _0x4802b0[_0x373252(0x3dd)](getRandomInt(0x0, 0x2710)), _0x4802b0[_0x373252(0x3dd)](getRandomInt(0x0, 0x2710)), _0x4802b0[_0x373252(0x25a)](''), console[_0x373252(0x2a8)](_0x373252(0x24c) + _0x58e661), wsSendMsg_bots(_0x4802b0, this['wss']);
        }, this[_0x3ef61e(0x3c6)]['onmessage'] = _0x255882 => {
            var _0x60609b = _0x3ef61e;
            this[_0x60609b(0x3c6)]['binaryType'] = _0x60609b(0x435), handleWsMessage_bots(new DataView(_0x255882[_0x60609b(0x1ad)]), this['wss'], this['id']);
        }, this['wss'][_0x3ef61e(0x3df)] = _0x37207f => {
            var _0x529fdd = _0x3ef61e;
            console[_0x529fdd(0x2a8)](_0x529fdd(0x395)), plusTextBots += _0x529fdd(0x224) + this['id'] + _0x529fdd(0x26b), setTimeout(function() {
                plusTextBots = '';
            }, 0x3a98), bots[_0x529fdd(0x3f1)](this['id']);
        }, this[_0x3ef61e(0x3c6)][_0x3ef61e(0x1e4)] = _0x3fc6d4 => {
            var _0x37d20d = _0x3ef61e;
            console[_0x37d20d(0x2a8)](_0x37d20d(0x395)), plusTextBots += _0x37d20d(0x224) + this['id'] + ' dced', setTimeout(function() {
                plusTextBots = '';
            }, 0x3a98), bots['delete'](this['id']);
        };
    }
}

function sprint() {
    var _0x26d91c = _0x1b8bf1;
    bots[_0x26d91c(0x27d)](_0x3c8eaa => {
        var _0x554132 = _0x26d91c,
            _0x5318e6 = new packet(0x2);
        _0x5318e6[_0x554132(0x358)](0x15), _0x5318e6[_0x554132(0x358)](0x1), wsSendMsg_bots(_0x5318e6, _0x3c8eaa[_0x554132(0x3c6)]), setTimeout(function() {
            var _0x226537 = _0x554132,
                _0x2d31a6 = new packet(0x2);
            _0x2d31a6[_0x226537(0x358)](0x15), _0x2d31a6[_0x226537(0x358)](0x0), wsSendMsg_bots(_0x2d31a6, _0x3c8eaa['wss']);
        }, 0x2bc);
    });
}

function ability(_0x5a7997) {
    var _0x3216e8 = _0x1b8bf1;
    bots[_0x3216e8(0x27d)](_0x23ef8e => {
        var _0x2637cf = _0x3216e8,
            _0x4b581d = new packet(0x2);
        _0x4b581d[_0x2637cf(0x358)](0x14), _0x4b581d[_0x2637cf(0x358)](_0x5a7997 ? 0x1 : 0x0), wsSendMsg_bots(_0x4b581d, _0x23ef8e['wss']);
    });
}

function msg(_0x52b7ce) {
    bots['forEach'](_0x386b2c => {
        var _0x58b701 = _0x2e61;
        newMsg = new packet(0x3 + encode_utf8(_0x52b7ce)[_0x58b701(0x252)]), newMsg[_0x58b701(0x358)](0x13), newMsg[_0x58b701(0x25a)](_0x52b7ce), wsSendMsg_bots(newMsg, _0x386b2c[_0x58b701(0x3c6)]);
    });
}

function setcursor(_0x115e6f, _0x5a4867) {
    bots['forEach'](_0x5018c7 => {
        var _0x4be405 = _0x2e61;
        let _0x97ecde = new packet(0x5);
        _0x97ecde[_0x4be405(0x358)](0x5), _0x97ecde[_0x4be405(0x3dd)](_0x115e6f), _0x97ecde[_0x4be405(0x3dd)](_0x5a4867), wsSendMsg_bots(_0x97ecde, _0x5018c7[_0x4be405(0x3c6)]);
    });
}

function joingame() {
    var _0x53e17b = _0x1b8bf1;
    bots[_0x53e17b(0x27d)]((_0x47e6d6, _0x355ecb) => {
        var _0x2cb112 = _0x53e17b;
        joinGame(_0x47e6d6[_0x2cb112(0x3c6)], ![], bots['get'](_0x355ecb));
    });
}

function water(_0x5ee46a) {
    bots['forEach']((_0x57b479, _0x210f2a) => {
        var _0x10b7ff = _0x2e61;
        if (player[_0x10b7ff(0x439)] && player[_0x10b7ff(0x439)] < 0x28) {
            var _0x39b034 = new packet(0x2);
            _0x39b034[_0x10b7ff(0x358)](0x1c), _0x39b034[_0x10b7ff(0x358)](_0x5ee46a ? 0x1 : 0x0), wsSendMsg_bots(_0x39b034, _0x57b479[_0x10b7ff(0x3c6)]);
        } else {
            if (!player['lava']) {
                var _0x39b034 = new packet(0x2);
                _0x39b034[_0x10b7ff(0x358)](0x1c), _0x39b034[_0x10b7ff(0x358)](_0x5ee46a ? 0x1 : 0x0), wsSendMsg_bots(_0x39b034, _0x57b479[_0x10b7ff(0x3c6)]);
            }
        }
    });
}
var KillServer = ![];

function killServer() {
    setInterval(function() {
        var _0x36b221 = _0x2e61;
        KillServer && bots[_0x36b221(0x27d)]((_0x402fb7, _0x1c0389) => {
            var _0x54c8fe = _0x36b221;
            for (var _0x821aeb = 0x0; _0x821aeb < 0xfa; _0x821aeb++) {
                var _0x322e7e = new packet(0x2);
                _0x322e7e[_0x54c8fe(0x358)](0x71), wsSendMsg_bots(_0x322e7e, _0x402fb7[_0x54c8fe(0x3c6)]);
                var _0x322e7e = new packet(0x2);
                _0x322e7e[_0x54c8fe(0x358)](0x1), wsSendMsg_bots(_0x322e7e, _0x402fb7['wss']);
                var _0x322e7e = new packet(0x2);
                _0x322e7e[_0x54c8fe(0x358)](0x48), wsSendMsg_bots(_0x322e7e, _0x402fb7[_0x54c8fe(0x3c6)]);
                var _0x322e7e = new packet(0x2);
                _0x322e7e[_0x54c8fe(0x358)](0x69), wsSendMsg_bots(_0x322e7e, _0x402fb7[_0x54c8fe(0x3c6)]);
            }
        });
    }, 0x2710);
}
var switchMovement = () => {
    var _0x1397a8 = _0x1b8bf1;
    movement = movement == _0x1397a8(0x1ae) ? _0x1397a8(0x3da) : _0x1397a8(0x1ae);
};
document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x1e1), function(_0x2b9916) {
    var _0x26c357 = _0x1b8bf1,
        _0x325c5f = _0x2b9916[_0x26c357(0x316)] || _0x2b9916['which'];
    if (bots_enabled) switch (_0x325c5f) {
        case 0x61:
            upgrade();
            break;
        case 0x62:
            downgrade();
            break;
        case 0x20:
            sprint();
            break;
        case 0x57:
            ability(!![]);
            break;
        case 0x53:
            water(!![]), setTimeout(function() {
                water(![]);
            }, 0x190);
            break;
        case 0x66:
            switchMovement();
            break;
        case 0x67:
            spawnBots();
            break;
        case 0x68:
            killServer();
            break;
        case 0x69:
            removeBots();
            break;
    }
}), document[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x24b), function(_0x3dab1b) {
    var _0x19ecad = _0x1b8bf1,
        _0xfc0f2e = _0x3dab1b[_0x19ecad(0x316)] || _0x3dab1b[_0x19ecad(0x340)];
    if (bots_enabled) switch (_0xfc0f2e) {
        case 0x57:
            ability(![]);
            break;
    }
});
var spawnBots = () => {
        var _0x1d6071 = _0x1b8bf1;
        for (var _0x3dfdee = 0x0; _0x3dfdee < 0x3; _0x3dfdee++) {
            !![] && (conn = ws['ip'], new Bot(_0x1d6071(0x1eb) + conn[_0x1d6071(0x2ef)] + ':' + conn['port'], _0x53f0bd[_0x1d6071(0x3da)][_0x1d6071(0x2f7)]));
        }
    },
    spawnrecaptchaBots = () => {
        var _0x2279cc = _0x1b8bf1;
        for (var _0x73f6e6 = 0x0; _0x73f6e6 < 0x1; _0x73f6e6++) {
            !![] && (conn = ws['ip'], new Bot(_0x2279cc(0x1eb) + conn[_0x2279cc(0x2ef)] + ':' + conn[_0x2279cc(0x229)], _0x53f0bd['player'][_0x2279cc(0x2f7)]));
        }
    };
canvas[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x3bd), handleClick), canvas[_0x1b8bf1(0x3b9)](_0x1b8bf1(0x3b6), onmousemv), addserver(_0x1b8bf1(0x23b), 0x1, _0x1b8bf1(0x2a5), 'ff', 0x0);
